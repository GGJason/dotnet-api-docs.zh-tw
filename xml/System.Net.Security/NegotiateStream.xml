<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ae3df31823b68c9d75046ac59d310593da4e676" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46654716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0b586-101">提供資料流，該資料流會在用戶端與伺服器之間的通訊中，使用交涉安全性通訊協定驗證用戶端，並選擇性地驗證伺服器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b586-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-102">使用<xref:System.Net.Security.NegotiateStream>類別進行驗證，以及協助保護資訊傳輸用戶端與伺服器之間。</span><span class="sxs-lookup"><span data-stu-id="0b586-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="0b586-103">使用<xref:System.Net.Security.NegotiateStream>，您可以執行下列動作。</span><span class="sxs-lookup"><span data-stu-id="0b586-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="0b586-104">傳送至伺服器的用戶端認證的模擬或委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="0b586-105">要求伺服器驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="0b586-106">加密和/或再傳輸簽署資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="0b586-107">傳輸資訊前，必須執行驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="0b586-108">用戶端要求驗證使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法會封鎖直到驗證完成為止，或非同步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法，不會封鎖等候要完成驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="0b586-109">伺服器要求驗證使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="0b586-110">用戶端，並選擇性地在伺服器上，會使用驗證交涉安全性通訊協定。</span><span class="sxs-lookup"><span data-stu-id="0b586-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="0b586-111">在 Windows 95/98 系統中，Windows NT LAN Manager (NTLM) 是用於驗證的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="0b586-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="0b586-112">在其他平台的 Kerberos 通訊協定用於驗證如果用戶端和伺服器支援，否則，系統會使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="0b586-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="0b586-113">如需這些通訊協定的詳細描述，請參閱 Platform SDK 說明文件 MSDN，在 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="0b586-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="0b586-114"><xref:System.Net.Security.NegotiateStream>類別會執行使用安全性支援提供者介面 (SSPI) 驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="0b586-115">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務將會使用<xref:System.Net.Security.NegotiateStream>來協助保護您的資料在傳輸期間。</span><span class="sxs-lookup"><span data-stu-id="0b586-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="0b586-116">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="0b586-117">您可以取得遠端用戶端或伺服器使用資訊<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="0b586-118">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-119">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="0b586-120">您將使用同步的資料傳送<xref:System.Net.Security.NegotiateStream.Write%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="0b586-121">您會收到資料使用同步<xref:System.Net.Security.NegotiateStream.Read%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="0b586-122">如果安全性服務，例如加密或簽章已啟用，這些會自動套用，以將資料依<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-123"><xref:System.Net.Security.NegotiateStream>會將使用建立時，您所提供的資料流的資料傳輸<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-124">當您提供此基礎資料流時，您可以指定是否關閉<xref:System.Net.Security.NegotiateStream>也會關閉基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="0b586-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-125">下列程式碼範例示範如何使用用戶端-伺服器連線的用戶端<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-126">用戶端驗證，並以非同步方式將訊息傳送到伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="0b586-127">下列程式碼範例示範如何使用用戶端與伺服器連接的伺服器端<xref:System.Net.Security.NegotiateStream>來驗證用戶端和讀取用戶端所傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="0b586-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">
      <span data-ttu-id="0b586-128">變更為 3.5 SP1 版中 HTTPWebRequest 之 NTLM 驗證</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b586-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-129">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-130">若要避免<xref:System.Net.Security.NegotiateStream>關閉您所提供的資料流，使用<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="0b586-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="0b586-131">
            <see cref="T:System.IO.Stream" /> 物件，由 <see cref="T:System.Net.Security.NegotiateStream" /> 用來傳送及接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-132">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" />，初始化 <see cref="T:System.IO.Stream" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0b586-133">下列程式碼範例示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="0b586-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="0b586-134">
            <see cref="T:System.IO.Stream" /> 物件，由 <see cref="T:System.Net.Security.NegotiateStream" /> 用來傳送及接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="0b586-135">
            <see langword="true" /> 指示關閉這個 <see cref="T:System.Net.Security.NegotiateStream" /> 不會對 <c>innerstream</c> 產生任何作用；<see langword="false" /> 指示關閉這個 <see cref="T:System.Net.Security.NegotiateStream" />，也會關閉 <c>innerStream</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-135">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-136">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和資料流結束行為，初始化 <see cref="T:System.IO.Stream" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-137">當您指定`true`for`leaveStreamOpen`參數，關閉<xref:System.Net.Security.NegotiateStream>並不會影響`innerStream`串流; 您必須明確地關閉`innerStream`當您不再需要它。</span><span class="sxs-lookup"><span data-stu-id="0b586-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-138">下列程式碼範例示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="0b586-138">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="0b586-139">此程式碼範例是針對提供之較大範例的一部分<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-140">
            <paramref name="innerStream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-140">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-141">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-141">\- or -</span>
          </span>
          <span data-ttu-id="0b586-142">
            <paramref name="innerStream" /> 等於 <see cref="F:System.IO.Stream.Null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-142">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-143">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b586-144">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-145">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-146">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-147">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-148"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-149">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-150">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-151">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-152">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-153">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-154">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-155">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-155">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-156">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-156">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-157">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-157">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-158">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-158">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-159">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-159">\- or -</span>
          </span>
          <span data-ttu-id="0b586-160">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-160">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-161">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-161">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-162">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-163">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-164">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-165">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-166">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-167">驗證處理序使用指定的用戶端認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-167">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-168">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-169"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-170">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-171">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-172">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-172">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-173">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-173">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-174">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-174">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-175">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-175">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-176">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-176">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-177">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-177">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-178">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-178">\- or -</span>
          </span>
          <span data-ttu-id="0b586-179">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-179">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-180">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-180">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-181">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-181">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-182">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-183">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-184">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-185">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-186">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-187">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-188">驗證處理序使用指定的用戶端認證和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-188">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-189">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-190"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="0b586-192">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-193">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-194">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-194">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-195">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-195">\- or -</span>
          </span>
          <span data-ttu-id="0b586-196">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-196">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-197">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-197">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-198">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-198">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-199">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-199">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-200">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-200">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-201">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-201">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-202">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-202">\- or -</span>
          </span>
          <span data-ttu-id="0b586-203">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-203">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-204">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-204">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-205">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-205">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-206">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-206">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-207">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-208">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-209">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-210">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-211">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-212">驗證處理序使用指定的認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-212">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-213">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-214">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-215">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-216">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-217">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-218">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-219">
            <paramref name="allowedImpersonationLevel" /> 不是有效的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-219">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-220">
            <paramref name="targetName" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-220">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-221">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-222">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-223">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-223">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-224">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-224">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-225">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-225">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-226">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-226">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-227">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-227">\- or -</span>
          </span>
          <span data-ttu-id="0b586-228">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-228">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-229">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-229">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-230">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-231">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-232">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-233">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-234">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-235">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-236">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-237">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-238">驗證處理序使用指定的認證、驗證選項和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-238">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-239">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-240">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-241">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-242">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="0b586-244">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-245">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-246">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-246">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-247">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-247">\- or -</span>
          </span>
          <span data-ttu-id="0b586-248">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-248">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-249">
            <paramref name="allowedImpersonationLevel" /> 不是有效的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-249">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-250">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-251">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-252">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-252">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-253">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-253">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-254">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-254">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-255">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-255">\- or -</span>
          </span>
          <span data-ttu-id="0b586-256">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-256">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-257">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-257">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-258">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-258">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-259">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-259">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-260">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b586-261">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-262">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-262">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-263">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-263">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-264">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-264">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-265">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-265">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-266">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-266">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-267"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-267">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-268">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-268">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-269">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-269">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-270">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-270">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-271">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-271">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-272">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-272">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-273">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-273">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-274">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-274">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-275">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-275">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-276">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-276">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-277">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-277">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-278">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-278">\- or -</span>
          </span>
          <span data-ttu-id="0b586-279">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-279">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-280">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-280">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-281">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-281">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-282">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-282">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-283">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-283">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-284">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-284">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-285">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-285">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-286">驗證處理序使用指定的用戶端認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-286">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-287">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-287">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-288">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-288">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-289">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-289">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-290"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-290">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-291">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-291">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-292">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-292">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-293">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-293">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-294">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-294">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-295">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-295">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-296">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-296">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-297">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-297">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-298">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-298">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-299">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-299">\- or -</span>
          </span>
          <span data-ttu-id="0b586-300">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-300">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-301">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-301">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-302">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-302">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-303">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-303">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-304">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-304">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-305">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-305">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-306">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-306">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-307">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-307">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-308">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-308">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-309">驗證處理序使用指定的用戶端認證和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-309">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-310">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-310">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-311">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-311">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-312">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-312">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="0b586-313"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-313">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-314"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-314">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="0b586-315">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-315">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-316">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-316">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-317">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-317">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-318">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-318">\- or -</span>
          </span>
          <span data-ttu-id="0b586-319">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-319">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-320">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-320">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-321">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-321">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-322">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-322">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-323">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-323">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-324">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-324">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-325">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-325">\- or -</span>
          </span>
          <span data-ttu-id="0b586-326">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-326">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-327">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-327">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-328">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-328">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-329">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-329">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-330">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-330">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-331">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-331">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-332">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-332">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-333">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-333">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-334">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-334">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-335">驗證處理序使用指定的認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-335">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-336">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-336">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-337">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-337">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-338">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-338">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-339">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-339">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-340">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-340">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-341">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-341">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-342">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-342">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-343">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-343">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-344">
            <paramref name="allowedImpersonationLevel" /> 不是有效的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-344">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-345">
            <paramref name="targetName" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-345">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-346">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-346">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-347">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-347">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-348">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-348">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-349">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-349">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-350">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-351">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-351">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-352">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-352">\- or -</span>
          </span>
          <span data-ttu-id="0b586-353">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-353">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-354">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-354">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-355">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-355">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-356">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-356">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-357">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-357">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-358">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-358">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-359">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-359">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-360">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-360">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-361">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-361">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-362">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-362">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-363">驗證處理序使用指定的認證、驗證選項和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-363">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-364">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-364">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-365">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-365">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-366">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-366">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-367">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-367">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-368">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-368">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-369">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-369">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-370"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-370">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="0b586-371">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-371">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-372">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-372">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-373">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-373">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-374">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-374">\- or -</span>
          </span>
          <span data-ttu-id="0b586-375">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-375">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-376">
            <paramref name="allowedImpersonationLevel" /> 不是有效的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-376">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-377">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-378">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-379">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-379">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-380">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-380">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-381">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-381">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-382">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-382">\- or -</span>
          </span>
          <span data-ttu-id="0b586-383">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-383">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-384">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-384">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-385">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-385">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-386">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-386">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-387">處理用戶端與伺服器連接之驗證的伺服器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-387">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-388">在進行驗證時，就會封鎖這些方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-388">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="0b586-389">若要防止應用程式封鎖等候要完成驗證時，使用<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-389">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b586-390">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-390">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-391">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-391">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-392">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-392">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-393">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-393">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-394">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-394">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-395">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-395">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-396">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0b586-396">This method blocks until the operation completes.</span></span> <span data-ttu-id="0b586-397">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-397">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-398">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-398">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-399">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-399">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-400">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-400">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-401">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-401">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-402">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-402">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-403">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-403">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-404">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-404">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-405">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-405">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-406">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-406">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-407">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-407">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="0b586-408">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-408">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-409">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-409">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-410">驗證處理序使用指定的延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-410">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-411">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-411">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-412">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-412">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-413">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-413">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-414">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-414">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-415">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-415">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-416">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-416">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-417">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0b586-417">This method blocks until the operation completes.</span></span> <span data-ttu-id="0b586-418">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-418">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-419">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-419">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-420">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-420">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-421">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-421">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-422">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-422">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-423">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-423">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-424">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-424">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-425">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-425">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-426">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-426">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-427">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-427">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-428">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-428">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-429">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-429">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-430">建立伺服器識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-430">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-431">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-431">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-432">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-432">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-433">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-433">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-434">驗證處理序使用指定的伺服器認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-434">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-435">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-436">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-437">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0b586-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="0b586-438">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-439">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-440">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-441">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-441">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-442">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-442">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-443">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-443">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-444">您可以使用這個物件嘗試再次驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-444">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-445">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-445">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-446">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-446">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-447">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-447">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-448">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-449">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-449">\- or -</span>
          </span>
          <span data-ttu-id="0b586-450">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-450">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-451">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-451">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-452">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-452">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-453">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-453">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-454">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-455">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-455">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="0b586-456">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-456">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-457">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-457">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-458">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-458">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-459">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-459">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-460">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-460">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-461">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-461">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-462">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-462">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-463">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-463">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-464">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0b586-464">This method blocks until the operation completes.</span></span> <span data-ttu-id="0b586-465">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-465">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-466">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-466">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-467">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-467">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-468">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-468">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-469">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-469">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-470">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-470">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-471">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-471">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-472">您可以使用這個物件嘗試再次驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-472">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-473">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-473">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-474">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-474">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-475">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-475">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-476">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-476">\- or -</span>
          </span>
          <span data-ttu-id="0b586-477">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-477">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-478">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-478">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-479">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-479">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-480">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-480">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-481">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-481">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-482">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-482">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-483">以非同步作業方式處理驗證用戶端與伺服器連接的伺服器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-483">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b586-484">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-484">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-485">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-485">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-486">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-486">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-487">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-487">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-488">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-488">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-489">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-489">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-490">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-490">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-491">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-491">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-492">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-492">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-493">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-493">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-494">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-494">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-495">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-495">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-496">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-496">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-497">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-497">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-498">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-498">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-499">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-499">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-500">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-500">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-501">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-501">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="0b586-502">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-502">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-503">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-503">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-504">驗證處理序使用指定的延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-504">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-505">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-505">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-506">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-506">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-507">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-507">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-508">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-508">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-509">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-509">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-510">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-510">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-511">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-511">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-512">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-512">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-513">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-513">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-514">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-514">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-515">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-515">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-516">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-516">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-517">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-517">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-518">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-518">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-519">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-519">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-520">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-520">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-521">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-521">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-522">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-522">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-523">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-523">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-524">建立伺服器識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-524">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-525">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-525">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-526">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-526">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-527">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-527">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-528">驗證處理序使用指定的伺服器認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-528">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-529">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-529">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-530">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-530">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-531">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-531">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-532">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-532">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-533">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-533">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-534">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-534">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-535">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-535">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-536">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-536">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-537">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-537">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-538">您可以使用這個物件嘗試再次驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-538">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-539">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-539">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-540">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-540">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-541">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-541">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-542">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-542">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-543">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-543">\- or -</span>
          </span>
          <span data-ttu-id="0b586-544">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-544">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-545">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-545">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-546">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-546">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-547">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-547">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-548">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-548">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-549">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-549">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="0b586-550">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-550">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-551">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-551">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-552">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-552">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-553">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-553">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="0b586-554">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-554">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-555">傳回 <see cref="T:System.Threading.Tasks.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-555">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="0b586-556">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-556">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-557">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-557">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-558">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-558">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-559">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-559">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-560">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-560">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-561">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-561">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-562">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-562">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-563">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-563">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-564">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-564">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-565">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-565">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-566">您可以使用這個物件嘗試再次驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-566">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-567">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-567">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-568">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-568">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-569">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-569">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-570">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-570">\- or -</span>
          </span>
          <span data-ttu-id="0b586-571">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-571">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-572">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-572">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-573">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-573">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-574">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-574">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-575">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-575">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-576">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-576">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-577">開始非同步作業以驗證用戶端與伺服器連接中的用戶端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-577">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-578">在進行驗證時，此方法的多載不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="0b586-578">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="0b586-579">若要封鎖等候要完成驗證時，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-579">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-580">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-580">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-581">包含作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-581">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="0b586-582">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-582">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-583">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-583">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-584">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-584">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-585">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-585">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-586">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-586">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-587">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-587">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-588">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-588">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="0b586-589"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="0b586-589">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-590">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-590">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-591">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-591">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-592">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-592">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0b586-593">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-593">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-594">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-595">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-595">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-596">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-596">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-597">下列程式碼範例示範如何呼叫這個方法，以開始非同步的驗證用戶端。</span><span class="sxs-lookup"><span data-stu-id="0b586-597">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-598">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-598">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-599">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-599">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-600">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-600">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-601">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-601">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-602">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-602">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-603">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-603">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-604">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-604">\- or -</span>
          </span>
          <span data-ttu-id="0b586-605">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-605">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-606">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-606">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-607">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-607">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-608">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-608">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-609">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-609">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-610">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-610">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-611">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-611">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-612">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-612">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-613">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-613">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-614">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-614">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-615">驗證處理序使用指定的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-615">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="0b586-616">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-616">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-617">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-617">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-618">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-618">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-619">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-619">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-620">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-620">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0b586-621">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-621">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-622">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-622">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-623">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-623">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-624">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-624">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-625">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-625">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-626">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-626">\- or -</span>
          </span>
          <span data-ttu-id="0b586-627">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-627">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-628">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-628">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-629">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-629">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-630">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-630">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-631">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-631">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-632">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-632">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-633">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-633">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-634">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-634">\- or -</span>
          </span>
          <span data-ttu-id="0b586-635">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-635">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-636">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-636">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-637">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-637">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-638">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-638">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-639">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-639">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-640">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-640">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-641">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-641">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-642">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-642">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-643">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-643">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-644">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-644">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-645">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-645">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-646">驗證處理序使用指定的認證和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-646">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="0b586-647">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-647">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-648">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-648">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-649">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-649">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-650">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-650">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-651">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-651">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0b586-652">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-652">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-653">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-653">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-654">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-654">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-655">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-655">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-656">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-656">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-657">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-657">\- or -</span>
          </span>
          <span data-ttu-id="0b586-658">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-658">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-659">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-659">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-660">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-660">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-661">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-661">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-662">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-662">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-663">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-663">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-664">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-664">\- or -</span>
          </span>
          <span data-ttu-id="0b586-665">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-665">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-666">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-666">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-667">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-667">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-668">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-668">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-669">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-669">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-670">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-670">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-671">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-671">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-672">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-672">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-673">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-673">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-674">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-674">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-675">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-675">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-676">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-676">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-677">驗證處理序使用指定的認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-677">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="0b586-678">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-678">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-679">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-679">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-680">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-680">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-681">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-681">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-682">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-682">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-683">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-683">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-684">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-684">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-685">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-685">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-686">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-686">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0b586-687">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-687">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-688">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-688">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-689">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-689">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-690">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-690">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-691">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-691">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-692">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-692">\- or -</span>
          </span>
          <span data-ttu-id="0b586-693">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-693">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-694">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-694">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-695">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-695">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-696">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-696">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-697">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-697">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-698">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-698">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-699">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-699">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-700">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-700">\- or -</span>
          </span>
          <span data-ttu-id="0b586-701">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-701">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-702">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-702">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-703">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-703">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-704">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-704">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-705">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-705">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0b586-706">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-706">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="0b586-707">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-707">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-708">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-708">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="0b586-709">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-709">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-710">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-710">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-711">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-711">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-712">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-712">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-713">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-713">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-714">驗證處理序使用指定的認證、驗證選項和通道繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-714">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="0b586-715">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-715">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-716">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-716">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-717">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-717">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-718">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-718">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-719">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-719">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-720">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-720">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-721">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-721">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-722">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-722">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-723">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-723">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0b586-724">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-724">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-725">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-725">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-726">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-726">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-727">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-727">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-728">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-728">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0b586-729">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-729">\- or -</span>
          </span>
          <span data-ttu-id="0b586-730">
            <paramref name="targetName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-730">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-731">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-731">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-732">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-732">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-733">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-733">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-734">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-734">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-735">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-735">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-736">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-736">\- or -</span>
          </span>
          <span data-ttu-id="0b586-737">這個資料流先前是用來以伺服器的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-737">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="0b586-738">您不能使用資料流以用戶端身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-738">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-739">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-739">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-740">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-740">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-741">開始非同步作業以處理驗證用戶端與伺服器連接的伺服器端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-741">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-742">在進行驗證時，此方法的多載不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="0b586-742">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="0b586-743">若要封鎖等候要完成驗證時，請使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-743">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-744">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-744">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-745">包含作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-745">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="0b586-746">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-746">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-747">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-747">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-748">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-748">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-749">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-749">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-750">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-750">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-751">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-751">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-752">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-752">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-753">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-753">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-754">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-754">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-755">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-755">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-756">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-756">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-757">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-757">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-758">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-758">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-759">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-759">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-760">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-760">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-761">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-761">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-762">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-762">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-763">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-763">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-764">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-764">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-765">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-765">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="0b586-766">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-766">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-767">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-767">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-768">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-768">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-769">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-769">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-770">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-770">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-771">驗證處理序使用指定的延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-771">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="0b586-772">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-772">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-773">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-773">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-774">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-774">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="0b586-775">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="0b586-775">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="0b586-776">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="0b586-776">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="0b586-777">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-777">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-778">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-778">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-779">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-779">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-780">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-780">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-781">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-781">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-782">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-782">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-783">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-783">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-784">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-784">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-785">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-785">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-786">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-786">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-787">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-787">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-788">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-788">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-789">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-789">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-790">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-790">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-791">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-791">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-792">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-792">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-793">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-793">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-794">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-794">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-795">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-795">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-796">包含作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-796">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="0b586-797">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-797">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-798">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-798">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-799">驗證處理序使用指定的伺服器認證和驗證選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-799">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="0b586-800">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-800">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-801">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-801">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-802">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-802">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-803">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-803">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-804">成功驗證並不保證，要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-804">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-805">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-805">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-806">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-806">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-807">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-807">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-808">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-808">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="0b586-809">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-809">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-810">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-810">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-811">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-811">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-812">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-812">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-813">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-813">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-814">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-814">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-815">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-815">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-816">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-816">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-817">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-817">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-818">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-818">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-819">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-819">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-820">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-820">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-821">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-821">\- or -</span>
          </span>
          <span data-ttu-id="0b586-822">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-822">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-823">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-823">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-824">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-824">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0b586-825">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-825">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="0b586-826">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-826">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="0b586-827">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-827">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="0b586-828">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-828">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="0b586-829">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-829">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="0b586-830">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-830">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-831">
            <see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-831">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-832">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-832">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-833">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-833">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-834">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-834">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="0b586-835">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-835">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="0b586-836">這個方法不會封鎖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-836">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-837">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-837">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-838">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="0b586-838">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="0b586-839">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="0b586-839">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="0b586-840">成功驗證並不保證，要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="0b586-840">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="0b586-841">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-841">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="0b586-842">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="0b586-842">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="0b586-843">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-843">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-844">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="0b586-844">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0b586-845">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-845">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="0b586-846">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-846">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-847">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-847">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-848">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-848">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-849">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-849">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-850">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-850">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-851">
            <paramref name="credential" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-851">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0b586-852">
            <paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-852">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-853">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-853">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-854">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-854">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-855">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-855">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-856">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-856">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-857">已經進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-857">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="0b586-858">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-858">\- or -</span>
          </span>
          <span data-ttu-id="0b586-859">這個資料流先前是用來以用戶端的身分嘗試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-859">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="0b586-860">您不能使用資料流以伺服器身分重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-860">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-861">不支援 Windows 95 和 Windows 98。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-861">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-862">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-862">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0b586-863">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-863">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">
          <span data-ttu-id="0b586-864">具有延伸保護的整合式 Windows 驗證</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-864">Integrated Windows Authentication with Extended Protection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0b586-865">
            <see cref="T:System.Byte" /> 陣列，接收從資料流中讀取的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-865">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0b586-866">「緩衝區」<c></c>中以零為起始的位置，用來開始儲存從此資料流讀取的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-866">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0b586-867">自資料流中讀取的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-867">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-868">
            <see cref="T:System.AsyncCallback" /> 委派，其會參考讀取作業完成時要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-868">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-869">包含讀取作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-869">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="0b586-870">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-870">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-871">開始非同步讀取作業，這個作業會從資料流中讀取資料並將其儲存於指定的陣列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-871">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-872">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-872">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-873">如果已啟用加密、 簽署或加密和簽署，讀取的作業會從基礎資料流讀取資料、 檢查資料的完整性和加以解密。</span><span class="sxs-lookup"><span data-stu-id="0b586-873">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="0b586-874">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流的非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-874">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="0b586-875">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-875">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-876">若要封鎖，直到作業完成為止，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-876">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="0b586-877">非同步讀取的作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-877">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="0b586-878">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-878">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-879">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-879">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-880"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時讀取作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-880">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="0b586-881">如果您嘗試開始讀取的作業，而另一個讀取作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-881">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="0b586-882">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-882">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-883">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-883">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-884">下列程式碼範例會示範如何啟動的非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-884">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="0b586-885">此程式碼範例是針對提供之較大範例的一部分<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-885">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-886">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-886">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-887">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-887">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="0b586-888">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-888">\- or -</span>
          </span>
          <span data-ttu-id="0b586-889">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-889">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="0b586-890">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-890">\- or -</span>
          </span>
          <span data-ttu-id="0b586-891">
            <paramref name="offset" /> 加上 <paramref name="count" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-891">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-892">讀取作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-892">The read operation failed.</span>
          </span>
          <span data-ttu-id="0b586-893">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-893">\- or -</span>
          </span>
          <span data-ttu-id="0b586-894">使用了加密，但無法解密資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-894">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-895">已經有讀取作業正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-895">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-896">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-896">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-897">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-897">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0b586-898">
            <see cref="T:System.Byte" /> 陣列，提供將要寫入至資料流的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-898">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0b586-899">「緩衝區」<c></c>中以零為起始的位置，用來開始讀取將要寫入資料流的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-899">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0b586-900">
            <see cref="T:System.Int32" /> 值，指定從「緩衝區」<c></c>中讀取的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-900">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="0b586-901">
            <see cref="T:System.AsyncCallback" /> 委派，其會參考寫入作業完成時要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-901">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="0b586-902">包含寫入作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-902">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="0b586-903">作業完成時，這個物件會傳遞給 <c>asyncCallback</c> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-903">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-904">開始非同步寫入作業，此作業會從指定的緩衝區寫入 <see cref="T:System.Byte" /> 至資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-904">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-905">
            <see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-905">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-906">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密和加以簽署，並將其使用基礎資料流傳送。</span><span class="sxs-lookup"><span data-stu-id="0b586-906">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="0b586-907">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流的非同步寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-907">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="0b586-908">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-908">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="0b586-909">若要封鎖，直到作業完成為止，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-909">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="0b586-910">非同步讀取的作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-910">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="0b586-911">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="0b586-911">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="0b586-912">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="0b586-912">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0b586-913"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時的寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-913">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="0b586-914">如果您嘗試開始寫入作業，而另一個寫入作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-914">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="0b586-915">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-915">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-916">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-916">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-917">下列程式碼範例將示範如何開始非同步寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-917">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="0b586-918">作業完成時，會呼叫下列方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-918">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-919">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-919">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-920">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-920">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="0b586-921">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-921">\- or -</span>
          </span>
          <span data-ttu-id="0b586-922">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-922">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="0b586-923">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-923">\- or -</span>
          </span>
          <span data-ttu-id="0b586-924">
            <paramref name="offset" /> 加上計數大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-924">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-925">寫入作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-925">The write operation failed.</span>
          </span>
          <span data-ttu-id="0b586-926">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-926">\- or -</span>
          </span>
          <span data-ttu-id="0b586-927">使用了加密，但無法解密資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-927">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-928">已經有寫入作業正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-928">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-929">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-929">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-930">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-930">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-931">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-931">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-932">如果執行驗證且基礎資料流可讀取，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-932">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-933">如果發生驗證成功，這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanRead%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-933">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-934">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-934">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-935">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-935">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-936">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-936">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-937">這個屬性永遠會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-937">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-938">您不應該嘗試設定的位置<xref:System.Net.Security.NegotiateStream>物件或其基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="0b586-938">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="0b586-939">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-939">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-940">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-940">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-941">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否支援逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-941">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-942">如果基礎資料流支援逾時，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-942">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-943">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-943">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-944">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-944">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-945">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-945">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-946">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-946">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-947">如果執行驗證且基礎資料流可寫入，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-947">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-948">如果發生驗證成功，這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanWrite%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-948">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-949">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="0b586-949">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-950">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-950">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0b586-951">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-951">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-952">釋放 <see cref="T:System.Net.Security.NegotiateStream" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-952">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-953">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-953">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0b586-954">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="0b586-954">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0b586-955"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="0b586-955"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0b586-956">當`disposing`參數為 true 時，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Net.Security.NegotiateStream>參考。</span><span class="sxs-lookup"><span data-stu-id="0b586-956">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="0b586-957">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-957">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0b586-958">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b586-958">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0b586-959">當覆寫<see langword="Dispose(Boolean)" />小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b586-959">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0b586-960">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b586-960">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0b586-961">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0b586-961">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0b586-962">
            <see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的呼叫所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-962">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-963">結束藉由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 啟動的暫止非同步用戶端驗證作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-963">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-964">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="0b586-964">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="0b586-965">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-965">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-966">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-966">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-967">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-967">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-968">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-968">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="0b586-969">若要以同步方式執行這項作業，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-969">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-970">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-970">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-971">
            <paramref name="asyncResult" /> 不是由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-971">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-972">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-972">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-973">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-973">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-974">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-974">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-975">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-975">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-976">不存在要完成的暫止用戶端驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-976">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0b586-977">
            <see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的呼叫所傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-977">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-978">結束藉由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 啟動的暫止非同步用戶端驗證作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-978">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-979">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="0b586-979">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="0b586-980">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-980">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="0b586-981">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-981">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0b586-982">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="0b586-982">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="0b586-983">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-983">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="0b586-984">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-984">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-985">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-985">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-986">
            <paramref name="asyncResult" /> 不是由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-986">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="0b586-987">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-987">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-988">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-988">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="0b586-989">驗證失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-989">The authentication failed.</span>
          </span>
          <span data-ttu-id="0b586-990">您可以使用這個物件重試驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-990">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-991">不存在要完成的暫止驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-991">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0b586-992">
            <see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的呼叫所傳回</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-993">結束藉由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 啟動的非同步讀取作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-993">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-994">
            <see cref="T:System.Int32" /> 值，指定從基礎資料流中讀取的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-994">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-995">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="0b586-995">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="0b586-996">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-996">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="0b586-997">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-997">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-998">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-998">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-999">下列程式碼範例示範如何結束非同步讀取作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-999">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="0b586-1000">如需示範如何開始作業的範例，請參閱<xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1000">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-1001">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1001">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-1002">AsyncResult 不是由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1002">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1003">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1003">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-1004">讀取作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1004">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="0b586-1005">
            <see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的呼叫所傳回</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1005">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-1006">結束藉由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 啟動的非同步寫入作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1006">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1007">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="0b586-1007">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="0b586-1008">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1008">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-1009">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1009">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0b586-1010">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1010">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1011">下列程式碼範例示範如何呼叫以完成非同步寫入作業的方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1011">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="0b586-1012">如需示範如何開始作業的範例，請參閱<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1012">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-1013">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1013">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-1014">AsyncResult 不是由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1014">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1015">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1015">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-1016">寫入作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1016">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1017">造成任何緩衝資料都將寫入基礎裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1017">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1018">這個方法會叫用<xref:System.IO.Stream.Flush%2A>在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="0b586-1018">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1019">下列程式碼範例示範如何排清資料流。</span><span class="sxs-lookup"><span data-stu-id="0b586-1019">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1020">取得值，指示伺服器如何使用用戶端的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1020">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1021">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1021">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1022">您必須已成功驗證之前呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1022">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="0b586-1023">透過呼叫其中一個要求驗證時，用戶端指定的模擬層級<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1023">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="0b586-1024">如果您進行驗證而不指定<xref:System.Security.Principal.TokenImpersonationLevel>，<xref:System.Security.Principal.TokenImpersonationLevel.Identification>用。</span><span class="sxs-lookup"><span data-stu-id="0b586-1024">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1025">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1025">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1026">驗證失敗或尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1026">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1027">取得 <see cref="T:System.Boolean" /> 值，指示驗證是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1028">如果驗證成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1028">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1029">用戶端驗證，藉由呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1029">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="0b586-1030">伺服器驗證，藉由呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1030">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1031">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1031">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1032">取得 <see cref="T:System.Boolean" /> 值，指示這個 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用資料加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1032">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1033">如果在經由網路傳輸資料前對其進行加密，並在到達遠端端點時將其解密，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1033">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1034">加密可協助保護資料的隱私權也就是，它能協助確保，當資料在傳輸它無法進行解譯由第三方。</span><span class="sxs-lookup"><span data-stu-id="0b586-1034">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1035">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1035">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1036">取得 <see cref="T:System.Boolean" /> 值，指示伺服器和用戶端是否都已經過驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1036">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1037">如果已經驗證伺服器，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1037">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1038">當用戶端想要提供認證進行驗證的伺服器時，是由用戶端指定相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1038">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="0b586-1039">根據預設，用戶端會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1039">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="0b586-1040">交涉通訊協定會根據支援的用戶端和伺服器的安全性通訊協定選取 NTLM 或 Kerberos。</span><span class="sxs-lookup"><span data-stu-id="0b586-1040">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="0b586-1041">NTLM 不支援相互驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1041">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1042">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1043">取得 <see cref="T:System.Boolean" /> 值，指示這個 <see cref="T:System.Net.Security.NegotiateStream" /> 使用之連接的本機端是否以伺服器的身分驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1044">如果本機端點已成功以經過驗證之連接的伺服器端身分驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1044">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1045">如果驗證失敗，或未發生，這個屬性會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0b586-1045">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="0b586-1046">若要與伺服器進行驗證，呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1046">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1047">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1047">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1048">取得 <see cref="T:System.Boolean" /> 值，指示使用此資料流傳送的資料是否簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1048">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1049">如果在傳輸資料前對其簽章，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1049">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1050">資料簽章協助保護資料的完整性也就是，它可協助判斷是否將資料已遭竄改傳輸中的收件者。</span><span class="sxs-lookup"><span data-stu-id="0b586-1050">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1051">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1051">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1052">取得基礎資料流的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1052">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1053">
            <see cref="T:System.Int64" />，指定基礎資料流的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1053">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1054">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.Length%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-1054">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-1055">如果基礎資料流不是可搜尋的這個屬性通常會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-1055">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="0b586-1056">基礎資料流的執行階段類型會決定執行階段型別，則會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-1056">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1057">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1057">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-1058">當基礎資料流為 <see cref="T:System.Net.Sockets.NetworkStream" /> 時，不支援取得這個屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1058">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1059">取得或設定基礎資料流中目前的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1059">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1060">
            <see cref="T:System.Int64" />，指定基礎資料流中目前的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1060">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1061">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.Position%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-1061">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-1062">如果基礎資料流不是可搜尋的這個屬性通常會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-1062">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="0b586-1063">基礎資料流的執行階段類型會決定執行階段型別，則會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-1063">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-1064">不支援這個屬性的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1064">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="0b586-1065">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1065">\- or -</span>
          </span>
          <span data-ttu-id="0b586-1066">當基礎資料流為 <see cref="T:System.Net.Sockets.NetworkStream" /> 時，不支援取得這個屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1066">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0b586-1067">
            <see cref="T:System.Byte" /> 陣列，接收從資料流中讀取的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1067">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0b586-1068">
            <see cref="T:System.Int32" />，包含「緩衝區」<c></c>中以零起始的位置，用來開始儲存從此資料流中讀取的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1068">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0b586-1069">
            <see cref="T:System.Int32" />，包含從資料流中讀取的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1069">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-1070">從這個資料流中讀取資料並將其儲存於指定的陣列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1070">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-1071">
            <see cref="T:System.Int32" /> 值，指定從基礎資料流中讀取的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1071">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="0b586-1072">如果不再有要讀取的資料，則傳回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1072">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1073">此方法會讀取最多`count`從目前的位元組資料流，並將它們儲存在`buffer`開始`offset`。</span><span class="sxs-lookup"><span data-stu-id="0b586-1073">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="0b586-1074">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1074">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-1075">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1075">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0b586-1076">若要以非同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1076">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1077">下列程式碼範例示範如何讀取<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1077">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-1078">讀取作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1078">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1079">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1079">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-1080">
            <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 作業已在執行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1080">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1081">取得或設定讀取作業封鎖等待資料的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1081">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1082">
            <see cref="T:System.Int32" />，指定讀取作業失敗前經過的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1082">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1083">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.ReadTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-1083">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-1084">當您設定此屬性，<xref:System.IO.Stream.ReadTimeout%2A>基礎資料流上的值設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1084">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="0b586-1085">如果基礎資料流<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>以毫秒為單位，且設定為<xref:System.Threading.Timeout.Infinite>依預設，讓讀取作業執行逾時。</span><span class="sxs-lookup"><span data-stu-id="0b586-1085">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1086">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1086">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1087">取得共用這個經過驗證資料流之遠端群體識別的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1087">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1088">
            <see cref="T:System.Security.Principal.IIdentity" /> 物件，描述遠端端點的識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1088">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1089">當用戶端存取，此屬性會傳回<xref:System.Security.Principal.GenericIdentity>包含服務主體名稱 (SPN) 的伺服器和使用的驗證通訊協定。</span><span class="sxs-lookup"><span data-stu-id="0b586-1089">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="0b586-1090">當存取伺服器，此屬性會傳回<xref:System.Security.Principal.WindowsIdentity>描述用戶端。</span><span class="sxs-lookup"><span data-stu-id="0b586-1090">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="0b586-1091">如果<xref:System.Security.Principal.WindowsIdentity>是無法使用，用戶端資訊傳回到伺服器在<xref:System.Security.Principal.GenericIdentity>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1091">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1092">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1092">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1093">驗證失敗或尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1093">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="0b586-1094">這個值會被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1094">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="0b586-1095">這個值會被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1095">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-1096">擲回 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1096">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b586-1097">永遠擲回 <see cref="T:System.NotSupportedException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1097">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1098">請勿呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1098">Do not call this method.</span></span> <span data-ttu-id="0b586-1099">它會繼承，但不是支援<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1099">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-1100">
            <see cref="T:System.Net.Security.NegotiateStream" /> 上不支援搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1100">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0b586-1101">
            <see cref="T:System.Int64" /> 值，指定資料流的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1101">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-1102">設定基礎資料流的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1102">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0b586-1103">
            <see cref="T:System.Byte" /> 陣列，提供寫入至資料流的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1103">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="0b586-1104">
            <see cref="T:System.Int32" /> ，包含「緩衝區」<c></c>中以零起始的位置，用來開始讀取將要寫入資料流的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1104">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0b586-1105">
            <see cref="T:System.Int32" />，包含要從「緩衝區」<c></c>讀取的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1105">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b586-1106">使用指定的緩衝區和位移，將指定數目的 <see cref="T:System.Byte" /> 寫入至基礎資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1106">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1107">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密和加以簽署，並將其使用基礎資料流傳送。</span><span class="sxs-lookup"><span data-stu-id="0b586-1107">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="0b586-1108">如果沒有安全性服務，例如資料加密或簽章是使用中，這個方法會叫用<xref:System.IO.Stream.Write%2A>在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="0b586-1108">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="0b586-1109">此方法會封鎖寫入作業完成時。</span><span class="sxs-lookup"><span data-stu-id="0b586-1109">This method blocks while the write operation completes.</span></span> <span data-ttu-id="0b586-1110">若要防止封鎖作業完成時，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1110">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="0b586-1111">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="0b586-1111">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0b586-1112">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b586-1112">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0b586-1113"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時的寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0b586-1113">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="0b586-1114">如果您嘗試開始寫入作業，而另一個寫入作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0b586-1114">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1115">下列程式碼範例示範如何寫入至<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="0b586-1115">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0b586-1116">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1116">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0b586-1117">
            <paramref name="offset is less than 0" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1117">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="0b586-1118">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1118">\- or -</span>
          </span>
          <span data-ttu-id="0b586-1119">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1119">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="0b586-1120">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1120">\- or -</span>
          </span>
          <span data-ttu-id="0b586-1121">
            <paramref name="offset" /> 加上計數大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1121">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0b586-1122">寫入作業失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1122">The write operation failed.</span>
          </span>
          <span data-ttu-id="0b586-1123">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1123">\- or -</span>
          </span>
          <span data-ttu-id="0b586-1124">使用了加密，但無法解密資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1124">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0b586-1125">已經有寫入作業正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1125">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0b586-1126">此物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1126">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b586-1127">尚未執行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1127">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b586-1128">取得或設定寫入作業封鎖等待資料的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1128">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b586-1129">
            <see cref="T:System.Int32" />，指定寫入作業失敗前經過的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b586-1129">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b586-1130">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.WriteTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b586-1130">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="0b586-1131">指定的值設定為設定作業，<xref:System.IO.Stream.WriteTimeout%2A>基礎資料流上的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1131">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="0b586-1132">如果基礎資料流<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>以毫秒為單位，且設定為<xref:System.Threading.Timeout.Infinite>預設的寫入作業執行逾時。</span><span class="sxs-lookup"><span data-stu-id="0b586-1132">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b586-1133">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b586-1133">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>