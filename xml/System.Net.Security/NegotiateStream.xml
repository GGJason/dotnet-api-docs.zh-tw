<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NegotiateStream.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c14dd401696189bb315395ed828de5f1c0c89ba3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c14dd401696189bb315395ed828de5f1c0c89ba3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</source>
          <target state="translated">提供資料流，該資料流會在用戶端與伺服器之間的通訊中，使用交涉安全性通訊協定驗證用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class for authentication and to help secure information transmitted between a client and a server.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別進行驗證，並協助保護資訊的用戶端與伺服器之間傳輸。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Using <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>, you can do the following.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>，您可以執行下列。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Send the client's credentials to the server for Impersonation or Delegation.</source>
          <target state="translated">傳送至伺服器的用戶端的認證模擬或委派。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Request server authentication.</source>
          <target state="translated">要求伺服器驗證。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Encrypt and/or sign data before transmitting it.</source>
          <target state="translated">加密及/或簽署資料在傳輸之前。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Authentication must be performed before transmitting information.</source>
          <target state="translated">傳輸資訊前，必須執行驗證。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Clients request authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> methods, which block until the authentication completes, or the asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods, which do not block while waiting for the authentication to complete.</source>
          <target state="translated">用戶端要求驗證使用同步<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法會封鎖，直到完成驗證，或非同步<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>方法，不會封鎖等候完成驗證。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Servers request authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">伺服器要求驗證使用同步<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>或非同步<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The client, and optionally the server, is authenticated using the Negotiate security protocol.</source>
          <target state="translated">用戶端，並選擇性地在伺服器上，會透過驗證交涉安全性通訊協定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</source>
          <target state="translated">在 Windows 95/98 系統上 Windows NT LAN Manager (NTLM) 是用於驗證的通訊協定。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</source>
          <target state="translated">Kerberos 的其他平台上通訊協定用於驗證用戶端和伺服器都支援; 如果否則會使用 NTLM。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</source>
          <target state="translated">如需這些通訊協定的詳細描述，請參閱 Platform SDK 文件 MSDN msdn.microsoft.com/library/。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class performs the authentication using the Security Support Provider Interface (SSPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別本身會執行使用安全性支援提供者介面 (SSPI) 驗證。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services will be used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> to help secure your data during transmission.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務將使用<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>來協助保護您的資料在傳輸期間。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You can get information about the remote client or server using the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A&gt;</ph> property.</source>
          <target state="translated">您可以從中取得資訊的遠端用戶端或伺服器使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>If the authentication fails, you will receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or a <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You send data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph> methods.</source>
          <target state="translated">您將使用同步的資料傳送<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph>或非同步<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You receive data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> methods.</source>
          <target state="translated">接收資料，使用同步<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph>或非同步<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>If security services such as encryption or signing are enabled, these are automatically applied to your data by the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">如果安全性服務，例如啟用加密或簽章，這些會自動套用到資料的<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> transmits data using a stream that you supply when creating the <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>會將使用您在建立時提供的資料流的資料傳輸<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>When you supply this underlying stream, you have the option to specify whether closing the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> also closes the underlying stream.</source>
          <target state="translated">當您提供此基礎資料流時，您可以指定是否關閉<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>也會關閉基礎資料流。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The following code example demonstrates the client side of a client-server connection that uses the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用用戶端與伺服器連接的用戶端<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The client authenticates and sends a message to the server asynchronously.</source>
          <target state="translated">用戶端驗證，並以非同步方式將訊息傳送到伺服器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The following code example demonstrates the server side of a client-server connection that uses the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> to authenticate the client and read a message sent by the client.</source>
          <target state="translated">下列程式碼範例示範如何使用用戶端與伺服器連接的伺服器端<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>驗證用戶端和讀取用戶端所傳送的訊息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> from closing the stream that you supply, use the <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">若要避免<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>關閉您提供的資料流，從使用<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件，由 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 用來傳送及接收資料。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>，初始化 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個建構函式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件，由 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 用來傳送及接收資料。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that closing this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> has no effect on <bpt id="p1">&lt;c&gt;</bpt>innerstream<ept id="p1">&lt;/c&gt;</ept>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to indicate that closing this <ph id="ph4">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> also closes <bpt id="p2">&lt;c&gt;</bpt>innerStream<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 指示關閉這個 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 不會對 <bpt id="p1">&lt;c&gt;</bpt>innerstream<ept id="p1">&lt;/c&gt;</ept> 產生任何作用；<ph id="ph3">&lt;see langword="false" /&gt;</ph> 指示關閉這個 <ph id="ph4">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>，也會關閉 <bpt id="p2">&lt;c&gt;</bpt>innerStream<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and stream closure behavior.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 和資料流結束行為，初始化 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream; you must explicitly close <ph id="ph5">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">當您指定<ph id="ph1">`true`</ph>如<ph id="ph2">`leaveStreamOpen`</ph>參數，關閉<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>沒有任何作用<ph id="ph4">`innerStream`</ph>串流處理; 您必須明確地關閉<ph id="ph5">`innerStream`</ph>當您不再需要它。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個建構函式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> 等於 <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用用戶端<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication process uses the specified client credential.</source>
          <target state="translated">驗證處理序使用指定的用戶端認證。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication process uses the specified client credential and the channel binding.</source>
          <target state="translated">驗證處理序使用指定的用戶端認證和通道繫結。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph>用於傳遞給這個方法中的擴充保護<ph id="ph2">`binding`</ph>參數會從應用程式來擷取<ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph>上相關聯的屬性<ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> 不是有效的值。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 null。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credential, authentication options, and channel binding.</source>
          <target state="translated">驗證處理序使用指定的認證、驗證選項和通道繫結。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph>用於傳遞給這個方法中的擴充保護<ph id="ph2">`binding`</ph>參數會從應用程式來擷取<ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph>上相關聯的屬性<ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> 不是有效的值。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用用戶端<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication process uses the specified client credential.</source>
          <target state="translated">驗證處理序使用指定的用戶端認證。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication process uses the specified client credential and the channel binding.</source>
          <target state="translated">驗證處理序使用指定的用戶端認證和通道繫結。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>，並要求相互驗證。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph>用於傳遞給這個方法中的擴充保護<ph id="ph2">`binding`</ph>參數會從應用程式來擷取<ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph>上相關聯的屬性<ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> 不是有效的值。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 null。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credential, authentication options, and channel binding.</source>
          <target state="translated">驗證處理序使用指定的認證、驗證選項和通道繫結。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph>用於傳遞給這個方法中的擴充保護<ph id="ph2">`binding`</ph>參數會從應用程式來擷取<ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph>上相關聯的屬性<ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> 不是有效的值。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Handles the server side of an authentication for a client-server connection.</source>
          <target state="translated">處理用戶端與伺服器連接之驗證的伺服器端。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>These methods block while the authentication is in progress.</source>
          <target state="translated">驗證正在進行中時，就會封鎖這些方法。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To prevent the application from blocking while waiting for the authentication to complete, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">若要防止應用程式封鎖等候驗證完成時，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，和安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">這個方法會封鎖直到作業完成為止。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要防止封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的延伸保護原則。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，和安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">這個方法會封鎖直到作業完成為止。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要防止封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the server.</source>
          <target state="translated">建立伺服器識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">這個方法會封鎖直到作業完成為止。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要防止封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">您可以使用這個物件嘗試再次驗證。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">這個方法會封鎖直到作業完成為止。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要防止封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">您可以使用這個物件嘗試再次驗證。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Handles the server side of an authentication for a client-server connection as an asynchronous operation.</source>
          <target state="translated">以非同步作業方式處理驗證用戶端與伺服器連接的伺服器端。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，和安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的延伸保護原則。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，和安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the server.</source>
          <target state="translated">建立伺服器識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">您可以使用這個物件嘗試再次驗證。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">您可以使用這個物件嘗試再次驗證。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Begins an asynchronous operation to authenticate the client side of a client-server connection.</source>
          <target state="translated">開始非同步作業以驗證用戶端與伺服器連接中的用戶端。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The overloads of this method do not block while authentication is in progress.</source>
          <target state="translated">驗證正在進行時，此方法的多載不會封鎖。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To block while waiting for the authentication to complete, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">若要封鎖等候驗證完成時，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">包含作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用用戶端<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，和安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別將會建構使用相互驗證的 SPN。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個方法來開始非同步的驗證用戶端。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials.</source>
          <target state="translated">驗證處理序使用指定的認證。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials and channel binding.</source>
          <target state="translated">驗證處理序使用指定的認證和通道繫結。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials, authentication options, and channel binding.</source>
          <target state="translated">驗證處理序使用指定的認證、驗證選項和通道繫結。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">這個資料流先前是用來以伺服器的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">您不能使用資料流以用戶端身分重試驗證。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</source>
          <target state="translated">開始非同步作業以處理驗證用戶端與伺服器連接的伺服器端。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The overloads of this method do not block while the authentication is in progress.</source>
          <target state="translated">驗證正在進行時，此方法的多載不會封鎖。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To block while waiting for the authentication to complete, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">若要封鎖等候驗證完成時，請使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">包含作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的延伸保護原則。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">驗證會使用伺服器的<ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">不指定伺服器的任何服務主要名稱 (SPN)。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">模擬等級是<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>，安全性層級是<ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">包含作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證和驗證選項。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that, the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證，要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">若要使用明確<ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">建立用戶端識別所用的 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">用於延伸保護的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值，表示資料流的安全性服務。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值，表示伺服器要如何使用用戶端的認證來存取資源。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，會於驗證完成時參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">使用<ph id="ph1">`requiredProtectionLevel`</ph>參數，以使用已驗證的資料流傳輸資料的要求安全性服務。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">例如，若要進行加密及簽署的資料，請指定<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that, the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">成功驗證不保證，要求<ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph>已被授與。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`policy`</ph>參數是<ph id="ph2">`null`</ph>，則延伸的保護原則會使用具有<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>設<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">若要封鎖直到作業完成為止，使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">完成非同步的驗證作業，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">根據延伸保護原則傳入 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 參數中的 <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 都是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> 必須是 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">已經進行驗證。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">這個資料流先前是用來以用戶端的身分嘗試驗證。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">您不能使用資料流以伺服器身分重試驗證。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">不支援 Windows 95 和 Windows 98。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，接收從資料流中讀取的位元組。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated">「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中以零為起始的位置，用來開始儲存從此資料流讀取的資料。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read from the stream.</source>
          <target state="translated">自資料流中讀取的最大位元組數。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the read operation is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，其會參考讀取作業完成時要叫用的方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the read operation.</source>
          <target state="translated">包含讀取作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</source>
          <target state="translated">開始非同步讀取作業，這個作業會從資料流中讀取資料並將其儲存於指定的陣列中。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</source>
          <target state="translated">如果已啟用加密、 簽署或加密和簽章，讀取的作業會從基礎資料流讀取資料、 檢查資料完整性和加以解密。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</source>
          <target state="translated">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流非同步讀取的作業。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">若要封鎖的作業完成之前，請使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous read operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndRead%2A&gt;</ph> method.</source>
          <target state="translated">非同步讀取的作業必須完成呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndRead%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous read operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別不支援多個同時進行讀取作業。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If you attempt to start a read operation while another read operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">如果您嘗試啟動另一個讀取作業已經在執行相同的資料流讀取的作業<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates starting an asynchronous read operation.</source>
          <target state="translated">下列程式碼範例會示範如何開始非同步的讀取的作業。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大於 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The read operation failed.</source>
          <target state="translated">讀取作業失敗。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Encryption is in use, but the data could not be decrypted.</source>
          <target state="translated">使用了加密，但無法解密資料。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a read operation in progress.</source>
          <target state="translated">已經有讀取作業正在進行中。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes to be written to the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，提供將要寫入至資料流的位元組。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中以零為起始的位置，用來開始讀取將要寫入資料流的位元組。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 值，指定從「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the write operation is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，其會參考寫入作業完成時要叫用的方法。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">包含寫入作業資訊的使用者定義物件。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 委派。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation that writes <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s from the specified buffer to the stream.</source>
          <target state="translated">開始非同步寫入作業，此作業會從指定的緩衝區寫入 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 至資料流。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，指出非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</source>
          <target state="translated">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密並加以簽署，和傳輸使用基礎資料流。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</source>
          <target state="translated">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流上的非同步寫入作業。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">這個方法是非同步，而且不會封鎖在作業完成時。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">若要封鎖的作業完成之前，請使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous read operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndWrite%2A&gt;</ph> method.</source>
          <target state="translated">非同步讀取的作業必須完成呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndWrite%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`asyncCallback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別不支援多個同時進行寫入作業。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If you attempt to start a write operation while another write operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">如果您嘗試啟動另一個寫入作業已經在執行相同的資料流的寫入作業<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates beginning an asynchronous write operation.</source>
          <target state="translated">下列程式碼範例將示範如何開始執行非同步的寫入作業。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following method is called when the operation completes.</source>
          <target state="translated">作業完成時，會呼叫下列方法。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus count is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上計數大於 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The write operation failed.</source>
          <target state="translated">寫入作業失敗。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Encryption is in use, but the data could not be encrypted.</source>
          <target state="translated">使用了加密，但無法解密資料。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">已經有寫入作業正在進行中。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is readable.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示基礎資料流是否可讀取。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is readable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果執行驗證且基礎資料流可讀取，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>If successful authentication has occurred, this property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">如果驗證成功，這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">當您建立的執行個體時，指定基礎資料流<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is seekable.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示基礎資料流是否可搜尋。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">這個屬性永遠會傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>You should not attempt to set the position of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> object or its underlying stream.</source>
          <target state="translated">您不應嘗試設定的位置<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>物件或其基礎資料流。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">當您建立的執行個體時，指定基礎資料流<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream supports time-outs.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示基礎資料流是否支援逾時。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying stream supports time-outs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果基礎資料流支援逾時，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">當您建立的執行個體時，指定基礎資料流<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is writable.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示基礎資料流是否可寫入。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is writable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果執行驗證且基礎資料流可寫入，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>If successful authentication has occurred, this property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">如果驗證成功，這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">當您建立的執行個體時，指定基礎資料流<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>小心不要參考物件已處置過的早期呼叫中<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 執行個體，由對 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph> 的呼叫所傳回。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Ends a pending asynchronous client authentication operation that was started with a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated">結束藉由呼叫 <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph> 啟動的暫止非同步用戶端驗證作業。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">如果作業尚未完成，這個方法會封鎖，直到它執行。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>When the authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>To perform this operation synchronously, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式執行這項作業，請使用其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 不是由呼叫 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph> 的方式所建立。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>There is no pending client authentication to complete.</source>
          <target state="translated">不存在要完成的暫止用戶端驗證。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 執行個體，由對 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph> 的呼叫所傳回。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Ends a pending asynchronous client authentication operation that was started with a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated">結束藉由呼叫 <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph> 啟動的暫止非同步用戶端驗證作業。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">如果作業尚未完成，這個方法會封鎖，直到它執行。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">當驗證成功時，您必須檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph>屬性，以便判斷哪些安全性服務由<ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">請檢查<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph>屬性來判斷是否發生過相互驗證。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">如果驗證失敗時，您會收到<ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">在此情況下，您可以重試與不同的認證驗證。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式執行這項作業，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 不是由呼叫 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph> 的方式所建立。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">驗證失敗。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">您可以使用這個物件重試驗證。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>There is no pending authentication to complete.</source>
          <target state="translated">不存在要完成的暫止驗證。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 執行個體，由對 <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 的呼叫所傳回</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>Ends an asynchronous read operation that was started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">結束藉由呼叫 <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 啟動的非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 值，指定從基礎資料流中讀取的位元組數。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">如果作業尚未完成，這個方法會封鎖，直到它執行。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式執行這項作業，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The following code example demonstrates ending an asynchronous read operation.</source>
          <target state="translated">下列程式碼範例示範結束非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>For an example that demonstrates starting the operation, see <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">如需示範如何啟動作業的範例，請參閱<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The asyncResult was not created by a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">AsyncResult 不是由呼叫 <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 的方式所建立。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The read operation failed.</source>
          <target state="translated">讀取作業失敗。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 執行個體，由對 <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 的呼叫所傳回</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation that was started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">結束藉由呼叫 <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 啟動的非同步寫入作業。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">如果作業尚未完成，這個方法會封鎖，直到它執行。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">若要以同步方式執行這項作業，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The following code example demonstrates a method that is called to complete the asynchronous write operation.</source>
          <target state="translated">下列程式碼範例示範呼叫以完成非同步寫入作業的方法。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>For an example that demonstrates starting the operation, see <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">如需示範如何啟動作業的範例，請參閱<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The asyncResult was not created by a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">AsyncResult 不是由呼叫 <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 的方式所建立。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The write operation failed.</source>
          <target state="translated">寫入作業失敗。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>Causes any buffered data to be written to the underlying device.</source>
          <target state="translated">造成任何緩衝資料都將寫入基礎裝置。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>This method invokes <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph>在基礎資料流。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>The following code example demonstrates flushing the stream.</source>
          <target state="translated">下列程式碼範例示範排清資料流。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Gets a value that indicates how the server can use the client's credentials.</source>
          <target state="translated">取得值，指示伺服器如何使用用戶端的認證。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>You must successfully authenticate before calling this method.</source>
          <target state="translated">您必須成功執行驗證之前呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Clients specify the impersonation level when they request authentication by calling one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">透過呼叫其中一個要求驗證時，用戶端指定的模擬等級<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>If you authenticate without specifying a <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> , <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph> is used.</source>
          <target state="translated">如果您未指定驗證<ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph>，<ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>用。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">驗證失敗或尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示驗證是否成功。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果驗證成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Clients authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">用戶端驗證，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Servers authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">伺服器驗證，藉由呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> uses data encryption.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示這個 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 是否使用資料加密。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在經由網路傳輸資料前對其進行加密，並在到達遠端端點時將其解密，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</source>
          <target state="translated">加密可協助保護其資料。也就是說，它有助於確保，資料是在傳輸時它無法進行解譯第三方。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both the server and the client have been authenticated.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示伺服器和用戶端是否都已經過驗證。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the server has been authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已經驗證伺服器，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</source>
          <target state="translated">當用戶端想要提供認證以進行驗證的伺服器時，用戶端被指定相互驗證。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>By default, clients request mutual authentication.</source>
          <target state="translated">根據預設，用戶端會要求相互驗證。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</source>
          <target state="translated">交涉通訊協定會根據用戶端和伺服器所支援的安全性通訊協定選取 NTLM 或 Kerberos。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>NTLM does not support mutual authentication.</source>
          <target state="translated">NTLM 不支援相互驗證。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection used by this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> was authenticated as the server.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示這個 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 使用之連接的本機端是否以伺服器的身分驗證。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果本機端點已成功以經過驗證之連接的伺服器端身分驗證，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>If authentication failed or did not occur, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果驗證失敗，或未執行，這個屬性會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>To authenticate as the server, call the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要與伺服器進行驗證，呼叫<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指示使用此資料流傳送的資料是否簽章。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在傳輸資料前對其簽章，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">資料簽章協助保護資料的完整性也就是說，它可以協助判斷是否資料已遭竄改傳輸中的收件者。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>Gets the length of the underlying stream.</source>
          <target state="translated">取得基礎資料流的長度。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the length of the underlying stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>，指定基礎資料流的長度。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>If the underlying stream is not seekable, this property will typically throw an exception.</source>
          <target state="translated">如果基礎資料流不是可搜尋，這個屬性通常會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">基礎資料流的執行階段類型會決定執行階段類型，就會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">當基礎資料流為 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> 時，不支援取得這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Gets or sets the current position in the underlying stream.</source>
          <target state="translated">取得或設定基礎資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the current position in the underlying stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>，指定基礎資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>If the underlying stream is not seekable, this property will typically throw an exception.</source>
          <target state="translated">如果基礎資料流不是可搜尋，這個屬性通常會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">基礎資料流的執行階段類型會決定執行階段類型，就會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Setting this property is not supported.</source>
          <target state="translated">不支援這個屬性的設定。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">當基礎資料流為 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> 時，不支援取得這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，接收從資料流中讀取的位元組。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，包含「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中以零起始的位置，用來開始儲存從此資料流中讀取的資料。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the maximum number of bytes to read from the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，包含從資料流中讀取的最大位元組數。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads data from this stream and stores it in the specified array.</source>
          <target state="translated">從這個資料流中讀取資料並將其儲存於指定的陣列中。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 值，指定從基礎資料流中讀取的位元組數。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When there is no more data to be read, returns 0.</source>
          <target state="translated">如果不再有要讀取的資料，則傳回 0。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The method reads a maximum of <ph id="ph1">`count`</ph> bytes from the current stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">此方法會讀取最多<ph id="ph1">`count`</ph>位元組從目前資料流，且將其儲存在<ph id="ph2">`buffer`</ph>開始<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To perform this operation asynchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> method.</source>
          <target state="translated">若要以非同步方式執行此操作，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates reading from a <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何讀取<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The read operation failed.</source>
          <target state="translated">讀取作業失敗。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> operation is already in progress.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 作業已在執行中。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>Gets or sets the amount of time a read operation blocks waiting for data.</source>
          <target state="translated">取得或設定讀取作業封鎖等待資料的時間長度。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that will elapse before a read operation fails.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，指定讀取作業失敗前經過的時間長度。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>When you set this property, the <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> value on the underlying stream is set to the specified value.</source>
          <target state="translated">當您設定此屬性，<ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph>基礎資料流上的值設定為指定的值。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.ReadTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that read operations do not time out.</source>
          <target state="translated">如果基礎資料流<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>，<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.ReadTimeout%2A&gt;</ph>以毫秒為單位，並設定為<ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph>依預設，讓讀取作業不會逾。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>Gets information about the identity of the remote party sharing this authenticated stream.</source>
          <target state="translated">取得共用這個經過驗證資料流之遠端群體識別的相關資訊。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> object that describes the identity of the remote endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> 物件，描述遠端端點的識別。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>When accessed by the client, this property returns a <ph id="ph1">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</source>
          <target state="translated">當存取用戶端，這個屬性會傳回<ph id="ph1">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>包含服務主體名稱 (SPN) 的伺服器和使用的驗證通訊協定。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>When accessed by the server, this property returns a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> that describes the client.</source>
          <target state="translated">當存取伺服器，這個屬性會傳回<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>描述用戶端。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>If the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> is not available, client information is returned to the server in a <ph id="ph2">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>是無法使用，用戶端資訊會傳回到伺服器<ph id="ph2">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">驗證失敗或尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">這個值會被忽略。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">這個值會被忽略。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">永遠擲回 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Do not call this method.</source>
          <target state="translated">請勿呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>It is inherited, but is not supported by <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">它繼承的但不是支援<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking is not supported on <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 上不支援搜尋。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value that specifies the length of the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 值，指定資料流的長度。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
          <source>Sets the length of the underlying stream.</source>
          <target state="translated">設定基礎資料流的長度。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes written to the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，提供寫入至資料流的位元組。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> ，包含「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中以零起始的位置，用來開始讀取將要寫入資料流的位元組。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，包含要從「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>讀取的位元組數。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Write the specified number of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s to the underlying stream using the specified buffer and offset.</source>
          <target state="translated">使用指定的緩衝區和位移，將指定數目的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 寫入至基礎資料流。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</source>
          <target state="translated">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密並加以簽署，和傳輸使用基礎資料流。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If no security services such as data encryption or signing are in use, this method invokes <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">如果沒有安全性服務，例如資料加密或簽章是使用中，這個方法會叫用<ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>在基礎資料流。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method blocks while the write operation completes.</source>
          <target state="translated">這個方法會封鎖寫入作業完成時。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To prevent blocking while the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">若要防止封鎖在作業完成時，使用<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">已成功驗證之前，無法呼叫此方法。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">若要驗證，請呼叫其中一種<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>類別不支援多個同時進行寫入作業。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If you attempt to start a write operation while another write operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">如果您嘗試啟動另一個寫入作業已經在執行相同的資料流的寫入作業<ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates writing to a <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何寫入<ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus count is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 加上計數大於 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph> 的長度。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation failed.</source>
          <target state="translated">寫入作業失敗。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Encryption is in use, but the data could not be encrypted.</source>
          <target state="translated">使用了加密，但無法解密資料。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">已經有寫入作業正在進行中。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">尚未執行驗證。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>Gets or sets the amount of time a write operation blocks waiting for data.</source>
          <target state="translated">取得或設定寫入作業封鎖等待資料的時間長度。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that will elapse before a write operation fails.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，指定寫入作業失敗前經過的時間長度。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">這個屬性會傳回所叫用傳回的值<ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph>基礎資料流上的屬性。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>For set operations, the specified value sets the <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> value on the underlying stream.</source>
          <target state="translated">指定的值設定為設定作業，<ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph>基礎資料流上的值。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.WriteTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that write operations do not time out.</source>
          <target state="translated">如果基礎資料流<ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>，<ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.WriteTimeout%2A&gt;</ph>以毫秒為單位，並設定為<ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph>依預設，寫入作業不會逾。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">下列程式碼範例會示範如何顯示這個屬性的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>