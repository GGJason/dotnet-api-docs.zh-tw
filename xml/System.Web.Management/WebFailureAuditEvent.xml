<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b35f5476f73479532c5b06be9a5c09a7e8a7a7ba" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46685072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebFailureAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供關於安全性失敗的資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視，可讓生產環境和作業人員管理已部署的 Web 應用程式。 <xref:System.Web.Management?displayProperty=nameWithType>命名空間包含負責封裝應用程式健全狀況狀態資料，並負責處理此資料提供者類型的健康狀態事件類型。 它也會包含有助於管理健全狀況事件的支援型別。  
  
 <xref:System.Web.Management.WebFailureAuditEvent>安全性作業失敗時，會使用類別。 這個範例是 Web 要求的失敗的 URL 授權。  
  
 根據預設，ASP.NET 已引發<xref:System.Web.Management.WebFailureAuditEvent>事件的下列功能：  
  
-   檔案授權。 ASP.NET 會在只有與要求相關聯的 Windows 身分識別時，才嘗試檔案授權。 相關的事件的稽核程式碼是<xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>。  
  
-   URL 授權。 這會控管未經授權的嘗試存取的 URL 資源。 失敗的嘗試，由匿名使用者不會進行稽核，所以在大部分情況下可接受匿名驗證失敗。 相關的事件的稽核程式碼是<xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>。  
  
-   一般未處理或安全性未處理的狀況。 以下是這些條件的相關事件代碼的清單：  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 當<xref:System.Web.Management.WebFailureAuditEvent>就會引發事件、 相關的稽核失敗事件引發效能計數器，然後檢查 ASP.NET 健康監視遞增`healthMonitoring`組態區段，以判斷任何提供者是否訂閱事件。 如果提供者訂閱事件時，ASP.NET 會分派處理它們的事件。  
  
> [!NOTE]
>  若要檢視引發的稽核失敗事件中的效能計數器系統監視器 (PerfMon)，在**新增計數器**視窗中，選取**ASP.NET**從**效能物件**下拉式清單中，選取**引發的稽核失敗事件**效能計數器，然後按一下**新增** 按鈕。 如需詳細資訊，請參閱 < [ASP.NET 應用程式中使用 「 系統監視器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882)在 MSDN 上的 IIS 文件中。  
  
> [!NOTE]
>  在大部分情況下您將實作時，使用 ASP.NET 健康監視類型，您會指定中的值，以便控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視的型別，來建立您自己的自訂事件和提供者。 如需範例的衍生自<xref:System.Web.Management.WebFailureAuditEvent>類別中，請參閱 < 範例 > 一節。  
  
   
  
## Examples  
 下列程式碼範例示範如何從衍生<xref:System.Web.Management.WebFailureAuditEvent>類別來建立自訂的稽核事件。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 下列組態摘錄會示範如何啟用 ASP.NET 可以使用<xref:System.Web.Management.WebFailureAuditEvent>事件。  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>格式化時顯示您自訂事件的資訊，覆寫<see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" />方法而非<see cref="Overload:System.Web.Management.WebBaseEvent.ToString" />方法。 這可避免覆寫或竄改機密的系統資訊。</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="http://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 健康監視概觀</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 狀況監控系統是在內部使用這個建構函式。 您永遠不會使用它來建立的執行個體<xref:System.Web.Management.WebFailureAuditEvent>，但實作您自己的事件類型繼承自這個類別時，您可以呼叫這個建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式中`SampleWebFailureAuditEvent`類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Management.WebFailureAuditEvent>類別概觀。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebFailureAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebFailureAuditEvent" Usage="new System.Web.Management.WebFailureAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> 值，指定事件的詳細資料識別項。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 狀況監控系統是在內部使用這個建構函式。 您永遠不會使用它來建立的執行個體<xref:System.Web.Management.WebFailureAuditEvent>，但實作您自己的事件類型繼承自這個類別時，您可以呼叫這個建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式中`SampleWebFailureAuditEvent`類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Management.WebFailureAuditEvent>類別概觀。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webFailureAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>遞增 [引發的稽核失敗事件] 效能計數器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 稽核失敗事件引發的效能計數器會追蹤因為應用程式啟動失敗的稽核事件的數目。 這個方法也會呼叫父<xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>方法，這個方法會遞增 引發的事件計數器。 此計數器會追蹤所引發的事件總數。  
  
 若要檢視在 [系統監視器 (PerfMon)，這些效能計數器**新增計數器**視窗中選取**ASP.NET**從**效能物件**下拉式清單中，選取您想要檢視，然後按一下效能計數器**新增**] 按鈕。 如需詳細資訊，請參閱 < [ASP.NET 應用程式中使用 「 系統監視器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882)在 MSDN 上的 IIS 文件中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>