<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce81033169b8399eda5783e0b19aa43edc8ef73e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36599603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供成功的安全性事件之相關資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視，可讓管理已部署的 Web 應用程式的生產環境和作業人員。 <xref:System.Web.Management>命名空間包含負責封裝應用程式健全狀況狀態資料和負責處理此資料提供者類型的健全狀況事件類型。 它也會包含有助於管理健全狀況事件的支援型別。  
  
 <xref:System.Web.Management.WebSuccessAuditEvent>成功的安全性相關作業發生時，會使用類別。 舉例來說，這是成功的 URL 授權 Web 要求。  
  
 下列清單說明哪些事件類型的功能<xref:System.Web.Management.WebSuccessAuditEvent>ASP.NET 所引發：  
  
-   檔案授權。 稽核成功的狀況。 使用 Windows 身分識別與要求相關聯時，檔案授權只會嘗試 asp.net。 相關的事件稽核的程式碼<xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>。  
  
-   URL 授權。 表示授與的授權 URL 資源的存取權。 稽核成功的狀況。 相關的事件稽核的程式碼<xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>。  
  
-   其他安全性狀況。 下列是一份相關的事件代碼：  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 當<xref:System.Web.Management.WebSuccessAuditEvent>是引發，ASP.NET 健康監視遞增相關的稽核成功事件引發的效能計數器，然後檢查`healthMonitoring`設定，以判斷任何提供者是否訂閱事件。 如果提供者訂閱事件時，ASP.NET 會分派處理它們的事件。  
  
> [!NOTE]
>  若要檢視系統監視器 (PerfMon) 中的 稽核成功事件引發 效能計數器中**新增計數器**視窗選取**ASP.NET**從**效能物件**下拉式清單中，選取**稽核成功事件引發** 效能計數器，然後按一下**新增** 按鈕。 如需詳細資訊，請參閱[監視 ASP.NET 應用程式效能](http://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)。  
  
 由於成功稽核表示預期的情況，您可能不想要訂閱這些事件。 您可以訂閱它們以提供存取站台的稽核。  
  
> [!NOTE]
>  在大部分情況下您將能夠實作時，使用 ASP.NET 健康監視類型，而您會藉由指定的值控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視類型的類型來建立您自己的自訂事件和提供者。 如需範例衍生自<xref:System.Web.Management.WebSuccessAuditEvent>類別，請參閱本主題中所提供的範例。  
  
   
  
## Examples  
 下列程式碼範例示範如何衍生自<xref:System.Web.Management.WebSuccessAuditEvent>類別來建立自訂的稽核事件。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 下列範例是組態檔，可讓 ASP.NET 健康監視使用事件的摘錄。  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視系統會在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebSuccessAuditEvent>物件，但是您可以呼叫這個建構函式實作您自己這個類別會繼承的事件類型時。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>建構函式不適合直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 您可以呼叫<xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>建構函式會衍生自<xref:System.Web.Management.WebSuccessAuditEvent>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式中`SampleWebSuccessAuditEvent`類別。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Management.WebSuccessAuditEvent>類別。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> 值，指定事件的詳細資料識別項。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視系統會在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebSuccessAuditEvent>物件，但是您可以呼叫這個建構函式實作您自己這個類別會繼承的事件類型時。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>建構函式不適合直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 您可以呼叫<xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A>建構函式會衍生自<xref:System.Web.Management.WebSuccessAuditEvent>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式中`SampleWebSuccessAuditEvent`類別。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Management.WebSuccessAuditEvent>類別。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>遞增 [引發的稽核成功事件] 效能計數器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 稽核成功事件引發的效能計數器會追蹤應用程式啟動後成功的稽核事件的數目。 這個方法也會呼叫父<xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>方法，引發事件的計數器會遞增。 這個計數器會追蹤所引發的事件總數。  
  
 若要檢視在 [系統監視器 (PerfMon)，這些效能計數器中**新增計數器**視窗選取**ASP.NET**從**效能物件**下拉式清單中，選取您想要檢視，然後按一下效能計數器**新增**] 按鈕。 如需詳細資訊，請參閱[監視 ASP.NET 應用程式效能](http://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>