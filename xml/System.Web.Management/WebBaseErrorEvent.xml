<Type Name="WebBaseErrorEvent" FullName="System.Web.Management.WebBaseErrorEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="452030ec970afc806bdff61f1c782d68f3311c6f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBaseErrorEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBaseErrorEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBaseErrorEvent : System::Web::Management::WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>做為所有健康監視錯誤事件的基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視，可讓管理已部署的 Web 應用程式的生產環境和作業人員。 <xref:System.Web.Management>命名空間包含負責封裝應用程式健全狀況狀態資料和負責處理此資料提供者類型的健全狀況事件型別。 它也會包含有助於管理健全狀況事件的支援型別。  
  
 <xref:System.Web.Management.WebBaseErrorEvent>類別是健全狀況監視的事件，以表示錯誤狀況的基底類別。 ASP.NET 會使用<xref:System.Web.Management.WebBaseErrorEvent>和其衍生的類型，來指出錯誤情況的 Web 應用程式的存留期間。  
  
> [!NOTE]
>  在大部分情況下您將能夠使用 ASP.NET 健康監視類型，實作，而您會藉由指定的值來控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視類型的類型來建立您自己的自訂事件和提供者。 如需範例衍生自<xref:System.Web.Management.WebBaseErrorEvent>類別，請參閱本主題中所提供的範例。  
  
   
  
## Examples  
 下列程式碼範例有兩個部分。 第一個是摘錄自組態檔，可讓 ASP.NET 健康監視使用衍生自事件<xref:System.Web.Management.WebBaseErrorEvent>類別。 第二個示範如何衍生自<xref:System.Web.Management.WebBaseErrorEvent>類別來建立自訂的事件。  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <providers>  
    <!-- Define the custom provider that   
         processes custom Web request events. -->  
    <add name="SampleWebEventProvider"   
      type="SamplesAspNet.SampleEventProvider,  
      webeventprovider,Version=1.0.1573.18094,   
      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   
      processorArchitecture=MSIL"/>  
  </providers>  
  
  <eventMappings>  
  
    <!--  Define the event source that issues custom events.   -->  
    <add  name="SampleWebBaseErrorEvent"      
      type="SamplesAspNet.SampleWebBaseErrorEvent,  
      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     
      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <!-- Associate custom event with related   
      custom provider -->  
    <add   
       name="Custom Web Base Errors"  
       eventName="SampleWebBaseErrorEvent"   
       provider="SampleWebEventProvider"   
       profile="Custom"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 下列程式碼會示範如何從衍生<xref:System.Web.Management.WebBaseErrorEvent>類別來建立自訂的事件。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebBaseErrorEvent" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="e">與錯誤關聯的 <see cref="T:System.Exception" />。</param>
        <summary>初始化 <see cref="T:System.Web.Management.WebBaseErrorEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視系統會在內部使用這個建構函式。 實作您自己的事件類型繼承自這個類別時，您可以呼叫這個建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式的建構函式從`SampleWebBaseErrorEvent`類別，衍生自類別<xref:System.Web.Management.WebBaseErrorEvent>類別。  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">事件的詳細資料識別項。</param>
        <param name="e">與錯誤關聯的 <see cref="T:System.Exception" />。</param>
        <summary>初始化 <see cref="T:System.Web.Management.WebBaseErrorEvent" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視系統會在內部使用這個建構函式。 實作您自己的事件類型繼承自這個類別時，您可以呼叫這個建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式的建構函式從`SampleWebBaseErrorEvent`類別，衍生自類別<xref:System.Web.Management.WebBaseErrorEvent>類別。  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="ErrorException">
      <MemberSignature Language="C#" Value="public Exception ErrorException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與錯誤關聯的 <see cref="T:System.Exception" />。</summary>
        <value>與錯誤關聯的 <see cref="T:System.Exception" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您實作自訂<xref:System.Web.Management.WebBaseErrorEvent>，您必須確保您的自訂錯誤的事件處理這個例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>遞增事件錯誤效能相關的計數器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會下列效能計數器：  
  
-   基礎結構引發的錯誤事件。 這是全域的計數器可追蹤引發的錯誤事件。  
  
-   引發的錯誤事件。 這是應用程式特定的計數器可追蹤應用程式啟動後所引發的錯誤事件的數目。  
  
 這個方法也會呼叫父<xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>，其中累加引發事件的計數器。 這個計數器會追蹤所引發的事件總數。  
  
 若要檢視在 [系統監視器 (PerfMon)，這些效能計數器中**新增計數器**視窗選取**ASP.NET**中**效能物件**下拉式清單中，選取您想要檢視，然後按一下效能計數器**新增**] 按鈕。 如需詳細資訊，請參閱[ASP.NET 應用程式使用 「 系統監視器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) MSDN 上的 IIS 文件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>