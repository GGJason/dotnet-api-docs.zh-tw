<Type Name="WebAuthenticationSuccessAuditEvent" FullName="System.Web.Management.WebAuthenticationSuccessAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c34add1972519e17f728054514ce1c7ac6f2830e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37605701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationSuccessAuditEvent extends System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationSuccessAuditEvent&#xA;Inherits WebSuccessAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationSuccessAuditEvent : System::Web::Management::WebSuccessAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationSuccessAuditEvent = class&#xA;    inherit WebSuccessAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebSuccessAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供成功驗證事件的相關資訊</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 健康監視，可讓生產環境和作業人員管理已部署的 Web 應用程式。 <xref:System.Web.Management>命名空間包含負責封裝應用程式健全狀況狀態資料和負責處理此資料提供者類型的健康情況事件型別。 它也會包含有助於管理健全狀況事件的支援型別。  
  
 下列清單說明 ASP.NET 會引發事件的型別功能<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>。  
  
> [!NOTE]
>  ASP.NET 設定的預設記錄稽核失敗的狀況，因為記錄成功情況可以嚴重耗用系統資源。  您永遠可以設定系統以記錄成功的情況。  
  
-   表單驗證。 稽核成功的條件。 成功稽核會包含已驗證的使用者名稱。 相反地，稽核失敗不會包含使用者名稱，，因為它們通常會產生從無法解密或驗證票證。 同時包含用戶端 IP 位址。 相關的事件的稽核程式碼是<xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>。  
  
-   成員資格。 稽核成功的條件。 成功及失敗稽核會包含所嘗試的使用者名稱。 兩種稽核會包含已嘗試的密碼，因為，會有風險保存記錄檔中有效的密碼。 相關的事件的稽核程式碼是<xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>。  
  
 當<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>引發時，依預設它會更新 驗證成功引發事件的效能計數器。 若要檢視中的 [系統監視器 (PerfMon)，此效能計數器**新增計數器**視窗中選取**ASP.NET**中**效能物件**下拉式清單中，選取驗證成功引發的事件] 效能計數器，然後按一下 [**新增**] 按鈕。 如需詳細資訊，請參閱 < [ASP.NET 應用程式中使用 「 系統監視器 (PerfMon)](http://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) MSDN 上。  
  
> [!NOTE]
>  在大部分情況下您將實作時，使用 ASP.NET 健康監視類型，您會指定中的值，以便控制健全狀況監視系統`healthMonitoring`組態區段。 您也可以衍生自健全狀況監視的型別，來建立您自己的自訂事件和提供者。 如需範例的衍生自<xref:System.Web.Management.WebBaseEvent>類別，請參閱本主題中提供的範例。  
  
   
  
## Examples  
 此程式碼範例有兩個部分： 組態檔摘錄，後面接著程式碼會示範如何自訂<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>事件。  
  
 以下是組態檔案的摘錄`provider`和`eventMappings`區段。 它們已經是預設設定。 唯一要做為提供的安裝程式`rules`中的項目`healthMonitoring`一節。  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <providers>  
      // Configure the provider to process   
      // the health events.  
      <add name="EventLogProvider"  
         type="System.Web.Management.EventLogWebEventProvider,  
         System.Web,Version=2.0.3600.0,Culture=neutral,  
         PublicKeyToken=b03f5f7f11d50a3a"/>  
    </providers>  
  
    <eventMappings>  
       <clear />  
       // Configure the custom event   
       // to handle the audit events.   
        <add name="SampleWebAuthenticationSuccessAuditEvent"   
          type="SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  
          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   
          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL" />  
  
     </eventMappings>  
     <rules>  
       <clear/>  
       // Establish the connection between custom event   
       // and the provider that must process it.  
      <add name="Log Authentication Success Audits"   
        eventName="SampleWebAuthenticationFailureAuditEvent"  
        provider="EventLogProvider"   
        profile="Custom" />\  
     </rules>  
  
</healthMonitoring>  
```  
  
 下列程式碼示範如何自訂<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>事件。  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="nameToAuthenticate">已驗證使用者的名稱。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> 類別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 狀況監控系統是在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>物件，但是您可以呼叫這個建構函式實作您自己的事件類型繼承自這個類別時。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A>建構函式不是直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 您可以呼叫<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A>建構函式，若是衍生自<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂此建構函式。  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">事件描述。</param>
        <param name="eventSource">做為事件來源的物件。</param>
        <param name="eventCode">與事件關聯的代碼。 當您實作自訂事件時，事件代碼必須大於 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />。</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> 值，指定事件的詳細資料識別項。</param>
        <param name="nameToAuthenticate">已驗證使用者的名稱。</param>
        <summary>使用提供的參數來初始化 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 類別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 狀況監控系統是在內部使用這個建構函式。 您永遠不會使用它來具現化<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>物件，但是您可以呼叫這個建構函式實作您自己的事件類型繼承自這個類別時。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A>建構函式不是直接從您的程式碼使用。 它是由 ASP.NET 呼叫。 您可以呼叫<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A>建構函式，若是衍生自<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何自訂此建構函式。  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得已驗證使用者的名稱。</summary>
        <value>已驗證使用者的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有成功稽核會包含已驗證的使用者名稱。 失敗的稽核不包含使用者名稱，因為它們通常是由解密或驗證失敗所造成。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate%2A> 屬性。  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>