<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca1d1d5161ca15c161ed352cf4adcd93bfd3b5fa" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53487563" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <TypeSignature Language="F#" Value="type ManipulationProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3a3a2-101">在共用座標空間中，實作二維 (2-D) 轉換的多重輸入單一輸出合成器。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a3a2-102">A<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>物件會視為一個複合物件中的操作工具的集合。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-102">A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object.</span></span> <span data-ttu-id="3a3a2-103">您的應用程式接著會從追蹤和管理個別的操作工具需要釋出。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-103">Your application is then freed from the necessity of tracking and managing individual manipulators.</span></span>  
  
 <span data-ttu-id="3a3a2-104">操作處理器本身不會造成要移動的項目。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-104">A manipulation processor by itself does not cause an element to move.</span></span> <span data-ttu-id="3a3a2-105">您的應用程式開始操作，如有必要，並再從操作處理器接收資訊，藉由接聽<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>，<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>和<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-105">Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events.</span></span> <span data-ttu-id="3a3a2-106">透過這些事件接收的值可讓您變更的位置、 大小或方向所需的項目。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-106">The values received via these events enable you to change the location, size or orientation of an element as needed.</span></span>  
  
 <span data-ttu-id="3a3a2-107">通知操作處理器，允許的操作類型 （轉譯、 縮放、 旋轉） 藉由設定<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-107">You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property.</span></span> <span data-ttu-id="3a3a2-108">然後，您可以提供給受管理的項目轉換的非條件式邏輯。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-108">You can then provide non-conditional logic to the transformation of the element that is being manipulated.</span></span> <span data-ttu-id="3a3a2-109">比方說，而不是檢查是否已啟用循環，才能變更方向的項目，您可以將會無條件地套用操作處理器; 從接收到的循環因數如果未啟用旋轉，操作處理器會報告發生沒有旋轉的變更。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-109">For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</span></span>  
  
 <span data-ttu-id="3a3a2-110">當發行時所操作的項目 （所有的操作工具會遭到移除），您可以使用慣性處理，來模擬摩擦，而且會導致要逐漸降低其移動，在停止之前的項目。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-110">When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</span></span> <span data-ttu-id="3a3a2-111">如需詳細資訊，請參閱 <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> 類別。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-111">For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3a3a2-112">建立新的 <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D supportedManipulations" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="3a3a2-113">最初的一組支援的操作。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-113">The initial set of supported manipulations.</span></span></param>
        <summary><span data-ttu-id="3a3a2-114">建立新的 <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3a3a2-115"><paramref name="supportedManipulations" /> 參數不是有效 <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列舉值的結合。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D * System.Windows.Input.Manipulations.ManipulationPivot2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D (supportedManipulations, pivot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="3a3a2-116">最初的一組支援的操作。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-116">The initial set of supported manipulations.</span></span></param>
        <param name="pivot"><span data-ttu-id="3a3a2-117">單一操作工具旋轉的樞軸資訊。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-117">Pivot information for single-manipulator rotations.</span></span></param>
        <summary><span data-ttu-id="3a3a2-118">建立新的 <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3a3a2-119"><paramref name="supportedManipulations" /> 參數不是有效 <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列舉值的結合。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-120">發生於操作已經完成時。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-120">Occurs when a manipulation has competed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.CompleteManipulation : int64 -&gt; unit" Usage="manipulationProcessor2D.CompleteManipulation timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="3a3a2-121">完成操作的時間戳記 (以 100 奈秒為計時單位)。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="3a3a2-122">強制完成目前的操作並引發 <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3a3a2-123">時間戳記小於目前操作的前一個時間戳記。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-123">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-124">發生於操作原點已變更時，或是發生於已進行轉移、縮放或旋轉時。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a3a2-125"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType>事件和<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType>事件都是相同的型別。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-125">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="3a3a2-126">一般而言，您可以使用相同的事件處理常式，這兩個事件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-126">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumScaleRotateRadius : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-127">取得或設定操作工具參與進行縮放和旋轉所需的最小半徑 (以座標單位計)。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></summary>
        <value><span data-ttu-id="3a3a2-128">操作工具參與進行縮放和旋轉所需的最小半徑 (以座標單位計)。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-128">The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a3a2-129">如果操作工具會非常接近目前正在處理的操作工具的中央的大型、 非常小的操作工具移動可能會變得非常大的變更要旋轉或縮放比例。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-129">If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</span></span> <span data-ttu-id="3a3a2-130">若要避免這個問題，請設定<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>為大於零。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-130">To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero.</span></span> <span data-ttu-id="3a3a2-131">在旋轉和調整作業中，將不會包含比該距離中心的大量接近任何操作工具。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-131">Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</span></span>  
  
 <span data-ttu-id="3a3a2-132">要使用的一般值應該為基礎的操作工具 」 意外 」 動作的可能大小。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-132">A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</span></span> <span data-ttu-id="3a3a2-133">例如，如果操作工具是人為的手指觸控螢幕，對應至公分左右 radius 可能適合。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-133">For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</span></span>  
  
 <span data-ttu-id="3a3a2-134">值<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A>必須是有限的、 非負數的數字。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-134">The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pivot : System.Windows.Input.Manipulations.ManipulationPivot2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-135">取得或設定操作處理器的樞軸資訊。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-135">Gets or sets the pivot information for the manipulation processor.</span></span></summary>
        <value><span data-ttu-id="3a3a2-136">操作處理器的樞軸資訊。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-136">The pivot information for the manipulation processor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a3a2-137"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A>屬性用來提供單一操作工具旋轉的樞軸資訊。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-137">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations.</span></span> <span data-ttu-id="3a3a2-138">將這個屬性設定為 null，就會停用單一操作工具旋轉。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-138">Setting this property to null disables single-manipulator rotations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberSignature Language="F#" Value="member this.ProcessManipulators : int64 * seq&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; -&gt; unit" Usage="manipulationProcessor2D.ProcessManipulators (timestamp, manipulators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="3a3a2-139">批次的時間戳記 (以 100 奈秒為計時單位)。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-139">The timestamp for the batch, in 100-nanosecond ticks.</span></span></param>
        <param name="manipulators"><span data-ttu-id="3a3a2-140">目前在範圍中的一組操作工具。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-140">The set of manipulators that are currently in scope.</span></span></param>
        <summary><span data-ttu-id="3a3a2-141">將指定的多項操作當做單一批次動作處理。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-141">Processes the specified manipulators as a single batch action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a3a2-142">參數`manipulators`可能是空的清單或 null。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-142">The parameter `manipulators` may be an empty list or null.</span></span> <span data-ttu-id="3a3a2-143">如果這導致數目達到零的操作工具<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-143">If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a3a2-144">在下列範例中，<xref:System.Windows.UIElement.OnLostMouseCapture%2A>方法<xref:System.Windows.UIElement>物件會覆寫來呼叫<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A>方法的清單<xref:System.Windows.Input.Manipulations.Manipulator2D>物件設為 null。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-144">In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3a3a2-145">時間戳記小於目前操作的前一個時間戳記。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-145">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="manipulationProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="3a3a2-146">要設定的參數。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-146">Parameters to set.</span></span></param>
        <summary><span data-ttu-id="3a3a2-147">在操作處理器上設定參數。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-147">Sets parameters on the manipulation processor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-148">發生於新的操作已經開始時。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-148">Occurs when a new manipulation has started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a3a2-149">在下列範例中，事件處理常式<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>事件會檢查是否慣性處理正在執行，如果是的話，就會停止它。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-149">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberSignature Language="F#" Value="member this.SupportedManipulations : System.Windows.Input.Manipulations.Manipulations2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a3a2-150">取得或設定目前的一組支援的操作。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-150">Gets or sets the current set of supported manipulations.</span></span></summary>
        <value><span data-ttu-id="3a3a2-151">目前的一組支援的操作。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-151">The current set of supported manipulations.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3a3a2-152">屬性嘗試設定的值不是 <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> 列舉值有效組合。</span><span class="sxs-lookup"><span data-stu-id="3a3a2-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>