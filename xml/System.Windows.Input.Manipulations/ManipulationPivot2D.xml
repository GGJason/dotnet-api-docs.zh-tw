<Type Name="ManipulationPivot2D" FullName="System.Windows.Input.Manipulations.ManipulationPivot2D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fceec0acc4d010b448577ae53a92f1bf61c07b58" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationPivot2D : System.Windows.Input.Manipulations.ManipulationParameters2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationPivot2D extends System.Windows.Input.Manipulations.ManipulationParameters2D" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationPivot2D" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationPivot2D&#xA;Inherits ManipulationParameters2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationPivot2D sealed : System::Windows::Input::Manipulations::ManipulationParameters2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.Manipulations.ManipulationParameters2D</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示操作處理器用於單一操作工具旋轉的樞紐資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Input.Manipulations.ManipulationPivot2D>物件指派給<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A>屬性<xref:System.Windows.Input.Manipulations.ManipulationProcessor2D>物件，它會影響操作處理器的計算方式旋轉項目變更為單一操作工具所管理的項目時。 如果多個操作工具套用至項目操作期間，會忽略樞紐屬性。  
  
 在單一操作工具案例中，項目可以旋轉被拖曳。 <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A>和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A>屬性<xref:System.Windows.Input.Manipulations.ManipulationPivot2D>物件判斷哪些項目，一個圖示旋轉的位置和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A>操作處理器會使用屬性來計算旋轉變更數量。  
  
 比方說，如果單一操作工具接近的樞紐分析點外的邊緣，旋轉變更之項目的當被拖曳都是相當大的 （視項目的大小而定）。 如果此操作工很接近樞紐點的中心時，會發生極短 （如果有的話） 的旋轉。  
  
 一般而言，<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A>和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A>屬性代表所操作，元素中心和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A>屬性代表項目的中心從其最遠邊緣的距離。  
  
 移動項目，<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A>和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A>屬性<xref:System.Windows.Input.Manipulations.ManipulationPivot2D>物件需要更新，讓旋轉會繼續進行適當的點。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A>和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A>樞紐點的內容更新時要比對所操作的元素中心。  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_ManipulationProcessor2D](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_manipulationprocessor2d)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationPivot2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Input.Manipulations.ManipulationPivot2D" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public float Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius" />
      <MemberSignature Language="VB.NET" Value="Public Property Radius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Radius { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定從樞紐點到可操作區域邊緣之間的距離。</summary>
        <value>從樞紐點到可操作區域邊緣之間的距離。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A>屬性必須是正數的有限值，這個值大於或等於 1.0，或`NaN`。 `NaN` 表示沒有限制。 預設值是 `NaN`。  
  
 在實務上，樞紐分析點通常是受管理，物件的中心和<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A>值為樞紐點之物件的最遠邊緣的距離。 任何樞紐內，就會發生<xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A>距離是否抑制。 如需詳細資訊，請參閱 <xref:System.Windows.Input.Manipulations.ManipulationPivot2D>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樞紐的 X 位置。</summary>
        <value>樞紐的 X 位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A>屬性必須是有限值或`NaN`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定樞紐的 Y 位置。</summary>
        <value>樞紐的 Y 位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A>屬性必須是有限值或`NaN`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>