<Type Name="SystemEvents" FullName="Microsoft.Win32.SystemEvents">
  <TypeSignature Language="C#" Value="public sealed class SystemEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SystemEvents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemEvents sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a8bbe-101">提供存取系統事件告知的功能。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-101">Provides access to system event notifications.</span></span> <span data-ttu-id="a8bbe-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bbe-103"><xref:Microsoft.Win32.SystemEvents>類別提供特定類型的系統事件回應的能力。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-103">The <xref:Microsoft.Win32.SystemEvents> class provides the ability to respond to specific types of system events.</span></span>  
  
 <span data-ttu-id="a8bbe-104">系統事件引發時，任何附加至事件的委派會呼叫使用的執行緒，監視系統事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-104">When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events.</span></span> <span data-ttu-id="a8bbe-105">因此，您應該要從您事件處理常式的執行緒安全的任何呼叫。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-105">Therefore, you should make any calls from your event handlers thread-safe.</span></span> <span data-ttu-id="a8bbe-106">如果您需要呼叫系統事件與這個類別的成員未公開，您可以使用<xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-106">If you need to call a system event that is not exposed as a member of this class, you can use the <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-107">不會引發的系統事件處理常式，因為它可能會讓其他應用程式無法正常運作的執行緒上會執行耗時的處理。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-107">Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-108">某些系統事件可能不會引發上[!INCLUDE[windowsver](~/includes/windowsver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-108">Some system events might not be raised on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span> <span data-ttu-id="a8bbe-109">請務必確認應用程式能如預期般在[!INCLUDE[windowsver](~/includes/windowsver-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-109">Be sure to verify that your application works as expected on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8bbe-110">本章節包含兩個範例。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-110">This section contains two examples.</span></span> <span data-ttu-id="a8bbe-111">第一個範例示範如何使用一般的應用程式中的系統事件與第二個範例示範如何使用 Windows 服務中的系統事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-111">The first example shows how to use system events in an ordinary application, and the second example shows how to use system events in a Windows service.</span></span>  
  
 <span data-ttu-id="a8bbe-112">**範例 1**</span><span class="sxs-lookup"><span data-stu-id="a8bbe-112">**Example 1**</span></span>  
  
 <span data-ttu-id="a8bbe-113">下列程式碼範例會註冊某些系統事件，然後等待發生這些事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-113">The following code example registers interest in some system events and then waits for any of those events to occur.</span></span> <span data-ttu-id="a8bbe-114">如果使用者變更顯示器解析度，就會發生顯示的輸出。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-114">The output shown occurs if the user changes the display resolution.</span></span>  
  
 [!code-cpp[SystemEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#1)]
 [!code-csharp[SystemEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#1)]
 [!code-vb[SystemEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#1)]  
  
 <span data-ttu-id="a8bbe-115">**範例 2**</span><span class="sxs-lookup"><span data-stu-id="a8bbe-115">**Example 2**</span></span>  
  
 <span data-ttu-id="a8bbe-116">下列程式碼範例示範非常簡單的 Windows 服務可處理<xref:Microsoft.Win32.SystemEvents.TimeChanged>和<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-116">The following code example demonstrates a very simple Windows service that handles the <xref:Microsoft.Win32.SystemEvents.TimeChanged> and <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> events.</span></span> <span data-ttu-id="a8bbe-117">此範例包含名為服務`SimpleService`，名為表單`HiddenForm`，以及安裝程式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-117">The example includes a service named `SimpleService`, a form named `HiddenForm`, and an installer.</span></span> <span data-ttu-id="a8bbe-118">此表單提供所需的系統事件的訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-118">The form provides the message loop that is required by system events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-119">服務不需要訊息迴圈，除非他們可以與桌面互動。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-119">Services do not have message loops, unless they are allowed to interact with the desktop.</span></span> <span data-ttu-id="a8bbe-120">如果未隱藏的表單提供訊息迴圈，就如同此範例中，服務必須以本機系統帳戶執行，並手動介入的情況下，才能啟用與桌面互動。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-120">If the message loop is not provided by a hidden form, as in this example, the service must be run under the local system account, and manual intervention is required to enable interaction with the desktop.</span></span> <span data-ttu-id="a8bbe-121">也就是系統管理員必須手動檢查**允許服務與桌面互動** 核取方塊**登入** 索引標籤的 服務內容 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-121">That is, the administrator must manually check the **Allow service to interact with desktop** check box on the **Log On** tab of the service properties dialog box.</span></span> <span data-ttu-id="a8bbe-122">在此情況下，會自動提供的訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-122">In that case, a message loop is automatically provided.</span></span> <span data-ttu-id="a8bbe-123">只在本機系統帳戶下執行服務時使用此選項。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-123">This option is available only when the service is run under the local system account.</span></span> <span data-ttu-id="a8bbe-124">無法以程式設計方式啟用與桌面互動。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-124">Interaction with the desktop cannot be enabled programmatically.</span></span>  
  
 <span data-ttu-id="a8bbe-125">此範例中的服務啟動執行執行個體的執行緒`HiddenForm`。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-125">The service in this example starts a thread that runs an instance of `HiddenForm`.</span></span> <span data-ttu-id="a8bbe-126">您可以連結並在表單中處理事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-126">The events are hooked up and handled in the form.</span></span> <span data-ttu-id="a8bbe-127">事件必須在載入的表單，以確定表單是完全載入第一次; 連接否則將不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-127">The events must be hooked up in the load event of the form, to make sure that the form is completely loaded first; otherwise the events will not be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-128">這個範例將提供所有必要的程式碼，包括通常是由 Visual Studio 設計工具產生的表單初始化程式碼。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-128">The example provides all the necessary code, including the form initialization code typically generated by Visual Studio designers.</span></span> <span data-ttu-id="a8bbe-129">如果您正在開發您的服務，在 Visual Studio 中，您可以省略第二個部分類別，並使用**屬性**視窗設定的高度和寬度設為零的框線樣式，若要隱藏的表單<xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>，和視窗狀態，<xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a8bbe-129">If you are developing your service in Visual Studio, you can omit the second partial class and use the **Properties** window to set the height and width of the hidden form to zero, the border style to <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>, and the window state to <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a8bbe-130">若要執行此範例：</span><span class="sxs-lookup"><span data-stu-id="a8bbe-130">To run the example:</span></span>  
  
1.  <span data-ttu-id="a8bbe-131">從命令列程式碼編譯。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-131">Compile the code from the command line.</span></span> <span data-ttu-id="a8bbe-132">您使用的原始程式檔的名稱並不重要。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-132">The name that you use for the source file is not important.</span></span>  
  
2.  <span data-ttu-id="a8bbe-133">安裝服務，從命令列使用[Installutil.exe （安裝程式工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)公用程式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-133">Install the service from the command line using the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) utility.</span></span> <span data-ttu-id="a8bbe-134">例如，`InstallUtil example.exe`來源檔案名稱是否`example.cs`或`example.vb`。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-134">For example, `InstallUtil example.exe` if the source file name is `example.cs` or `example.vb`.</span></span> <span data-ttu-id="a8bbe-135">您必須是系統管理員才能安裝此服務。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-135">You must be an administrator to install the service.</span></span>  
  
3.  <span data-ttu-id="a8bbe-136">使用 [服務] 主控台來啟動服務。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-136">Use the Services console to start the service.</span></span>  
  
4.  <span data-ttu-id="a8bbe-137">變更系統時間，或變更使用者的喜好設定，例如滑鼠屬性。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-137">Change the system time, or change user preferences, such as mouse properties.</span></span>  
  
5.  <span data-ttu-id="a8bbe-138">檢視中的訊息**應用程式**事件檢視器類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-138">View the messages in the **Application** category of Event Viewer.</span></span>  
  
6.  <span data-ttu-id="a8bbe-139">使用 [服務] 主控台停止該服務。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-139">Use the Services console to stop the service.</span></span>  
  
7.  <span data-ttu-id="a8bbe-140">從命令列解除安裝服務，使用`/u`選項。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-140">Uninstall the service from the command line by using the `/u` option.</span></span> <span data-ttu-id="a8bbe-141">例如，`InstallUtil /u example.exe`。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-141">For example, `InstallUtil /u example.exe`.</span></span>  
  
 [!code-csharp[ManagedWindowsService#1](~/samples/snippets/csharp/VS_Snippets_CLR/ManagedWindowsService/cs/source.cs#1)]
 [!code-vb[ManagedWindowsService#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ManagedWindowsService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="a8bbe-142">系統資源的完整存取權。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-142">for full access to system resources.</span></span> <span data-ttu-id="a8bbe-143">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-143">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="a8bbe-144">相關聯的狀態：</span><span class="sxs-lookup"><span data-stu-id="a8bbe-144">Associated state:</span></span></permission>
    <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
    <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static IntPtr CreateTimer (int interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateTimer(int32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimer (interval As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateTimer(int interval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="a8bbe-145">指定計時器告知的間隔時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-145">Specifies the interval between timer notifications, in milliseconds.</span></span></param>
        <summary><span data-ttu-id="a8bbe-146">建立與系統事件視窗關聯的新視窗計時器。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-146">Creates a new window timer associated with the system events window.</span></span></summary>
        <returns><span data-ttu-id="a8bbe-147">新計時器的 ID。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-147">The ID of the new timer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bbe-148">間隔是小於或等於零。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-148">The interval is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-149">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-149">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-150">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-150">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-151">建立系統事件視窗執行緒的動作失敗，或建立計時器的動作失敗。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-151">The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-152">當使用者變更顯示設定時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-152">Occurs when the user changes the display settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-153">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-153">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8bbe-154">下列程式碼範例示範如何監視<xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-154">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> event.</span></span> <span data-ttu-id="a8bbe-155">這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-155">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-156">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-156">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-157">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-157">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-158">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-158">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanging">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-159">當顯示設定變更時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-159">Occurs when the display settings are changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-160">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-160">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-161">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-161">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-162">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-162">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-163">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-163">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      </Docs>
    </Member>
    <Member MemberName="EventsThreadShutdown">
      <MemberSignature Language="C#" Value="public static event EventHandler EventsThreadShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventsThreadShutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EventsThreadShutdown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EventsThreadShutdown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-164">在聆聽系統事件的執行緒終止前發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-164">Occurs before the thread that listens for system events is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bbe-165">因為接聽系統事件的執行緒即將終止，就會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-165">This event is raised as the thread that listens for system events is about to be terminated.</span></span> <span data-ttu-id="a8bbe-166">系統事件的委派會使用接聽系統事件的執行緒來叫用。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-166">System event delegates are invoked using the thread that listens for system events.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-167">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-167">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-168">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-168">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-169">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-169">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-170">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-170">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledFontsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler InstalledFontsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InstalledFontsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event InstalledFontsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ InstalledFontsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-171">當使用者將字型加入系統或從系統移除字型時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-171">Occurs when the user adds fonts to or removes fonts from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-172">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-172">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-173">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-173">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-174">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-174">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-175">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-175">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnEventsThread">
      <MemberSignature Language="C#" Value="public static void InvokeOnEventsThread (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeOnEventsThread(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeOnEventsThread (method As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeOnEventsThread(Delegate ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="a8bbe-176">要用接聽系統事件的執行緒叫用的委派。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-176">A delegate to invoke using the thread that listens for system events.</span></span></param>
        <summary><span data-ttu-id="a8bbe-177">利用接聽系統事件的執行緒叫用指定的委派。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-177">Invokes the specified delegate using the thread that listens for system events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bbe-178">您可以使用這個方法未公開，否則依您需要處理系統事件任何時間<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-178">You can use this method any time that you need to handle a system event that is not exposed otherwise by the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 <span data-ttu-id="a8bbe-179">當您呼叫這個方法時，您的應用程式用來處理系統事件的執行緒就會叫用指定的委派。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-179">When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-180">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-180">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-181">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-181">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-182">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-182">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KillTimer">
      <MemberSignature Language="C#" Value="public static void KillTimer (IntPtr timerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KillTimer(native int timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KillTimer (timerId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KillTimer(IntPtr timerId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="a8bbe-183">要結束之計時器的 ID。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-183">The ID of the timer to terminate.</span></span></param>
        <summary><span data-ttu-id="a8bbe-184">終止指定 ID 代表的計時器。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-184">Terminates the timer specified by the given id.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-185">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-185">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-186">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-186">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-187">建立系統事件視窗執行緒的動作失敗，或結束計時器的動作失敗。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-187">The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LowMemory">
      <MemberSignature Language="C#" Value="public static event EventHandler LowMemory;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LowMemory" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.LowMemory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LowMemory As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LowMemory;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-188">當系統可用的 RAM 不足時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-188">Occurs when the system is running out of available RAM.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bbe-189">此事件會包裝 WM_COMPACTING 訊息。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-189">This event wraps the WM_COMPACTING message.</span></span> <span data-ttu-id="a8bbe-190">當系統偵測到多個 12.5%的系統時間 30 至 60 秒的時間間隔，花在壓縮的記憶體時，此訊息會傳送給所有最上層視窗。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-190">This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory.</span></span> <span data-ttu-id="a8bbe-191">這表示系統記憶體過低。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-191">This indicates that system memory is low.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-192">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-192">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-193">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-193">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-194">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-194">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-195">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-195">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-196">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-196">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-197">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-197">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-198">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-198">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="a8bbe-199">此訊息僅供與 16 位元 Windows 架構應用程式的相容性。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-199">This message is provided only for compatibility with 16-bit Windows-based applications.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PaletteChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler PaletteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaletteChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PaletteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PaletteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ PaletteChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-200">當使用者切換至使用不同調色盤的應用程式時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-200">Occurs when the user switches to an application that uses a different palette.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-201">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-201">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-202">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-202">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-203">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-203">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-204">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-204">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8bbe-205">下列程式碼範例示範如何監視<xref:Microsoft.Win32.SystemEvents.PaletteChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-205">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.PaletteChanged> event.</span></span> <span data-ttu-id="a8bbe-206">這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-206">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-207">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-207">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-208">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-208">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-209">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-209">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PowerModeChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PowerModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PowerModeChanged As PowerModeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::PowerModeChangedEventHandler ^ PowerModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.PowerModeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-210">當使用者暫停或繼續系統時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-210">Occurs when the user suspends or resumes the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-211">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-211">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-212">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-212">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-213">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-213">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-214">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-214">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-215">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-215">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-216">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-216">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-217">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-217">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.PowerModes" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnded">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndedEventHandler SessionEnded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnded" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnded As SessionEndedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndedEventHandler ^ SessionEnded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-218">當使用者正在登出或正在關閉系統時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-218">Occurs when the user is logging off or shutting down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-219">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-219">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-220">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-220">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-221">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-221">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-222">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-222">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-223">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-223">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-224">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-224">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-225">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-225">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndedEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndingEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnding As SessionEndingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndingEventHandler ^ SessionEnding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-226">當使用者正在嘗試登出或關閉系統時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-226">Occurs when the user is trying to log off or shut down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bbe-227">這是可取消事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-227">This is a cancelable event.</span></span> <span data-ttu-id="a8bbe-228">設定<xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>屬性`true`會要求工作階段會繼續執行。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-228">Setting the <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> property to `true` will request that the session continues to run.</span></span> <span data-ttu-id="a8bbe-229">它會提供不保證不會結束工作階段。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-229">It provides no guarantee that the session will not end.</span></span>  
  
 <span data-ttu-id="a8bbe-230">如果您使用<xref:Microsoft.Win32.SystemEvents.SessionEnding>在 Windows form，以偵測系統登出或重新開機，沒有任何決定性的方式，來決定是否<xref:System.Windows.Forms.Form.Closing>事件就會引發此事件之前。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-230">If you are using <xref:Microsoft.Win32.SystemEvents.SessionEnding> in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <xref:System.Windows.Forms.Form.Closing> event will fire before this event.</span></span>  
  
 <span data-ttu-id="a8bbe-231">如果您想要執行一些特殊的工作，再<xref:System.Windows.Forms.Form.Closing>是引發，您必須確保<xref:Microsoft.Win32.SystemEvents.SessionEnding>之前引發<xref:System.Windows.Forms.Form.Closing>。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-231">If you want to perform some special tasks before <xref:System.Windows.Forms.Form.Closing> is fired, you need to ensure that <xref:Microsoft.Win32.SystemEvents.SessionEnding> fires before <xref:System.Windows.Forms.Form.Closing>.</span></span> <span data-ttu-id="a8bbe-232">若要這樣做，您要設陷`WM_QUERYENDSESSION`藉由覆寫格式`WndProc`函式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-232">To do this, you need to trap the `WM_QUERYENDSESSION` in the form by overriding the `WndProc` function.</span></span>  <span data-ttu-id="a8bbe-233">此範例示範如何執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-233">This example demonstrates how to do this.</span></span>  
  
```vb  
Private Shared WM_QUERYENDSESSION As Integer = &H11  
 Private Shared systemShutdown As Boolean = False  
 Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  
     If m.Msg = WM_QUERYENDSESSION Then  
         MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot")  
         systemShutdown = True  
     End If  
     ' If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  
     MyBase.WndProc(m)  
 End Sub 'WndProc   
 Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  
     If (systemShutdown) Then  
     ' Reset the variable because the user might cancel the shutdown.  
         systemShutdown = False  
         If (System.Windows.Forms.DialogResult.Yes = _  
                 MessageBox.Show("My application", "Do you want to save your work before logging off?", MessageBoxButtons.YesNo)) Then  
                 e.Cancel = True  
         Else  
                 e.Cancel = False  
         End If  
     End If  
 End Sub  
  
```  
  
```csharp  
private static int WM_QUERYENDSESSION = 0x11;  
private static bool systemShutdown = false;  
protected override void WndProc(ref System.Windows.Forms.Message m)  
{  
    if (m.Msg==WM_QUERYENDSESSION)  
    {  
        MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot");  
        systemShutdown = true;  
    }  
  
    // If this is WM_QUERYENDSESSION, the closing event should be  
    // raised in the base WndProc.  
    base.WndProc(ref m);  
  
} //WndProc   
  
private void Form1_Closing(  
    System.Object sender,   
    System.ComponentModel.CancelEventArgs e)  
{  
    if (systemShutdown)  
        // Reset the variable because the user might cancel the   
        // shutdown.  
    {  
        systemShutdown = false;  
        if (DialogResult.Yes==MessageBox.Show("My application",   
            "Do you want to save your work before logging off?",   
            MessageBoxButtons.YesNo))  
        {  
            e.Cancel = true;  
        }  
        else  
        {  
            e.Cancel = false;  
        }  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8bbe-234">主控台應用程式不會引發<xref:Microsoft.Win32.SystemEvents.SessionEnding>事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-234">Console applications do not raise the <xref:Microsoft.Win32.SystemEvents.SessionEnding> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-235">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-235">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-236">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-236">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-237">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-237">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-238">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-238">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-239">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-239">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-240">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-240">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-241">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-241">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndingEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionSwitch">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionSwitchEventHandler SessionSwitch" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionSwitch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionSwitch As SessionSwitchEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionSwitchEventHandler ^ SessionSwitch;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionSwitchEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-242">當目前登入的使用者變更時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-242">Occurs when the currently logged-in user has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-243">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-243">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-244">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-244">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-245">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-245">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-246">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-246">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-247">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-247">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-248">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-248">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-249">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-249">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TimeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TimeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TimeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TimeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-250">當使用者變更系統時鐘上的時間時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-250">Occurs when the user changes the time on the system clock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-251">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-251">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-252">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-252">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-253">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-253">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-254">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-254">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-255">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-255">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-256">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-256">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-257">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-257">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="P:System.DateTime.Now" />
      </Docs>
    </Member>
    <Member MemberName="TimerElapsed">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.TimerElapsedEventHandler TimerElapsed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimerElapsed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimerElapsed As TimerElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::TimerElapsedEventHandler ^ TimerElapsed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.TimerElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-258">當視窗計時器間隔已經過期時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-258">Occurs when a windows timer interval has expired.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-259">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-259">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-260">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-260">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-261">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-261">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-262">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-262">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-263">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-263">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-264">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-264">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-265">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-265">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventArgs" />
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanged As UserPreferenceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangedEventHandler ^ UserPreferenceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-266">當使用者喜好設定已變更時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-266">Occurs when a user preference has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-267">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-267">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-268">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-268">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-269">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-269">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-270">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-270">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-271">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-271">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-272">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-272">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-273">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-273">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanging">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanging As UserPreferenceChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangingEventHandler ^ UserPreferenceChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8bbe-274">當使用者喜好設定正在變更時發生。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-274">Occurs when a user preference is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a8bbe-275">如果正在執行的訊息幫浦，只會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-275">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="a8bbe-276">Windows 服務，除非使用隱藏的表單，或手動啟動訊息幫浦此事件就不會引發。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-276">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="a8bbe-277">如需示範如何使用隱藏的表單中的 Windows 服務處理系統事件的程式碼範例，請參閱<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-277">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a8bbe-278">因為這是靜態事件，您必須處置應用程式，或將會造成記憶體流失時中斷連結事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-278">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8bbe-279">下列程式碼範例示範如何監視<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-279">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> event.</span></span> <span data-ttu-id="a8bbe-280">這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.SystemEvents>類別。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-280">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8bbe-281">目前內容不支援系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-281">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="a8bbe-282">例如，伺服器處理序可能就不支援全域系統事件告知。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-282">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="a8bbe-283">建立系統事件視窗執行緒的嘗試未成功。</span><span class="sxs-lookup"><span data-stu-id="a8bbe-283">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
  </Members>
</Type>