<Type Name="RegistryKey" FullName="Microsoft.Win32.RegistryKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf38aadbe15e4bb0f47ab0540d4be6a651933b15" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32695227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryKey : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegistryKey extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.RegistryKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryKey&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryKey sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 Windows 登錄中的機碼層級節點。 這個類別的作用是登錄封裝。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 登錄做為電腦上的作業系統和應用程式資訊的中央儲存機制。 登錄依照階層格式，根據儲存在它的項目邏輯順序 (請參閱<xref:Microsoft.Win32.Registry>此階層中的基底層級項目)。 時將資訊儲存在登錄中，選取要儲存的資訊類型為基礎的適當位置。 請務必避免破壞其他應用程式所建立，因為這可能會導致出現未預期的行為，這些應用程式，也可以在自己的應用程式時產生負面影響的資訊。  
  
> [!IMPORTANT]
>  此類型會實作<xref:System.IDisposable>介面。 當您完成使用類型時，您應該會處置它直接或間接。 若要直接處置的類型，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。 若要為其配置間接，使用語言建構例如`using`（C# 中） 或`Using`（在 Visual Basic)。 如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。  
  
 登錄機碼的基底的單位是在登錄中，組織和可以比較檔案總管 中的資料夾。 特定的金鑰可以有子機碼，就像資料夾可以有子資料夾。 可以刪除每個索引鍵，只要使用者擁有適當的權限才能這樣做，而且不是基底的索引鍵或層級之下的基底的索引鍵。 每個索引鍵也可以有多個相關的值 （值可以相較於檔案），用來儲存資訊 — 例如，電腦上安裝應用程式的相關資訊。 每個值會保存一段特定可以擷取或更新時所需的資訊。 比方說，您可以建立<xref:Microsoft.Win32.RegistryKey>貴公司，在機碼 HKEY_LOCAL_MACHINE\Software，然後針對您的公司會建立每個應用程式的子機碼。 每個子機碼保存資訊專屬於該應用程式，色彩設定螢幕的位置和大小，例如，或識別檔案的副檔名。  
  
 請注意，儲存在登錄中的資訊可供其他應用程式和使用者，因此應該不會被用來儲存安全性資料或關鍵應用程式資訊。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
 從開始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，不再超過 255 個字元的登錄機碼長度。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立在 HKEY_CURRENT_USER 下的子機碼，操作其內容，然後再刪除 子機碼。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果其內容已經做了修改，請關閉機碼，並將它清除至磁碟中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 系統機碼上呼叫這個方法不會影響，因為系統索引鍵永遠不會關閉。  
  
 如果您的執行個體上呼叫這個方法不做任何動作`RegistryKey`已關閉。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Flush" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立新的子機碼或開啟現有的子機碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。 這個字串不會區分大小寫。</param>
        <summary>為寫入權限建立新的子機碼，或開啟現有的子機碼。</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。 如果為 <paramref name="subkey" /> 指定了長度為零的字串，則會傳回目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立在 HKEY_CURRENT_USER 下的子機碼，操作其內容，然後再刪除 子機碼。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">叫用這個方法的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入 <see cref="T:Microsoft.Win32.RegistryKey" />，例如不是開啟為可寫入的機碼，或使用者沒有必要的存取權限。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">能夠修改指定的登錄機碼，如果存在，或讓您建立登錄鍵，如果它並不存在。 列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。 這個字串不會區分大小寫。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <summary>使用指定的權限檢查選項，為寫入權限建立新的子機碼，或開啟現有的子機碼。</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。 如果為 <paramref name="subkey" /> 指定了長度為零的字串，則會傳回目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> 包含無效的值。</exception>
        <exception cref="T:System.ObjectDisposedException">叫用這個方法的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入 <see cref="T:Microsoft.Win32.RegistryKey" />，例如不是開啟為可寫入的機碼，或使用者沒有必要的存取權限。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">能夠修改指定的登錄機碼，如果存在，或讓您建立登錄鍵，如果它並不存在。 列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。 這個字串不會區分大小寫。</param>
        <param name="writable">
          <see langword="true" /> 表示可寫入新的子機碼，否則為 <see langword="false" />。</param>
        <summary>以指定權限建立新的子機碼，或開啟現有的子機碼。  
  
 從 [!INCLUDE[net_v46](~/includes/net-v46-md.md)] 開始提供</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。 如果為 <paramref name="subkey" /> 指定了長度為零的字串，則會傳回目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼的所需權限。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入目前的 <see cref="T:Microsoft.Win32.RegistryKey" />，原因可能是未將其開啟為可寫入的機碼，或使用者存取權限不足。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。 這個字串不會區分大小寫。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <param name="registrySecurity">新機碼的存取控制安全性。</param>
        <summary>使用指定的權限檢查選項和登錄安全性，為寫入權限建立新的子機碼，或開啟現有的子機碼。</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。 如果為 <paramref name="subkey" /> 指定了長度為零的字串，則會傳回目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法會建立具有所指定的存取控制的登錄機碼`registrySecurity`參數。 <xref:Microsoft.Win32.RegistryKey>物件，則會傳回代表登錄機碼，但不是會限制該物件中指定的存取控制`registrySecurity`參數。  
  
 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，開啟機碼以進行讀取/寫入存取。 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>，開啟機碼以供讀取存取。  
  
 回溯相容性，開啟機碼以進行讀取和寫入如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>和父索引鍵也有<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>。 如果父索引鍵中有任何其他設定，讀取/寫入狀態是由父索引鍵的設定所控制。  
  
 為了執行此動作，使用者必須在此層級和以下版本的權限登錄階層中。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> 包含無效的值。</exception>
        <exception cref="T:System.ObjectDisposedException">叫用這個方法的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入目前的 <see cref="T:Microsoft.Win32.RegistryKey" />，例如不是開啟為可寫入的機碼，或使用者沒有必要的存取權限。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">能夠修改指定的登錄機碼，如果存在，或讓您建立登錄鍵，如果它並不存在。 列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable, valuetype Microsoft.Win32.RegistryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable, Microsoft::Win32::RegistryOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。 這個字串不會區分大小寫。</param>
        <param name="writable">
          <see langword="true" /> 表示可寫入新的子機碼，否則為 <see langword="false" />。</param>
        <param name="options">要使用的登錄選項。</param>
        <summary>以指定權限建立新的子機碼，或開啟現有的子機碼。  
  
 從 [!INCLUDE[net_v46](~/includes/net-v46-md.md)] 開始提供</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。 如果為 <paramref name="subkey" /> 指定了長度為零的字串，則會傳回目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 才能執行此動作，使用者必須有登錄階層中的權限在此層級和以下版本。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> 未指定有效選項</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入目前的 <see cref="T:Microsoft.Win32.RegistryKey" />，原因可能是未將其開啟為可寫入的機碼，或使用者存取權限不足。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions options) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, options As RegistryOptions) As RegistryKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-2.0" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <param name="options">要使用的登錄選項，例如 Volatile 機碼。</param>
        <param name="registryOptions">To be added.</param>
        <summary>使用指定的權限檢查和登錄選項，為寫入權限建立子機碼或開啟子機碼。</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要取得目前<xref:Microsoft.Win32.RegistryKey>物件，請指定空字串 ("") 的`subkey`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件已關閉 (不能存取已關閉的索引鍵)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件，例如不是開啟為可寫入的機碼，或使用者沒有必要的存取權限。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions registryOptions, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey">要建立或開啟之子機碼的名稱或路徑。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <param name="registryOptions">要使用的登錄選項。</param>
        <param name="registrySecurity">新子機碼的存取控制安全性。</param>
        <summary>使用指定的權限檢查選項、登錄選項和登錄安全性，為寫入權限建立子機碼或開啟子機碼。</summary>
        <returns>傳回新建立的子機碼，或者如果作業失敗，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要取得目前<xref:Microsoft.Win32.RegistryKey>物件，請指定空字串 ("") 的`subkey`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件已關閉。 無法存取已關閉的機碼。</exception>
        <exception cref="T:System.UnauthorizedAccessException">無法寫入目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件，例如不是開啟為可寫入的機碼，或使用者沒有必要的存取權限。</exception>
        <exception cref="T:System.IO.IOException">巢狀層次超過 510。  
  
 -或-  
  
 發生系統錯誤，例如刪除機碼，或是嘗試在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根目錄中建立機碼。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或開啟登錄機碼所需的使用權限。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>刪除指定的子機碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">要刪除的子機碼名稱。 這個字串不會區分大小寫。</param>
        <summary>刪除指定的子機碼。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要刪除子機碼，請使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。  
  
 刪除登錄機碼時，請務必小心。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source2.cpp#5)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source2.cs#5)]
 [!code-vb[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="subkey" /> 有子系子機碼</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subkey" /> 參數沒有指定有效的登錄機碼</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" /></exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供修改指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">要刪除的子機碼名稱。 這個字串不會區分大小寫。</param>
        <param name="throwOnMissingSubKey">表示如果找不到指定子機碼時，是否引發例外狀況。 如果這個引數為 <see langword="true" />，而指定的子機碼不存在時，則會引發例外狀況。 如果這個引數為 <see langword="false" />，而指定的子機碼不存在時，則不採取任何動作。</param>
        <summary>刪除指定的子機碼，並且指定在找不到該子機碼時是否引發例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要刪除子機碼，請使用<xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。  
  
 刪除登錄機碼時，請務必小心。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="subkey" /> 有子系子機碼。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subkey" /> 沒有指定有效的登錄機碼，而且 <paramref name="throwOnMissingSubKey" /> 為 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供修改指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKeyTree">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>透過選擇性例外狀況處理，遞迴地刪除子機碼和任何子系子機碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">要刪除的子機碼。 這個字串不會區分大小寫。</param>
        <summary>遞迴地刪除子機碼和任何子系子機碼。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須擁有適當的權限來刪除子機碼和其樹狀結構。  
  
> [!CAUTION]
>  刪除特定的索引鍵，會在樹狀目錄中移除機碼下的所有項目。 會不提供任何警告。 如果您想要刪除子機碼，它不有使用任何子機碼時，才<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>方法。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">已嘗試根群組的刪除。  
  
 -或-  
  
 <paramref name="subkey" /> 沒有指定有效的登錄子機碼。</exception>
        <exception cref="T:System.IO.IOException">發生 I/O 錯誤。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供修改指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">要刪除的子機碼名稱。 這個字串不會區分大小寫。</param>
        <param name="throwOnMissingSubKey">表示如果找不到指定子機碼時，是否引發例外狀況。 如果這個引數為 <see langword="true" />，而指定的子機碼不存在時，則會引發例外狀況。 如果這個引數為 <see langword="false" />，而指定的子機碼不存在時，則不採取任何動作。</param>
        <summary>遞迴地刪除指定的子機碼和任何子系子機碼，並且指定在找不到該子機碼時是否引發例外狀況。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">嘗試刪除樹狀目錄的根登錄區。  
  
 -或-  
  
 <paramref name="subkey" /> 沒有指定有效的登錄子機碼，而且 <paramref name="throwOnMissingSubKey" /> 為 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供修改指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>刪除此機碼中的指定值，並且在找不到值時擲回例外狀況。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要刪除的值的名稱。</param>
        <summary>從這個機碼中刪除指定值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Windows 95、 Windows 98、 Windows 98 Second Edition、 和 Windows Millennium Edition 上指定為空字串。`name`參數不會刪除預設值。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#3)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#3)]
 [!code-vb[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 不是值的有效參考。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除值所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理中的 <see cref="T:Microsoft.Win32.RegistryKey" /> 是唯讀的。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供刪除指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name, bool throwOnMissingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name, bool throwOnMissingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String, throwOnMissingValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name, bool throwOnMissingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnMissingValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">要刪除的值的名稱。</param>
        <param name="throwOnMissingValue">表示如果找不到指定的值時，是否引發例外狀況。 如果這個引數為 <see langword="true" />，而指定的值不存在時，則會引發例外狀況。 如果這個引數為 <see langword="false" />，而指定的值不存在時，則不採取任何動作。</param>
        <summary>刪除此機碼的指定值，並且指定找不到該值時是否引發例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`throwOnMissingValue`是`false`，沒有任何方式可以分辨刪除作業是否成功，但不會接著嘗試存取的值將它刪除。 因此，小心時刪除這種方式中的登錄值。  
  
 在 Windows 95、 Windows 98、 Windows 98 Second Edition、 和 Windows Millennium Edition 上指定為空字串。`name`參數不會刪除預設值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 不是值的有效參考，而且 <paramref name="throwOnMissingValue" /> 為 <see langword="true" />。  
  
 -或-  
  
 <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有刪除值所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">管理中的 <see cref="T:Microsoft.Win32.RegistryKey" /> 是唯讀的。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供刪除指定的登錄機碼的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:Microsoft.Win32.RegistryKey" /> 類別目前的執行個體所使用的資源全部釋出。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose` 使用完畢時，請呼叫 <xref:Microsoft.Win32.RegistryKey>。 `Dispose` 方法會將 <xref:Microsoft.Win32.RegistryKey> 保留在無法使用的狀態。 在呼叫`Dispose`，您必須釋放所有參考<xref:Microsoft.Win32.RegistryKey>讓記憶體回收行程可以回收記憶體的<xref:Microsoft.Win32.RegistryKey>所佔用。  
  
 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:Microsoft.Win32.RegistryKey>。 否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:Microsoft.Win32.RegistryKey> 物件的 `Finalize` 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將指定的開啟登錄機碼的所有屬性 (Attribute) 寫入登錄中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不需要呼叫`Flush`寫出機碼的變更。 登錄變更會排清到磁碟時登錄會使用其延遲的清除。 延遲排清，就會發生自動並定期在系統指定的時間間隔之後。 登錄變更也會排清至磁碟的系統關機。  
  
 不同於<xref:Microsoft.Win32.RegistryKey.Close%2A>、`Flush`函式的所有資料都寫入登錄時，才會傳回。  
  
 `Flush`函式也可能會寫出的部分或全部的索引鍵。 過度呼叫這個函式可以有應用程式效能的負面影響。  
  
 應用程式應該只呼叫`Flush`如果必須是絕對特定登錄變更會記錄至磁碟。 一般情況下，`Flush`很少，如果有的話，必須使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHandle">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從指定的控制代碼建立登錄機碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      </Parameters>
      <Docs>
        <param name="handle">登錄機碼的控制代碼。</param>
        <summary>從指定的控制代碼建立登錄機碼。</summary>
        <returns>登錄機碼 (Registry Key)。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handle" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有執行此動作所需的權限。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫者。 這個成員無法供部分信任或安全性透明程式碼。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle, Microsoft::Win32::RegistryView view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="handle">登錄機碼的控制代碼。</param>
        <param name="view">要使用的登錄檢視。</param>
        <summary>從指定的控制代碼和登錄檢視設定，建立登錄機碼。</summary>
        <returns>登錄機碼 (Registry Key)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `view`後續作業，例如開啟子機碼中使用這個方法的參數。  
  
 如果`view`是<xref:Microsoft.Win32.RegistryView.Registry64>但電腦正在執行 32 位元作業系統，將會使用傳回的索引鍵<xref:Microsoft.Win32.RegistryView.Registry32>檢視。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="view" /> 無效。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handle" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有執行此動作所需的權限。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫者。 這個成員無法供部分信任或安全性透明程式碼。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回目前登錄機碼的存取控制安全性。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前登錄機碼的存取控制安全性。</summary>
        <returns>物件，描述由目前 <see cref="T:Microsoft.Win32.RegistryKey" /> 所表示之登錄機碼上的存取控制權限。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法多載就相當於呼叫<xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29>方法多載具有下列旗標的位元組合： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>， <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>，和<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>。 若要搜尋的其他權限，您可以使用該多載。  
  
 使用者必須擁有<xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType>權限，才能呼叫此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有必要的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.InvalidOperationException">目前的機碼已經刪除。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">列舉值的位元組合，指定要取得的安全性資訊型別。</param>
        <summary>傳回目前登錄機碼之存取控制安全性的指定區段。</summary>
        <returns>物件，描述由目前 <see cref="T:Microsoft.Win32.RegistryKey" /> 所表示之登錄機碼上的存取控制權限。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要求目前使用者授與的存取權限，請指定下列旗標的位元組合： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>， <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>，和<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>。 或者，您可以使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl>方法多載，指定完全組合的值。  
  
 使用者必須擁有<xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType>權限，才能呼叫此方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有必要的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.InvalidOperationException">目前的機碼已經刪除。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubKeyNames">
      <MemberSignature Language="C#" Value="public string[] GetSubKeyNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSubKeyNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubKeyNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetSubKeyNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取包含所有子機碼名稱的字串陣列。</summary>
        <returns>字串的陣列包含了目前機碼的子機碼名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會以遞迴方式尋找名稱。 它會傳回呼叫它的基底層級的名稱。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.IO.IOException">發生系統錯誤，例如，目前的機碼已經刪除。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供從登錄讀取的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取與指定名稱關聯的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要擷取的值的名稱。 這個字串不會區分大小寫。</param>
        <summary>擷取與指定名稱關聯的值。 如果登錄中沒有名稱/值組，則傳回 <see langword="null" />。</summary>
        <returns>與 <paramref name="name" /> 關聯的值，如果找不到 <paramref name="name" />，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 ("") 的`name`。  
  
 當<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法會擷取可擴充的字串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它會展開環境字串使用本機的環境中的資料。 若要從遠端電腦上的登錄中擷取可擴充的字串值，請使用<xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>方法多載來指定您不要展開環境字串。  
  
> [!NOTE]
>  如果值，其中包含可展開環境變數參考已儲存為字串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可擴充的字串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，<xref:Microsoft.Win32.RegistryKey.GetValue%2A>不會展開。 已擷取透過呼叫之後，您可以展開此類字串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。  
  
> [!NOTE]
>  從中擷取資料的建議的方式<xref:Microsoft.Win32.Registry.PerformanceData>金鑰是使用<xref:System.Diagnostics.PerformanceCounter>類別而非<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰，並將索引鍵的不同資料類型的值。 此範例會讀取的名稱/值組，並加以顯示到主控台，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法來擷取對應的登錄資料類型。  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.IO.IOException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已標記為刪除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要從登錄讀取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">讀取REG_EXPAND_SZ類型的註冊表項。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">要擷取的值的名稱。 這個字串不會區分大小寫。</param>
        <param name="defaultValue">
          <c>name</c> 不存在時所傳回的值。</param>
        <summary>擷取與指定名稱關聯的值。 如果找不到名稱，則傳回您提供的預設值。</summary>
        <returns>與 <paramref name="name" /> 關聯的值，擁有未展開的內嵌環境變數，如果找不到 <paramref name="defaultValue" />，則為 <paramref name="name" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此多載的<xref:Microsoft.Win32.RegistryKey.GetValue%2A>以處理其中一個名稱尚未存在的情況 — 例如，第一次執行應用程式。 每當您呼叫這個多載時，使用`defaultValue`參數來指定要傳回的值`name`不存在。  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 ("") 的`name`。  
  
 當<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法會擷取可擴充的字串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它會展開環境字串使用本機的環境中的資料。 若要從遠端電腦上的登錄中擷取可擴充的字串值，請使用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>多載來指定您不要展開環境字串。  
  
> [!NOTE]
>  如果值，其中包含可展開環境變數參考已儲存為字串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可擴充的字串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法不會展開。 已擷取透過呼叫之後，您可以展開此類字串<xref:System.Environment.ExpandEnvironmentVariables%2A>方法。  
  
> [!NOTE]
>  從中擷取資料的建議的方式<xref:Microsoft.Win32.Registry.PerformanceData>金鑰是使用<xref:System.Diagnostics.PerformanceCounter>類別而非<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰值，並擷取該值。 然後此範例會嘗試擷取索引鍵不存在的值在此情況下<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法會傳回指定的預設值。  
  
 [!code-cpp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CS/source.cs#1)]
 [!code-vb[Classic RegistryKey.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.IO.IOException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已標記為刪除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要從登錄讀取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">讀取REG_EXPAND_SZ類型的註冊表項。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue, valuetype Microsoft.Win32.RegistryValueOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object, options As RegistryValueOptions) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue, Microsoft::Win32::RegistryValueOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryValueOptions" />
      </Parameters>
      <Docs>
        <param name="name">要擷取的值的名稱。 這個字串不會區分大小寫。</param>
        <param name="defaultValue">
          <c>name</c> 不存在時所傳回的值。</param>
        <param name="options">其中一個列舉值，指定擷取之值的選擇性處理。</param>
        <summary>擷取與指定名稱及擷取選項關聯的值。 如果找不到名稱，則傳回您提供的預設值。</summary>
        <returns>與 <paramref name="name" /> 關聯的值，根據指定的 <paramref name="options" /> 處理，如果找不到 <paramref name="defaultValue" />，則為 <paramref name="name" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個多載來指定擷取值的特殊處理。 例如，您可以指定<xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType>擷取類型的登錄值時<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>擷取字串，而不會擴充內嵌的環境變數。  
  
 使用`defaultValue`參數來指定要傳回的值`name`不存在。  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取這個未命名的值，指定`null`或空字串 ("") 的`name`。  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支援型別 REG_NONE 或 REG_LINK 讀取的值。  在這兩種情況下，預設值 (`null`) 會傳回而不是實際的值。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰、 將值與內嵌的環境變數，並擷取展開和未展開的表單中的值。  
  
 [!code-cpp[RegistryValueOptions#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryValueOptions/CPP/RegistryValueOptions.cpp#1)]
 [!code-csharp[RegistryValueOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryValueOptions/CS/source.cs#1)]
 [!code-vb[RegistryValueOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryValueOptions/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.IO.IOException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已標記為刪除。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> 不是有效的 <see cref="T:Microsoft.Win32.RegistryValueOptions" /> 值，例如將無效的值轉換成 <see cref="T:Microsoft.Win32.RegistryValueOptions" />。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要從登錄讀取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">讀取REG_EXPAND_SZ類型的註冊表項。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueOptions" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValueKind">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryValueKind GetValueKind (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Win32.RegistryValueKind GetValueKind(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueKind (name As String) As RegistryValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryValueKind GetValueKind(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryValueKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要擷取之登錄資料型別的值的名稱。 這個字串不會區分大小寫。</param>
        <summary>擷取與指定名稱關聯之值的登錄資料型別。</summary>
        <returns>與 <paramref name="name" /> 關聯的值的登錄資料型別。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要擷取的登錄資料類型未命名的值，指定`null`或空字串 ("") 的`name`。  
  
 如需支援的登錄資料類型的說明，請參閱<xref:Microsoft.Win32.RegistryValueKind>列舉型別。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰，並將索引鍵的不同資料類型的值。 此範例會讀取的名稱/值組，並加以顯示到主控台，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法來擷取對應的登錄資料類型。  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.IO.IOException">包含指定值的子機碼不存在。  
  
 -或-  
  
 <paramref name="name" /> 指定的名稱/值組不存在。  
  
 在 Windows 95、Windows 98 或 Windows Millennium Edition 上不會擲回這個例外狀況。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要從登錄讀取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="GetValueNames">
      <MemberSignature Language="C#" Value="public string[] GetValueNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetValueNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetValueNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取包含所有與這個機碼相關值名稱的字串陣列。</summary>
        <returns>字串的陣列，包含目前機碼的值名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果找不到任何索引鍵的值名稱，則會傳回空陣列。  
  
 登錄機碼可以有預設值 — 也就是名稱/值組的名稱是空字串 ("")。 如果已設定預設值的登錄機碼，傳回的陣列<xref:Microsoft.Win32.RegistryKey.GetValueNames%2A>方法包含空字串。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.IO.IOException">發生系統錯誤，例如，目前的機碼已經刪除。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">提供從登錄讀取的能力。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeRegistryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeRegistryHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> 物件，這個物件表示目前 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件所封裝的登錄機碼。</summary>
        <value>登錄機碼的控制代碼。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">登錄機碼已關閉。 無法存取已關閉的機碼。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.IO.IOException">發生系統錯誤，例如刪除目前的機碼。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取機碼所需之權限。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫者。 這個成員無法供部分信任或安全性透明程式碼。</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>擷取機碼名稱。</summary>
        <value>機碼的絕對 (限定) 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 索引鍵名稱在登錄中，開始在基底的索引鍵，例如 HKEY_LOCAL_MACHINE 包含此機碼的絕對路徑。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.ToString" />
      </Docs>
    </Member>
    <Member MemberName="OpenBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenBaseKey (hKey As RegistryHive, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenBaseKey(Microsoft::Win32::RegistryHive hKey, Microsoft::Win32::RegistryView view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey">要開啟的 HKEY。</param>
        <param name="view">要使用的登錄檢視。</param>
        <summary>使用指定的檢視，開啟本機電腦上表示要求機碼的新 <see cref="T:Microsoft.Win32.RegistryKey" />。</summary>
        <returns>要求的登錄機碼。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> 或 <paramref name="view" /> 無效。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有執行此動作所需的權限。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRemoteBaseKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的登錄檢視選項，開啟遠端電腦上表示要求機碼的新 T:Microsoft.Win32.RegistryKey。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hKey">要從 <see cref="T:Microsoft.Win32.RegistryHive" /> 列舉型別開啟的 HKEY。</param>
        <param name="machineName">遠端電腦。</param>
        <summary>開啟遠端電腦上表示要求機碼的新 <see cref="T:Microsoft.Win32.RegistryKey" />。</summary>
        <returns>要求的登錄機碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果開啟本機電腦登錄`machineName`是<xref:System.String.Empty?displayProperty=nameWithType>。 要求的索引鍵必須是遠端電腦上的根金鑰，而且由適當<xref:Microsoft.Win32.RegistryHive>值。  
  
 為了讓遠端開啟的索引鍵，在伺服器和用戶端電腦必須執行遠端登錄服務，並啟用遠端管理。  
  
   
  
## Examples  
 下列程式碼範例示範如何開啟遠端電腦上的登錄機碼，並列舉索引鍵的值。 遠端電腦必須執行遠端登錄服務。 叫用程式時，指定遠端電腦的名稱做為命令列引數。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> 無效。</exception>
        <exception cref="T:System.IO.IOException">
          找不到 <paramref name="machineName" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="machineName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">使用者並不具有執行這個作業的適當使用權限。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryHive" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName, Microsoft::Win32::RegistryView view);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey">要從 <see cref="T:Microsoft.Win32.RegistryHive" /> 列舉型別開啟的 HKEY。</param>
        <param name="machineName">遠端電腦。</param>
        <param name="view">要使用的登錄檢視。</param>
        <summary>使用指定的檢視，開啟遠端電腦上表示要求機碼的新登錄機碼。</summary>
        <returns>要求的登錄機碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果開啟本機電腦登錄`machineName`是<xref:System.String.Empty?displayProperty=nameWithType>。 要求的索引鍵必須是遠端電腦上的根金鑰，而且由適當<xref:Microsoft.Win32.RegistryHive>值。  
  
 為了讓遠端開啟的索引鍵，在伺服器和用戶端電腦必須執行遠端登錄服務，並啟用遠端管理。  
  
 在 64 位元版本的 Windows 中，登錄的一部分會分別儲存 32 位元和 64 位元應用程式。 沒有 32 位元應用程式的檢視 32 位元和 64 位元應用程式的 64 位元檢視。 如果`view`是<xref:Microsoft.Win32.RegistryView.Registry64>但遠端機器正在執行 32 位元作業系統，將會使用傳回的索引鍵<xref:Microsoft.Win32.RegistryView.Registry32>檢視。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> 或 <paramref name="view" /> 無效。</exception>
        <exception cref="T:System.IO.IOException">
          找不到 <paramref name="machineName" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="machineName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有執行這個作業的必要使用權限。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取指定的子機碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">以唯讀方式開啟之子機碼的名稱或路徑。</param>
        <summary>擷取子機碼為唯讀。</summary>
        <returns>要求的子機碼，或者在作業失敗時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用其他方法和屬性來管理之前，您必須開啟金鑰。 若要修改的機碼，您必須開啟的多載它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可讓您指定寫入權限，例如<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29>多載或<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29>多載。  
  
 如果指定的子機碼找不到然後`null`傳回。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用的靜態成員其中<xref:Microsoft.Win32.Registry>類別。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰，並使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，以開啟它，示範兩個多載的方法。  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" /></exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="name">要建立或開啟之子機碼的名稱或路徑。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <summary>擷取指定的子機碼，以供讀取或讀取/寫入存取。</summary>
        <returns>要求的子機碼，或者在作業失敗時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回而不是擲回例外狀況，`null`如果要求的索引鍵不存在。  
  
 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，開啟機碼以進行讀取和寫入; 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>，索引鍵開啟來讀取，除非父索引鍵以開啟<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
   
  
## Examples  
 下列程式碼範例會建立一個包含 100 的索引鍵/值組的子機碼，並將它關閉。 範例會開啟與子機碼<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>，記錄讀取的值，並關閉子機碼的時間。 範例會開啟與子機碼<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree>和記錄讀取所有的值所花費的時間。 最後，範例會計算，並顯示改進百分比。  
  
 [!code-csharp[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/cs/source.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> 包含無效的值。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, bool writable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">要開啟的子機碼名稱或路徑。</param>
        <param name="writable">如果需要機碼的寫入權限，請設定為 <see langword="true" />。</param>
        <summary>擷取指定的子機碼，並且指定此機碼是否要套用寫入存取權限。</summary>
        <returns>要求的子機碼，或者在作業失敗時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要求的索引鍵不存在，則這個方法會傳回`null`而不是擲回例外狀況。  
  
 如果`writable`是`true`、 進行讀取和寫入，將會開啟的機碼、 以唯讀方式開啟的機碼否則。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>方法。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰，並使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，以開啟它，示範兩個多載的方法。  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有以指定模式存取登錄機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, System::Security::AccessControl::RegistryRights rights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name">要建立或開啟之子機碼的名稱或路徑。</param>
        <param name="rights">登錄機碼的權限。</param>
        <summary>擷取具有指定名稱和 的子機碼。  
  
 從 .NET Framework 4.6 開始可供使用</summary>
        <returns>要求的子機碼，或者在作業失敗時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用其他方法和屬性來管理之前，您必須開啟金鑰。 若要修改的機碼，您必須開啟的多載它<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，可讓您指定寫入權限。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有以指定模式存取登錄機碼所需的使用權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistryRights rights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name">要建立或開啟之子機碼的名稱或路徑。</param>
        <param name="permissionCheck">其中一個列舉值，指定是否開啟機碼以取得讀取或讀取/寫入存取權。</param>
        <param name="rights">列舉值的位元組合，指定所需的安全性存取權。</param>
        <summary>擷取指定的子機碼以供讀取或讀取/寫入存取，並要求指定的存取權限。</summary>
        <returns>要求的子機碼，或者在作業失敗時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回而不是擲回例外狀況，`null`如果要求的索引鍵不存在。  
  
 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>，開啟機碼以進行讀取和寫入; 如果`permissionCheck`是<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>，索引鍵開啟來讀取，除非父索引鍵以開啟<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>。  
  
 針對指定的存取權`permissionCheck`為指定的存取權的優先順序高於`rights`。 例如，如果您指定<xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>如`permissionCheck`和<xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType>如`rights`，嘗試寫入子機碼會擲回的例外狀況。  
  
 若要使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法，您必須擁有執行個體<xref:Microsoft.Win32.RegistryKey>類別。 若要取得的執行個體<xref:Microsoft.Win32.RegistryKey>，使用其中一個靜態成員<xref:Microsoft.Win32.Registry>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> 包含無效的值。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.Security.SecurityException">
          <paramref name="rights" /> 包含無效的登錄權限值。  
  
 -或-  
  
 使用者沒有要求的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="registrySecurity">要套用至目前子機碼的存取控制安全性。</param>
        <summary>將 Windows 存取控制安全性套用至現有的登錄機碼。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要修改的登錄機碼的權限，請使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法，以取得<xref:System.Security.AccessControl.RegistrySecurity>物件代表現有的 Windows 存取控制安全性，請修改<xref:System.Security.AccessControl.RegistrySecurity>物件，，然後使用<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A>方法，以更新的安全性索引鍵。  
  
> [!CAUTION]
>  <xref:System.Security.AccessControl.RegistrySecurity>物件指定`registrySecurity`取代現有的安全性登錄機碼。 若要加入之新使用者的權限，請使用<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>方法，以取得現有的存取控制安全性，然後再修改它。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰。 目前的使用者允許<xref:System.Security.AccessControl.RegistryRights.ReadKey>和<xref:System.Security.AccessControl.RegistryRights.Delete>權但拒絕<xref:System.Security.AccessControl.RegistryRights.ChangePermissions>和<xref:System.Security.AccessControl.RegistryRights.WriteKey>權限。 後續嘗試將管理金鑰成功或失敗，根據這些權限。  
  
 刪除機碼之前，暫停程式碼。 您可以切換至登錄編輯程式，並確認使用登錄編輯程式存取金鑰時，適用於相同的存取權限。 (這最適合如果您使用**RunAs**從命令列以沒有管理員權限的本機使用者身分執行登錄編輯程式和範例程式碼。 登錄編輯程式一律可讓系統管理員才能變更權限，即使特定的系統管理員遭到拒絕這些權限。 如果您已經定義名為 TestUser，命令的本機使用者`runas /user:TestUser cmd`會開啟登錄編輯程式，然後範例程式碼，您可以執行的命令視窗。)  
  
 [!code-cpp[RegistrySecurity101#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistrySecurity101/cpp/source.cpp#1)]
 [!code-csharp[RegistrySecurity101#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistrySecurity101/CS/source.cs#1)]
 [!code-vb[RegistrySecurity101#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistrySecurity101/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">目前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件，表示擁有存取控制安全性的機碼，而呼叫端沒有 <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> 權限。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registrySecurity" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>設定登錄機碼中名稱/值組的值。 依據多載，從資料儲存的型別或從指定的 <see cref="T:Microsoft.Win32.RegistryValueKind" /> 判斷登錄資料型別。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">要儲存的值的名稱。</param>
        <param name="value">要儲存的資料。</param>
        <summary>設定指定的名稱/值組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`name`參數來指定您想要設定的特定值。  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要設定這個未命名的值，指定`null`或空字串 ("") 的`name`。  
  
 若要設定機碼中的值，您必須具有寫入存取開啟金鑰。 開啟索引鍵具有寫入存取權之後，您可以將該金鑰的名稱/值組的任何變更。  
  
 如果指定`name`沒有索引鍵，就會建立和相關聯的值設定為`value`。  
  
 這個多載<xref:Microsoft.Win32.RegistryKey.SetValue%2A>儲存為字串的 64 位元整數 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)。 若要儲存為 64 位元數字<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>值，會使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>指定的多載<xref:Microsoft.Win32.RegistryValueKind>。  
  
 這個多載<xref:Microsoft.Win32.RegistryKey.SetValue%2A>儲存所有的字串值，做為<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>，即使它們包含可展開環境變數參考。 若要將字串值儲存為可展開的字串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，使用<xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>指定的多載<xref:Microsoft.Win32.RegistryValueKind>。  
  
 32 位元整數以外的數字類型會儲存為字串，此方法多載。 列舉項目會儲存成包含的項目名稱的字串。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
> [!NOTE]
>  在 Windows 98 和 Windows Millennium Edition 上登錄不是 Unicode，而且並非所有的 Unicode 字元是有效的所有字碼頁。 最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。 不會擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:Microsoft.Win32.RegistryKey.SetValue%2A>時它會設定值，方法會判斷登錄資料類型。 範例會建立測試金鑰，並將不同的資料類型的值加入至索引鍵。 此範例會讀取的名稱/值組，並加以顯示到主控台，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法，以顯示對應的登錄資料類型。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 是不支援的資料型別。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 是唯讀的，無法被寫入，例如沒有以寫入權限開啟機碼。  
  
 -或-  
  
 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件表示根層級節點，且作業系統是 Windows Millennium Edition 或 Windows 98。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或修改登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 物件表示根層級節點，且作業系統是 Windows 2000、Windows XP 或 Windows Server 2003。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。 列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="name">要儲存之值的名稱。</param>
        <param name="value">要儲存的資料。</param>
        <param name="valueKind">儲存資料時要使用的登錄資料型別。</param>
        <summary>使用指定的登錄資料型別，設定登錄機碼中名稱/值組的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`name`參數來指定您想要設定的特定值。  
  
> [!NOTE]
>  登錄機碼可以有一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。 若要設定這個未命名的值，指定`null`或空字串 ("") 的`name`。  
  
 若要設定機碼中的值，您必須具有寫入存取開啟金鑰。 開啟索引鍵具有寫入存取權之後，您可以將該金鑰的名稱/值組的任何變更。  
  
 如果指定`name`沒有索引鍵，其建立，以及相關聯的值設定為`value`。  
  
> [!NOTE]
>  指定的登錄資料型別<xref:Microsoft.Win32.RegistryValueKind.Unknown>等同於使用<xref:Microsoft.Win32.RegistryKey.SetValue%2A>多載。  
  
 如果指定的型別`value`不符合指定`valueKind`，且不能是資料轉換，<xref:System.ArgumentException>就會擲回。 例如，您可以儲存<xref:System.Int64?displayProperty=nameWithType>為<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>，但前提是它的值小於最大值<xref:System.Int32?displayProperty=nameWithType>。 您無法儲存成單一字串值<xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>。  
  
> [!NOTE]
>  如果 boxed 的值會傳遞<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>，表示轉換已完成使用文化特性而異。  
  
> [!CAUTION]
>  不會公開<xref:Microsoft.Win32.RegistryKey>方式的一種惡意程式無法建立數千個無意義的子機碼或索引鍵/值組中的物件。 例如，不允許呼叫者輸入任意索引鍵或值。  
  
> [!NOTE]
>  在 Windows 98 和 Windows Millennium Edition 上登錄不是 Unicode，而且並非所有的 Unicode 字元是有效的所有字碼頁。 最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。 不會擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例會建立測試金鑰，並使用<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法來儲存數個值，指定每個值的登錄資料類型。 此範例會讀取的名稱/值組，並加以顯示到主控台，使用<xref:Microsoft.Win32.RegistryKey.GetValueKind%2A>方法，以顯示對應的登錄資料類型。  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 的型別與 <paramref name="valueKind" /> 所指定的登錄資料型別不符，因此，無法正確轉換資料。</exception>
        <exception cref="T:System.ObjectDisposedException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 是唯讀的，無法被寫入，例如沒有以寫入權限開啟機碼。  
  
 -或-  
  
 <see cref="T:Microsoft.Win32.RegistryKey" /> 物件表示根層級節點，且作業系統是 Windows Millennium Edition 或 Windows 98。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或修改登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 物件表示根層級節點，且作業系統是 Windows 2000、Windows XP 或 Windows Server 2003。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。 列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">能夠存取指定的登錄鍵，如果它是遠端的索引鍵。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="SubKeyCount">
      <MemberSignature Language="C#" Value="public int SubKeyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubKeyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubKeyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubKeyCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>擷取目前機碼中子機碼的計數。</summary>
        <value>目前機碼的子機碼數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會以遞迴方式計算名稱。 它只會傳回呼叫它的基底層級上的名稱計數。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者不具有機碼的讀取權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.IO.IOException">發生系統錯誤，例如，目前的機碼已經刪除。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取這個機碼的字串表示。</summary>
        <returns>表示機碼的字串。 如果指定的機碼是無效的 (找不到)，則會傳回 <see langword="null" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值包含指定的索引鍵和索引鍵的十六進位值的登錄路徑。 登錄路徑中包含指定之索引鍵的絕對根，一律從 1 開始的登錄中，基底的索引鍵，例如 HKEY_LOCAL_MACHINE。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">正接受存取的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <altmember cref="P:Microsoft.Win32.RegistryKey.Name" />
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ValueCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>擷取機碼中值的計數。</summary>
        <value>機碼中的名稱/值組的數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個登錄機碼有不是任何名稱相關聯的預設值。 這個未命名的值可以透過設定<xref:Microsoft.Win32.RegistryKey.SetValue%2A>方法並指定 `null`或空字串 ("") 的`name`。 如果從未設定預設值，它不是所傳回的總計數<xref:Microsoft.Win32.RegistryKey.ValueCount%2A>屬性; 一旦設定它，不過，它會一律計算。  
  
   
  
## Examples  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:Microsoft.Win32.RegistryKey>類別。  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者不具有機碼的讀取權限。</exception>
        <exception cref="T:System.ObjectDisposedException">正接受管理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已經關閉 (關閉的機碼無法存取)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">使用者沒有必要的登錄權限。</exception>
        <exception cref="T:System.IO.IOException">發生系統錯誤，例如，目前的機碼已經刪除。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">讀取指定的登錄機碼的功能。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryView View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Win32.RegistryView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As RegistryView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryView View { Microsoft::Win32::RegistryView get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來建立登錄機碼的檢視。</summary>
        <value>用來建立登錄機碼的檢視。  
  
 -或-  
  
 如果未使用檢視，則為 <see cref="F:Microsoft.Win32.RegistryView.Default" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 64 位元版本的 Windows 中，登錄的一部分會分別儲存 32 位元和 64 位元應用程式。 沒有 32 位元應用程式的檢視 32 位元和 64 位元應用程式的 64 位元檢視。  
  
 不會假設檢視一律會對應的實際檢視<xref:Microsoft.Win32.RegistryKey>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>