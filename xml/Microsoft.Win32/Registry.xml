<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Registry.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58fb289e3db8f78e3c0d8ab3e407138cd550b88bd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fb289e3db8f78e3c0d8ab3e407138cd550b88bd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.Win32.Registry">
          <source>Provides <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> objects that represent the root keys in the Windows registry, and <ph id="ph2">&lt;see langword="static" /&gt;</ph> methods to access key/value pairs.</source>
          <target state="translated">提供用於表示 Windows 登錄中根目錄機碼的 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> 物件，以及用於存取機碼/值組的 <ph id="ph2">&lt;see langword="static" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>This class provides the set of standard root keys found in the registry on machines running Windows.</source>
          <target state="translated">這個類別會提供標準的根執行 Windows 的電腦上登錄中找到的索引鍵集。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The registry is a storage facility for information about applications, users, and default system settings.</source>
          <target state="translated">登錄是儲存區設備，如需有關應用程式、 使用者與預設系統設定資訊。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>For example, applications can use the registry for storing information that needs to be preserved after the application is closed, and access that same information when the application is reloaded.</source>
          <target state="translated">例如，應用程式能夠使用登錄來儲存後關閉應用程式時，要保留所需的資訊，並重新載入應用程式時，存取相同的資訊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>For instance, you can store color preferences, screen locations, or the size of the window.</source>
          <target state="translated">比方說，您可以儲存色彩偏好設定、 螢幕位置或將視窗大小。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>You can control this data for each user by storing the information in a different location in the registry.</source>
          <target state="translated">您可以控制這項資料的每位使用者將資訊儲存在登錄中的不同位置。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The base, or root <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> instances that are exposed by the <ph id="ph2">`Registry`</ph> class delineate the basic storage mechanism for subkeys and values in the registry.</source>
          <target state="translated">基底或根<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>所公開的執行個體<ph id="ph2">`Registry`</ph>類別描述子機碼和登錄中的值的基本儲存機制。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>All keys are read-only because the registry depends on their existence.</source>
          <target state="translated">因為登錄會視其存在，所有索引鍵都是唯讀的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The keys exposed by <ph id="ph1">`Registry`</ph> are:</source>
          <target state="translated">所公開的索引鍵<ph id="ph1">`Registry`</ph>是：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores information about user preferences.</source>
          <target state="translated">儲存使用者喜好設定的相關資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores configuration information for the local machine.</source>
          <target state="translated">儲存在本機電腦的組態資訊。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores information about types (and classes) and their properties.</source>
          <target state="translated">儲存類型 （和類別） 的相關資訊和其屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores information about the default user configuration.</source>
          <target state="translated">儲存預設使用者設定的相關資訊。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores performance information for software components.</source>
          <target state="translated">儲存軟體元件的效能資訊。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores non-user-specific hardware information.</source>
          <target state="translated">儲存非使用者特定的硬體資訊。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Stores dynamic data.</source>
          <target state="translated">儲存動態資料。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Once you have identified the root key under which you want to store/retrieve information from the registry, you can use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class to add or remove subkeys, and manipulate the values for a given key.</source>
          <target state="translated">一旦您已識別您想要儲存/擷取設定資訊所在的根目錄機碼，您可以使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別來新增或移除子機碼，並操作指定的索引鍵的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Hardware devices can place information in the registry automatically using the Plug and Play interface.</source>
          <target state="translated">硬體裝置可以在使用自動隨插即用介面的登錄資訊。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Software for installing device drivers can place information in the registry by writing to standard APIs.</source>
          <target state="translated">安裝裝置驅動程式軟體可以將資訊放在登錄中，撰寫標準 api。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Static Methods for Getting and Setting Values</source>
          <target state="translated">取得和設定值的靜態方法</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>In the .NET Framework version 2.0, the <ph id="ph1">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class also contains <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph> and <ph id="ph4">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> methods for setting and retrieving values from registry keys.</source>
          <target state="translated">在.NET Framework 2.0 版中，<ph id="ph1">&lt;xref:Microsoft.Win32.Registry&gt;</ph>類別也包含<ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph>和<ph id="ph4">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>方法來設定和擷取值，從登錄機碼。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>These methods open and close registry keys each time they are used, so they do not perform as well as analogous methods in the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class, when you access a large number of values.</source>
          <target state="translated">這些方法都會開啟和關閉的登錄機碼每次使用，因此它們不會執行，以及中的類似方法<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別，當您存取大量的值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class also provides methods that allow you to set Windows access control security for registry keys, to test the data type of a value before retrieving it, and to delete keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別也提供方法，可讓您設定 Windows 登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵的存取控制安全性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>This section contains two code examples.</source>
          <target state="translated">本節包含兩個程式碼範例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The first example demonstrates root keys, and the second example demonstrates the <ph id="ph1">`static`</ph><ph id="ph2">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> methods.</source>
          <target state="translated">第一個範例示範根目錄機碼，以及第二個範例示範<ph id="ph1">`static`</ph><ph id="ph2">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph>和<ph id="ph3">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Example 1</source>
          <target state="translated">範例 1</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The following code example demonstrates how to retrieve the subkeys of the HKEY_USERS key, and print their names to the screen.</source>
          <target state="translated">下列程式碼範例示範如何擷取 HKEY_USERS 機碼的子機碼，並列印至螢幕的名稱。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>You can then use other operations in <ph id="ph1">`RegistryKey`</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">`RegistryKey`</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>Example 2</source>
          <target state="translated">範例 2</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</source>
          <target state="translated">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of <ph id="ph1">`defaultValue`</ph> when a name/value pair does not exist.</source>
          <target state="translated">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用<ph id="ph1">`defaultValue`</ph>名稱/值組並不存在。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>Defines the types (or classes) of documents and the properties associated with those types.</source>
          <target state="translated">定義文件的型別 (或類別) 以及與型別相關聯的屬性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>This field reads the Windows registry base key HKEY_CLASSES_ROOT.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_CLASSES_ROOT。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>Both conventional applications and OLE applications use data that is stored under this key.</source>
          <target state="translated">傳統的應用程式和 OLE 應用程式使用儲存在此機碼之下的資料。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>This key also provides backward compatibility with the Windows 3.1 registration database by storing information for DDE and OLE support.</source>
          <target state="translated">這個索引鍵也會提供回溯相容性 Windows 3.1 註冊資料庫所儲存的 DDE 和 OLE 的支援資訊。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>File viewers and user interface extensions store their OLE class identifiers in this key, and processing servers are registered in this key.</source>
          <target state="translated">檔案檢視器和使用者介面擴充儲存其 OLE 類別識別碼在此機碼，並處理伺服器都登錄在此機碼。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.ClassesRoot">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>Contains configuration information pertaining to the hardware that is not specific to the user.</source>
          <target state="translated">包含非針對特定使用者的硬體相關組態資訊。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_CURRENT_CONFIG。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>This member is mapped to a subkey within <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.LocalMachine&gt;</ph>.</source>
          <target state="translated">這個成員會對應至子機碼內<ph id="ph1">&lt;xref:Microsoft.Win32.Registry.LocalMachine&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>An example of using this member is an application that stores a different server name for its data depending on whether the system is attached to a network.</source>
          <target state="translated">使用這個成員的範例是儲存不同的伺服器名稱是否連接至網路的系統根據其資料的應用程式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentConfig">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>Contains information about the current user preferences.</source>
          <target state="translated">包含有關目前使用者喜好設定的資訊。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>This field reads the Windows registry base key HKEY_CURRENT_USER</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_CURRENT_USER。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>Information stored in this key includes the settings of environment variables and data about program groups, colors, printers, network connections, and application preferences.</source>
          <target state="translated">儲存在此機碼的資訊包括環境變數和程式群組、 色彩、 印表機、 網路連線及應用程式喜好設定的相關資料的設定。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>This key makes it easier to establish the current user's settings.</source>
          <target state="translated">此金鑰可讓您更容易建立目前使用者的設定。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>In this key, software vendors store the current user-specific preferences to be used within their applications.</source>
          <target state="translated">此機碼，在軟體廠商會儲存目前使用者專屬的喜好設定来在其應用程式內使用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>Microsoft, for example, creates the HKEY_CURRENT_USER\Software\Microsoft key for its applications to use, with each application creating its own subkey under the Microsoft key.</source>
          <target state="translated">Microsoft，比方說，就會建立 HKEY_CURRENT_USER\Software\Microsoft 機碼來建立自己的子機碼，Microsoft 機碼下的每個應用程式搭配使用，其應用程式。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.CurrentUser">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.DynData">
          <source>Contains dynamic registry data.</source>
          <target state="translated">包含動態登錄資料。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.DynData">
          <source>This field reads the Windows registry base key HKEY_DYN_DATA.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_DYN_DATA。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>The Windows 98/Windows Me registry supports both static data (which is stored on disk in the registry) and dynamic data (which changes frequently, such as performance statistics).</source>
          <target state="translated">Windows 98/Windows Me 登錄同時支援靜態的資料 （這儲存在登錄中的磁碟上） 和動態的資料 （這經常變更，例如效能統計資料）。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>This dynamic data area is the mechanism that allows Virtual Device Drivers (VxDs) to provide real-time data to Win32 applications that can run remotely as well as locally.</source>
          <target state="translated">這個動態的資料區域是可以從遠端同時在本機執行的 Win32 應用程式可讓虛擬裝置驅動程式 (Vxd) 來提供即時資料的機制。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>It also allows the system monitor to provide performance statistics on remote Windows 98/Windows Me systems.</source>
          <target state="translated">它也可讓系統監視器 」 來提供 Windows 98/Windows Me 在遠端系統上的效能統計資料。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>VxDs are not limited to performance data.</source>
          <target state="translated">Vxd 不限於效能資料。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>They can provide any data they want to pass from Ring 0 to Ring 3 efficiently without monopolizing the CPU.</source>
          <target state="translated">它們可以提供要傳遞從 Ring 0 環形 3 有效率而不獨佔 CPU 的任何資料。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>The registry supports dynamic data by storing a pointer to a function that returns a value (or many values).</source>
          <target state="translated">登錄支援 「 動態資料儲存傳回值 （或許多值） 的函式的指標。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>When a Registry call queries values associated with a dynamic key, that function is called to return the desired value or values.</source>
          <target state="translated">當查詢值的登錄呼叫動態索引鍵相關聯，呼叫函式會傳回所要的值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>Dynamic keys were introduced in Microsoft Windows 95 to handle dynamic Registry data.</source>
          <target state="translated">動態索引鍵是導入在 Microsoft Windows 95 中處理動態登錄資料。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>They are supported only in Windows 98/Windows Me.</source>
          <target state="translated">它們僅支援 Windows 98/Windows me。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>Note that this example can return no results, since there might not be dynamic data available, or you might not be running Windows 98/ME.</source>
          <target state="translated">請注意此範例會傳回結果，因為有可能無法動態資料可用，或者您可能不執行 Windows 98 / ME</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.DynData">
          <source>Using this key may cause an error on other systems.</source>
          <target state="translated">使用此金鑰可能會造成錯誤的其他系統。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.DynData">
          <source>The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</source>
          <target state="translated">作業系統不支援動態資料；也就是說，它不是 Windows 98、Windows 98 Second Edition 或 Windows Millennium Edition (Windows Me)。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</source>
          <target state="translated">機碼的完整登錄路徑，以有效登錄根目錄開頭 (例如 "HKEY_CURRENT_USER")。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The name of the name/value pair.</source>
          <target state="translated">名稱/值組的名稱。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The value to return if <bpt id="p1">&lt;c&gt;</bpt>valueName<ept id="p1">&lt;/c&gt;</ept> does not exist.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>valueName<ept id="p1">&lt;/c&gt;</ept> 不存在時所傳回的值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>Retrieves the value associated with the specified name, in the specified registry key.</source>
          <target state="translated">在指定的登錄機碼中，擷取與所指定名稱關聯的值。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>If the name is not found in the specified key, returns a default value that you provide, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the specified key does not exist.</source>
          <target state="translated">如果在指定的機碼中找不到該名稱，則會傳回提供的預設值；如果指定的機碼不存在，則傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the subkey specified by <ph id="ph2">&lt;paramref name="keyName" /&gt;</ph> does not exist; otherwise, the value associated with <ph id="ph3">&lt;paramref name="valueName" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph> if <ph id="ph5">&lt;paramref name="valueName" /&gt;</ph> is not found.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="keyName" /&gt;</ph> 指定的子機碼不存在，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，否則為與 <ph id="ph3">&lt;paramref name="valueName" /&gt;</ph> 關聯的值；如果找不到 <ph id="ph4">&lt;paramref name="defaultValue" /&gt;</ph>，則為 <ph id="ph5">&lt;paramref name="valueName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The string <ph id="ph1">`valueName`</ph> is not case-sensitive.</source>
          <target state="translated">字串<ph id="ph1">`valueName`</ph>不區分大小寫。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>A registry key can contain one value that is not associated with any name.</source>
          <target state="translated">登錄機碼可以包含一個不是任何名稱相關聯的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
          <target state="translated">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>To retrieve this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`valuName`</ph>.</source>
          <target state="translated">若要擷取這個未命名的值，指定<ph id="ph1">`null`</ph>或空字串 ("") 的<ph id="ph2">`valuName`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>Valid root names are HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</source>
          <target state="translated">有效的根名稱為 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" accesses key/value pairs for the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</source>
          <target state="translated">例如，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey"存取子機碼"MyTestKey 」 在 HKEY_CURRENT_USER 根目錄中的索引鍵/值組。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> method retrieves expandable string values (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>), it expands environment strings using data from the local environment.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph>方法會擷取可擴充的字串值 (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>)，它會展開環境字串使用本機的環境中的資料。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>If a value containing expandable references to environment variables has been stored as a string (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph>), rather than as an expandable string (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>), <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> does not expand it.</source>
          <target state="translated">如果值，其中包含可展開環境變數參考已儲存為字串 (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph>)，而不是可擴充的字串 (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>)，<ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph>不會展開。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>You can expand such a string after it has been retrieved by calling the <ph id="ph1">&lt;xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">已擷取透過呼叫之後，您可以展開此類字串<ph id="ph1">&lt;xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The recommended way to retrieve data from HKEY_PERFORMANCE_DATA is to use the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceCounter&gt;</ph> class rather than the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">從 HKEY_PERFORMANCE_DATA 擷取資料的建議的方式是使用<ph id="ph1">&lt;xref:System.Diagnostics.PerformanceCounter&gt;</ph>類別而非<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> methods open and close registry keys each time they are used, so they do not perform as well as the methods of the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class if you access a large number of values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.Registry.GetValue%2A&gt;</ph>和<ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>方法都會開啟與關閉的登錄機碼，其使用，因此它們不會執行每個時間，以及方法的<ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別如果存取大量的值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> 也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</source>
          <target state="translated">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of <ph id="ph1">`defaultValue`</ph> when a name/value pair does not exist.</source>
          <target state="translated">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用<ph id="ph1">`defaultValue`</ph>名稱/值組並不存在。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The user does not have the permissions required to read from the registry key.</source>
          <target state="translated">使用者沒有讀取登錄機碼所需的使用權限。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> that contains the specified value has been marked for deletion.</source>
          <target state="translated">包含指定值的 <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> 已標記為刪除。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> does not begin with a valid registry root.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> 不是以有效的登錄根目錄開頭。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>to read from the registry.</source>
          <target state="translated">若要從登錄讀取。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>to read a registry key of type REG_EXPAND_SZ.</source>
          <target state="translated">讀取REG_EXPAND_SZ類型的註冊表項。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Contains the configuration data for the local machine.</source>
          <target state="translated">包含本機電腦的組態資料。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_LOCAL_MACHINE。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source><ph id="ph1">`LocalMachine`</ph> contains five keys:</source>
          <target state="translated"><ph id="ph1">`LocalMachine`</ph> 包含五個索引鍵：</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Hardware</source>
          <target state="translated">硬體</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Describes the physical hardware in the computer, the way device drivers use that hardware, and mappings and related data that link kernel-mode drivers with user-mode code.</source>
          <target state="translated">描述在 [電腦] 的實體硬體裝置驅動程式會使用該硬體，並對應和連結的使用者模式程式碼的核心模式驅動程式的相關的資料的方式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>All data in this key is recreated each time the system is started.</source>
          <target state="translated">此機碼中的所有資料會重新都建立每次啟動系統時。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The Description subkey describes the actual computer hardware.</source>
          <target state="translated">在描述子機碼將說明實際電腦硬體。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The DeviceMap subkey contains miscellaneous data in formats specific to particular classes of drivers.</source>
          <target state="translated">DeviceMap 子機碼包含其他資料格式特有的驅動程式特定的類別。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The ResourceMap subkey describes which device drivers claim which hardware resources.</source>
          <target state="translated">ResourceMap 子機碼描述哪些裝置驅動程式會宣告硬體資源。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The Windows NT Diagnostics program (Winmsdp.exe) can report on its contents in an easy-to-read form.</source>
          <target state="translated">Windows NT 診斷程式 (Winmsdp.exe) 可以報告在其內容以容易閱讀的格式。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>SAM</source>
          <target state="translated">SAM</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The directory services database of security information for user and group accounts, and for the domains in Windows 2000 Server (SAM is the Security Account Manager, known as the directory services database).</source>
          <target state="translated">目錄服務資料庫的使用者和群組帳戶，以及在 Windows 2000 Server 網域的安全性資訊 （SAM 是安全性帳戶管理員，稱為 目錄服務資料庫）。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Security</source>
          <target state="translated">安全性</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Contains the local security policy, such as specific user rights.</source>
          <target state="translated">包含本機安全性原則，例如特定使用者權限。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>This key is used only by the Windows 2000 security subsystem.</source>
          <target state="translated">只有 Windows 2000 安全性子系統會使用此金鑰。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Software</source>
          <target state="translated">軟體</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The per-computer software database.</source>
          <target state="translated">每一電腦軟體資料庫。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>This key contains data about software installed on the local computer, along with various items of miscellaneous configuration data.</source>
          <target state="translated">此機碼包含在本機電腦，以及其他組態資料的各種項目上安裝軟體的相關資料。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>System</source>
          <target state="translated">系統</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Controls system startup, device driver loading, Windows 2000 services, and operating system behavior.</source>
          <target state="translated">控制系統啟動、 裝置驅動程式載入、 Windows 2000 服務和作業系統的行為。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>By convention, if similar data exists under <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.CurrentUser&gt;</ph> and under <ph id="ph2">&lt;xref:Microsoft.Win32.Registry.LocalMachine&gt;</ph>, the data in <ph id="ph3">&lt;xref:Microsoft.Win32.Registry.CurrentUser&gt;</ph> takes precedence.</source>
          <target state="translated">依照慣例，如果在有類似的資料<ph id="ph1">&lt;xref:Microsoft.Win32.Registry.CurrentUser&gt;</ph>下方和 <ph id="ph2">&lt;xref:Microsoft.Win32.Registry.LocalMachine&gt;</ph>中的資料<ph id="ph3">&lt;xref:Microsoft.Win32.Registry.CurrentUser&gt;</ph>優先。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>However, values in this key can also extend (rather than replace) data in Registry.LocalMachine.</source>
          <target state="translated">不過，在此機碼的值可以也延伸 （而非取代） Registry.LocalMachine 中的資料。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Also, some items (such as device driver loading entries) are meaningless if they occur outside of Registry.LocalMachine.</source>
          <target state="translated">此外，某些項目 （例如裝置驅動程式載入的項目） 會發生 Registry.LocalMachine 之外，沒有任何意義。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.LocalMachine">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Contains performance information for software components.</source>
          <target state="translated">包含軟體元件的效能資訊。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_PERFORMANCE_DATA。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Each software component creates keys for its objects, counters when it is installed, and writes counter data while it is executing.</source>
          <target state="translated">每個軟體元件建立其物件、 計數器時已安裝並執行時，這會將計數器資料的索引鍵。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>You can access this data as you would access any other registry data, using the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> functions.</source>
          <target state="translated">您可以存取此資料，如同存取其他任何登錄資料，使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>函式。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Although you use the registry to collect performance data, the data is not stored in the registry database.</source>
          <target state="translated">雖然您可以使用登錄來收集效能資料，資料不會儲存在登錄資料庫。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Instead, accessing the registry with this key causes the system to collect the data from the appropriate system object managers.</source>
          <target state="translated">相反地，存取以這個金鑰登錄會使系統從適當的系統物件管理員收集的資料。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>To obtain performance data from the local system, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> method, with the Registry.PerformanceData key.</source>
          <target state="translated">若要從本機系統取得效能資料，請使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph>撘 Registry.PerformanceData 索引鍵。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>The first call opens the key (you do not need to explicitly open the key first).</source>
          <target state="translated">第一次呼叫開啟的金鑰 （您不需要先明確地開啟索引鍵）。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>However, be sure to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.Close%2A&gt;</ph> method to close the handle to the key when you are finished obtaining performance data.</source>
          <target state="translated">不過，請務必使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.Close%2A&gt;</ph>方法，關閉的索引鍵的控制代碼，當您完成取得效能資料。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>The user cannot install or remove a software component while its performance data is in use.</source>
          <target state="translated">使用者無法安裝或移除軟體元件，其效能資料使用中時。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>To obtain performance data from a remote system, you must use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A&gt;</ph> method, with the computer name of the remote system and the Registry.PerformanceData key.</source>
          <target state="translated">若要從遠端系統取得效能資料，您必須使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A&gt;</ph>方法，並包含在遠端系統且 Registry.PerformanceData 金鑰的電腦名稱。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>This call retrieves a key representing the performance data for the remote system.</source>
          <target state="translated">此呼叫會擷取索引鍵代表的遠端系統的效能資料。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>To retrieve the data, call <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> using this key, rather than the Registry.PerformanceData key.</source>
          <target state="translated">若要擷取的資料，呼叫<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph>使用這個金鑰，而不是 Registry.PerformanceData 索引鍵。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>On Windows Server 2003, a user must at least belong to the Performance Monitor Users group in order to access subkeys of this base key.</source>
          <target state="translated">Windows Server 2003，使用者必須至少屬於 Performance Monitor Users 群組才能存取這個基底的索引鍵的子機碼。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.PerformanceData">
          <source>Note that this example can often return no results, since there might be no performance data.</source>
          <target state="translated">請注意此範例可以通常傳回任何結果，因為可能會不有任何效能資料。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:Microsoft.Win32.Registry">
          <source>Sets the value of a name/value pair in a registry key.</source>
          <target state="translated">設定登錄機碼中名稱/值組的值。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</source>
          <target state="translated">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.Win32.Registry">
          <source>The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of <ph id="ph1">`defaultValue`</ph> when a name/value pair does not exist.</source>
          <target state="translated">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用<ph id="ph1">`defaultValue`</ph>名稱/值組並不存在。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</source>
          <target state="translated">機碼的完整登錄路徑，以有效登錄根目錄開頭 (例如 "HKEY_CURRENT_USER")。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The name of the name/value pair.</source>
          <target state="translated">名稱/值組的名稱。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The value to be stored.</source>
          <target state="translated">要儲存的值。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>Sets the specified name/value pair on the specified registry key.</source>
          <target state="translated">在指定的登錄機碼上設定指定的名稱/值組。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>If the specified key does not exist, it is created.</source>
          <target state="translated">如果指定的機碼不存在，則會建立它。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">`valueName`</ph> parameter is no longer restricted to a maximum of 255 characters; however, the <ph id="ph3">`keyName`</ph> parameter continues to have the 255-character restriction.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>、<ph id="ph2">`valueName`</ph>參數不再限制為最多 255 個字元; 不過，<ph id="ph3">`keyName`</ph>參數持續有 255 個字元限制。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>Because many values can be stored in each key in the registry, you must use the <ph id="ph1">`valueName`</ph> parameter to specify the particular value you want to set.</source>
          <target state="translated">因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用<ph id="ph1">`valueName`</ph>參數來指定您想要設定的特定值。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>A registry key can contain one value that is not associated with any name.</source>
          <target state="translated">登錄機碼可以包含一個不是任何名稱相關聯的值。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
          <target state="translated">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>To set this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`valueName`</ph>.</source>
          <target state="translated">若要設定這個未命名的值，指定<ph id="ph1">`null`</ph>或空字串 ("") 的<ph id="ph2">`valueName`</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>If <ph id="ph1">`valueName`</ph> does not exist in the key, it is created and the associated value is set to <ph id="ph2">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`valueName`</ph>沒有索引鍵，就會建立和相關聯的值設定為<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>If <ph id="ph1">`keyName`</ph> specifies a subkey that does not exist, the subkey is created in the specified root.</source>
          <target state="translated">如果<ph id="ph1">`keyName`</ph>指定子機碼不存在指定的根目錄中建立子機碼。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</source>
          <target state="translated">比方說，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey 」 會建立在 HKEY_CURRENT_USER 根目錄中的子機碼"MyTestKey"。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</source>
          <target state="translated">字串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"建立"MyTestKey"、"MyTestKey\Key2，"和"MyTestKey\Key2\Key3"的巢狀子機碼。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</source>
          <target state="translated">有效的根名稱包括 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> method opens a registry key, sets the value, and closes the key each time it is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>方法，可開啟登錄機碼、 設定值，並在關閉機碼每次呼叫時。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>If you need to modify a large number of values, the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType&gt;</ph> method might provide better performance.</source>
          <target state="translated">如果您需要修改大量數值，<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType&gt;</ph>方法可能會提供更佳的效能。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>This overload of <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> stores 64-bit integers as strings (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>儲存為字串的 64 位元整數 (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>To store 64-bit numbers as <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType&gt;</ph> values, use the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph> method overload.</source>
          <target state="translated">若要儲存為 64 位元數字<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType&gt;</ph>值，會使用<ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>This overload of <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> stores all string values as <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph> objects, even if they contain expandable references to environment variables.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>儲存所有的字串值，做為<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType&gt;</ph>物件，即使它們包含可展開環境變數參考。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>To save string values as expandable strings (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>), use the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph> method overload.</source>
          <target state="translated">若要將字串值儲存為可展開的字串 (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType&gt;</ph>)，使用<ph id="ph2">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>This overload is equivalent to calling the <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph> method overload with <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個多載就相當於呼叫<ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph>方法多載<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</source>
          <target state="translated">在 Windows 98 和 Windows Millennium Edition (Windows Me)，登錄並不是 Unicode，且並非所有的 Unicode 字元是有效的所有字碼頁。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>A Unicode character that is invalid for the current code page is replaced by the best available match.</source>
          <target state="translated">最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">不會有例外狀況擲回。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</source>
          <target state="translated">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of <ph id="ph1">`defaultValue`</ph> when a name/value pair does not exist.</source>
          <target state="translated">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用<ph id="ph1">`defaultValue`</ph>名稱/值組並不存在。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> does not begin with a valid registry root.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> 不是以有效的登錄根目錄開頭。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> is longer than the maximum length allowed (255 characters).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> 超過允許的最大長度 (255 個字元)。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> is read-only, and thus cannot be written to; for example, it is a root-level node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> 為唯讀，因此無法寫入 (例如，它是根層次節點)。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>The user does not have the permissions required to create or modify registry keys.</source>
          <target state="translated">使用者沒有建立或修改登錄機碼所需的使用權限。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</source>
          <target state="translated">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</source>
          <target state="translated">機碼的完整登錄路徑，以有效登錄根目錄開頭 (例如 "HKEY_CURRENT_USER")。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The name of the name/value pair.</source>
          <target state="translated">名稱/值組的名稱。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The value to be stored.</source>
          <target state="translated">要儲存的值。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The registry data type to use when storing the data.</source>
          <target state="translated">儲存資料時要使用的登錄資料類型。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>Sets the name/value pair on the specified registry key, using the specified registry data type.</source>
          <target state="translated">使用指定的登錄資料型別，在指定的登錄機碼上設定名稱/值組。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If the specified key does not exist, it is created.</source>
          <target state="translated">如果指定的機碼不存在，則會建立它。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id="ph2">`valueName`</ph> parameter is no longer restricted to a maximum of 255 characters; however, the <ph id="ph3">`keyName`</ph> parameter continues have the 255-character restriction.</source>
          <target state="translated">從開始<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>、<ph id="ph2">`valueName`</ph>參數不再限制為最多 255 個字元; 不過，<ph id="ph3">`keyName`</ph>參數會繼續有 255 個字元限制。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>Because many values can be stored in each key in the registry, you must use the <ph id="ph1">`valueName`</ph> parameter to specify the particular value you want to set.</source>
          <target state="translated">因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用<ph id="ph1">`valueName`</ph>參數來指定您想要設定的特定值。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>A registry key can contain one value that is not associated with any name.</source>
          <target state="translated">登錄機碼可以包含一個不是任何名稱相關聯的值。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
          <target state="translated">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>To set this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`valueName`</ph>.</source>
          <target state="translated">若要設定這個未命名的值，指定<ph id="ph1">`null`</ph>或空字串 ("") 的<ph id="ph2">`valueName`</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If <ph id="ph1">`valueName`</ph> does not exist in the key, it is created and the associated value is set to <ph id="ph2">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`valueName`</ph>沒有索引鍵，就會建立和相關聯的值設定為<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If <ph id="ph1">`keyName`</ph> specifies a subkey that does not exist, the subkey is created in the specified root.</source>
          <target state="translated">如果<ph id="ph1">`keyName`</ph>指定子機碼不存在指定的根目錄中建立子機碼。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</source>
          <target state="translated">比方說，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey 」 會建立在 HKEY_CURRENT_USER 根目錄中的子機碼"MyTestKey"。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</source>
          <target state="translated">字串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"建立"MyTestKey"、"MyTestKey\Key2，"和"MyTestKey\Key2\Key3"的巢狀子機碼。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</source>
          <target state="translated">有效的根名稱包括 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph> method opens a registry key, sets the value, and closes the key each time it is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.Registry.SetValue%2A&gt;</ph>方法，可開啟登錄機碼、 設定值，並在關閉機碼每次呼叫時。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If you need to modify a large number of values, the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType&gt;</ph> method might provide better performance.</source>
          <target state="translated">如果您需要修改大量數值，<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType&gt;</ph>方法可能會提供更佳的效能。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>類別也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If the type of the specified <ph id="ph1">`value`</ph> does not match the specified <ph id="ph2">`valueKind`</ph>, and the data cannot be converted, <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">如果指定的型別<ph id="ph1">`value`</ph>不符合指定<ph id="ph2">`valueKind`</ph>，且不能是資料轉換，<ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>For example, you can store a <ph id="ph1">&lt;xref:System.Int64?displayProperty=nameWithType&gt;</ph> as a <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType&gt;</ph>, but only if its value is less than the maximum value of a <ph id="ph3">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">例如，您可以儲存<ph id="ph1">&lt;xref:System.Int64?displayProperty=nameWithType&gt;</ph>為<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType&gt;</ph>，但前提是它的值小於最大值<ph id="ph3">&lt;xref:System.Int32?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>You cannot store a single string value as a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">您無法儲存成單一字串值<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>If boxed values are passed for <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType&gt;</ph>, the conversion is done using the invariant culture.</source>
          <target state="translated">如果 boxed 的值會傳遞<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType&gt;</ph>，表示轉換已完成使用文化特性而異。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</source>
          <target state="translated">在 Windows 98 和 Windows Millennium Edition (Windows Me)，登錄並不是 Unicode，且並非所有的 Unicode 字元是有效的所有字碼頁。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>A Unicode character that is invalid for the current code page is replaced by the best available match.</source>
          <target state="translated">最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>No exception is thrown.</source>
          <target state="translated">不會有例外狀況擲回。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</source>
          <target state="translated">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of <ph id="ph1">`defaultValue`</ph> when a name/value pair does not exist.</source>
          <target state="translated">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用<ph id="ph1">`defaultValue`</ph>名稱/值組並不存在。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> does not begin with a valid registry root.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> 不是以有效的登錄根目錄開頭。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> is longer than the maximum length allowed (255 characters).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyName" /&gt;</ph> 超過允許的最大長度 (255 個字元)。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The type of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> did not match the registry data type specified by <ph id="ph2">&lt;paramref name="valueKind" /&gt;</ph>, therefore the data could not be converted properly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的型別與 <ph id="ph2">&lt;paramref name="valueKind" /&gt;</ph> 所指定的登錄資料型別不符，因此，無法正確轉換資料。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The <ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.Win32.RegistryKey" /&gt;</ph> 為唯讀，因此無法寫入 (例如，它是根層次節點，或未以寫入權限來開啟該機碼)。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>The user does not have the permissions required to create or modify registry keys.</source>
          <target state="translated">使用者沒有建立或修改登錄機碼所需的使用權限。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</source>
          <target state="translated">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.Users">
          <source>Contains information about the default user configuration.</source>
          <target state="translated">包含有關預設使用者組態的資訊。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="F:Microsoft.Win32.Registry.Users">
          <source>This field reads the Windows registry base key HKEY_USERS.</source>
          <target state="translated">這個欄位會讀取 Windows 登錄主要機碼 HKEY_USERS。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>This key contains a branch for each user of the computer.</source>
          <target state="translated">此機碼包含每個使用者的電腦的分支。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>The default configuration is supplied for new users on the local computer and for the default current user if the user has not changed preferences.</source>
          <target state="translated">預設組態會提供預設目前使用者的新使用者在本機電腦上，如果使用者沒有變更喜好設定。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>Because Windows 98/ME also supports Registry.Users, applications can access the user-specific information the same way they do under Windows 2000.</source>
          <target state="translated">因為 Windows 98 / ME 也支援 Registry.Users、 應用程式可以存取其 Windows 2000 的相同方式的使用者特定資訊。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>Each user's information is stored in a separate file, which can be stored locally or on a network server.</source>
          <target state="translated">每個使用者的資訊會儲存在個別的檔案，可以儲存在本機或網路伺服器上。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>Windows 98/ME can copy this file to the user's current system so that settings can move from one computer to another with the user.</source>
          <target state="translated">Windows 98 / ME 可以將這個檔案複製到使用者的目前系統，以便設定從一部電腦之間移動與使用者。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</source>
          <target state="translated">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method to create an instance of the particular subkey of interest.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph>方法來建立特定的子機碼感興趣的執行個體。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="F:Microsoft.Win32.Registry.Users">
          <source>You can then use other operations in <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> to manipulate that key.</source>
          <target state="translated">然後，您可以使用其他作業<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>操作該金鑰。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>