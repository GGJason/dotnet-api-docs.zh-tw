<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3285d1e778628339c22d54f5aec6bdd96ffc281" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36725554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <TypeSignature Language="F#" Value="type Registry = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b28d0-101">Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b28d0-101">Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-102">這個類別會提供標準的根執行 Windows 的電腦上登錄中找到的索引鍵集。</span><span class="sxs-lookup"><span data-stu-id="b28d0-102">This class provides the set of standard root keys found in the registry on machines running Windows.</span></span> <span data-ttu-id="b28d0-103">登錄是儲存區設備，如需有關應用程式、 使用者與預設系統設定資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-103">The registry is a storage facility for information about applications, users, and default system settings.</span></span> <span data-ttu-id="b28d0-104">例如，應用程式能夠使用登錄來儲存後關閉應用程式時，要保留所需的資訊，並重新載入應用程式時，存取相同的資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-104">For example, applications can use the registry for storing information that needs to be preserved after the application is closed, and access that same information when the application is reloaded.</span></span> <span data-ttu-id="b28d0-105">比方說，您可以儲存色彩偏好設定、 螢幕位置或將視窗大小。</span><span class="sxs-lookup"><span data-stu-id="b28d0-105">For instance, you can store color preferences, screen locations, or the size of the window.</span></span> <span data-ttu-id="b28d0-106">您可以控制這項資料的每位使用者將資訊儲存在登錄中的不同位置。</span><span class="sxs-lookup"><span data-stu-id="b28d0-106">You can control this data for each user by storing the information in a different location in the registry.</span></span>  
  
 <span data-ttu-id="b28d0-107">基底或根<xref:Microsoft.Win32.RegistryKey>所公開的執行個體`Registry`類別描述子機碼和登錄中的值的基本儲存機制。</span><span class="sxs-lookup"><span data-stu-id="b28d0-107">The base, or root <xref:Microsoft.Win32.RegistryKey> instances that are exposed by the `Registry` class delineate the basic storage mechanism for subkeys and values in the registry.</span></span> <span data-ttu-id="b28d0-108">因為登錄會視其存在，所有索引鍵都是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="b28d0-108">All keys are read-only because the registry depends on their existence.</span></span> <span data-ttu-id="b28d0-109">所公開的索引鍵`Registry`是：</span><span class="sxs-lookup"><span data-stu-id="b28d0-109">The keys exposed by `Registry` are:</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 <span data-ttu-id="b28d0-110">儲存使用者喜好設定的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-110">Stores information about user preferences.</span></span>  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 <span data-ttu-id="b28d0-111">儲存在本機電腦的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-111">Stores configuration information for the local machine.</span></span>  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 <span data-ttu-id="b28d0-112">儲存類型 （和類別） 的相關資訊和其屬性。</span><span class="sxs-lookup"><span data-stu-id="b28d0-112">Stores information about types (and classes) and their properties.</span></span>  
  
 <xref:Microsoft.Win32.Registry.Users>  
 <span data-ttu-id="b28d0-113">儲存預設使用者設定的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-113">Stores information about the default user configuration.</span></span>  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 <span data-ttu-id="b28d0-114">儲存軟體元件的效能資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-114">Stores performance information for software components.</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 <span data-ttu-id="b28d0-115">儲存非使用者特定的硬體資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-115">Stores non-user-specific hardware information.</span></span>  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 <span data-ttu-id="b28d0-116">儲存動態資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-116">Stores dynamic data.</span></span>  
  
 <span data-ttu-id="b28d0-117">一旦您已識別您想要儲存/擷取設定資訊所在的根目錄機碼，您可以使用<xref:Microsoft.Win32.RegistryKey>類別來新增或移除子機碼，並操作指定的索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-117">Once you have identified the root key under which you want to store/retrieve information from the registry, you can use the <xref:Microsoft.Win32.RegistryKey> class to add or remove subkeys, and manipulate the values for a given key.</span></span>  
  
 <span data-ttu-id="b28d0-118">硬體裝置可以在使用自動隨插即用介面的登錄資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-118">Hardware devices can place information in the registry automatically using the Plug and Play interface.</span></span> <span data-ttu-id="b28d0-119">安裝裝置驅動程式軟體可以將資訊放在登錄中，撰寫標準 api。</span><span class="sxs-lookup"><span data-stu-id="b28d0-119">Software for installing device drivers can place information in the registry by writing to standard APIs.</span></span>  
  
## <a name="static-methods-for-getting-and-setting-values"></a><span data-ttu-id="b28d0-120">取得和設定值的靜態方法</span><span class="sxs-lookup"><span data-stu-id="b28d0-120">Static Methods for Getting and Setting Values</span></span>  
 <span data-ttu-id="b28d0-121">在.NET Framework 2.0 版中，<xref:Microsoft.Win32.Registry>類別也包含`static`<xref:Microsoft.Win32.Registry.GetValue%2A>和<xref:Microsoft.Win32.Registry.SetValue%2A>方法來設定和擷取值，從登錄機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-121">In the .NET Framework version 2.0, the <xref:Microsoft.Win32.Registry> class also contains `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods for setting and retrieving values from registry keys.</span></span> <span data-ttu-id="b28d0-122">這些方法都會開啟和關閉的登錄機碼每次使用，因此它們不會執行，以及中的類似方法<xref:Microsoft.Win32.RegistryKey>類別，當您存取大量的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-122">These methods open and close registry keys each time they are used, so they do not perform as well as analogous methods in the <xref:Microsoft.Win32.RegistryKey> class, when you access a large number of values.</span></span>  
  
 <span data-ttu-id="b28d0-123"><xref:Microsoft.Win32.RegistryKey>類別也提供方法，可讓您設定 Windows 登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵的存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="b28d0-123">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to set Windows access control security for registry keys, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-124">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="b28d0-124">This section contains two code examples.</span></span> <span data-ttu-id="b28d0-125">第一個範例示範根目錄機碼，以及第二個範例示範`static`<xref:Microsoft.Win32.Registry.GetValue%2A>和<xref:Microsoft.Win32.Registry.SetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b28d0-125">The first example demonstrates root keys, and the second example demonstrates the `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods.</span></span>  
  
 <span data-ttu-id="b28d0-126">範例 1</span><span class="sxs-lookup"><span data-stu-id="b28d0-126">Example 1</span></span>  
  
 <span data-ttu-id="b28d0-127">下列程式碼範例示範如何擷取 HKEY_USERS 機碼的子機碼，並列印至螢幕的名稱。</span><span class="sxs-lookup"><span data-stu-id="b28d0-127">The following code example demonstrates how to retrieve the subkeys of the HKEY_USERS key, and print their names to the screen.</span></span> <span data-ttu-id="b28d0-128">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-128">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-129">然後，您可以使用其他作業`RegistryKey`操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-129">You can then use other operations in `RegistryKey` to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b28d0-130">範例 2</span><span class="sxs-lookup"><span data-stu-id="b28d0-130">Example 2</span></span>  
  
 <span data-ttu-id="b28d0-131">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-131">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="b28d0-132">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用`defaultValue`名稱/值組並不存在。</span><span class="sxs-lookup"><span data-stu-id="b28d0-132">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.ClassesRoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-133">Defines the types (or classes) of documents and the properties associated with those types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-133">Defines the types (or classes) of documents and the properties associated with those types.</span>
          </span>
          <span data-ttu-id="b28d0-134">This field reads the Windows registry base key HKEY_CLASSES_ROOT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-134">This field reads the Windows registry base key HKEY_CLASSES_ROOT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-135">傳統的應用程式和 OLE 應用程式使用儲存在此機碼之下的資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-135">Both conventional applications and OLE applications use data that is stored under this key.</span></span> <span data-ttu-id="b28d0-136">這個索引鍵也會提供回溯相容性 Windows 3.1 註冊資料庫所儲存的 DDE 和 OLE 的支援資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-136">This key also provides backward compatibility with the Windows 3.1 registration database by storing information for DDE and OLE support.</span></span> <span data-ttu-id="b28d0-137">檔案檢視器和使用者介面擴充儲存其 OLE 類別識別碼在此機碼，並處理伺服器都登錄在此機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-137">File viewers and user interface extensions store their OLE class identifiers in this key, and processing servers are registered in this key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-138">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-138">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-139">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-139">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-140">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-140">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-141">Contains configuration information pertaining to the hardware that is not specific to the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-141">Contains configuration information pertaining to the hardware that is not specific to the user.</span>
          </span>
          <span data-ttu-id="b28d0-142">This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-142">This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-143">這個成員會對應至子機碼內<xref:Microsoft.Win32.Registry.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="b28d0-143">This member is mapped to a subkey within <xref:Microsoft.Win32.Registry.LocalMachine>.</span></span>  
  
 <span data-ttu-id="b28d0-144">使用這個成員的範例是儲存不同的伺服器名稱是否連接至網路的系統根據其資料的應用程式。</span><span class="sxs-lookup"><span data-stu-id="b28d0-144">An example of using this member is an application that stores a different server name for its data depending on whether the system is attached to a network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-145">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-145">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-146">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-146">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-147">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-147">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberSignature Language="F#" Value=" staticval mutable CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.CurrentUser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-148">Contains information about the current user preferences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-148">Contains information about the current user preferences.</span>
          </span>
          <span data-ttu-id="b28d0-149">This field reads the Windows registry base key HKEY_CURRENT_USER</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-149">This field reads the Windows registry base key HKEY_CURRENT_USER</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-150">儲存在此機碼的資訊包括環境變數和程式群組、 色彩、 印表機、 網路連線及應用程式喜好設定的相關資料的設定。</span><span class="sxs-lookup"><span data-stu-id="b28d0-150">Information stored in this key includes the settings of environment variables and data about program groups, colors, printers, network connections, and application preferences.</span></span> <span data-ttu-id="b28d0-151">此金鑰可讓您更容易建立目前使用者的設定。</span><span class="sxs-lookup"><span data-stu-id="b28d0-151">This key makes it easier to establish the current user's settings.</span></span> <span data-ttu-id="b28d0-152">此機碼，在軟體廠商會儲存目前使用者專屬的喜好設定来在其應用程式內使用。</span><span class="sxs-lookup"><span data-stu-id="b28d0-152">In this key, software vendors store the current user-specific preferences to be used within their applications.</span></span> <span data-ttu-id="b28d0-153">Microsoft，比方說，就會建立 HKEY_CURRENT_USER\Software\Microsoft 機碼來建立自己的子機碼，Microsoft 機碼下的每個應用程式搭配使用，其應用程式。</span><span class="sxs-lookup"><span data-stu-id="b28d0-153">Microsoft, for example, creates the HKEY_CURRENT_USER\Software\Microsoft key for its applications to use, with each application creating its own subkey under the Microsoft key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-154">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-154">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-155">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-155">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-156">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-156">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberSignature Language="F#" Value=" staticval mutable DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.DynData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-157">Contains dynamic registry data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-157">Contains dynamic registry data.</span>
          </span>
          <span data-ttu-id="b28d0-158">This field reads the Windows registry base key HKEY_DYN_DATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-158">This field reads the Windows registry base key HKEY_DYN_DATA.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-159">Windows 98/Windows Me 登錄同時支援靜態的資料 （這儲存在登錄中的磁碟上） 和動態的資料 （這經常變更，例如效能統計資料）。</span><span class="sxs-lookup"><span data-stu-id="b28d0-159">The Windows 98/Windows Me registry supports both static data (which is stored on disk in the registry) and dynamic data (which changes frequently, such as performance statistics).</span></span> <span data-ttu-id="b28d0-160">這個動態的資料區域是可以從遠端同時在本機執行的 Win32 應用程式可讓虛擬裝置驅動程式 (Vxd) 來提供即時資料的機制。</span><span class="sxs-lookup"><span data-stu-id="b28d0-160">This dynamic data area is the mechanism that allows Virtual Device Drivers (VxDs) to provide real-time data to Win32 applications that can run remotely as well as locally.</span></span> <span data-ttu-id="b28d0-161">它也可讓系統監視器 」 來提供 Windows 98/Windows Me 在遠端系統上的效能統計資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-161">It also allows the system monitor to provide performance statistics on remote Windows 98/Windows Me systems.</span></span>  
  
 <span data-ttu-id="b28d0-162">Vxd 不限於效能資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-162">VxDs are not limited to performance data.</span></span> <span data-ttu-id="b28d0-163">它們可以提供要傳遞從 Ring 0 環形 3 有效率而不獨佔 CPU 的任何資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-163">They can provide any data they want to pass from Ring 0 to Ring 3 efficiently without monopolizing the CPU.</span></span> <span data-ttu-id="b28d0-164">登錄支援 「 動態資料儲存傳回值 （或許多值） 的函式的指標。</span><span class="sxs-lookup"><span data-stu-id="b28d0-164">The registry supports dynamic data by storing a pointer to a function that returns a value (or many values).</span></span> <span data-ttu-id="b28d0-165">當查詢值的登錄呼叫動態索引鍵相關聯，呼叫函式會傳回所要的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-165">When a Registry call queries values associated with a dynamic key, that function is called to return the desired value or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-166">動態索引鍵是導入在 Microsoft Windows 95 中處理動態登錄資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-166">Dynamic keys were introduced in Microsoft Windows 95 to handle dynamic Registry data.</span></span> <span data-ttu-id="b28d0-167">它們僅支援 Windows 98/Windows me。</span><span class="sxs-lookup"><span data-stu-id="b28d0-167">They are supported only in Windows 98/Windows Me.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-168">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-168">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-169">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-169">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-170">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-170">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="b28d0-171">請注意此範例會傳回結果，因為有可能無法動態資料可用，或者您可能不執行 Windows 98 / ME</span><span class="sxs-lookup"><span data-stu-id="b28d0-171">Note that this example can return no results, since there might not be dynamic data available, or you might not be running Windows 98/ME.</span></span> <span data-ttu-id="b28d0-172">使用此金鑰可能會造成錯誤的其他系統。</span><span class="sxs-lookup"><span data-stu-id="b28d0-172">Using this key may cause an error on other systems.</span></span>  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b28d0-173">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-173">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValue : string * string * obj -&gt; obj" Usage="Microsoft.Win32.Registry.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="b28d0-174">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-174">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="b28d0-175">The name of the name/value pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-175">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="b28d0-176">The value to return if <c>valueName</c> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-176">The value to return if <c>valueName</c> does not exist.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28d0-177">Retrieves the value associated with the specified name, in the specified registry key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-177">Retrieves the value associated with the specified name, in the specified registry key.</span>
          </span>
          <span data-ttu-id="b28d0-178">If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-178">If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b28d0-179">
            <see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-179">
              <see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-180">字串`valueName`不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="b28d0-180">The string `valueName` is not case-sensitive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-181">登錄機碼可以包含一個不是任何名稱相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-181">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="b28d0-182">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</span><span class="sxs-lookup"><span data-stu-id="b28d0-182">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="b28d0-183">若要擷取這個未命名的值，指定`null`或空字串 ("") 的`valuName`。</span><span class="sxs-lookup"><span data-stu-id="b28d0-183">To retrieve this unnamed value, specify either `null` or the empty string ("") for `valuName`.</span></span>  
  
 <span data-ttu-id="b28d0-184">有效的根名稱為 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="b28d0-184">Valid root names are HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span> <span data-ttu-id="b28d0-185">例如，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey"存取子機碼"MyTestKey 」 在 HKEY_CURRENT_USER 根目錄中的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="b28d0-185">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" accesses key/value pairs for the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span>  
  
 <span data-ttu-id="b28d0-186">當<xref:Microsoft.Win32.RegistryKey.GetValue%2A>方法會擷取可擴充的字串值 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，它會展開環境字串使用本機的環境中的資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-186">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="b28d0-187">如果值，其中包含可展開環境變數參考已儲存為字串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)，而不是可擴充的字串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，<xref:Microsoft.Win32.RegistryKey.GetValue%2A>不會展開。</span><span class="sxs-lookup"><span data-stu-id="b28d0-187">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="b28d0-188">已擷取透過呼叫之後，您可以展開此類字串<xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b28d0-188">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-189">從 HKEY_PERFORMANCE_DATA 擷取資料的建議的方式是使用<xref:System.Diagnostics.PerformanceCounter>類別而非<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="b28d0-189">The recommended way to retrieve data from HKEY_PERFORMANCE_DATA is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b28d0-190"><xref:Microsoft.Win32.Registry.GetValue%2A>和<xref:Microsoft.Win32.Registry.SetValue%2A>方法都會開啟與關閉的登錄機碼，其使用，因此它們不會執行每個時間，以及方法的<xref:Microsoft.Win32.RegistryKey>類別如果存取大量的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-190">The <xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods open and close registry keys each time they are used, so they do not perform as well as the methods of the <xref:Microsoft.Win32.RegistryKey> class if you access a large number of values.</span></span>  
  
 <span data-ttu-id="b28d0-191"><xref:Microsoft.Win32.RegistryKey> 也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-191"><xref:Microsoft.Win32.RegistryKey> also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-192">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-192">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="b28d0-193">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用`defaultValue`名稱/值組並不存在。</span><span class="sxs-lookup"><span data-stu-id="b28d0-193">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b28d0-194">The user does not have the permissions required to read from the registry key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-194">The user does not have the permissions required to read from the registry key.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="b28d0-195">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-195">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b28d0-196">
            <paramref name="keyName" /> does not begin with a valid registry root.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-196">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="b28d0-197">若要從登錄讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-197">to read from the registry.</span>
          </span>
          <span data-ttu-id="b28d0-198">相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-198">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="b28d0-199">讀取REG_EXPAND_SZ類型的註冊表項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-199">to read a registry key of type REG_EXPAND_SZ.</span>
          </span>
          <span data-ttu-id="b28d0-200">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-200">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.LocalMachine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-201">Contains the configuration data for the local machine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-201">Contains the configuration data for the local machine.</span>
          </span>
          <span data-ttu-id="b28d0-202">This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-202">This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-203">`LocalMachine` 包含五個索引鍵：</span><span class="sxs-lookup"><span data-stu-id="b28d0-203">`LocalMachine` contains five keys:</span></span>  
  
 <span data-ttu-id="b28d0-204">硬體</span><span class="sxs-lookup"><span data-stu-id="b28d0-204">Hardware</span></span>  
 <span data-ttu-id="b28d0-205">描述在 [電腦] 的實體硬體裝置驅動程式會使用該硬體，並對應和連結的使用者模式程式碼的核心模式驅動程式的相關的資料的方式。</span><span class="sxs-lookup"><span data-stu-id="b28d0-205">Describes the physical hardware in the computer, the way device drivers use that hardware, and mappings and related data that link kernel-mode drivers with user-mode code.</span></span> <span data-ttu-id="b28d0-206">此機碼中的所有資料會重新都建立每次啟動系統時。</span><span class="sxs-lookup"><span data-stu-id="b28d0-206">All data in this key is recreated each time the system is started.</span></span> <span data-ttu-id="b28d0-207">在描述子機碼將說明實際電腦硬體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-207">The Description subkey describes the actual computer hardware.</span></span> <span data-ttu-id="b28d0-208">DeviceMap 子機碼包含其他資料格式特有的驅動程式特定的類別。</span><span class="sxs-lookup"><span data-stu-id="b28d0-208">The DeviceMap subkey contains miscellaneous data in formats specific to particular classes of drivers.</span></span> <span data-ttu-id="b28d0-209">ResourceMap 子機碼描述哪些裝置驅動程式會宣告硬體資源。</span><span class="sxs-lookup"><span data-stu-id="b28d0-209">The ResourceMap subkey describes which device drivers claim which hardware resources.</span></span> <span data-ttu-id="b28d0-210">Windows NT 診斷程式 (Winmsdp.exe) 可以報告在其內容以容易閱讀的格式。</span><span class="sxs-lookup"><span data-stu-id="b28d0-210">The Windows NT Diagnostics program (Winmsdp.exe) can report on its contents in an easy-to-read form.</span></span>  
  
 <span data-ttu-id="b28d0-211">SAM</span><span class="sxs-lookup"><span data-stu-id="b28d0-211">SAM</span></span>  
 <span data-ttu-id="b28d0-212">目錄服務資料庫的使用者和群組帳戶，以及在 Windows 2000 Server 網域的安全性資訊 （SAM 是安全性帳戶管理員，稱為 目錄服務資料庫）。</span><span class="sxs-lookup"><span data-stu-id="b28d0-212">The directory services database of security information for user and group accounts, and for the domains in Windows 2000 Server (SAM is the Security Account Manager, known as the directory services database).</span></span>  
  
 <span data-ttu-id="b28d0-213">安全性</span><span class="sxs-lookup"><span data-stu-id="b28d0-213">Security</span></span>  
 <span data-ttu-id="b28d0-214">包含本機安全性原則，例如特定使用者權限。</span><span class="sxs-lookup"><span data-stu-id="b28d0-214">Contains the local security policy, such as specific user rights.</span></span> <span data-ttu-id="b28d0-215">只有 Windows 2000 安全性子系統會使用此金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-215">This key is used only by the Windows 2000 security subsystem.</span></span>  
  
 <span data-ttu-id="b28d0-216">軟體</span><span class="sxs-lookup"><span data-stu-id="b28d0-216">Software</span></span>  
 <span data-ttu-id="b28d0-217">每一電腦軟體資料庫。</span><span class="sxs-lookup"><span data-stu-id="b28d0-217">The per-computer software database.</span></span> <span data-ttu-id="b28d0-218">此機碼包含在本機電腦，以及其他組態資料的各種項目上安裝軟體的相關資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-218">This key contains data about software installed on the local computer, along with various items of miscellaneous configuration data.</span></span>  
  
 <span data-ttu-id="b28d0-219">系統</span><span class="sxs-lookup"><span data-stu-id="b28d0-219">System</span></span>  
 <span data-ttu-id="b28d0-220">控制系統啟動、 裝置驅動程式載入、 Windows 2000 服務和作業系統的行為。</span><span class="sxs-lookup"><span data-stu-id="b28d0-220">Controls system startup, device driver loading, Windows 2000 services, and operating system behavior.</span></span>  
  
 <span data-ttu-id="b28d0-221">依照慣例，如果在有類似的資料<xref:Microsoft.Win32.Registry.CurrentUser>下方和 <xref:Microsoft.Win32.Registry.LocalMachine>中的資料<xref:Microsoft.Win32.Registry.CurrentUser>優先。</span><span class="sxs-lookup"><span data-stu-id="b28d0-221">By convention, if similar data exists under <xref:Microsoft.Win32.Registry.CurrentUser> and under <xref:Microsoft.Win32.Registry.LocalMachine>, the data in <xref:Microsoft.Win32.Registry.CurrentUser> takes precedence.</span></span> <span data-ttu-id="b28d0-222">不過，在此機碼的值可以也延伸 （而非取代） Registry.LocalMachine 中的資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-222">However, values in this key can also extend (rather than replace) data in Registry.LocalMachine.</span></span> <span data-ttu-id="b28d0-223">此外，某些項目 （例如裝置驅動程式載入的項目） 會發生 Registry.LocalMachine 之外，沒有任何意義。</span><span class="sxs-lookup"><span data-stu-id="b28d0-223">Also, some items (such as device driver loading entries) are meaningless if they occur outside of Registry.LocalMachine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-224">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-224">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-225">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-225">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-226">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-226">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.PerformanceData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-227">Contains performance information for software components.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-227">Contains performance information for software components.</span>
          </span>
          <span data-ttu-id="b28d0-228">This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-228">This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-229">每個軟體元件建立其物件、 計數器時已安裝並執行時，這會將計數器資料的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-229">Each software component creates keys for its objects, counters when it is installed, and writes counter data while it is executing.</span></span> <span data-ttu-id="b28d0-230">您可以存取此資料，如同存取其他任何登錄資料，使用<xref:Microsoft.Win32.RegistryKey>函式。</span><span class="sxs-lookup"><span data-stu-id="b28d0-230">You can access this data as you would access any other registry data, using the <xref:Microsoft.Win32.RegistryKey> functions.</span></span>  
  
 <span data-ttu-id="b28d0-231">雖然您可以使用登錄來收集效能資料，資料不會儲存在登錄資料庫。</span><span class="sxs-lookup"><span data-stu-id="b28d0-231">Although you use the registry to collect performance data, the data is not stored in the registry database.</span></span> <span data-ttu-id="b28d0-232">相反地，存取以這個金鑰登錄會使系統從適當的系統物件管理員收集的資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-232">Instead, accessing the registry with this key causes the system to collect the data from the appropriate system object managers.</span></span>  
  
 <span data-ttu-id="b28d0-233">若要從本機系統取得效能資料，請使用<xref:Microsoft.Win32.RegistryKey.GetValue%2A>撘 Registry.PerformanceData 索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-233">To obtain performance data from the local system, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method, with the Registry.PerformanceData key.</span></span> <span data-ttu-id="b28d0-234">第一次呼叫開啟的金鑰 （您不需要先明確地開啟索引鍵）。</span><span class="sxs-lookup"><span data-stu-id="b28d0-234">The first call opens the key (you do not need to explicitly open the key first).</span></span> <span data-ttu-id="b28d0-235">不過，請務必使用<xref:Microsoft.Win32.RegistryKey.Close%2A>方法，關閉的索引鍵的控制代碼，當您完成取得效能資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-235">However, be sure to use the <xref:Microsoft.Win32.RegistryKey.Close%2A> method to close the handle to the key when you are finished obtaining performance data.</span></span> <span data-ttu-id="b28d0-236">使用者無法安裝或移除軟體元件，其效能資料使用中時。</span><span class="sxs-lookup"><span data-stu-id="b28d0-236">The user cannot install or remove a software component while its performance data is in use.</span></span>  
  
 <span data-ttu-id="b28d0-237">若要從遠端系統取得效能資料，您必須使用<xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A>方法，並包含在遠端系統且 Registry.PerformanceData 金鑰的電腦名稱。</span><span class="sxs-lookup"><span data-stu-id="b28d0-237">To obtain performance data from a remote system, you must use the <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> method, with the computer name of the remote system and the Registry.PerformanceData key.</span></span> <span data-ttu-id="b28d0-238">此呼叫會擷取索引鍵代表的遠端系統的效能資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-238">This call retrieves a key representing the performance data for the remote system.</span></span> <span data-ttu-id="b28d0-239">若要擷取的資料，呼叫<xref:Microsoft.Win32.RegistryKey.GetValue%2A>使用這個金鑰，而不是 Registry.PerformanceData 索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-239">To retrieve the data, call <xref:Microsoft.Win32.RegistryKey.GetValue%2A> using this key, rather than the Registry.PerformanceData key.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-240">Windows Server 2003，使用者必須至少屬於 Performance Monitor Users 群組才能存取這個基底的索引鍵的子機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-240">On Windows Server 2003, a user must at least belong to the Performance Monitor Users group in order to access subkeys of this base key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-241">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-241">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-242">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-242">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-243">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-243">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="b28d0-244">請注意此範例可以通常傳回任何結果，因為可能會不有任何效能資料。</span><span class="sxs-lookup"><span data-stu-id="b28d0-244">Note that this example can often return no results, since there might be no performance data.</span></span>  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-245">Sets the value of a name/value pair in a registry key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-245">Sets the value of a name/value pair in a registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b28d0-246">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-246">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="b28d0-247">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用`defaultValue`名稱/值組並不存在。</span><span class="sxs-lookup"><span data-stu-id="b28d0-247">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="b28d0-248">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-248">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="b28d0-249">The name of the name/value pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-249">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b28d0-250">The value to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-250">The value to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28d0-251">Sets the specified name/value pair on the specified registry key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-251">Sets the specified name/value pair on the specified registry key.</span>
          </span>
          <span data-ttu-id="b28d0-252">If the specified key does not exist, it is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-252">If the specified key does not exist, it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-253">從開始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、`valueName`參數不再限制為最多 255 個字元; 不過，`keyName`參數持續有 255 個字元限制。</span><span class="sxs-lookup"><span data-stu-id="b28d0-253">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues to have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="b28d0-254">因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`valueName`參數來指定您想要設定的特定值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-254">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-255">登錄機碼可以包含一個不是任何名稱相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-255">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="b28d0-256">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</span><span class="sxs-lookup"><span data-stu-id="b28d0-256">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="b28d0-257">若要設定這個未命名的值，指定`null`或空字串 ("") 的`valueName`。</span><span class="sxs-lookup"><span data-stu-id="b28d0-257">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="b28d0-258">如果`valueName`沒有索引鍵，就會建立和相關聯的值設定為`value`。</span><span class="sxs-lookup"><span data-stu-id="b28d0-258">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="b28d0-259">如果`keyName`指定子機碼不存在指定的根目錄中建立子機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-259">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="b28d0-260">比方說，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey 」 會建立在 HKEY_CURRENT_USER 根目錄中的子機碼"MyTestKey"。</span><span class="sxs-lookup"><span data-stu-id="b28d0-260">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="b28d0-261">字串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"建立"MyTestKey"、"MyTestKey\Key2，"和"MyTestKey\Key2\Key3"的巢狀子機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-261">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="b28d0-262">有效的根名稱包括 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="b28d0-262">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-263"><xref:Microsoft.Win32.Registry.SetValue%2A>方法，可開啟登錄機碼、 設定值，並在關閉機碼每次呼叫時。</span><span class="sxs-lookup"><span data-stu-id="b28d0-263">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="b28d0-264">如果您需要修改大量數值，<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>方法可能會提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="b28d0-264">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="b28d0-265"><xref:Microsoft.Win32.RegistryKey>類別也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-265">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="b28d0-266">這個多載<xref:Microsoft.Win32.Registry.SetValue%2A>儲存為字串的 64 位元整數 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="b28d0-266">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="b28d0-267">若要儲存為 64 位元數字<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>值，會使用<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="b28d0-267">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="b28d0-268">這個多載<xref:Microsoft.Win32.Registry.SetValue%2A>儲存所有的字串值，做為<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>物件，即使它們包含可展開環境變數參考。</span><span class="sxs-lookup"><span data-stu-id="b28d0-268">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> objects, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="b28d0-269">若要將字串值儲存為可展開的字串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)，使用<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="b28d0-269">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="b28d0-270">這個多載就相當於呼叫<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>方法多載<xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b28d0-270">This overload is equivalent to calling the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload with <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-271">在 Windows 98 和 Windows Millennium Edition (Windows Me)，登錄並不是 Unicode，且並非所有的 Unicode 字元是有效的所有字碼頁。</span><span class="sxs-lookup"><span data-stu-id="b28d0-271">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="b28d0-272">最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="b28d0-272">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="b28d0-273">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="b28d0-273">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-274">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-274">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="b28d0-275">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用`defaultValue`名稱/值組並不存在。</span><span class="sxs-lookup"><span data-stu-id="b28d0-275">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b28d0-276">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-276">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b28d0-277">
            <paramref name="keyName" /> does not begin with a valid registry root.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-277">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
          <span data-ttu-id="b28d0-278">-or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-278">-or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="b28d0-279">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-279">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b28d0-280">The user does not have the permissions required to create or modify registry keys.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-280">The user does not have the permissions required to create or modify registry keys.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="b28d0-281">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-281">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span>
          </span>
          <span data-ttu-id="b28d0-282">列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-282">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="static member SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="Microsoft.Win32.Registry.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="b28d0-283">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-283">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span>
          </span>
        </param>
        <param name="valueName">
          <span data-ttu-id="b28d0-284">The name of the name/value pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-284">The name of the name/value pair.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b28d0-285">The value to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-285">The value to be stored.</span>
          </span>
        </param>
        <param name="valueKind">
          <span data-ttu-id="b28d0-286">The registry data type to use when storing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-286">The registry data type to use when storing the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b28d0-287">Sets the name/value pair on the specified registry key, using the specified registry data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-287">Sets the name/value pair on the specified registry key, using the specified registry data type.</span>
          </span>
          <span data-ttu-id="b28d0-288">If the specified key does not exist, it is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-288">If the specified key does not exist, it is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-289">從開始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、`valueName`參數不再限制為最多 255 個字元; 不過，`keyName`參數會繼續有 255 個字元限制。</span><span class="sxs-lookup"><span data-stu-id="b28d0-289">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="b28d0-290">因為許多值可以儲存在登錄中的每個索引鍵中，您必須使用`valueName`參數來指定您想要設定的特定值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-290">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-291">登錄機碼可以包含一個不是任何名稱相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-291">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="b28d0-292">當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會顯示而不是名稱。</span><span class="sxs-lookup"><span data-stu-id="b28d0-292">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="b28d0-293">若要設定這個未命名的值，指定`null`或空字串 ("") 的`valueName`。</span><span class="sxs-lookup"><span data-stu-id="b28d0-293">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="b28d0-294">如果`valueName`沒有索引鍵，就會建立和相關聯的值設定為`value`。</span><span class="sxs-lookup"><span data-stu-id="b28d0-294">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="b28d0-295">如果`keyName`指定子機碼不存在指定的根目錄中建立子機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-295">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="b28d0-296">比方說，在 Visual Basic 中字串"HKEY_CURRENT_USER\MyTestKey 」 會建立在 HKEY_CURRENT_USER 根目錄中的子機碼"MyTestKey"。</span><span class="sxs-lookup"><span data-stu-id="b28d0-296">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="b28d0-297">字串"HKEY_CURRENT_USER\MyTestKey\Key2\Key3"建立"MyTestKey"、"MyTestKey\Key2，"和"MyTestKey\Key2\Key3"的巢狀子機碼。</span><span class="sxs-lookup"><span data-stu-id="b28d0-297">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="b28d0-298">有效的根名稱包括 HKEY_CURRENT_USER、 HKEY_LOCAL_MACHINE、 HKEY_CLASSES_ROOT、 HKEY_USERS、 HKEY_PERFORMANCE_DATA、 HKEY_CURRENT_CONFIG 和 HKEY_DYN_DATA。</span><span class="sxs-lookup"><span data-stu-id="b28d0-298">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-299"><xref:Microsoft.Win32.Registry.SetValue%2A>方法，可開啟登錄機碼、 設定值，並在關閉機碼每次呼叫時。</span><span class="sxs-lookup"><span data-stu-id="b28d0-299">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="b28d0-300">如果您需要修改大量數值，<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>方法可能會提供更佳的效能。</span><span class="sxs-lookup"><span data-stu-id="b28d0-300">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="b28d0-301"><xref:Microsoft.Win32.RegistryKey>類別也提供方法，可讓您將存取控制清單 (ACL) 新增至登錄機碼，然後再擷取它，測試值的資料類型，並刪除索引鍵。</span><span class="sxs-lookup"><span data-stu-id="b28d0-301">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="b28d0-302">如果指定的型別`value`不符合指定`valueKind`，且不能是資料轉換，<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="b28d0-302">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="b28d0-303">例如，您可以儲存<xref:System.Int64?displayProperty=nameWithType>為<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>，但前提是它的值小於最大值<xref:System.Int32?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b28d0-303">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b28d0-304">您無法儲存成單一字串值<xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b28d0-304">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-305">如果 boxed 的值會傳遞<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>或<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>，表示轉換已完成使用文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="b28d0-305">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b28d0-306">在 Windows 98 和 Windows Millennium Edition (Windows Me)，登錄並不是 Unicode，且並非所有的 Unicode 字元是有效的所有字碼頁。</span><span class="sxs-lookup"><span data-stu-id="b28d0-306">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="b28d0-307">最佳可用相符項目取代目前的字碼頁而言是無效的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="b28d0-307">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="b28d0-308">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="b28d0-308">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-309">下列程式碼範例會在範例機碼中建立機碼，因為它，然後擷取並顯示的值儲存數個資料類型的值。</span><span class="sxs-lookup"><span data-stu-id="b28d0-309">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="b28d0-310">此範例示範儲存和擷取的預設值 （無名） 的名稱/值組，以及使用`defaultValue`名稱/值組並不存在。</span><span class="sxs-lookup"><span data-stu-id="b28d0-310">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b28d0-311">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-311">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b28d0-312">
            <paramref name="keyName" /> does not begin with a valid registry root.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-312">
              <paramref name="keyName" /> does not begin with a valid registry root.</span>
          </span>
          <span data-ttu-id="b28d0-313">-or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-313">-or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span>
          </span>
          <span data-ttu-id="b28d0-314">-or-  The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-314">-or-  The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="b28d0-315">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-315">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="b28d0-316">The user does not have the permissions required to create or modify registry keys.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-316">The user does not have the permissions required to create or modify registry keys.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">
          <span data-ttu-id="b28d0-317">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-317">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span>
          </span>
          <span data-ttu-id="b28d0-318">列舉型別相關聯： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-318">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberSignature Language="F#" Value=" staticval mutable Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.Registry.Users" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b28d0-319">Contains information about the default user configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-319">Contains information about the default user configuration.</span>
          </span>
          <span data-ttu-id="b28d0-320">This field reads the Windows registry base key HKEY_USERS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b28d0-320">This field reads the Windows registry base key HKEY_USERS.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b28d0-321">此機碼包含每個使用者的電腦的分支。</span><span class="sxs-lookup"><span data-stu-id="b28d0-321">This key contains a branch for each user of the computer.</span></span> <span data-ttu-id="b28d0-322">預設組態會提供預設目前使用者的新使用者在本機電腦上，如果使用者沒有變更喜好設定。</span><span class="sxs-lookup"><span data-stu-id="b28d0-322">The default configuration is supplied for new users on the local computer and for the default current user if the user has not changed preferences.</span></span> <span data-ttu-id="b28d0-323">因為 Windows 98 / ME 也支援 Registry.Users、 應用程式可以存取其 Windows 2000 的相同方式的使用者特定資訊。</span><span class="sxs-lookup"><span data-stu-id="b28d0-323">Because Windows 98/ME also supports Registry.Users, applications can access the user-specific information the same way they do under Windows 2000.</span></span> <span data-ttu-id="b28d0-324">每個使用者的資訊會儲存在個別的檔案，可以儲存在本機或網路伺服器上。</span><span class="sxs-lookup"><span data-stu-id="b28d0-324">Each user's information is stored in a separate file, which can be stored locally or on a network server.</span></span> <span data-ttu-id="b28d0-325">Windows 98 / ME 可以將這個檔案複製到使用者的目前系統，以便設定從一部電腦之間移動與使用者。</span><span class="sxs-lookup"><span data-stu-id="b28d0-325">Windows 98/ME can copy this file to the user's current system so that settings can move from one computer to another with the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b28d0-326">下列範例會示範如何擷取此機碼中的子機碼，並列印其名稱，以螢幕。</span><span class="sxs-lookup"><span data-stu-id="b28d0-326">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="b28d0-327">使用<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>方法來建立特定的子機碼感興趣的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b28d0-327">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="b28d0-328">然後，您可以使用其他作業<xref:Microsoft.Win32.RegistryKey>操作該金鑰。</span><span class="sxs-lookup"><span data-stu-id="b28d0-328">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>