<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b52d0db75885f8aeda4cb24406f99463c817ee8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36698927" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dd8b9-101">含有目前安裝的相關資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dd8b9-101">Contains information about the current installation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-102">一般而言，<xref:System.Configuration.Install.InstallContext>由安裝建立可執行檔，例如 InstallUtil.exe，安裝組件。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="dd8b9-103">安裝程式會叫用<xref:System.Configuration.Install.InstallContext>建構函式，將其傳遞預設記錄檔的路徑和命令列參數。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="dd8b9-104">然後才會呼叫其<xref:System.Configuration.Install.Installer.Install%2A>， <xref:System.Configuration.Install.Installer.Commit%2A>， <xref:System.Configuration.Install.Installer.Rollback%2A>，或<xref:System.Configuration.Install.Installer.Uninstall%2A>方法，安裝程式會設定為<xref:System.Configuration.Install.Installer.Context%2A>屬性<xref:System.Configuration.Install.Installer>的執行個體<xref:System.Configuration.Install.InstallContext>。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="dd8b9-105">然後再呼叫這些方法， <xref:System.Configuration.Install.Installer> ，其中包含在安裝程式集合<xref:System.Configuration.Install.Installer.Installers%2A>屬性集<xref:System.Configuration.Install.Installer.Context%2A>每個包含安裝程式的屬性。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="dd8b9-106"><xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性包含已剖析的輸入來執行可執行安裝程式的命令列版本。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="dd8b9-107">屬性包含的資訊，例如記錄檔、 是否要顯示在主控台中，記錄資訊，以及是否要在安裝期間，顯示使用者介面的路徑。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="dd8b9-108">呼叫<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法來找出命令列參數是否`true`。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="dd8b9-109">使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd8b9-110">下列範例會示範<xref:System.Configuration.Install.InstallContext.%23ctor%2A>建構函式，<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性和<xref:System.Configuration.Install.InstallContext.LogMessage%2A>和<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法<xref:System.Configuration.Install.InstallContext>類別。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="dd8b9-111">當<xref:System.Configuration.Install.Installer.Install%2A>呼叫安裝程式的方法時，它會檢查是否有從命令列參數。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="dd8b9-112">根據它會顯示進度訊息至主控台，並將它儲存至指定的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="dd8b9-113">當沒有任何引數為空白叫用程式<xref:System.Configuration.Install.InstallContext>建立。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="dd8b9-114">時"/ 記錄檔 」 和 「 / LogtoConsole"都有指定，<xref:System.Configuration.Install.InstallContext>由傳遞個別的引數至<xref:System.Configuration.Install.InstallContext.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dd8b9-115">初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dd8b9-116">初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-117">這個多載不會建立安裝記錄檔。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="dd8b9-118">這個範例示範如何使用其中一個多載版本<xref:System.Configuration.Install.InstallContext>建構函式。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="dd8b9-119">如需可能會提供其他範例，請參閱個別的多載的主題。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="dd8b9-120">當沒有任何引數為空白叫用程式<xref:System.Configuration.Install.InstallContext>建立。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath">
          <span data-ttu-id="dd8b9-121">這個安裝的記錄檔路徑，或 <see langword="null" /> (如果不應建立記錄檔)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span>
          </span>
        </param>
        <param name="commandLine">
          <span data-ttu-id="dd8b9-122">執行安裝程式時所輸入的命令列參數，或 <see langword="null" /> (如果未輸入任何命令列參數)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd8b9-123">初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體，並且建立安裝的記錄檔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-124">如果安裝是使用[Installutil.exe （安裝程式工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)，這個建構函式建立的記錄檔位於指定路徑並剖析到命令列參數陣列之<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-124">If the installation uses [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="dd8b9-125">如果命令列參數中指定的記錄檔路徑，它用來建立檔案。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="dd8b9-126">如果在命令列中的值未指定記錄檔引數`logFilePath`使用參數。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="dd8b9-127">若要隱藏在記錄檔的建立，傳遞"/ logfile ="命令列參數。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd8b9-128">這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="dd8b9-129">時"/ 記錄檔 」 和 「 / LogtoConsole"都有指定，<xref:System.Configuration.Install.InstallContext>由傳遞個別的引數至<xref:System.Configuration.Install.InstallContext.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="dd8b9-130">
            <para>將您的預設記錄檔路徑中<paramref name="logFilePath" />時呼叫這個建構函式的參數。這是 where 建立記錄檔時，除非執行安裝可執行檔時，會使用 /logfile 命令列參數。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-130">
              <para>Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor. This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">
          <span data-ttu-id="dd8b9-131">要檢查的命令列參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-131">The name of the command-line parameter to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd8b9-132">判斷指定的命令列參數是否為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-132">Determines whether the specified command-line parameter is <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd8b9-133">如果指定的參數設定為「yes」、「true」、「1」或空字串 ("")，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-133">
              <see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-134">這個方法會存取<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性，其中包含的命令列參數，以判斷指定的參數是否為剖析的版本`true`。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-134">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd8b9-135">這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-135">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="dd8b9-136">它會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-136">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="dd8b9-137">如果`yes`，它接著會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-137">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="dd8b9-138">要寫入的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-138">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd8b9-139">將訊息寫入主控台和安裝的記錄檔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-139">Writes a message to the console and to the log file for the installation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-140">安裝程式可以呼叫這個方法來寫入記錄檔中的 [進度] 或其他狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-140">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="dd8b9-141">安裝程式命令列參數指定應該顯示使用者介面，如果應該顯示訊息方塊或進行查詢，除了呼叫<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-141">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="dd8b9-142">文字寫入至記錄檔將無法由使用者所看見，除非 InstallUtil.exe 用來執行安裝和 「 / LogToConsole = true 」 命令列中指定。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-142">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd8b9-143">這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-143">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="dd8b9-144">它會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-144">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="dd8b9-145">如果`yes`，它接著會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-145">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dd8b9-146">取得當執行 InstallUtil.exe 時所輸入的命令列參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-146">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dd8b9-147">
            <see cref="T:System.Collections.Specialized.StringDictionary" />，表示當執行安裝可執行檔時所輸入的命令列參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-147">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd8b9-148">當新<xref:System.Configuration.Install.InstallContext>建立時，命令列參數會剖析成<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-148">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="dd8b9-149">索引鍵與參數的值均為字串。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-149">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd8b9-150">這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-150">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="dd8b9-151">此範例會擷取<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性來查看使用者若尚未輸入任何命令列引數。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-151">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="dd8b9-152">它也會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-152">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="dd8b9-153">如果`yes`，它接著會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。</span><span class="sxs-lookup"><span data-stu-id="dd8b9-153">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="dd8b9-154">陣列，含有命令列參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-154">An array containing the command-line parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dd8b9-155">剖析命令列參數為字串字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-155">Parses the command-line parameters into a string dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dd8b9-156">
            <see cref="T:System.Collections.Specialized.StringDictionary" />，含有剖析的命令列參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dd8b9-156">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>