<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="490aa1005f294d7655c6ef034b3a59f0c10bc3a4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37689890" /></Metadata><TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>含有目前安裝的相關資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，<xref:System.Configuration.Install.InstallContext>由安裝可執行檔，例如 InstallUtil.exe，安裝組件。 安裝程式會叫用<xref:System.Configuration.Install.InstallContext>建構函式，並傳遞它的預設記錄檔路徑和命令列參數。  
  
 之前呼叫其<xref:System.Configuration.Install.Installer.Install%2A>， <xref:System.Configuration.Install.Installer.Commit%2A>， <xref:System.Configuration.Install.Installer.Rollback%2A>，或<xref:System.Configuration.Install.Installer.Uninstall%2A>方法，安裝程式設定<xref:System.Configuration.Install.Installer.Context%2A>屬性<xref:System.Configuration.Install.Installer>執行個體<xref:System.Configuration.Install.InstallContext>。 在呼叫這些方法中前, <xref:System.Configuration.Install.Installer> ，包含安裝程式集合中的<xref:System.Configuration.Install.Installer.Installers%2A>屬性集<xref:System.Configuration.Install.Installer.Context%2A>屬性的每個包含的安裝程式。  
  
 <xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性包含剖析的命令列輸入來執行可執行檔安裝的版本。 屬性包含下列資訊，例如記錄檔、 是否要在主控台中，顯示記錄檔資訊，以及是否要在安裝期間會顯示使用者介面的路徑。 呼叫<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法來找出命令列參數是否`true`。  
  
 使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。  
  
   
  
## Examples  
 下列範例示範<xref:System.Configuration.Install.InstallContext.%23ctor%2A>建構函式<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性和<xref:System.Configuration.Install.InstallContext.LogMessage%2A>並<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法<xref:System.Configuration.Install.InstallContext>類別。  
  
 當<xref:System.Configuration.Install.Installer.Install%2A>呼叫安裝程式的方法時，它會檢查從命令列參數。 根據，它會顯示主控台上的進度訊息，並也將它儲存到指定的記錄檔。  
  
 程式叫用時不含任何引數空白<xref:System.Configuration.Install.InstallContext>建立。 當"/ 記錄檔"和"/ LogtoConsole"都有指定，<xref:System.Configuration.Install.InstallContext>由傳遞個別的引數至<xref:System.Configuration.Install.InstallContext.%23ctor%2A>。  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個多載不會建立安裝記錄檔。  
  
   
  
## Examples  
  
> [!NOTE]
>  此範例示範如何使用其中一個多載版本<xref:System.Configuration.Install.InstallContext>建構函式。 如需可能會提供其他範例，請參閱個別的多載的主題。  
  
 程式叫用時不含任何引數空白<xref:System.Configuration.Install.InstallContext>建立。  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath">這個安裝的記錄檔路徑，或 <see langword="null" /> (如果不應建立記錄檔)。</param>
        <param name="commandLine">執行安裝程式時所輸入的命令列參數，或 <see langword="null" /> (如果未輸入任何命令列參數)。</param>
        <summary>初始化 <see cref="T:System.Configuration.Install.InstallContext" /> 類別的新執行個體，並且建立安裝的記錄檔。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果的安裝會使用[Installutil.exe （安裝程式工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)，這個建構函式建立的記錄檔位於指定路徑，並剖析命令列參數的陣列<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性。 如果命令列參數中指定的記錄檔路徑，它用來建立檔案。 如果在 命令列的值未指定記錄檔引數，則`logFilePath`參數使用。 若要隱藏記錄檔的建立，請傳遞"/ 記錄檔 ="命令列參數。  
  
   
  
## Examples  
 這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。  
  
 當"/ 記錄檔"和"/ LogtoConsole"都有指定，<xref:System.Configuration.Install.InstallContext>由傳遞個別的引數至<xref:System.Configuration.Install.InstallContext.%23ctor%2A>。  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>傳遞您的預設記錄檔路徑，在<paramref name="logFilePath" />時呼叫這個建構函式的參數。這正是建立記錄檔時，除非執行安裝可執行檔時，會使用 /logfile 命令列參數。</para></block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">要檢查的命令列參數名稱。</param>
        <summary>判斷指定的命令列參數是否為 <see langword="true" />。</summary>
        <returns>如果指定的參數設定為「yes」、「true」、「1」或空字串 ("")，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會存取<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性，其中包含的命令列參數，以判斷指定的參數是剖析的版本`true`。  
  
   
  
## Examples  
 這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。  
  
 它會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。 如果`yes`，然後它會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">要寫入的訊息。</param>
        <summary>將訊息寫入主控台和安裝的記錄檔。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 安裝程式可以呼叫這個方法來寫入記錄檔中的 [進度] 或其他狀態資訊。 安裝程式命令列參數指定應該顯示使用者介面，如果應該顯示訊息方塊，或進行查詢，除了呼叫<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法。 寫入記錄檔的文字不會看到使用者使用 InstallUtil.exe 來執行安裝，除非和"/ LogToConsole = true"在命令列指定。  
  
   
  
## Examples  
 這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。  
  
 它會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。 如果`yes`，然後它會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得當執行 InstallUtil.exe 時所輸入的命令列參數。</summary>
        <value><see cref="T:System.Collections.Specialized.StringDictionary" />，表示當執行安裝可執行檔時所輸入的命令列參數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當新<xref:System.Configuration.Install.InstallContext>建立時，命令列參數會被剖析為<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性。 索引鍵和參數的值是字串。  
  
   
  
## Examples  
 這個範例是摘錄自類別概觀中的範例<xref:System.Configuration.Install.InstallContext>類別。  
  
 此範例會擷取<xref:System.Configuration.Install.InstallContext.Parameters%2A>屬性，以查看是否使用者尚未輸入任何命令列引數。 它也會使用<xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>方法，以找出是否`LogtoConsole`參數已設定。 如果`yes`，然後它會使用<xref:System.Configuration.Install.InstallContext.LogMessage%2A>方法，將寫入安裝記錄檔和主控台的狀態訊息。  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">陣列，含有命令列參數。</param>
        <summary>剖析命令列參數為字串字典。</summary>
        <returns><see cref="T:System.Collections.Specialized.StringDictionary" />，含有剖析的命令列參數。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>