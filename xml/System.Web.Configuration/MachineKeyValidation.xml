<Type Name="MachineKeyValidation" FullName="System.Web.Configuration.MachineKeyValidation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b436bfe370b42d76af8ac04dba448d68a1c309a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36403541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MachineKeyValidation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeyValidation extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeyValidation" />
  <TypeSignature Language="VB.NET" Value="Public Enum MachineKeyValidation" />
  <TypeSignature Language="C++ CLI" Value="public enum class MachineKeyValidation" />
  <TypeSignature Language="F#" Value="type MachineKeyValidation = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>設定 ASP.NET 用於表單驗證及驗證檢視狀態資料，以及用於跨處理序工作階段狀態識別的雜湊演算法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 會使用與協助偵測是否已遭使用表單驗證] 或 [檢視狀態資料的雜湊式訊息驗證碼 (HMAC)。 建立檢視狀態的內容，而且 HMAC 會檢查後續的要求時，會產生 HMAC。 HMAC 有助於決定是否有人變更過的伺服器和用戶端之間傳送資料，但該資料可以讀取的任何人，除非它也會加密透過網際網路傳送的 ASP.NET。 根據預設，會檢視狀態驗證，但未加密。 如需詳細資訊，請參閱 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 與 <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>。  
  
 <xref:System.Web.Configuration.MachineKeyValidation>列舉型別可讓您指定的演算法，ASP.NET 會使用建立 HMAC。 預設值是 HMACSHA256。 ASP.NET 會使用值<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>與產生的 HMAC 選取之演算法的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.Configuration.MachineKeyValidation>列舉型別。 在範例中，`configSection`的執行個體<xref:System.Web.Configuration.MachineKeySection>。這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Configuration.MachineKeySection>類別。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#5)]
 [!code-vb[System.Web.Configuration.MachineKeySection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
    <altmember cref="P:System.Web.Configuration.MachineKeySection.Validation" />
    <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
    <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
    <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
  </Docs>
  <Members>
    <Member MemberName="AES">
      <MemberSignature Language="C#" Value="AES" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation AES = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.AES" />
      <MemberSignature Language="VB.NET" Value="AES" />
      <MemberSignature Language="C++ CLI" Value="AES" />
      <MemberSignature Language="F#" Value="AES = 3" Usage="System.Web.Configuration.MachineKeyValidation.AES" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 <see langword="AES" /> (Rijndael) 加密演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要加密 Web 應用程式中的檢視狀態，請選擇此選項。 如果您選擇此選項，<xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A>屬性會用來加密和解密，而`HMACSHA1`雜湊演算法會使用<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>屬性進行驗證。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation Custom = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 7" Usage="System.Web.Configuration.MachineKeyValidation.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用自訂雜湊演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以在任何衍生自的類別中實作自訂的雜湊演算法<xref:System.Security.Cryptography.KeyedHashAlgorithm>。  
  
 自訂演算法通常以宣告方式指定在驗證屬性的格式中的項目， `alg:` *algorithm_name*。 如需如何在程式碼中指定的自訂演算法的資訊，請參閱<xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA256">
      <MemberSignature Language="C#" Value="HMACSHA256" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA256 = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA256" />
      <MemberSignature Language="VB.NET" Value="HMACSHA256" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA256" />
      <MemberSignature Language="F#" Value="HMACSHA256 = 4" Usage="System.Web.Configuration.MachineKeyValidation.HMACSHA256" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 <see langword="HMACSHA256" /> 雜湊演算法。  這是預設值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA256` 是產生 256 位元雜湊程式碼的 SHA2 雜湊演算法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA384">
      <MemberSignature Language="C#" Value="HMACSHA384" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA384 = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA384" />
      <MemberSignature Language="VB.NET" Value="HMACSHA384" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA384" />
      <MemberSignature Language="F#" Value="HMACSHA384 = 5" Usage="System.Web.Configuration.MachineKeyValidation.HMACSHA384" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 <see langword="HMACSHA384" /> 雜湊演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA384` 是產生 384 位元雜湊程式碼的 SHA2 雜湊演算法。 此選項僅適用於需要更強的安全性比所提供的應用程式`HMACSHA256`演算法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="HMACSHA512">
      <MemberSignature Language="C#" Value="HMACSHA512" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation HMACSHA512 = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.HMACSHA512" />
      <MemberSignature Language="VB.NET" Value="HMACSHA512" />
      <MemberSignature Language="C++ CLI" Value="HMACSHA512" />
      <MemberSignature Language="F#" Value="HMACSHA512 = 6" Usage="System.Web.Configuration.MachineKeyValidation.HMACSHA512" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 <see langword="HMACSHA512" /> 雜湊演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA512` 是會產生 512 位元雜湊程式碼的 SHA2 雜湊演算法。 此選項僅適用於需要更強的安全性比所提供的應用程式`HMACSHA384`演算法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="MD5" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation MD5 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.MD5" />
      <MemberSignature Language="VB.NET" Value="MD5" />
      <MemberSignature Language="C++ CLI" Value="MD5" />
      <MemberSignature Language="F#" Value="MD5 = 0" Usage="System.Web.Configuration.MachineKeyValidation.MD5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用訊息摘要 5 (<see langword="MD5" />) 雜湊演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MD5` 是產生 128 位元雜湊值的雜湊演算法。 這個選項就會包含舊版用途，並應該與較早版本的 ASP.NET 相容性必要時選取。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="SHA1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation SHA1 = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.SHA1" />
      <MemberSignature Language="VB.NET" Value="SHA1" />
      <MemberSignature Language="C++ CLI" Value="SHA1" />
      <MemberSignature Language="F#" Value="SHA1 = 1" Usage="System.Web.Configuration.MachineKeyValidation.SHA1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 <see langword="HMACSHA1" /> 雜湊演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HMACSHA1` 是產生 160 位元雜湊值的雜湊演算法。 這個選項就會包含舊版用途，並應該與較早版本的 ASP.NET 相容性必要時選取。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="TripleDES">
      <MemberSignature Language="C#" Value="TripleDES" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.MachineKeyValidation TripleDES = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.MachineKeyValidation.TripleDES" />
      <MemberSignature Language="VB.NET" Value="TripleDES" />
      <MemberSignature Language="C++ CLI" Value="TripleDES" />
      <MemberSignature Language="F#" Value="TripleDES = 2" Usage="System.Web.Configuration.MachineKeyValidation.TripleDES" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定 ASP.NET 使用 TripleDES (<see langword="3DES" />) 加密演算法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TripleDES 是您指定為加密檢視狀態時，才會使用的加密演算法。 這個選項就會包含舊版用途，並應該與較早版本的 ASP.NET 相容性必要時選取。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
  </Members>
</Type>