<Type Name="Compensate" FullName="System.Activities.Statements.Compensate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50ddedef15a2d955a72099157c2490ea0ada45c9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36719561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Compensate : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Compensate extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Compensate" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Compensate&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Compensate sealed : System::Activities::NativeActivity" />
  <TypeSignature Language="F#" Value="type Compensate = class&#xA;    inherit NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e562f-101">用於明確叫用 <see cref="T:System.Activities.Statements.CompensableActivity" /> 補償處理常式的活動。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e562f-101">An activity used to explicitly invoke the compensation handler of a <see cref="T:System.Activities.Statements.CompensableActivity" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Compensate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Compensate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Compensate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e562f-102">初始化 <see cref="T:System.Activities.Statements.Compensate" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e562f-102">Initializes a new instance of the <see cref="T:System.Activities.Statements.Compensate" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Compensate.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.NativeActivityMetadata -&gt; unit" Usage="compensate.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Compensate.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Activities.NativeActivityContext -&gt; unit" Usage="compensate.Cancel context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Compensate.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="compensate.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;System.Activities.Statements.CompensationToken&gt; Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;class System.Activities.Statements.CompensationToken&gt; Target" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Compensate.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As InArgument(Of CompensationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;System::Activities::Statements::CompensationToken ^&gt; ^ Target { System::Activities::InArgument&lt;System::Activities::Statements::CompensationToken ^&gt; ^ get(); void set(System::Activities::InArgument&lt;System::Activities::Statements::CompensationToken ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Activities.InArgument&lt;System.Activities.Statements.CompensationToken&gt; with get, set" Usage="System.Activities.Statements.Compensate.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.Activities.Statements.CompensationToken&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e562f-103">取得或設定 <see cref="T:System.Activities.InArgument`1" />，其中包含此 <see cref="T:System.Activities.Statements.CompensationToken" /> 活動的 <see cref="T:System.Activities.Statements.Compensate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e562f-103">Gets or sets the <see cref="T:System.Activities.InArgument`1" /> that contains the <see cref="T:System.Activities.Statements.CompensationToken" /> for this <see cref="T:System.Activities.Statements.Compensate" /> activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e562f-104">
            <see cref="T:System.Activities.InArgument`1" />，其中包含此 <see cref="T:System.Activities.Statements.CompensationToken" /> 的<see cref="T:System.Activities.Statements.Compensate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e562f-104">A <see cref="T:System.Activities.InArgument`1" /> that contains the <see cref="T:System.Activities.Statements.CompensationToken" /> for this <see cref="T:System.Activities.Statements.Compensate" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e562f-105">當指定 <xref:System.Activities.Statements.Compensate.Target%2A> 的 <xref:System.Activities.Statements.CompensationToken> 時，<xref:System.Activities.Statements.Compensate> 活動會明確叫用傳回 <xref:System.Activities.Statements.CompensableActivity> 的 <xref:System.Activities.Statements.CompensationToken> 補償處理常式。</span><span class="sxs-lookup"><span data-stu-id="e562f-105">When the <xref:System.Activities.Statements.Compensate.Target%2A> of the <xref:System.Activities.Statements.CompensationToken> is specified, the <xref:System.Activities.Statements.Compensate> activity explicitly invokes the compensation handler of <xref:System.Activities.Statements.CompensableActivity>, which returns the <xref:System.Activities.Statements.CompensationToken>.</span></span> <span data-ttu-id="e562f-106">當未指定 <xref:System.Activities.Statements.Compensate.Target%2A> 的 <xref:System.Activities.Statements.CompensationToken> 時，<xref:System.Activities.Statements.Compensate> 活動會以成功完成的反向順序來叫用任何 <xref:System.Activities.Statements.CompensableActivity> 子活動的預設補償。</span><span class="sxs-lookup"><span data-stu-id="e562f-106">When the <xref:System.Activities.Statements.Compensate.Target%2A> of the <xref:System.Activities.Statements.CompensationToken> is not specified, the <xref:System.Activities.Statements.Compensate> activity invokes the default compensation for any child <xref:System.Activities.Statements.CompensableActivity> activities in the reverse order of successful completion.</span></span> <span data-ttu-id="e562f-107">如果 <xref:System.InvalidOperationException> 參考先前已確認或補償的 <xref:System.Activities.Statements.Compensate.Target%2A> 時，就會擲回 <xref:System.Activities.Statements.CompensableActivity>。</span><span class="sxs-lookup"><span data-stu-id="e562f-107">An <xref:System.InvalidOperationException> is thrown if the <xref:System.Activities.Statements.Compensate.Target%2A> refers to a <xref:System.Activities.Statements.CompensableActivity> that was previously confirmed or compensated.</span></span>  
  
 <span data-ttu-id="e562f-108">在執行階段時，這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="e562f-108">This property is read-only at runtime.</span></span> <span data-ttu-id="e562f-109">如果在執行階段設定值，則會引發 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e562f-109">If the value is set at runtime, an <xref:System.InvalidOperationException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>