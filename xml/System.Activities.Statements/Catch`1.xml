<Type Name="Catch&lt;TException&gt;" FullName="System.Activities.Statements.Catch&lt;TException&gt;">
  <TypeSignature Language="C#" Value="public sealed class Catch&lt;TException&gt; : System.Activities.Statements.Catch where TException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Catch`1&lt;(class System.Exception) TException&gt; extends System.Activities.Statements.Catch" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Catch`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Catch(Of TException)&#xA;Inherits Catch" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TException&gt;&#xA; where TException : Exceptionpublic ref class Catch sealed : System::Activities::Statements::Catch" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TException">
      <Constraints>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.Statements.Catch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TException"><span data-ttu-id="c5953-101"><see cref="T:System.Activities.Statements.Catch`1" /> 區塊正在處理的例外狀況型別。</span><span class="sxs-lookup"><span data-stu-id="c5953-101">The type of exception that the <see cref="T:System.Activities.Statements.Catch`1" /> block is handling.</span></span></typeparam>
    <summary><span data-ttu-id="c5953-102">包含在 <see cref="T:System.Activities.Statements.TryCatchFinally" /> 活動的對應 Try 區塊中引發例外狀況之後要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="c5953-102">Contains the actions to be executed after an exception is raised in the corresponding Try block of a <see cref="T:System.Activities.Statements.TryCatchFinally" /> activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5953-103">在設計師中，一次放<xref:System.Activities.Statements.Catch>無法重新排列活動設計工具中。</span><span class="sxs-lookup"><span data-stu-id="c5953-103">Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.</span></span>  <span data-ttu-id="c5953-104">若要重新排序的集合<xref:System.Activities.Statements.Catch>活動，請刪除和重新加入它們依正確順序，或使用工作流程 xaml （程式碼） 檢視。</span><span class="sxs-lookup"><span data-stu-id="c5953-104">To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5953-105">下列程式碼範例將示範如何建立 <xref:System.Activities.Statements.Catch%601> 活動。</span><span class="sxs-lookup"><span data-stu-id="c5953-105">The following code sample demonstrates creating a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="c5953-106">這個範例取自[錯誤處理流程圖活動使用 TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)範例。</span><span class="sxs-lookup"><span data-stu-id="c5953-106">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Catch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Catch`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Catch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c5953-107">建立 <see cref="T:System.Activities.Statements.Catch`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c5953-107">Creates a new instance of the <see cref="T:System.Activities.Statements.Catch`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5953-108">下列程式碼範例將示範如何建立 <xref:System.Activities.Statements.Catch%601> 活動。</span><span class="sxs-lookup"><span data-stu-id="c5953-108">The following code sample demonstrates creating a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="c5953-109">這個範例取自[錯誤處理流程圖活動使用 TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)範例。</span><span class="sxs-lookup"><span data-stu-id="c5953-109">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;TException&gt; Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!TException&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As ActivityAction(Of TException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;TException&gt; ^ Action { System::Activities::ActivityAction&lt;TException&gt; ^ get(); void set(System::Activities::ActivityAction&lt;TException&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;TException&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5953-110">已攔截之例外狀況的處理常式。</span><span class="sxs-lookup"><span data-stu-id="c5953-110">The handler for the exception being caught.</span></span></summary>
        <value><span data-ttu-id="c5953-111">活動動作。</span><span class="sxs-lookup"><span data-stu-id="c5953-111">The activity action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5953-112">例外狀況處理常式是由 <xref:System.Activities.ActivityAction%601> 物件表示。</span><span class="sxs-lookup"><span data-stu-id="c5953-112">The exception handler is represented by a <xref:System.Activities.ActivityAction%601> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5953-113">下列程式碼範例將示範如何指派 <xref:System.Activities.Statements.Catch%601> 活動的 Action 屬性。</span><span class="sxs-lookup"><span data-stu-id="c5953-113">The following code sample demonstrates assigning the Action property of a <xref:System.Activities.Statements.Catch%601> activity.</span></span> <span data-ttu-id="c5953-114">這個範例取自[錯誤處理流程圖活動使用 TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)範例。</span><span class="sxs-lookup"><span data-stu-id="c5953-114">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionType">
      <MemberSignature Language="C#" Value="public override Type ExceptionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.ExceptionType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ExceptionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ExceptionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c5953-115"><see cref="T:System.Activities.Statements.Catch" /> 區塊正在處理的例外狀況型別。</span><span class="sxs-lookup"><span data-stu-id="c5953-115">The type of exception that the <see cref="T:System.Activities.Statements.Catch" /> block is handling.</span></span></summary>
        <value><span data-ttu-id="c5953-116">例外狀況型別。</span><span class="sxs-lookup"><span data-stu-id="c5953-116">The exception type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>