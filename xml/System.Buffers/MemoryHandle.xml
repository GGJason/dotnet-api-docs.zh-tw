<Type Name="MemoryHandle" FullName="System.Buffers.MemoryHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03d7ad78d57eda718181692b02f4932bdf23cbd2" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52196008" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct MemoryHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MemoryHandle extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.MemoryHandle" />
  <TypeSignature Language="VB.NET" Value="Public Structure MemoryHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class MemoryHandle : IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryHandle = struct&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="aa669-101">提供記憶體區塊的記憶體控制代碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa669-101">Provides a memory handle for a block of memory.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="aa669-102">A`MemoryHandle`執行個體表示的控制代碼，以固定的記憶體區塊。</span><span class="sxs-lookup"><span data-stu-id="aa669-102">A `MemoryHandle` instance represents a handle to a pinned block of memory.</span></span> <span data-ttu-id="aa669-103">它會傳回下列方法：</span><span class="sxs-lookup"><span data-stu-id="aa669-103">It is returned by the following methods:</span></span>

- <span data-ttu-id="aa669-104"><xref:System.Buffers.IPinnable.Pin%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="aa669-104"><xref:System.Buffers.IPinnable.Pin%2A?displayProperty=nameWithType>.</span></span>
- <xref:System.Memory%601.Pin%2A?displayProperty=nameWithType>
- <span data-ttu-id="aa669-105"><xref:System.ReadOnlyMemory%601.Pin%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="aa669-105"><xref:System.ReadOnlyMemory%601.Pin%2A?displayProperty=nameWithType>.</span></span>
- <xref:System.Buffers.MemoryManager%601.Pin%2A?displayProperty=<nameWithType>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryHandle (void* pointer, System.Runtime.InteropServices.GCHandle handle = null, System.Buffers.IPinnable pinnable = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(void* pointer, valuetype System.Runtime.InteropServices.GCHandle handle, class System.Buffers.IPinnable pinnable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.MemoryHandle.#ctor(System.Void*,System.Runtime.InteropServices.GCHandle,System.Buffers.IPinnable)" />
      <MemberSignature Language="F#" Value="new System.Buffers.MemoryHandle : nativeptr&lt;unit&gt; * System.Runtime.InteropServices.GCHandle * System.Buffers.IPinnable -&gt; System.Buffers.MemoryHandle" Usage="new System.Buffers.MemoryHandle (pointer, handle, pinnable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pointer" Type="System.Void*" />
        <Parameter Name="handle" Type="System.Runtime.InteropServices.GCHandle" />
        <Parameter Name="pinnable" Type="System.Buffers.IPinnable" />
      </Parameters>
      <Docs>
        <param name="pointer">
          <span data-ttu-id="aa669-106">記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-106">A pointer to memory..</span>
          </span>
        </param>
        <param name="handle">
          <span data-ttu-id="aa669-107">用來釘選陣列緩衝區的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-107">A handle used to pin array buffers.</span>
          </span>
        </param>
        <param name="pinnable">
          <span data-ttu-id="aa669-108">手動受控物件的參考；如果沒有記憶體管理員，則為 <see langword="default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-108">A reference to a manually managed object, or <see langword="default" /> if there is no memory manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa669-109">建立記憶體區塊的新記憶體控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-109">Creates a new memory handle for the block of memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.MemoryHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa669-110">釋放釘選的控制代碼並釋出 <see cref="T:System.Buffers.IPinnable" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-110">Frees the pinned handle and releases the <see cref="T:System.Buffers.IPinnable" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="public void* Pointer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance void* Pointer" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.MemoryHandle.Pointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property void* Pointer { void* get(); };" />
      <MemberSignature Language="F#" Value="member this.Pointer : nativeptr&lt;unit&gt;" Usage="System.Buffers.MemoryHandle.Pointer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void*</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa669-111">傳回記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-111">Returns a pointer to the memory block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa669-112">記憶體區塊指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-112">A pointer to the memory block.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="aa669-113">記憶體會假設為固定，因此不會變更其位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa669-113">The memory is assumed to be pinned so that its address won't change.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>