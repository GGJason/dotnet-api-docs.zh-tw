<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="924af3bcdfd42b06e9a7eaf3e33460653c01b53b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359612" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">資源集區中的物件類型。</typeparam>
    <summary>提供可以重複使用類型 <see cref="T:T[]" /> 執行個體的資源集區。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 使用<xref:System.Buffers.ArrayPool%601>租用，並傳回緩衝區的類別 (使用<xref:System.Buffers.ArrayPool%601.Rent%2A>和<xref:System.Buffers.ArrayPool%601.Return%2A>方法) 可以改善效能，在其中建立和終結經常陣列的情況下，在記憶體回收的記憶體壓力收集器。
  
 ]]></format>
    </remarks>
    <threadsafe>這個類別是安全執行緒。 可能由多個執行緒同時使用所有成員。</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Buffers.ArrayPool`1" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
請注意，這個建構函式會保護;只可以呼叫的類別衍生自<xref:System.Buffers.ArrayPool%601>類別。 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Buffers.ArrayPool`1" /> 類別的新執行個體。</summary>
        <returns>
          <see cref="T:System.Buffers.ArrayPool`1" /> 類別的新執行個體。</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength">可儲存在集區的陣列執行個體長度上限。</param>
        <param name="maxArraysPerBucket">可儲存在集區各貯體的陣列執行個體數目上限。 集區會將長度類似的陣列分組到不同的貯體，以加速存取。</param>
        <summary>使用指定的組態建立新的 <see cref="T:System.Buffers.ArrayPool`1" /> 類別執行個體。</summary>
        <returns>具有指定組態的新 <see cref="T:System.Buffers.ArrayPool`1" /> 類別執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
執行個體<xref:System.Buffers.ArrayPool%601>這個方法所建立的類別將陣列分組成值區，且沒有執行任何多個`maxArraysPerBucket`中每個貯體，並與那些陣列不超過`maxArrayLength`的長度。
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">陣列的長度下限。</param>
        <summary>擷取至少為要求長度的緩衝區。</summary>
        <returns>
          <see cref="T:T[]" /> 類型的陣列，長度至少是 <paramref name="minimumLength" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

這個緩衝區借貸給呼叫者，且傳回相同的集區使用<xref:System.Buffers.ArrayPool%601.Return%2A>方法，所以它可以在後續呼叫重複使用<xref:System.Buffers.ArrayPool%601.Rent%2A>方法。 要傳回租來的緩衝區失敗不是嚴重的錯誤。 不過，它可能會導致降低應用程式效能，因為集區可能需要建立新的緩衝區，以取代遺失的密碼。
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">要傳回集區的緩衝區，它先前是使用 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 方法取得。</param>
        <param name="clearArray">指出是否應該先清除緩衝區內容再重複使用。 如果 <paramref name="clearArray" /> 設為 <see langword="true" />，且集區會儲存緩衝區以便後續能夠重複使用，則 <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> 方法會清除其內容的 <paramref name="array" />，不讓後續使用 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 方法的呼叫者看到前一位呼叫者的內容。 如果 <paramref name="clearArray" /> 設為 <see langword="false" /> 或集區會釋出緩衝區，則陣列的內容保持不變。</param>
        <summary>將先前使用 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 方法在相同的 <see cref="T:System.Buffers.ArrayPool`1" /> 執行個體上取得的陣列傳回集區。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

當緩衝區已傳回集區中時，呼叫端就會放棄所有擁有權的緩衝區，而且絕不能使用。 從指定的呼叫傳回參考<xref:System.Buffers.ArrayPool%601.Rent%2A>方法必須只傳回使用<xref:System.Buffers.ArrayPool%601.Return%2A>方法一次。 預設值<xref:System.Buffers.ArrayPool%601>可能會保留傳回的緩衝區租用，才能再試一次，或它可能會發行，傳回的緩衝區如果它由決定集區已經有足夠的緩衝區儲存。
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得共用的 <see cref="T:System.Buffers.ArrayPool`1" /> 執行個體。</summary>
        <value>共用<see cref="T:System.Buffers.ArrayPool`1" />執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

共用集區提供的預設實作<xref:System.Buffers.ArrayPool%601>適用於一般適用性的類別。 共用的類別會維護多個的大小的陣列，並可能交回比實際要求的大型陣列，但它會永遠不會交回小於所要求的較小的陣列。 租用共用的類別使用的緩衝區<xref:System.Buffers.ArrayPool%601.Rent%2A>方法將會導致正在採取從集區的適當緩衝區使用或在新的緩衝區所配置的一不能使用現有的緩衝區。
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>