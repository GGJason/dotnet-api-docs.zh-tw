<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArrayPool`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5924af3bcdfd42b06e9a7eaf3e33460653c01b53b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">924af3bcdfd42b06e9a7eaf3e33460653c01b53b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>The type of the objects that are in the resource pool.</source>
          <target state="translated">資源集區中的物件類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Buffers.ArrayPool`1">
          <source>Provides a resource pool that enables reusing instances of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</source>
          <target state="translated">提供可以重複使用類型 <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> 執行個體的資源集區。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>Using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class to rent and return buffers (using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph>租用，並傳回緩衝區的類別 (使用<ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph>方法) 可以改善效能，在其中建立和終結經常陣列的情況下，在記憶體回收的記憶體壓力收集器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>This class is thread-safe.</source>
          <target state="translated">這個類別是安全執行緒。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>All members may be used by multiple threads concurrently.</source>
          <target state="translated">可能由多個執行緒同時使用所有成員。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Note that this constructor is protected; it can only be called by classes derived from the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class.</source>
          <target state="translated">請注意，這個建構函式會保護;只可以呼叫的類別衍生自<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum length of an array instance that may be stored in the pool.</source>
          <target state="translated">可儲存在集區的陣列執行個體長度上限。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum number of array instances that may be stored in each bucket in the pool.</source>
          <target state="translated">可儲存在集區各貯體的陣列執行個體數目上限。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The pool groups arrays of similar lengths into buckets for faster access.</source>
          <target state="translated">集區會將長度類似的陣列分組到不同的貯體，以加速存取。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class using the specifed configuration.</source>
          <target state="translated">使用指定的組態建立新的 <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 類別執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class with the specified configuration.</source>
          <target state="translated">具有指定組態的新 <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 類別執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class created by this method will group arrays into buckets, with no more than <ph id="ph2">`maxArraysPerBucket`</ph> in each bucket, and with those arrays not exceeding <ph id="ph3">`maxArrayLength`</ph> in length.</source>
          <target state="translated">執行個體<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph>這個方法所建立的類別將陣列分組成值區，且沒有執行任何多個<ph id="ph2">`maxArraysPerBucket`</ph>中每個貯體，並與那些陣列不超過<ph id="ph3">`maxArrayLength`</ph>的長度。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>The minimum length of the array.</source>
          <target state="translated">陣列的長度下限。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Retrieves a buffer that is at least the requested length.</source>
          <target state="translated">擷取至少為要求長度的緩衝區。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> that is at least <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> in length.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> 類型的陣列，長度至少是 <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>This buffer is loaned to the caller and should be returned to the same pool using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method, so that it can be reused in subsequent calls to the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method.</source>
          <target state="translated">這個緩衝區借貸給呼叫者，且傳回相同的集區使用<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph>方法，所以它可以在後續呼叫重複使用<ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Failure to return a rented buffer is not a fatal error.</source>
          <target state="translated">要傳回租來的緩衝區失敗不是嚴重的錯誤。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</source>
          <target state="translated">不過，它可能會導致降低應用程式效能，因為集區可能需要建立新的緩衝區，以取代遺失的密碼。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>A buffer to return to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">要傳回集區的緩衝區，它先前是使用 <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> 方法取得。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Indicates whether the contents of the buffer should be cleared before reuse.</source>
          <target state="translated">指出是否應該先清除緩衝區內容再重複使用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and if the pool will store the buffer to enable subsequent reuse, the <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> method will clear the <ph id="ph4">&lt;paramref name="array" /&gt;</ph> of its contents so that a subsequent caller using the <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method will not see the content of the previous caller.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> 設為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，且集區會儲存緩衝區以便後續能夠重複使用，則 <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> 方法會清除其內容的 <ph id="ph4">&lt;paramref name="array" /&gt;</ph>，不讓後續使用 <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> 方法的呼叫者看到前一位呼叫者的內容。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> or if the pool will release the buffer, the array's contents are left unchanged.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> 設為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 或集區會釋出緩衝區，則陣列的內容保持不變。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Returns an array to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method on the same <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">將先前使用 <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> 方法在相同的 <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 執行個體上取得的陣列傳回集區。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</source>
          <target state="translated">當緩衝區已傳回集區中時，呼叫端就會放棄所有擁有權的緩衝區，而且絕不能使用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The reference returned from a given call to the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method must only be returned using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method once.</source>
          <target state="translated">從指定的呼叫傳回參考<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph>方法必須只傳回使用<ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph>方法一次。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The default <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph>可能會保留傳回的緩衝區租用，才能再試一次，或它可能會發行，傳回的緩衝區如果它由決定集區已經有足夠的緩衝區儲存。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Gets a shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">取得共用的 <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">共用<ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>The shared pool provides a default implementation of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class that's intended for general applicability.</source>
          <target state="translated">共用集區提供的預設實作<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph>適用於一般適用性的類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</source>
          <target state="translated">共用的類別會維護多個的大小的陣列，並可能交回比實際要求的大型陣列，但它會永遠不會交回小於所要求的較小的陣列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Renting a buffer from a shared class using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</source>
          <target state="translated">租用共用的類別使用的緩衝區<ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph>方法將會導致正在採取從集區的適當緩衝區使用或在新的緩衝區所配置的一不能使用現有的緩衝區。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>