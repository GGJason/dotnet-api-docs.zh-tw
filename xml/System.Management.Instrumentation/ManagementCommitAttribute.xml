<Type Name="ManagementCommitAttribute" FullName="System.Management.Instrumentation.ManagementCommitAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1097c9bb20c585649cccc9ac11889b25cdbc28c2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37757058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManagementCommitAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementCommitAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementCommitAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementCommitAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementCommitAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementCommitAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="74c3d-101">The ManagementCommit attribute marks a method that is called when it is necessary to update a set of read-write properties in one, atomic operation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74c3d-101">The ManagementCommit attribute marks a method that is called when it is necessary to update a set of read-write properties in one, atomic operation.</span>
      </span>
      <span data-ttu-id="74c3d-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74c3d-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="74c3d-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74c3d-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74c3d-104">類別的讀寫屬性會標示<xref:System.Management.Instrumentation.ManagementConfigurationAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="74c3d-104">The read-write properties of a class are marked with the <xref:System.Management.Instrumentation.ManagementConfigurationAttribute> attribute.</span></span> <span data-ttu-id="74c3d-105">此外，每個讀寫屬性可以是下列其中一種：<xref:System.Management.Instrumentation.ManagementConfigurationType.Apply>或<xref:System.Management.Instrumentation.ManagementConfigurationType.OnCommit>。</span><span class="sxs-lookup"><span data-stu-id="74c3d-105">In addition, each read-write property can be one of two types: <xref:System.Management.Instrumentation.ManagementConfigurationType.Apply> or <xref:System.Management.Instrumentation.ManagementConfigurationType.OnCommit>.</span></span> <span data-ttu-id="74c3d-106">如果類別具有讀寫屬性設定為 OnCommit，類別應該具有以 ManagementCommit 屬性標記的方法。</span><span class="sxs-lookup"><span data-stu-id="74c3d-106">If a class has read-write properties that are configured as OnCommit, the class should have a method that is marked with the ManagementCommit attribute.</span></span> <span data-ttu-id="74c3d-107">已設定所有 OnCommit 屬性時，會呼叫相關聯的方法。</span><span class="sxs-lookup"><span data-stu-id="74c3d-107">The associated method will be called when all OnCommit properties have been set.</span></span>  
  
 <span data-ttu-id="74c3d-108">標記的方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="74c3d-108">The marked method is not thread safe.</span></span>  
  
 <span data-ttu-id="74c3d-109">如果沒有任何方法以 ManagementCommit 屬性標示，則此類別會管理本身組態更新沒有任何已完成更新的指示。</span><span class="sxs-lookup"><span data-stu-id="74c3d-109">If no method is marked with the ManagementCommit attribute, the class manages the configuration updates by itself without any indication that the update has completed.</span></span>  
  
 <span data-ttu-id="74c3d-110">ManagementCommit 屬性以標記的方法未採用任何參數，而且具有 void 傳回類型。</span><span class="sxs-lookup"><span data-stu-id="74c3d-110">The method marked with the ManagementCommit attribute does not take any parameters and it has a void return type.</span></span>  
  
   
  
## Examples  
  
```csharp  
public class Process  
{  
    /// Key attribute marks a key property. Keys are not changeable.  
    /// Keys have to be unique information.  
    [ManagementKey]  
    public int Id   
    {  
        get {    }  
    }  
  
    /// ManagementConfiguration stands for read/write manageable  
    /// property from a read/write field.  
    [ManagementConfiguration]  
    public string UserDefinedString;  
  
    [ManagementCommit]  
    void SaveOnDevice();  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationType" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementCommitAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementCommitAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74c3d-111">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementCommitAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74c3d-111">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementCommitAttribute" /> class.</span>
          </span>
          <span data-ttu-id="74c3d-112">This is the default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74c3d-112">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>