<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aedc9914fb9ba4aac2c25d5c305e0157b1e6acf8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36660611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="949d1-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span>
      <span class="sxs-lookup">
        <span data-stu-id="949d1-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-102">您通常不會從繼承`BaseControlArray`。</span><span class="sxs-lookup"><span data-stu-id="949d1-102">You do not typically inherit from `BaseControlArray`.</span></span> <span data-ttu-id="949d1-103">若要建立您自己的控制項陣列，繼承自中的控制項陣列類別的其中一個`Microsoft.VisualBasic.Compatibility.VB6`命名空間。</span><span class="sxs-lookup"><span data-stu-id="949d1-103">To create your own control array, inherit from one of the control array classes in the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-104"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-105">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-106">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-109">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-110">通常不會使用這個類別建立類別的執行個體，因為通常不會直接呼叫這個建構函式，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-110">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-111"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-111">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-112">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-112">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-113">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-113">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">
          <span data-ttu-id="949d1-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-116"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-116">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-117">通常不會使用這個類別建立類別的執行個體，因為通常不會直接呼叫這個建構函式，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-117">Because this class is not typically used to create an instance of the class, this constructor is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-118"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-118">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-119">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-119">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-120">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-120">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="949d1-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-122">Gets a value that indicates whether a control is a member of a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-122">Gets a value that indicates whether a control is a member of a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-123">
            <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-123">
              <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-124"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-124">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-125">若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-125">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-126"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-127">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-128">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-129">
            <para>在衍生的類別應該確定<paramref name="target" />是正確的控制項陣列類型。當您覆寫<see langword="BaseCanExtend" />在衍生類別中，請勿呼叫<see langword="BaseCanExtend" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-129">
              <para>Derived classes should make sure that <paramref name="target" /> is of the correct type for the control array.  When you override <see langword="BaseCanExtend" /> in a derived class, do not call the <see langword="BaseCanExtend" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <span data-ttu-id="949d1-130">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-130">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-131">Gets the index of a control in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-131">Gets the index of a control in a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-132">A <see langword="Short" /> integer representing the index of the control in the control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-132">A <see langword="Short" /> integer representing the index of the control in the control array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-133"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-133">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-134">若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-134">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-135"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-135">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-136">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-136">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-137">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-137">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-138">
            <para>當您覆寫<see langword="BaseGetIndex" />在衍生類別中，請勿呼叫<see langword="BaseGetIndex" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-138">
              <para>When you override <see langword="BaseGetIndex" /> in a derived class, do not call the <see langword="BaseGetIndex" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="949d1-139">An integer that represents the index of the control in the control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-139">An integer that represents the index of the control in the control array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-140">Gets the control for a specified index in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-140">Gets the control for a specified index in a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-141">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-141">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-142"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-142">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-143">若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-143">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-144"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-144">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-145">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-145">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-146">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-146">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-147">
            <para>當您覆寫<see langword="BaseGetItem" />在衍生類別中，請勿呼叫<see langword="BaseGetItem" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-147">
              <para>When you override <see langword="BaseGetItem" /> in a derived class, do not call the <see langword="BaseGetItem" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="949d1-148">A <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-148">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-149">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-149">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-150">不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="949d1-150">This method is not supported.</span></span>  
  
 <span data-ttu-id="949d1-151"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-151">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> -  
  
> [!NOTE]
>  <span data-ttu-id="949d1-152"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-152">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-153">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-153">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-154">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-154">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <span data-ttu-id="949d1-155">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-155">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="949d1-156">A <see langword="Short" /> integer that represents the index for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-156">A <see langword="Short" /> integer that represents the index for the control.</span>
          </span>
        </param>
        <param name="fIsDynamic">
          <span data-ttu-id="949d1-157">Optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-157">Optional.</span>
          </span>
          <span data-ttu-id="949d1-158">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-158">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-159">Sets the index for a control in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-159">Sets the index for a control in a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-160"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-160">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-161">若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-161">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-162"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-162">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-163">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-163">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-164">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-164">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-165">
            <para>當您覆寫<see langword="BaseSetIndex" />在衍生類別中，請勿呼叫<see langword="BaseSetIndex" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-165">
              <para>When you override <see langword="BaseSetIndex" /> in a derived class, do not call the <see langword="BaseSetIndex" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="949d1-166">A <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-166">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-167">Returns a value that indicates whether a control is a member of a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-167">Returns a value that indicates whether a control is a member of a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-168">
            <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-168">
              <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-169"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-169">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="949d1-170">若要建立類別的執行個體通常不使用這個類別，因為這`Protected`方法通常不會直接呼叫，但而由衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="949d1-170">Because this class is not typically used to create an instance of the class, this `Protected` method is usually  not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-171"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-171">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-172">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-172">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-173">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-173">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-174">
            <para>當您覆寫<see langword="BaseShouldSerialiazeIndex" />在衍生類別中，請勿呼叫<see langword="BaseShouldSerialiazeIndex" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-174">
              <para>When you override <see langword="BaseShouldSerialiazeIndex" /> in a derived class, do not call the <see langword="BaseShouldSerialiazeIndex" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-175">Stores the container for a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-175">Stores the container for a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-176"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-176">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-177"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-177">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-178">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-178">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-179">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-179">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-180">Stores values to track whether a control in a control array was created at design time or at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-180">Stores values to track whether a control in a control array was created at design time or at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-181"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-181">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-182"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-182">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-183">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-183">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-184">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-184">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-185">Stores values that represent the controls in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-185">Stores values that represent the controls in a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-186"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-186">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-187"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-187">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-188">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-188">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-189">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-189">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-190">Returns the number of controls in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-190">Returns the number of controls in a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-191">A Short that contains the number of controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-191">A Short that contains the number of controls.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-192">您可以使用這個屬性在[For...下一個陳述式](~/docs/visual-basic/language-reference/statements/for-next-statement.md)控制項陣列中的執行在控制項上的作業。</span><span class="sxs-lookup"><span data-stu-id="949d1-192">You can use this property in a [For...Next Statement](~/docs/visual-basic/language-reference/statements/for-next-statement.md) to perform an operation on the controls in a control array.</span></span>  
  
 <span data-ttu-id="949d1-193"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-193">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-194"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-194">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-195">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-195">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-196">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-196">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="949d1-197">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-197">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-198">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-198">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-199">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="949d1-199">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="949d1-200">`Dispose()` 叫用受保護`Dispose(Boolean)`disposing 參數設定為具有方法`true`。</span><span class="sxs-lookup"><span data-stu-id="949d1-200">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="949d1-201"><xref:System.Object.Finalize%2A> 叫用`Dispose`disposing 參數設為`false`。</span><span class="sxs-lookup"><span data-stu-id="949d1-201"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="949d1-202">當處置參數是`true`，這個方法會釋放任何參考這個控制項的 managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="949d1-202">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="949d1-203">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="949d1-203">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-204">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。當您覆寫<see langword="Dispose(Boolean)" />，請確定未參考物件已處置過的早期呼叫中<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱 [清理 Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) 上和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-204">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md). For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-205">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-205">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-206"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-206">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-207"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-207">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-208">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-208">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-209">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-209">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-210">Returns the type of a control in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-210">Returns the type of a control in a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-211">This method must be overridden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-211">This method must be overridden.</span>
          </span>
          <span data-ttu-id="949d1-212">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-212">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span>
          </span>
          <span data-ttu-id="949d1-213">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-213">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span>
          </span>
          <span data-ttu-id="949d1-214">
            <block subset="none" type="note">
              <para> Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-214">
              <block subset="none" type="note">
                <para> Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  </para>
              </block>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-215">
            <para>當您覆寫<see langword="GetControlInstanceType" />在衍生類別中，請勿呼叫<see langword="GetControlInstanceType" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-215">
              <para>When you override <see langword="GetControlInstanceType" /> in a derived class, do not call the <see langword="GetControlInstanceType" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-216">Returns a reference to an enumerator object, which is used to iterate over a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-216">Returns a reference to an enumerator object, which is used to iterate over a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-217">A <see cref="T:System.Collections.IEnumerator" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-217">A <see cref="T:System.Collections.IEnumerator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-218"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-218">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-219"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-219">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-220">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-220">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-221">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-221">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="949d1-222">A <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-222">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-223">Adds event handlers for a control in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-223">Adds event handlers for a control in a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-224">必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="949d1-224">This method must be overridden.</span></span>  
  
 <span data-ttu-id="949d1-225"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-225">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-226"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-226">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-227">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-227">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-228">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-228">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="949d1-229">
            <para>當您覆寫<see langword="HookUpControlEvents" />在衍生類別中，請勿呼叫<see langword="HookUpControlEvents" />基底類別的方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-229">
              <para>When you override <see langword="HookUpControlEvents" /> in a derived class, do not call the <see langword="HookUpControlEvents" /> method of the base class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="949d1-230">Stores the indices for a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-230">Stores the indices for a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-231"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-231">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-232"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-232">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-233">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-233">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-234">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-234">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-235">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-235">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-236">A <see langword="Short" /> that contains the lower bounds of a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-236">A <see langword="Short" /> that contains the lower bounds of a control array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-237">`LBound`函數搭配<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A>函式來判斷控制項陣列的大小。</span><span class="sxs-lookup"><span data-stu-id="949d1-237">The `LBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="949d1-238"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-238">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-239"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-239">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-240">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-240">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-241">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-241">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="949d1-242">A <see langword="Short" /> that represents the index of the new control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-242">A <see langword="Short" /> that represents the index of the new control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-243">Creates a new element in a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-243">Creates a new element in a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-244">這個方法相當於 Visual Basic 6.0`Load`函式動態建立新的控制項陣列項目。</span><span class="sxs-lookup"><span data-stu-id="949d1-244">This method is the equivalent of the Visual Basic 6.0 `Load` function for dynamically creating a new control array element.</span></span>  
  
 <span data-ttu-id="949d1-245"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-245">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-246"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-246">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-247">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-247">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-248">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-248">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-249">Begins the initialization of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-249">Begins the initialization of the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-250">設計環境通常會使用這個方法來開始初始化用於表單或為另一個元件所使用的元件。</span><span class="sxs-lookup"><span data-stu-id="949d1-250">Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="949d1-251"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>方法結束初始化。</span><span class="sxs-lookup"><span data-stu-id="949d1-251">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> method ends the initialization.</span></span> <span data-ttu-id="949d1-252">使用`BeginInit`和<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit>方法可防止控制項完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="949d1-252">Using the `BeginInit` and <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="949d1-253">初始化發生於執行階段。</span><span class="sxs-lookup"><span data-stu-id="949d1-253">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-254"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-254">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-255">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-255">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-256">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-256">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-257">Ends the initialization of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-257">Ends the initialization of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-258">設計環境通常會使用這個方法來完成初始化用於表單或為另一個元件所使用的元件。</span><span class="sxs-lookup"><span data-stu-id="949d1-258">Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="949d1-259">`EndInit`方法結束初始化。</span><span class="sxs-lookup"><span data-stu-id="949d1-259">The `EndInit` method ends the initialization.</span></span> <span data-ttu-id="949d1-260">使用<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A>和`EndInit`方法可防止控制項完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="949d1-260">Using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> and `EndInit` methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="949d1-261">初始化發生於執行階段。</span><span class="sxs-lookup"><span data-stu-id="949d1-261">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-262"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-262">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-263">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-263">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-264">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-264">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="949d1-265">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-265">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="949d1-266">A <see langword="Short" /> that contains the upper bounds of a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-266">A <see langword="Short" /> that contains the upper bounds of a control array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-267">`UBound`函數搭配<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A>函式來判斷控制項陣列的大小。</span><span class="sxs-lookup"><span data-stu-id="949d1-267">The `UBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="949d1-268"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-268">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-269"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-269">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-270">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-270">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-271">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-271">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="949d1-272">A <see langword="Short" /> that represents the index of the control to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-272">A <see langword="Short" /> that represents the index of the control to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="949d1-273">Removes a control from a control array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="949d1-273">Removes a control from a control array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="949d1-274">這個方法相當於 Visual Basic 6.0`Unload`函式，以動態方式移除控制項陣列項目。</span><span class="sxs-lookup"><span data-stu-id="949d1-274">This method is the equivalent of the Visual Basic 6.0 `Unload` function for dynamically removing a control array element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-275">利用以動態方式加入的控制項<xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A>方法可以從控制項陣列中移除。</span><span class="sxs-lookup"><span data-stu-id="949d1-275">Only controls that were added dynamically by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method can be removed from the control array.</span></span>  
  
 <span data-ttu-id="949d1-276"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray>類別是從 Visual Basic 6.0 升級應用程式中使用的所有控制項陣列的基底類別。</span><span class="sxs-lookup"><span data-stu-id="949d1-276">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="949d1-277"><xref:Microsoft.VisualBasic.Compatibility.VB6> 命名空間中的函式和物件都是供這些工具使用，以便從 Visual Basic 6.0 升級至 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="949d1-277">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="949d1-278">在大部分情況下，這些函式和物件會複製您可以在其他命名空間中找到的功能[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="949d1-278">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="949d1-279">會需要這些只有當 Visual Basic 6.0 程式碼模型與大幅[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]實作。</span><span class="sxs-lookup"><span data-stu-id="949d1-279">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>