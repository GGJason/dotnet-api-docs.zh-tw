<Type Name="IEnumConnections" FullName="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="651a1d13a0a7d64fe2d31db1cb5efa8477410b8d" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32089174" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumConnections" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumConnections" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumConnections" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumConnections" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("B196B287-BAB4-101A-B69C-00AA00341D07")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>管理 <see langword="IEnumConnections" /> 介面的定義。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 進行新開發，請使用<xref:System.Runtime.InteropServices.ComTypes.IEnumConnections>。  
  
> [!NOTE]
>  函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 升級至 Visual Basic。 在大多數情況下，這些函式和物件會複製在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的其他命名空間中可以找到的功能。 只有當 Visual Basic 6.0 程式碼模型與 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 實作有顯著差異時，才需要這些項目。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections ec);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Clone([out] class Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections&amp; ec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ec As IEnumConnections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] Microsoft::VisualBasic::Compatibility::VB6::IEnumConnections ^ % ec);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ec" Type="Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ec">這個方法傳回時，包含新建列舉值的參考。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>建立新的列舉值，其包含與目前列舉值相同的列舉型別狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 升級至 Visual Basic。 在大多數情況下，這些函式和物件會複製在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的其他命名空間中可以找到的功能。 只有當 Visual Basic 6.0 程式碼模型與 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 實作有顯著差異時，才需要這些項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public void Next (int cConnections, out Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[] cd, out int cFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Next([in]int32 cConnections, [out] valuetype Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]&amp; cd, [out] int32&amp; cFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Next (cConnections As Integer, ByRef cd As CONNECTDATA(), ByRef cFetched As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Next(int cConnections, [Runtime::InteropServices::Out] cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::CONNECTDATA&gt; ^ % cd, [Runtime::InteropServices::Out] int % cFetched);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
        <Parameter Name="cd" Type="Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]&amp;" RefType="out" />
        <Parameter Name="cFetched" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cConnections">要在 <c>cd</c> 中傳回的 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> 結構數目。</param>
        <param name="cd">這個方法傳回時，包含列舉連接的參考。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="cFetched">當這個方法傳回時，會包含 <c>cd</c> 中實際列舉連接數目的參考。</param>
        <summary>擷取列舉型別序列中指定的項目數目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 升級至 Visual Basic。 在大多數情況下，這些函式和物件會複製在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的其他命名空間中可以找到的功能。 只有當 Visual Basic 6.0 程式碼模型與 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 實作有顯著差異時，才需要這些項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將列舉型別序列重設到開頭。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 升級至 Visual Basic。 在大多數情況下，這些函式和物件會複製在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的其他命名空間中可以找到的功能。 只有當 Visual Basic 6.0 程式碼模型與 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 實作有顯著差異時，才需要這些項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public void Skip (int cConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Skip([in]int32 cConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skip (cConnections As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skip(int cConnections);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cConnections" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cConnections">列舉型別中要略過的項目數。</param>
        <summary>略過列舉序列中指定的項目數目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  函式和物件中<xref:Microsoft.VisualBasic.Compatibility.VB6>命名空間所提供的工具，以便從 Visual Basic 6.0 升級至 Visual Basic。 在大多數情況下，這些函式和物件會複製在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 的其他命名空間中可以找到的功能。 只有當 Visual Basic 6.0 程式碼模型與 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 實作有顯著差異時，才需要這些項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>