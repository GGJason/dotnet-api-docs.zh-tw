<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="INotifyPropertyChanged.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d531698b4f8fd79b491f128899b743c003b97c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d531698b4f8fd79b491f128899b743c003b97c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>Notifies clients that a property value has changed.</source>
          <target state="translated">通知用戶端已變更屬性值。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface is used to notify clients, typically binding clients, that a property value has changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>介面用來通知用戶端，通常繫結的用戶端，已變更屬性值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>For example, consider a <ph id="ph1">`Person`</ph> object with a property called <ph id="ph2">`FirstName`</ph>.</source>
          <target state="translated">例如，請考慮<ph id="ph1">`Person`</ph>物件的內容來呼叫<ph id="ph2">`FirstName`</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>To provide generic property-change notification, the <ph id="ph1">`Person`</ph> type implements the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface and raises a <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> event when <ph id="ph4">`FirstName`</ph> is changed.</source>
          <target state="translated">若要提供泛型屬性變更通知，<ph id="ph1">`Person`</ph>型別會實作<ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>介面並引發<ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph>事件時<ph id="ph4">`FirstName`</ph>變更。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>For change notification to occur in a binding between a bound client and a data source, your bound type should either:</source>
          <target state="translated">繫結的用戶端與資料來源之間繫結中所發生的變更通知，您繫結的類型應執行下列之一：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>Implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface (preferred).</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>（慣用） 的介面。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>Provide a change event for each property of the bound type.</source>
          <target state="translated">每個屬性的繫結的型別，提供變更事件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>Do not do both.</source>
          <target state="translated">不執行兩者。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>The following code example demonstrates the how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>When you run this example, you will notice the bound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control reflects the change in the data source without requiring the binding to be reset.</source>
          <target state="translated">當您執行此範例中時，您會注意到繫結<ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控制會反映資料來源中的變更，而不需要重設的繫結。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>If you use the <ph id="ph1">`CallerMemberName`</ph> attribute, calls to the <ph id="ph2">`NotifyPropertyChanged`</ph> method don't have to specify the property name as a string argument.</source>
          <target state="translated">如果您使用 <ph id="ph1">`CallerMemberName`</ph> 屬性 (attribute)，呼叫 <ph id="ph2">`NotifyPropertyChanged`</ph> 方法時，不需要指定屬性 (property) 名稱做為字串引數。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Caller Information<ept id="p1">](http://msdn.microsoft.com/library/9cb2b8c0-c4f6-44b8-9c90-38948455b373)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>呼叫端資訊<ept id="p1">](http://msdn.microsoft.com/library/9cb2b8c0-c4f6-44b8-9c90-38948455b373)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>Replace the code in your Form1 with the following code and then change the namespace to the name of your project.</source>
          <target state="translated">在您 Form1 的程式碼取代下列程式碼，然後將命名空間變更為您的專案名稱。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.INotifyPropertyChanged">
          <source>As an alternative, you can name your project with the namespace name below when you create it.</source>
          <target state="translated">或者，您可以具有下列命名空間名稱命名您的專案，您在建立時。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">當屬性值變更時發生。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> event can indicate all properties on the object have changed by using either <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> as the property name in the <ph id="ph4">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph>事件可能表示物件上的所有屬性已都變更使用<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>做為屬性名稱中<ph id="ph4">&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> event of the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph>事件<ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>介面。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>