<Type Name="RunWorkerCompletedEventHandler" FullName="System.ComponentModel.RunWorkerCompletedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8cfd8887abde4e066f71e1b13f8bd19d0db83db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36700672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RunWorkerCompletedEventHandler(object sender, RunWorkerCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RunWorkerCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RunWorkerCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RunWorkerCompletedEventHandler(sender As Object, e As RunWorkerCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RunWorkerCompletedEventHandler(System::Object ^ sender, RunWorkerCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RunWorkerCompletedEventHandler = delegate of obj * RunWorkerCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="92e1a-101">事件的來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92e1a-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="92e1a-102">
        <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />，其中包含事件資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92e1a-102">A <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="92e1a-103">表示處理 <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> 類別的 <see cref="T:System.ComponentModel.BackgroundWorker" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92e1a-103">Represents the method that will handle the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event of a <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92e1a-104">當您建立<xref:System.ComponentModel.RunWorkerCompletedEventHandler>委派，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="92e1a-104">When you create a <xref:System.ComponentModel.RunWorkerCompletedEventHandler> delegate, you identify a method to handle the event.</span></span> <span data-ttu-id="92e1a-105">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="92e1a-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="92e1a-106">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="92e1a-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="92e1a-107">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="92e1a-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92e1a-108">下列程式碼範例顯示可用來當作的處理常式方法<xref:System.ComponentModel.RunWorkerCompletedEventHandler>。</span><span class="sxs-lookup"><span data-stu-id="92e1a-108">The following code example shows a method that can be used as a handler for <xref:System.ComponentModel.RunWorkerCompletedEventHandler>.</span></span> <span data-ttu-id="92e1a-109">這個範例是針對較大範例的一部分<xref:System.ComponentModel.BackgroundWorker>類別。</span><span class="sxs-lookup"><span data-stu-id="92e1a-109">This example is part of a larger sample for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>