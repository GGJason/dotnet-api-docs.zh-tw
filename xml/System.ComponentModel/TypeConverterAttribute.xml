<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeConverterAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051f2a34118aeea4bc90482c2958972edd18ee3134ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a34118aeea4bc90482c2958972edd18ee3134ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Specifies what type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">指定要用來做為此屬性所繫結至物件的型別轉換子。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class you use for conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">您使用轉換的類別必須繼承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph> property to get the name of the class that provides the data conversion for the object this attribute is bound to.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A&gt;</ph>繫結至屬性，即可取得這個屬性會提供物件的資料轉換的類別名稱。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">如需屬性的詳細資訊，請參閱<bpt id="p1">[</bpt>屬性<ept id="p1">](~/docs/standard/attributes/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">如需型別轉換子的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>基底類別和<bpt id="p1">[</bpt>How to： 實作類型轉換器<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In order to establish a type converter on a custom class that provides type conversion behavior for XAML, you apply the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to your type.</source>
          <target state="translated">若要建立自訂的類別，提供 XAML 類型轉換行為上的類型轉換器，您將套用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>屬性設定為您的類型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The argument of the attribute references your type converter implementation.</source>
          <target state="translated">屬性的引數會參考您的型別轉換子實作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Your type converter should be able to accept values from a string that is used for attributes or initialization text in XAML markup, and convert that string into your intended destination type.</source>
          <target state="translated">類型轉換器應該要能夠接受用於屬性或 XAML 標記中的初始文字的字串值，並將該字串轉換成預定的目的地類型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>TypeConverters and XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>TypeConverters 和 XAML<ept id="p1">](~/docs/framework/wpf/advanced/typeconverters-and-xaml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Rather than applying to all values of a type, a type converter behavior for XAML can also be established on a specific property.</source>
          <target state="translated">而不是套用至所有值的類型，xaml 的類型轉換器行為可建立在特定的屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>In this case, you apply <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the property definition (the outer definition, not the specific <ph id="ph2">`get`</ph> and <ph id="ph3">`set`</ph> definitions).</source>
          <target state="translated">在此情況下，您將套用<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>至 property 定義 (外部定義、 非特有<ph id="ph2">`get`</ph>和<ph id="ph3">`set`</ph>定義)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>A type converter behavior for XAML usage of a custom attachable member can be assigned by applying <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> to the <ph id="ph2">`get`</ph> method accessor that supports the XAML usage.</source>
          <target state="translated">自訂的可附加成員的 XAML 用法的類型轉換器行為可以藉由套用指派<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>至<ph id="ph2">`get`</ph>支援 XAML 用法的方法存取子。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>附加屬性概觀<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For complex XAML serialization cases that require additional state from the object runtime, consider defining a value serializer in addition to a type converter, and attribute both support classes on your custom types or custom members.</source>
          <target state="translated">複雜 XAML 序列化的情況下需要額外的狀態從物件的執行階段，請考慮您的自訂型別或自訂成員上定義的類型轉換器和屬性除了值序列化程式這兩個支援類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The following example declares <ph id="ph1">`MyClass`</ph> to use the type converter called <ph id="ph2">`MyClassConverter`</ph>.</source>
          <target state="translated">下列範例會宣告<ph id="ph1">`MyClass`</ph>使用呼叫的類型轉換器<ph id="ph2">`MyClassConverter`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>This example assumes that <ph id="ph1">`MyClassConverter`</ph> has been implemented elsewhere.</source>
          <target state="translated">這個範例假設<ph id="ph1">`MyClassConverter`</ph>已實作其他位置。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The class implementing the converter (<ph id="ph1">`MyClassConverter`</ph>) must inherit from the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class.</source>
          <target state="translated">實作轉換器的類別 (<ph id="ph1">`MyClassConverter`</ph>) 必須繼承自<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>The next example creates an instance of <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">下一個範例中建立的執行個體<ph id="ph1">`MyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Then it gets the attributes for the class, and prints the name of the type converter used by <ph id="ph1">`MyClass`</ph>.</source>
          <target state="translated">然後它會取得的屬性類別，並列印所使用的型別轉換子的名稱<ph id="ph1">`MyClass`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeConverterAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class with the default type converter, which is an empty string ("").</source>
          <target state="translated">使用預設型別轉換子，也就是空字串 ("")，來初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的資料轉換的類別必須繼承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The fully qualified name of the class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated">類別的完整名稱，用於這個屬性所繫結之物件的資料轉換。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type name as the data converter for the object this attribute is bound to.</source>
          <target state="translated">使用指定型別名稱做為這個屬性所繫結之物件的資料轉換子，來初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的資料轉換的類別必須繼承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the converter class to use for data conversion for the object this attribute is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 表示轉換子類別的型別，用於這個屬性所繫結之物件的資料轉換。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> class, using the specified type as the data converter for the object this attribute is bound to.</source>
          <target state="translated">使用指定型別做為這個屬性所繫結之物件的資料轉換子，來初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
          <source>The class that provides the data conversion must inherit from <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
          <target state="translated">提供的資料轉換的類別必須繼承自<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>Gets the fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的完整型別名稱來做為這個屬性所繫結之物件的轉換子。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The fully qualified type name of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as a converter for the object this attribute is bound to, or an empty string ("") if none exists.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的完整型別名稱，用來做為這個屬性所繫結之物件的轉換子，如果屬性值不存在的話，則為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
          <source>The default value is an empty string ("").</source>
          <target state="translated">預設值為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.ComponentModel.TypeConverterAttribute.Default">
          <source>Specifies the type to use as a converter for the object this attribute is bound to.</source>
          <target state="translated">指定這個屬性繫結物件所要用來做為轉換子的型別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">測試其數值相等的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">傳回值，表示指定的物件值是否等於目前的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的物件值等於目前 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">傳回這個執行個體的雜湊碼。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverterAttribute" /&gt;</ph> 的雜湊碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>