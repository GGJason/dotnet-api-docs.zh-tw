<Type Name="DependencyPropertyDescriptor" FullName="System.ComponentModel.DependencyPropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b92ae7ae04745f0947cc4f73be429fa86e1532f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380002" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependencyPropertyDescriptor : System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyDescriptor extends System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DependencyPropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyDescriptor&#xA;Inherits PropertyDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyDescriptor sealed : System::ComponentModel::PropertyDescriptor" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.PropertyDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="246bc-101">提供 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的擴充功能，負責相依性屬性的其他屬性特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="246bc-101">Provides an extension of <see cref="T:System.ComponentModel.PropertyDescriptor" /> that accounts for the additional property characteristics of a dependency property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-102">這個類別主要是由設計工具的應用程式使用。</span><span class="sxs-lookup"><span data-stu-id="246bc-102">This class is primarily used by designer applications.</span></span> <span data-ttu-id="246bc-103">這些應用程式可能需要透過屬性視窗或其他工具，用來編輯屬性值的相依性屬性特性的報表。</span><span class="sxs-lookup"><span data-stu-id="246bc-103">These applications may need to report the dependency property characteristics through property windows or other tools used for editing property values.</span></span>  
  
 <span data-ttu-id="246bc-104">若要檢查特定的屬性，以判斷它是否有<xref:System.ComponentModel.DependencyPropertyDescriptor>可用做為<xref:System.ComponentModel.PropertyDescriptor>，呼叫<xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>，或<xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="246bc-104">In order to check a specific property to determine whether it has <xref:System.ComponentModel.DependencyPropertyDescriptor> available to serve as a <xref:System.ComponentModel.PropertyDescriptor>, call either <xref:System.ComponentModel.DependencyPropertyDescriptor.FromProperty%28System.ComponentModel.PropertyDescriptor%29?displayProperty=nameWithType>, or <xref:System.ComponentModel.DependencyPropertyDescriptor.FromName%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="246bc-105">如果任一個方法會傳回`null`，則屬性不是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-105">If either method returns `null`, then the property is not a dependency property.</span></span> <span data-ttu-id="246bc-106">如果此方法會傳回有效<xref:System.ComponentModel.DependencyPropertyDescriptor>，則此屬性是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-106">If the method returns a valid <xref:System.ComponentModel.DependencyPropertyDescriptor> , then the property is a dependency property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public override void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-107">要為其加入處理常式的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-107">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="246bc-108">要加入以做為接聽程式 (Listener) 的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-108">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-109">使其他物件能在這個屬性變更時受到告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-109">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-110">取得這個成員的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-110">Gets the collection of attributes for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-111">屬性 (Attribute) 的 <see cref="T:System.ComponentModel.AttributeCollection" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-111">The <see cref="T:System.ComponentModel.AttributeCollection" /> collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public override bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-112">要測試重設能力的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-112">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-113">傳回值，表示重設物件是否變更其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-113">Returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-114">如果重設元件會變更其值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-114">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-115">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-115">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public override string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Category" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Category { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-116">取得成員所屬的分類名稱，如 <see cref="T:System.ComponentModel.CategoryAttribute" /> 中所指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-116">Gets the name of the category that the member belongs to, as specified in the <see cref="T:System.ComponentModel.CategoryAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-117">成員所屬的分類名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-117">The name of the category to which the member belongs.</span>
          </span>
          <span data-ttu-id="246bc-118">如果沒有 <see cref="T:System.ComponentModel.CategoryAttribute" />，則分類名稱會設定為預設分類 <see langword="Misc" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-118">If there is no <see cref="T:System.ComponentModel.CategoryAttribute" />, the category name is set to the default category, <see langword="Misc" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-119">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-119">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public override Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-120">取得這個屬性所繫結的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-120">Gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-121">
            <see cref="T:System.Type" />，表示這個屬性所繫結的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-121">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="246bc-122">當叫用 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> 或 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 時，指定的物件可能是這個型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-122">When <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-123">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-123">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-124">取得這個屬性的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-124">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-125">
            <see cref="T:System.ComponentModel.TypeConverter" />，用來轉換這個屬性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-125">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-126">這個屬性可能是`null`萬一其中屬性化<xref:System.ComponentModel.TypeConverter>不是公用的類別。</span><span class="sxs-lookup"><span data-stu-id="246bc-126">This property may be `null` in cases where the attributed <xref:System.ComponentModel.TypeConverter> is not a public class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-127">傳回相依性屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-127">Returns the dependency property identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-128">相依性屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-128">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-129">這個屬性可能是`null`如果<xref:System.ComponentModel.DependencyPropertyDescriptor>建立執行個體不是相依性屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-129">This property may be `null` if a <xref:System.ComponentModel.DependencyPropertyDescriptor> instance was created for a property that is not a dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-130">取得成員的描述，如 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 中所指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-130">Gets the description of the member, as specified in the <see cref="T:System.ComponentModel.DescriptionAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-131">成員的描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-131">The description of the member.</span>
          </span>
          <span data-ttu-id="246bc-132">如果沒有 <see cref="T:System.ComponentModel.DescriptionAttribute" />，則屬性值會設為預設，即空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-132">If there is no <see cref="T:System.ComponentModel.DescriptionAttribute" />, the property value is set to the default, which is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-133">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-133">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerCoerceValueCallback">
      <MemberSignature Language="C#" Value="public System.Windows.CoerceValueCallback DesignerCoerceValueCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.CoerceValueCallback DesignerCoerceValueCallback" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignerCoerceValueCallback As CoerceValueCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::CoerceValueCallback ^ DesignerCoerceValueCallback { System::Windows::CoerceValueCallback ^ get(); void set(System::Windows::CoerceValueCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.CoerceValueCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-134">取得或設定回呼，設計工具使用這個回呼修改相依性屬性的有效值，然後再將相依性屬性值儲存在相依性屬性引擎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-134">Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-135">回呼，設計工具用來修改相依性屬性的有效值，然後再將相依性屬性值儲存在相依性屬性引擎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-135">A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeOnly">
      <MemberSignature Language="C#" Value="public override bool DesignTimeOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DesignTimeOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-136">取得值，表示這個成員是否只在設計階段設定，如 <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> 中所指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-136">Gets whether this member should be set only at design time, as specified in the <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-137">如果這個成員只應該在設計階段設定，則為 <see langword="true" />；如果成員可在 Run Time 期間設定，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-137">
              <see langword="true" /> if this member should be set only at design time; <see langword="false" /> if the member can be set during run time.</span>
          </span>
          <span data-ttu-id="246bc-138">如果沒有 <see cref="T:System.ComponentModel.DesignOnlyAttribute" />，則傳回值為預設值，即 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-138">If there is no <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, the return value is the default, which is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-139">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-139">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public override string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-140">取得可在視窗 (例如 [屬性] 視窗) 中顯示的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-140">Gets the name that can be displayed in a window, such as a Properties window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-141">要顯示的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-141">The name to display for the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-142">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-142">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DependencyProperty.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="246bc-143">要與目前執行個體比較的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-143">The <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-144">比較兩個 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 執行個體是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-144">Compares two <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> instances for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-145">如果值相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-145">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-146">傳回已提供之屬性名稱的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-146">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="246bc-147">相依性屬性或附加屬性的註冊名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-147">The registered name of a dependency property or an attached property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="246bc-148">擁有屬性定義之物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-148">The <see cref="T:System.Type" /> of the object that owns the property definition.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="246bc-149">要設定其屬性之物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-149">The <see cref="T:System.Type" /> of the object you want to set the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-150">傳回已提供之屬性名稱的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-150">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-151">所要求的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-151">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-152">`name`可能會參考相依性屬性或附加的屬性，而且`name`參數傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>呼叫定義所討論的屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-152">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="246bc-153">`ownerType` 做為一次擁有屬性的物件類型傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>。</span><span class="sxs-lookup"><span data-stu-id="246bc-153">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="246bc-154">`targetType` 是您想要設定的屬性物件類型。</span><span class="sxs-lookup"><span data-stu-id="246bc-154">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="246bc-155">相依性屬性`ownerType`和`targetType`類型相同。</span><span class="sxs-lookup"><span data-stu-id="246bc-155">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="246bc-156">它們通常是不同的附加屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-156">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromName (string name, Type ownerType, Type targetType, bool ignorePropertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromName(string name, class System.Type ownerType, class System.Type targetType, bool ignorePropertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromName (name As String, ownerType As Type, targetType As Type, ignorePropertyType As Boolean) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromName(System::String ^ name, Type ^ ownerType, Type ^ targetType, bool ignorePropertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="ignorePropertyType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="246bc-157">相依性屬性或附加屬性的註冊名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-157">The registered name of a dependency property or an attached property.</span>
          </span>
        </param>
        <param name="ownerType">
          <span data-ttu-id="246bc-158">擁有屬性定義之物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-158">The <see cref="T:System.Type" /> of the object that owns the property definition.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="246bc-159">要設定其屬性之物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-159">The <see cref="T:System.Type" /> of the object you want to set the property for.</span>
          </span>
        </param>
        <param name="ignorePropertyType">
          <span data-ttu-id="246bc-160">指定以忽略屬性類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-160">Specifies to ignore the property type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-161">傳回已提供之屬性名稱的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-161">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided property name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-162">所要求的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-162">The requested <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-163">`name`可能會參考相依性屬性或附加的屬性，而且`name`參數傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>呼叫定義所討論的屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-163">The `name` may refer to a dependency property or an attached property, and is the `name` parameter as passed to the <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A> call that defined the property in question.</span></span> <span data-ttu-id="246bc-164">`ownerType` 做為一次擁有屬性的物件類型傳遞至<xref:System.Windows.DependencyProperty.Register%2A>或<xref:System.Windows.DependencyProperty.RegisterAttached%2A>。</span><span class="sxs-lookup"><span data-stu-id="246bc-164">`ownerType` is the type of object that owns the property, again as passed to <xref:System.Windows.DependencyProperty.Register%2A> or <xref:System.Windows.DependencyProperty.RegisterAttached%2A>.</span></span> <span data-ttu-id="246bc-165">`targetType` 是您想要設定的屬性物件類型。</span><span class="sxs-lookup"><span data-stu-id="246bc-165">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="246bc-166">相依性屬性`ownerType`和`targetType`類型相同。</span><span class="sxs-lookup"><span data-stu-id="246bc-166">For dependency properties, `ownerType` and `targetType` are the same type.</span></span> <span data-ttu-id="246bc-167">它們通常是不同的附加屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-167">For attached properties they usually differ.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromProperty">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-168">根據使用的簽章，傳回以提供之 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 或所提供之型別為基礎的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-168">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> based either on a provided <see cref="T:System.ComponentModel.PropertyDescriptor" /> or a provided type, depending on the signature used.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromProperty (property As PropertyDescriptor) As DependencyPropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="246bc-169">要進行檢查的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-169">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-170">傳回所提供之 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-170">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-171">如果 <paramref name="property" /> 所描述的屬性是相依性屬性，則會傳回有效的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-171">If the property described by <paramref name="property" /> is a dependency property, returns a valid <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
          <span data-ttu-id="246bc-172">否則會傳回 <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-172">Otherwise, returns a <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-173">這個方法是用來取得設計工具的應用程式的主要方法<xref:System.ComponentModel.DependencyPropertyDescriptor>檢查的所有屬性的基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-173">This method is the primary method used by designer applications to obtain a <xref:System.ComponentModel.DependencyPropertyDescriptor> on basis of checking all properties for a <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.DependencyPropertyDescriptor FromProperty (System.Windows.DependencyProperty dependencyProperty, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.DependencyPropertyDescriptor FromProperty(class System.Windows.DependencyProperty dependencyProperty, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::DependencyPropertyDescriptor ^ FromProperty(System::Windows::DependencyProperty ^ dependencyProperty, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DependencyPropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty">
          <span data-ttu-id="246bc-174">相依性屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-174">The identifier for a dependency property.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="246bc-175">設定屬性之物件的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-175">The type of the object where the property is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-176">傳回所提供之相依性屬性和目標類型的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-176">Returns a <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for a provided dependency property and target type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-177">所提供之相依性屬性的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-177">A <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> for the provided dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-178">`dependencyProperty`可能會參考相依性屬性或附加的屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-178">The `dependencyProperty` may refer to a dependency property or an attached property.</span></span> <span data-ttu-id="246bc-179">`targetType` 是您想要設定的屬性物件類型。</span><span class="sxs-lookup"><span data-stu-id="246bc-179">`targetType` is the type of object you want to set the property for.</span></span> <span data-ttu-id="246bc-180">相依性屬性的型別就相當於<xref:System.Windows.DependencyProperty.OwnerType%2A>如`dependencyProperty`。</span><span class="sxs-lookup"><span data-stu-id="246bc-180">For dependency properties, that type is equivalent to the <xref:System.Windows.DependencyProperty.OwnerType%2A> for the `dependencyProperty`.</span></span> <span data-ttu-id="246bc-181">為附加屬性`targetType`通常是其他<xref:System.Windows.DependencyObject>型別。</span><span class="sxs-lookup"><span data-stu-id="246bc-181">For attached properties the `targetType` is typically some other <xref:System.Windows.DependencyObject> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="246bc-182">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-182">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="246bc-183">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-184">傳回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-185">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定元件的指定屬性 (Attribute) 相符的屬性 (Property)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-186">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-186">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public override object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="246bc-187">編輯器的基底型別 (Base Type)，用來區分屬性支援的多個編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-187">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-188">取得指定型別的編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-188">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-189">要求的編輯器型別的執行個體，或者如果找不到，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-189">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-190">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-190">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="246bc-191">傳回這個 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-191">Returns the hash code for this <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-192">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-192">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-193">雜湊碼<xref:System.ComponentModel.DependencyPropertyDescriptor>相依性屬性的識別項與設定所在的型別上為基礎。</span><span class="sxs-lookup"><span data-stu-id="246bc-193">The hash code for <xref:System.ComponentModel.DependencyPropertyDescriptor> is based both on the identifier for a dependency property and on the type on which it is set.</span></span> <span data-ttu-id="246bc-194">這個實作可確保<xref:System.ComponentModel.DependencyPropertyDescriptor>不當不會傳回相同的雜湊碼許多可能的衍生類別，會繼承的屬性或透過屬性系統否則重新指派的屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-194">This implementation assures that a <xref:System.ComponentModel.DependencyPropertyDescriptor> does not improperly return the same hash code for properties that are inherited by the many possible derived classes, or for properties that are otherwise re-assigned through the property system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-195">元件執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-195">The component instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-196">傳回元件上屬性的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-196">Resturns the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-197">要求的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-197">The requested value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-198">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-198">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-199">取得值，指出屬性是否註冊為附加屬性，並正透過附加使用方式使用中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-199">Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-200">
            <see langword="true" /> 如果屬性為附加的屬性。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-200">
              <see langword="true" /> if the property is an attached property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowsable">
      <MemberSignature Language="C#" Value="public override bool IsBrowsable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowsable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsBrowsable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowsable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-201">取得值，這個值表示屬性上的 <see cref="T:System.ComponentModel.BrowsableAttribute" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-201">Gets a value that indicates the value of the <see cref="T:System.ComponentModel.BrowsableAttribute" /> on the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-202">如果在屬性上指定了 <see cref="T:System.ComponentModel.BrowsableAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-202">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.BrowsableAttribute" /> was specified on the property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-203">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-203">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public override bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-204">取得值，表示這個屬性是否應該當地語系化，如 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 中指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-204">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-205">如果使用 true 值的 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 建構函式標示成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-205">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> constructor of the value true; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-206">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-206">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-207">取得值，表示這個屬性是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-207">Gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-208">如果屬性是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-208">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-209">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-209">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="246bc-210">相依性屬性會註冊為以唯讀狀態使用的特定方法呼叫，並依照慣例[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]反映和描述元所檢視的屬性的包裝函式屬性也必須是唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="246bc-210">Dependency properties are registered as read-only using particular method calls, and by convention the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper properties that are the properties viewed by reflection and the descriptors must also be read-only.</span></span> <span data-ttu-id="246bc-211">不過，因為這是一項慣例，並不需要進行編譯，您可能想要檢查相依性屬性的識別項 「 唯讀 」 狀態。</span><span class="sxs-lookup"><span data-stu-id="246bc-211">However, since this is a convention and not a requirement to compile, you might want to double check the dependency property identifier read-only state.</span></span> <span data-ttu-id="246bc-212">若要這樣做，請取得識別項 (<xref:System.Windows.DependencyProperty>) 值，這個<xref:System.ComponentModel.DependencyPropertyDescriptor>，然後檢查值<xref:System.Windows.DependencyProperty.ReadOnly%2A>。</span><span class="sxs-lookup"><span data-stu-id="246bc-212">To do this, get the identifier (<xref:System.Windows.DependencyProperty>) value for this <xref:System.ComponentModel.DependencyPropertyDescriptor> and then check the value of <xref:System.Windows.DependencyProperty.ReadOnly%2A>.</span></span> <span data-ttu-id="246bc-213">請注意，<xref:System.Windows.DependencyProperty.ReadOnly%2A>上的識別項本身，不是中繼資料。</span><span class="sxs-lookup"><span data-stu-id="246bc-213">Note that the <xref:System.Windows.DependencyProperty.ReadOnly%2A> is on the identifier itself, not metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As PropertyMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyMetadata ^ Metadata { System::Windows::PropertyMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-214">取得與相依性屬性相關聯的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-214">Gets the metadata associated with the dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-215">相依性屬性中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-215">The dependency property metadata.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-216">這個值可以是`null`如果沒有中繼資料或屬性不是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-216">The value can be `null` if there is  no metadata or if the property is not a dependency property.</span></span>  
  
 <span data-ttu-id="246bc-217">中繼資料具有相符的概念[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]屬性是做為屬性中重新公開<xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="246bc-217">Metadata that has matching concepts in [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] attributes is re-exposed as attributes in the <xref:System.ComponentModel.DependencyPropertyDescriptor.Attributes%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-218">取得相依性屬性的代表 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-218">Gets the represented <see cref="T:System.Type" /> of the dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-219">
            <see cref="T:System.Type" />相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-219">The <see cref="T:System.Type" /> of the dependency property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-220">這個屬性會傳回<xref:System.Type>已註冊之相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="246bc-220">This property returns the <xref:System.Type> that the dependency property was registered with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public override void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-221">要為其加入處理常式的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-221">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="246bc-222">要加入以做為接聽程式 (Listener) 的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-222">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-223">使其他物件能在這個屬性變更時受到告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-223">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-224">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-224">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public override void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-225">屬性值要重設為預設值的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-225">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-226">將元件的這個屬性值重設為預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-226">Resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-227">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-227">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-228">屬性值將要設定的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-228">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="246bc-229">新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-229">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-230">將元件的值設定為不同的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-230">Sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-231">這個方法會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-231">This method relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="246bc-232">元件，具有要檢查保存性 (Persistence) 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-232">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="246bc-233">指出這個屬性值是否需要由序列化處理序保存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-233">Indicates whether the value of this property needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-234">如果屬性應該要保存，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-234">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public override bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="246bc-235">指示這個屬性的數值變更告知是否可能來自屬性描述項之外 (例如來自元件本身)，或者告知只會來自 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 的直接呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-235">Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="246bc-236">如果這個屬性的告知可能來自屬性描述項之外，例如來自元件本身，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-236">
              <see langword="true" /> if notifications for this property may originate from outside the property descriptor, such as from the component itself.</span>
          </span>
          <span data-ttu-id="246bc-237">如果告知只來自 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 的直接呼叫，則為 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-237">
              <see langword="false" /> if notifications will only originate from direct calls made to <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="246bc-238">例如，對於`true`的情況下，元件可以實作<xref:System.ComponentModel.INotifyPropertyChanged>介面，或可能有明確的`propertyName.Changed`這個屬性的事件。</span><span class="sxs-lookup"><span data-stu-id="246bc-238">For example, for the `true` case, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `propertyName.Changed` event for this property.</span></span>  
  
 <span data-ttu-id="246bc-239">這個屬性會依賴基礎<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="246bc-239">This property relies on the underlying <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DependencyPropertyDescriptor.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="246bc-240">將這個執行個體的值轉換為它的相等字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-240">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="246bc-241">傳回 <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="246bc-241">Returns the <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>