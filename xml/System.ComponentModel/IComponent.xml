<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComponent.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57b6a108d771176f4e88d09764656c49ef7a98a7d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b6a108d771176f4e88d09764656c49ef7a98a7d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.IComponent">
          <source>Provides functionality required by all components.</source>
          <target state="translated">提供所有元件所需的功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is the default implementation of <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> and serves as the base class for all components in the common language runtime.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 預設實作<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>而且可以當做 common language runtime 中的所有元件的基底類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>You can contain components in a container.</source>
          <target state="translated">您可以包含在容器中的元件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>In this context, containment refers to logical containment, not visual containment.</source>
          <target state="translated">在此情況下，內含項目是指邏輯內含項目，不是視覺化的內含項目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>You can use components and containers in a variety of scenarios, both visual and non visual.</source>
          <target state="translated">您可以使用元件和各種不同的情況下，視覺和非視覺容器。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>, the default implementation of <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=nameWithType&gt;</ph> 繼承自<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>的預設實作<ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>A component interacts with its container primarily through a container-provided <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, which is a repository of container-specific per-component information.</source>
          <target state="translated">元件互動主要是透過容器提供其容器<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>，這是特定容器的每一個元件資訊的儲存機制。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>, and <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interfaces.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph>， <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>，和<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>To be a component, a class must implement the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> interface and provide a basic constructor that requires no parameters or a single parameter of type <ph id="ph2">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated">元件，類別必須實作<ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>介面，並提供基本的建構函式需要不含參數或類型的單一參數<ph id="ph2">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.IComponent">
          <source>For more information about implementing <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>, see <bpt id="p1">[</bpt>Programming with Components<ept id="p1">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>.</source>
          <target state="translated">如需有關實作<ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>元件程式設計<ept id="p1">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.IComponent.Disposed">
          <source>Represents the method that handles the <ph id="ph1">&lt;see cref="E:System.ComponentModel.IComponent.Disposed" /&gt;</ph> event of a component.</source>
          <target state="translated">表示處理元件的 <ph id="ph1">&lt;see cref="E:System.ComponentModel.IComponent.Disposed" /&gt;</ph> 事件的方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.IComponent.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.ComponentModel.IComponent.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">在建立 <ph id="ph1">&lt;xref:System.ComponentModel.IComponent.Disposed&gt;</ph> 委派時，您要識別處理事件的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.IComponent.Disposed">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.IComponent.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.IComponent.Disposed">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">如需事件處理常式委派的詳細資訊，請參閱<bpt id="p1">[</bpt>NIB： 事件和委派<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.IComponent.Site">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>.</source>
          <target state="translated">取得或設定與 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 相關聯的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IComponent.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object associated with the component; or <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if the component does not have a site.</source>
          <target state="translated">與元件相關聯的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 物件；或為 <ph id="ph2">&lt;see langword="null" /&gt;</ph> (如果元件沒有站台)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.IComponent.Site">
          <source>Sites can also serve as a repository for container-specific, per-component information, such as the component name.</source>
          <target state="translated">站台也可做為特定的容器，每個元件的資訊，例如該元件名稱的儲存機制中。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>