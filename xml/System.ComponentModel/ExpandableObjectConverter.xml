<Type Name="ExpandableObjectConverter" FullName="System.ComponentModel.ExpandableObjectConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2be6636a8ebf07d26a3dbfc34376628f081d64c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36703298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpandableObjectConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandableObjectConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandableObjectConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandableObjectConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ExpandableObjectConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供型別轉換子將可擴展的物件與其他各種表示相互轉換。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會加入屬性的物件上的方法和屬性所提供<xref:System.ComponentModel.TypeConverter>。 若要讓屬性的型別中可展開<xref:System.Windows.Forms.PropertyGrid>，這個屬性指定<xref:System.ComponentModel.TypeConverter>的標準實作<xref:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported%2A>和<xref:System.ComponentModel.ExpandableObjectConverter.GetProperties%2A>。 將具有子屬性標記<xref:System.ComponentModel.NotifyParentPropertyAttribute>以確保正確的行為在<xref:System.Windows.Forms.PropertyGrid>控制項。  
  
> [!NOTE]
>  您永遠不應該直接存取型別轉換子。 請改為使用中呼叫適當的轉換程式<xref:System.ComponentModel.TypeDescriptor>。 如需詳細資訊，請參閱中的範例<xref:System.ComponentModel.TypeConverter>基底類別。  
  
 如需型別轉換子的詳細資訊，請參閱<xref:System.ComponentModel.TypeConverter>基底類別和[How to： 實作類型轉換器](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)。  
  
   
  
## Examples  
 下列程式碼範例會將轉換類型的變數<xref:System.Drawing.Printing.Margins>至字串變數。  
  
 [!code-cpp[Converters#26](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#26)]
 [!code-csharp[Converters#26](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#26)]
 [!code-vb[Converters#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#26)]  
  
 下列程式碼範例示範如何使用<xref:System.ComponentModel.NotifyParentPropertyAttribute>和<xref:System.ComponentModel.ExpandableObjectConverter>類別來建立自訂控制項上可展開的屬性。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.ComponentModel.NotifyParentPropertyAttribute>類別。  
  
 [!code-csharp[System.ComponentModel.ExpandableObjectConverter#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/CS/DemoControl.cs#3)]
 [!code-vb[System.ComponentModel.ExpandableObjectConverter#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ExpandableObjectConverter/VB/DemoControl.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NotifyParentPropertyAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandableObjectConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ExpandableObjectConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandableObjectConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ComponentModel.ExpandableObjectConverter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="expandableObjectConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="value">
          <see cref="T:System.Object" />，表示要其取得其屬性的物件型別。</param>
        <param name="attributes">
          <see cref="T:System.Attribute" /> 型別的陣列，可當做篩選條件使用。</param>
        <summary>取得由值參數所指定的物件型別的屬性集合。</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有為這個元件所公開的屬性；如果沒有屬性，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用 `context` 參數來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 `null`，所以一定要檢查。 甚至，內容物件上的屬性可能會傳回 `null`。  
  
 `attributes`陣列將會用來篩選陣列。 `attributes`可以有混合<xref:System.Type>和<xref:System.Attribute>物件。 篩選是由下列規則定義：  
  
-   A<xref:System.Type>物件將會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。  
  
-   如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。  
  
-   如果屬性的執行個體<xref:System.Attribute>，屬性必須是完全相符，或是將不會包含傳回陣列中。  
  
-   如果<xref:System.Attribute>指定執行個體和它的預設屬性，就會包含傳回陣列中即使沒有任何執行個體<xref:System.Attribute>屬性中。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.NotifyParentPropertyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="expandableObjectConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>使用指定內容取得值，表示這個物件是否使用支援屬性。</summary>
        <returns>
          <see langword="true" />，因為應該呼叫 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> 尋找這個物件的屬性。 這個方法永遠不會傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用 `context` 參數來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 `null`，所以一定要檢查。 甚至，內容物件上的屬性可能會傳回 `null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.NotifyParentPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>