<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29784c7bb8db50596e86f55caea973624c84e3d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="82921-101">會提供轉換實值型別為其他型別，以及存取標準值和子屬性的統一方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="82921-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-102">最常見類型是轉換器的轉換和文字表示。</span><span class="sxs-lookup"><span data-stu-id="82921-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="82921-103">類別的類型轉換器會繫結至具有類別<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="82921-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="82921-104">除非遭到覆寫這個屬性，繼承自這個類別的所有類別會都使用相同的型別轉換子的基底類別。</span><span class="sxs-lookup"><span data-stu-id="82921-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="82921-105">用於一般類型系統的用途，不會存取型別轉換子直接。</span><span class="sxs-lookup"><span data-stu-id="82921-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="82921-106">相反地，使用存取適當的轉換程式<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="82921-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="82921-107">如需詳細資訊，請參閱提供的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="82921-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="82921-108">**請注意**基於 XAML，XAML 處理器會搜尋<xref:System.ComponentModel.TypeConverterAttribute>直接管理，而不是透過<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="82921-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="82921-109">您希望的情況下<xref:System.ComponentModel.TypeDescriptor>從程式碼中，執行個體，或是讓您建立的共用執行個體在 WPF 中資源，是可接受的建構直接不需參考<xref:System.ComponentModel.TypeDescriptor>或其他支援的反映和型別系統。</span><span class="sxs-lookup"><span data-stu-id="82921-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="82921-110">類別衍生自<xref:System.ComponentModel.TypeConverter>通常會被參照 XAML 處理器如何將屬性或初始化文字值轉換從標記 （這是原本就是字串） 的一部分，並產生執行階段表示的物件。</span><span class="sxs-lookup"><span data-stu-id="82921-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="82921-111">自訂型別作者想要的 XAML 支援類型轉換行為，通常會實作<xref:System.ComponentModel.TypeConverter>支援自己唯一類別`ConvertFrom`從字串的行為。</span><span class="sxs-lookup"><span data-stu-id="82921-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="82921-112">此行為可讓從提供做為 XAML 屬性值的字串類型轉換，並提供 XAML 處理器，讓物件可以產生已剖析的物件圖形中，從字串建立物件所需的支援。</span><span class="sxs-lookup"><span data-stu-id="82921-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="82921-113">自訂型別或成員的自訂型別以套用<xref:System.ComponentModel.TypeConverterAttribute>定義，具有屬性參考自訂<xref:System.ComponentModel.TypeConverter>實作。</span><span class="sxs-lookup"><span data-stu-id="82921-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="82921-114">如需詳細資訊，請參閱[類型轉換器 XAML 概觀](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="82921-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82921-115">下列程式碼範例示範如何建立型別轉換子執行個體，並將它繫結至類別。</span><span class="sxs-lookup"><span data-stu-id="82921-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="82921-116">實作轉換器的類別`MyClassConverter`，必須繼承自<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="82921-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="82921-117">當您擁有具有列舉類型的屬性時，查看的列舉值是否有效，才能設定屬性。</span><span class="sxs-lookup"><span data-stu-id="82921-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="82921-118">下一步的程式碼範例需要列舉型別呼叫`MyPropertyEnum`已宣告。</span><span class="sxs-lookup"><span data-stu-id="82921-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="82921-119">另一個常見類型轉換器的用法是將物件轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="82921-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="82921-120">下列程式碼範例會列印出名稱<xref:System.Drawing.Color>儲存在變數`c`。</span><span class="sxs-lookup"><span data-stu-id="82921-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="82921-121">您也可以使用類型轉換器，將值轉換從它的名稱下, 一步的程式碼範例所示。</span><span class="sxs-lookup"><span data-stu-id="82921-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="82921-122">在下列程式碼範例中，您可以使用類型轉換器，以列印出物件支援的標準值集合。</span><span class="sxs-lookup"><span data-stu-id="82921-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="82921-123">繼承自<see cref="T:System.ComponentModel.TypeConverter" />來實作您自己的轉換需求。</span>
        <span class="sxs-lookup">
          <span data-stu-id="82921-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="82921-124">當您繼承自這個類別時，您可以覆寫下列方法：</span>
        <span class="sxs-lookup">
          <span data-stu-id="82921-124">When you inherit from this class, you can override the following methods:</span>
        </span>  
  
-   <span data-ttu-id="82921-125">若要支援自訂類型的轉換，覆寫<see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />， <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />， <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />，和<see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />方法。</span><span class="sxs-lookup"><span data-stu-id="82921-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="82921-126">若要將必須重新建立物件來變更其值的類型的轉換，覆寫<see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />和<see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />方法。</span><span class="sxs-lookup"><span data-stu-id="82921-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="82921-127">若要轉換類型，可支援屬性，覆寫<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />和<see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />方法。</span><span class="sxs-lookup"><span data-stu-id="82921-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span><span data-ttu-id="82921-128">如果您想要轉換的類別並沒有屬性，而且您需要實作屬性，您可以使用<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />類別作為基底實作的屬性描述元。</span><span class="sxs-lookup"><span data-stu-id="82921-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span><span data-ttu-id="82921-129">當您繼承自<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />，您必須覆寫<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />和<see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="82921-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="82921-130">若要轉換類型，可支援標準值，覆寫<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />， <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />，<see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />和<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />方法。</span><span class="sxs-lookup"><span data-stu-id="82921-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span><block subset="none" type="note"><para><span data-ttu-id="82921-131">您衍生的型別可能會標示為<see langword="internal" />或<see langword="private" />，但您的型別執行個體可以建立與<see cref="T:System.ComponentModel.TypeDescriptor" />類別。</span><span class="sxs-lookup"><span data-stu-id="82921-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span><span data-ttu-id="82921-132">請勿撰寫假設呼叫端不安全的程式碼受到信任。</span><span class="sxs-lookup"><span data-stu-id="82921-132">Do not write insecure code by assuming the caller is trusted.</span></span><span data-ttu-id="82921-133">相反地，假設呼叫端可能會建立類型執行個體，在部分信任中。</span><span class="sxs-lookup"><span data-stu-id="82921-133">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block><span data-ttu-id="82921-134">如需一般 (非 XAML) 用途的型別轉換子的詳細資訊，請參閱[How to： 實作類型轉換器](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)或[一般化類型轉換](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)。</span><span class="sxs-lookup"><span data-stu-id="82921-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-135">初始化 <see cref="T:System.ComponentModel.TypeConverter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-136">傳回一個值，指出這個轉換子是否可將某一型別的物件轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-136">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="82921-137">
            <see cref="T:System.Type" />，表示要轉換的來源型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-138">傳回值，指出這個轉換子是否可將指定之型別的物件轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-139">如果這個轉換子可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-139">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-140">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="82921-141">永遠不會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="82921-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-142">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="82921-143">
            <see cref="T:System.Type" />，表示要轉換的來源型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-144">傳回這個轉換子是否可以使用指定的內容，將指定類型的物件轉換成這個轉換子的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-145">如果這個轉換子可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-145">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-146">在這個類別中實作時，這個方法會傳回`false`，除非`sourceType`是<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="82921-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-147">請覆寫這個方法以提供您自己的轉換需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-147">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="82921-148">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-149">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-149">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-150">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-150">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-151">傳回值，指出這個轉換子是否可以將物件轉換成指定的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-151">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="82921-152">
            <see cref="T:System.Type" />，代表您想要轉換成的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-153">傳回值，指出這個轉換子是否可以將物件轉換成指定的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-153">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-154">如果這個轉換子可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-154">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-155">如果`destinationType`是一個字串的預設實作<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="82921-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-156">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82921-157">
            <see cref="T:System.Type" />，代表您想要轉換成的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-158">傳回這個轉換器是否可以使用指定的內容，將物件轉換成指定的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-159">如果這個轉換子可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-159">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-160">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-161">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-162">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-163">如果`destinationType`是一個字串的預設實作<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="82921-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-164">請覆寫這個方法以提供您自己的轉換需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-164">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-165">會將指定值轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-165">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-166">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-166">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-167">會將指定值轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-167">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-168">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-168">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-169">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-169">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-170">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82921-171">要用作目前文化特性的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-172">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-172">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-173">使用指定的內容和文化特性資訊，將指定物件轉換為這個轉換子的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-173">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-174">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-174">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-175">自訂型別作者想要的 XAML 支援類型轉換行為，通常會實作<xref:System.ComponentModel.TypeConverter>支援類別<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>從字串的行為。</span><span class="sxs-lookup"><span data-stu-id="82921-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="82921-176">此行為可讓從提供做為 XAML 屬性值的字串類型轉換，並提供 XAML 處理器，讓物件可以產生已剖析的物件圖形中，從字串建立物件所需的支援。</span><span class="sxs-lookup"><span data-stu-id="82921-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="82921-177">自訂型別或成員的自訂型別以套用<xref:System.ComponentModel.TypeConverterAttribute>定義，具有屬性參考自訂<xref:System.ComponentModel.TypeConverter>實作。</span><span class="sxs-lookup"><span data-stu-id="82921-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="82921-178">基於 XAML，您不通常提供分支實作根據`culture`。</span><span class="sxs-lookup"><span data-stu-id="82921-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="82921-179">這是因為在開發環境內容中，先行編譯的 XAML 時，執行階段的特定文化特性資訊 XAML 無關 XAML 類型轉換。</span><span class="sxs-lookup"><span data-stu-id="82921-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="82921-180">如需詳細資訊，請參閱[類型轉換器 XAML 概觀](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="82921-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-181">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-181">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-182">請覆寫這個方法以提供您自己的轉換需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-182">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="82921-183">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-184">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-184">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-185">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-185">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="82921-186">用來支援 XAML 和自訂類型的型別轉換子的實作模式，請參閱[類型轉換器 XAML 概觀](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-187">會使用不因文化特性而異，將值轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-187">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="82921-188">要進行轉換的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-188">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-189">會使用不因文化特性而異，將指定字串轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-189">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-190">表示轉換文字的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-190">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-191">預設的實作 (Implementation) 一定會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-192">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-192">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-193">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="82921-194">要進行轉換的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-194">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-195">會使用不區分的文化特性和指定的內容，將指定的字串轉換為這個轉換子的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-196">表示轉換文字的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-196">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-197">如果字串無法轉換為適當的物件，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="82921-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="82921-198">預設的實作 (Implementation) 一定會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="82921-199">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-200">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-201">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-202">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-202">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-203">會將指定的文字轉換成物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-203">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="82921-204">要轉換物件的文字表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-204">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-205">會將指定的文字轉換成物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-205">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-206">表示轉換文字的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-206">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-207">預設的實作 (Implementation) 一定會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82921-208">如需此函式的範例，請參閱<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="82921-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-209">字串無法轉換為適當的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-209">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-210">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="82921-211">要進行轉換的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-211">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-212">會使用指定的內容，將指定文字轉換為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-212">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-213">表示轉換文字的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-213">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-214">如果字串無法轉換為適當的物件，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="82921-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="82921-215">預設的實作 (Implementation) 一定會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="82921-216">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-217">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-218">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-219">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-219">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-220">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82921-221">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-221">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="82921-222">如果傳遞 <see langword="null" />，則會採用目前的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-222">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="82921-223">要進行轉換的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-223">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-224">會使用指定內容和文化特性資訊，將指定文字轉換為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-224">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-225">表示轉換文字的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-225">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-226">如果字串無法轉換為適當的物件，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="82921-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="82921-227">預設的實作 (Implementation) 一定會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="82921-228">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-229">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-230">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-231">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-231">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-232">會將指定值物件轉換成指定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-232">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-233">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-233">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82921-234">要轉換 <c>value</c> 參數的目標 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-235">會使用引數，將指定值物件轉換成指定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-235">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-236">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-236">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-237">要轉換的最常見的類型是字串物件。</span><span class="sxs-lookup"><span data-stu-id="82921-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="82921-238">這個實作會呼叫<xref:System.Object.ToString%2A>物件上的物件是否有效，而且如果目標類型是字串。</span><span class="sxs-lookup"><span data-stu-id="82921-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="82921-239">
            <paramref name="destinationType" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-240">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-240">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-241">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82921-242">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-242">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="82921-243">如果傳遞 <see langword="null" />，則會採用目前的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-243">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-244">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-244">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82921-245">要轉換 <c>value</c> 參數的目標 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-246">使用指定的內容和文化特性資訊，將指定值物件轉換成指定類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-246">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-247">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-247">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-248">最常用於轉換的型別為相互轉換字串物件。</span><span class="sxs-lookup"><span data-stu-id="82921-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="82921-249">這個實作會呼叫<xref:System.Object.ToString%2A>物件上的物件是否有效，而且如果目標類型是字串。</span><span class="sxs-lookup"><span data-stu-id="82921-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="82921-250">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-251">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-252">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-253">自訂型別作者想要的 XAML 支援類型轉換行為，通常會實作<xref:System.ComponentModel.TypeConverter>支援類別<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>從字串的行為。</span><span class="sxs-lookup"><span data-stu-id="82921-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="82921-254">可能也會實作這些型別轉換子<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>來支援 XAML 序列化。</span><span class="sxs-lookup"><span data-stu-id="82921-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="82921-255">某些 XAML 序列化的情況下無法適當地處理與<xref:System.ComponentModel.TypeConverter>單獨。</span><span class="sxs-lookup"><span data-stu-id="82921-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="82921-256">在這些情況下，可能有必要也定義<xref:System.Windows.Markup.ValueSerializer>可處理的序列化情況，否則會由處理<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="82921-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="82921-257">如需詳細資訊，請參閱<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="82921-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="82921-258">
            <paramref name="destinationType" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-259">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-259">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-260">請覆寫這個方法以提供您自己的轉換需求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-260">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="82921-261">用來支援 XAML 和自訂類型的型別轉換子的實作模式，請參閱[類型轉換器 XAML 概觀](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-262">會將指定值轉換成不因文化特性而異的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-262">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-263">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-263">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-264">會將指定值轉換成不因文化特性而異的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-264">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-265">
            <see cref="T:System.String" />，表示轉換的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-265">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-266">`context`參數可以用來擷取的環境的這個轉換子所叫用的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="82921-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="82921-267">這可能是 `null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-267">This can be `null`, so always check.</span></span> <span data-ttu-id="82921-268">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-269">不同的值格式子的實作，可能會將傳回的字串到值格式子，來重新建立物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="82921-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-270">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-270">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-271">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-272">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-272">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-273">會使用指定的內容，將指定值轉換成不因文化特性而異的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-274">
            <see cref="T:System.String" />，表示轉換的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-274">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-275">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-276">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-277">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-278">不同的值格式子的實作，可能會將傳回的字串到值格式子，來重新建立物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="82921-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-279">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-279">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-280">會將指定值轉換成字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-280">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-281">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-281">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-282">會將指定值轉換成字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-282">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-283">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-283">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-284">不同的值格式子的實作，可能會將傳回的字串到值格式子，來重新建立物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="82921-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82921-285">如需這個函式上的範例，請參閱<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="82921-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-286">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-286">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-287">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-288">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-288">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-289">會使用指定的內容，將指定值轉換為字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-289">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-290">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-290">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-291">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-292">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-293">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-294">不同的值格式子的實作，可能會將傳回的字串到值格式子，來重新建立物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="82921-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-295">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-295">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-296">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="82921-297">
            <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-297">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="82921-298">如果傳遞 <see langword="null" />，則會採用目前的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-298">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-299">要進行轉換的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-299">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-300">會使用指定的內容和文化特性資訊，將指定值轉換為字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-300">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-301">
            <see cref="T:System.Object" />，代表轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-301">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-302">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-303">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-304">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-305">不同的值格式子的實作，可能會將傳回的字串到值格式子，來重新建立物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="82921-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-306">無法執行轉換作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-306">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-307">重新建立 <see cref="T:System.Object" />，需為物件提供一組屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="82921-308">
            <see cref="T:System.Collections.IDictionary" />，表示新屬性值的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-309">重新建立 <see cref="T:System.Object" />，需為物件提供一組屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-310">代表指定 <see cref="T:System.Collections.IDictionary" /> 的 <see cref="T:System.Object" />；如果無法建立物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="82921-311">這個方法一律會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-311">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-312">使用此方法不可變的但您想要提供可變更屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="82921-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="82921-313">所提供的字典`propertyValues`參數都有一系列的名稱/值組，從另一個用於每一個屬性傳回<xref:System.ComponentModel.TypeConverter.GetProperties%2A>。</span><span class="sxs-lookup"><span data-stu-id="82921-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-314">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="82921-315">新屬性值的 <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-316">使用指定的內容，建立與這個 <see cref="T:System.ComponentModel.TypeConverter" /> 相關聯之類型的執行個體，並為物件提供一組屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-317">代表指定 <see cref="T:System.Collections.IDictionary" /> 的 <see cref="T:System.Object" />；如果無法建立物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="82921-318">這個方法一律會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-318">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-319">使用此方法不可變的但您想要提供可變更屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="82921-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-320">如果您想要轉換的類型必須重新建立物件來變更其值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-320">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="82921-321">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-322">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-322">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-323">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-323">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="82921-324">所提供的字典<paramref name="propertyValues" />參數都有一系列的名稱/值組，從另一個用於每一個屬性傳回<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-325">要轉換的 <see cref="T:System.Object" />，如果無法取得物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-326">傳回要在無法執行轉換時擲回的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-326">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-327">
            <see cref="T:System.Exception" />，表示無法執行轉換時將擲回的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-328">由這個方法自動擲回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-328">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-329">要轉換的 <see cref="T:System.Object" />，如果無法取得物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="82921-330">
            <see cref="T:System.Type" />，表示轉換嘗試轉換的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-331">傳回要在無法執行轉換時擲回的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-331">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-332">
            <see cref="T:System.Exception" />，表示無法執行轉換時將擲回的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="82921-333">由這個方法自動擲回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-333">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-334">傳回值，指出在這個物件上變更值時是否需要呼叫 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 方法來建立新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-335">傳回值，指出在這個物件上變更值時是否需要呼叫 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 方法來建立新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-336">如果在這個物件上變更屬性需要呼叫 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 來建立新值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-336">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-337">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-338">會使用指定的內容，傳回在這個物件上變更值是否需要呼叫 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 來建立新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-339">如果在這個物件上變更屬性需要呼叫 <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> 來建立新值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-339">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-340">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-341">如果您想要轉換的類型必須重新建立物件來變更其值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-341">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="82921-342">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-343">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-343">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-344">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-344">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-345">傳回由值參數所指定的陣列型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-345">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-346">
            <see cref="T:System.Object" />，指定要取得屬性之陣列的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-347">傳回由值參數所指定的陣列型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-347">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-348">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有為這個資料型別所公開的屬性，如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-349">在這個類別中實作時，這個方法永遠傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="82921-350">根據預設，型別所傳回的屬性。</span><span class="sxs-lookup"><span data-stu-id="82921-350">By default, a type does not return properties.</span></span> <span data-ttu-id="82921-351">可以呼叫此方法的簡單實作<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>正確的資料類型。</span><span class="sxs-lookup"><span data-stu-id="82921-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-352">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-353">
            <see cref="T:System.Object" />，指定要取得屬性之陣列的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-354">會使用指定的內容，傳回由值參數所指定之陣列型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-355">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有為這個資料型別所公開的屬性，如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-356">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-357">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-358">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-359">在這個類別中實作時，這個方法永遠傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="82921-360">根據預設，型別所傳回的屬性。</span><span class="sxs-lookup"><span data-stu-id="82921-360">By default, a type does not return properties.</span></span> <span data-ttu-id="82921-361">可以呼叫此方法的簡單實作<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>正確的資料類型。</span><span class="sxs-lookup"><span data-stu-id="82921-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-362">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-363">
            <see cref="T:System.Object" />，指定要取得屬性之陣列的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="82921-364">
            <see cref="T:System.Attribute" /> 型別的陣列，可當做篩選條件使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-365">使用指定的內容和屬性 (attribute)，傳回由該值參數所指定之陣列類型的屬性 (property) 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-366">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有為這個資料型別所公開的屬性，如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-367">在這個類別中實作時，這個方法永遠傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-368">如果您想要轉換的型別支援屬性，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-368">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="82921-369">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-370">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-370">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-371">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-371">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="82921-372">屬性陣列，用來篩選陣列。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-372">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="82921-373">屬性可以有混合<see cref="T:System.Type" />和<see cref="T:System.Attribute" />物件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="82921-374">篩選是由下列規則定義：</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-374">Filtering is defined by the following rules:</span>
            </span>  
  
-   <span data-ttu-id="82921-375">A<see cref="T:System.Type" />會被視為萬用字元使用，它會比對屬性具有<see cref="T:System.Type" />集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="82921-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="82921-376">如果屬性沒有<see cref="T:System.Attribute" />相同類別的屬性不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="82921-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="82921-377">如果屬性的執行個體<see cref="T:System.Attribute" />，屬性必須是完全相符，或是它不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="82921-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="82921-378">如果<see cref="T:System.Attribute" />指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含傳回陣列中<see cref="T:System.Attribute" />屬性中。</span><span class="sxs-lookup"><span data-stu-id="82921-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-379">傳回值，指出這個物件是否支援屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-379">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-380">傳回值，指出這個物件是否支援屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-380">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-381">如果應該呼叫 <see langword="true" /> 以尋找這個物件的屬性則為 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-381">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-382">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-383">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-384">使用指定的內容，傳回這個物件是否支援屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-384">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-385">如果應該呼叫 <see langword="true" /> 以尋找這個物件的屬性則為 <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-385">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-386">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-387">如果您想要轉換的型別支援屬性，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-387">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="82921-388">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-389">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-389">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-390">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-390">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-391">傳回資料型別的標準值集合，這個型別轉換子 (Type Converter) 是針對這個資料型別而設計。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-391">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-392">從為這個型別轉換子所設計的資料型別預設內容中，會傳回標準值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-393">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 含有標準有效值的集合，如果資料型別不支援標準值集合，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-394">在這個類別中實作時，這個方法永遠傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-395">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供可用於擷取轉換子叫用 (Invoke) 環境之其他資訊的格式內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="82921-396">這個參數或這個參數的屬性可為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-396">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-397">提供格式內容時，傳回此類型轉換子所針對資料類型的標準值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-398">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 會保留標準有效值的集合，如果資料型別不支援標準值集合，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-399">在中實作<xref:System.ComponentModel.TypeConverter>，這個方法一律會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="82921-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82921-400">如需這個函式上的範例，請參閱<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="82921-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-401">如果您想要轉換的型別支援標準值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-401">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-402">傳回值，指出從 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 所傳回的標準值集合是否為獨佔清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-403">傳回值，指出從 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 所傳回的標準值集合是否為獨佔清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-404">如果從 <see langword="true" /> 傳回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的獨占清單則為 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />，如果其他的值為可能則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-404">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-405">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="82921-406">如果是獨占清單 (例如在列舉資料型別中)，則沒有其他有效值。</span><span class="sxs-lookup"><span data-stu-id="82921-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="82921-407">如果不是獨占清單，則除了 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 方法提供的標準值清單之外，可能還有其他有效值。</span><span class="sxs-lookup"><span data-stu-id="82921-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="82921-408">如果是獨占值，則 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 傳回的清單應該不允許編輯這些值。</span><span class="sxs-lookup"><span data-stu-id="82921-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-409">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-410">使用指定的內容，傳回從 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 所傳回的標準值集合是否為可能值的獨占清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-411">如果從 <see langword="true" /> 傳回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的獨占清單則為 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />，如果其他的值為可能則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-411">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-412">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="82921-413">如果是獨占清單 (例如在列舉資料型別中)，則沒有其他有效值。</span><span class="sxs-lookup"><span data-stu-id="82921-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="82921-414">如果不是獨占清單，則除了 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 方法提供的標準值清單之外，可能還有其他有效值。</span><span class="sxs-lookup"><span data-stu-id="82921-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="82921-415">如果是獨占值，則 <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> 傳回的清單應該不允許編輯這些值。</span><span class="sxs-lookup"><span data-stu-id="82921-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-416">如果您想要轉換的型別支援標準值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-416">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="82921-417">
              <paramref name="context" /> 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="82921-418">這個參數可以是<see langword="null" />，所以一定要檢查。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-418">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="82921-419">甚至，內容物件上的屬性可能會傳回 <see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-419">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-420">傳回這個物件是否支援可以從清單中選取的標準值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-420">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82921-421">傳回這個物件是否支援可以從清單中選取的標準值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-421">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-422">如果應該呼叫 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 以尋找物件支援的通用值集合，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-422">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-423">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-424">會使用指定的內容傳回，這個物件是否支援可從清單中挑選的標準值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-425">如果應該呼叫 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 以尋找物件支援的通用值集合，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-425">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-426">在這個類別中實作時，這個方法永遠傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="82921-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="82921-427">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-428">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-429">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-430">如果您想要轉換的型別支援標準值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-430">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82921-431">會傳回指定值物件是否對這個型別有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-431">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82921-432">要測試有效性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-432">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-433">會傳回指定值物件是否對這個型別有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-433">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-434">如果指定值對這個物件有效，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-434">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-435">從開始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法攔截例外狀況，從<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>和<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82921-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="82921-436">如果輸入的值類型會導致<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>傳回`false`，或如果輸入的值會導致<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>引發例外狀況，<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="82921-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="82921-437">若要啟用舊版行為，將下列行插入應用程式，例如 application1.exe.config 的組態檔。</span><span class="sxs-lookup"><span data-stu-id="82921-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-438">如果您想要轉換的類型支援可驗證的標準值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-438">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="82921-439">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />方法用來驗證的型別內的值而不是判斷<paramref name="value" />可以轉換成指定型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="82921-440">例如，<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />可用來判斷指定的值是否為有效的列舉型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="82921-441">如需範例，請參閱 <see cref="T:System.ComponentModel.EnumConverter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="82921-442">您可以撰寫您自己<c>WillConvertSucceed</c>方法包裝<see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" />和<see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />例外狀況區塊中的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="82921-443">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="82921-444">要測試有效性的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-444">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-445">傳回指定值物件對這個類型和指定的內容是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-445">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-446">如果指定值對這個物件有效，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-446">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-447">`context` 參數可以用於擷取環境的其他資訊，而這個轉換子就是從該環境叫用的。</span><span class="sxs-lookup"><span data-stu-id="82921-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="82921-448">這個參數可以是`null`，所以一定要檢查。</span><span class="sxs-lookup"><span data-stu-id="82921-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="82921-449">甚至，內容物件上的屬性可能會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="82921-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="82921-450">從開始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法攔截例外狀況，從<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>和<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="82921-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="82921-451">如果輸入的值類型會導致<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>傳回`false`，或如果輸入的值會導致<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>引發例外狀況，<xref:System.ComponentModel.TypeConverter.IsValid%2A>方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="82921-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="82921-452">若要啟用舊版行為，將下列行插入應用程式，例如 application1.exe.config 的組態檔。</span><span class="sxs-lookup"><span data-stu-id="82921-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="82921-453">如需此函式的範例，請參閱<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="82921-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="82921-454">如果您想要轉換的類型支援可驗證的標準值，請覆寫這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-454">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="82921-455">
              <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />方法用來驗證的型別內的值而不是判斷<paramref name="value" />可以轉換成指定型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="82921-456">例如，<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />可用來判斷指定的值是否為有效的列舉型別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="82921-457">如需範例，請參閱 <see cref="T:System.ComponentModel.EnumConverter" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="82921-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="82921-458">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有要排序的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="82921-459">依據您要屬性在集合中出現之順序的名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-459">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82921-460">排序屬性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-460">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82921-461">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，包含已排序的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82921-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82921-462">集合中所有不存在於名稱的陣列的屬性會依字母順序加入至結尾。</span><span class="sxs-lookup"><span data-stu-id="82921-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="82921-463">如果`names`參數是空陣列或`null`，依字母順序排序集合中的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="82921-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>