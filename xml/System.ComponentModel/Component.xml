<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Component.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15810228b07f7debca98289590cfbc9b70685e2e16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">810228b07f7debca98289590cfbc9b70685e2e16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Provides the base implementation for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> interface and enables object sharing between applications.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 介面的基底實作，並啟用應用程式之間的物件共用。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is the base class for all components in the common language runtime that marshal by reference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 所參考的封送處理為 common language runtime 中的所有元件的基底類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is remotable and derives from the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 在遠端使用，並衍生自<ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> provides an implementation of the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 提供的實作<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> provides an implementation of <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> that marshals by value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>提供的實作<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>，封送處理的值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>You can host a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> in any object that implements the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface, and you can query and get services from its container.</source>
          <target state="translated">您可以主控<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>中實作的任何物件<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>介面，而且您可以查詢，並從其容器取得服務。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container creates an <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> for each <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> it contains.</source>
          <target state="translated">容器會建立<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>每個<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>其中的內容。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container uses the site to manage the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> and is used by the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> to communicate with its container.</source>
          <target state="translated">容器會使用網站管理<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>並且由<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>與其容器通訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> should release resources explicitly by calls to its <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method, without waiting for automatic memory management through an implicit call to the <ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>應該藉由呼叫明確釋放資源及其<ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法，而不需等待的隱含呼叫透過自動記憶體管理<ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>When a <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> is disposed, all components within the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> are also disposed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>處置中的所有元件<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>也處置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Gets a value indicating whether the component can raise an event.</source>
          <target state="translated">取得值，指出元件是否能引發事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component can raise events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元件可以引發事件，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default implementation of this property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">這個屬性的預設實作一定會傳回<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> class should override this property to provide the ability to disable the raising of events.</source>
          <target state="translated">類別繼承自<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>類別應該覆寫這個屬性，以讓您能夠停用事件引發。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>For example, in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, if the control is being hosted as an ActiveX control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property returns <ph id="ph3">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">例如，在<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別，如果控制項正在裝載 ActiveX 控制項，為<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>屬性會傳回<ph id="ph3">`false`</ph>如果 ActiveX 控制項已凍結其事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>If you override this method in a deriving class and change it to return <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> collection returned by the <ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph> property returns <ph id="ph4">&lt;see langword="null" /&gt;</ph> for an event.</source>
          <target state="translated">如果您覆寫這個方法在衍生類別，並將它變更為傳回<ph id="ph1">&lt;see langword="false" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>所傳回集合<ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph>屬性會傳回<ph id="ph4">&lt;see langword="null" /&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Events can still be added and removed from the collection, but the collection's <ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph> property will always return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">事件可以仍然新增和移除集合中，但集合<ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph>屬性一律會傳回<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Container">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">取得包含 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>，可能包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>，如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未封裝在 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>，則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">在容器中的元件會追蹤在第一個在先進先出清單中，其亦會定義元件的容器內的順序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The last component added is the last component in the list.</source>
          <target state="translated">最後加入的元件是在清單中的最後一個元件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.DesignMode">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is currently in design mode.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 目前是否處於設計模式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is in design mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 處於設計模式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source>The design mode indicator is stored in the <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; therefore, if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> does not have an <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it, the value of this property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">設計模式指標也會儲存在<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; 因此，如果<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>沒有<ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph>與它相關聯，這個屬性的值是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Component.Disposed">
          <source>Occurs when the component is disposed by a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> method.</source>
          <target state="translated">當此元件由 <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 方法的呼叫處置時發生。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">在建立 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> 委派時，您要識別處理事件的方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>For more information about the event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需事件處理常式委派的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Events">
          <source>Gets the list of event handlers that are attached to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">取得附加在這個 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 上的事件處理常式清單。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>，提供這個元件的委派。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>NIB： 使用事件<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">釋出 Unmanaged 資源並執行其他清除作業後，記憶體回收才能重新回收 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">應用程式程式碼不應該呼叫這個方法。物件的<ph id="ph1">`Finalize`</ph>方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Finalize 方法和解構函式<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清除 Unmanaged 資源上<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>，和<bpt id="p3">[</bpt>覆寫 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>A service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 所提供的服務。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>Returns an object that represents a service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> or by its <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">傳回表示 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 或其 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> 所提供之服務的物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents a service provided by the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not provide the specified service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 提供的服務，如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 沒有提供指定的服務，則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Site">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>, the <ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not have an <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with it, or the <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is removed from its <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated">與 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 關聯的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未封裝在 <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>、<ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 沒有關聯的 <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>，或 <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 從其 <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 移除，則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> will have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>必須<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>如果加入至<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>指派<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>給它。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is responsible for assigning the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>會負責將指派<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>至<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Changing the value of the component's <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> does not necessarily change the name of the site the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is assigned to.</source>
          <target state="translated">變更元件的值<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>並不一定會變更的網站名稱<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>指派給。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph> property should be set only by an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>屬性應該僅設定<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The property value is <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">屬性值是<ph id="ph1">`null`</ph>如果<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>移除從其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Assigning <ph id="ph1">`null`</ph> to this property does not necessarily remove the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> from the <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">指派<ph id="ph1">`null`</ph>給這個屬性不一定會移除<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>從<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> might or might not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能或可能沒有名稱。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name must be unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>是指定名稱之後，名稱必須是唯一的其他<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>內的物件及其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; therefore, you can only name a <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> if it has an <ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>儲存名稱<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; 因此，您只可以命名<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>有<ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph>與其相關聯。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated">傳回任何包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 名稱的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">不應覆寫此方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated">任何包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 名稱的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，如果 <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 未命名，則為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能或可能沒有名稱。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>是指定名稱之後，名稱是唯一的其他<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>內的物件及其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>儲存名稱<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>只能有<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>如果加入至<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>指派<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>給它。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>