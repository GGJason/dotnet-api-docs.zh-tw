<Type Name="DesignerAttribute" FullName="System.ComponentModel.DesignerAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4482e895f0273d9899d45ae2730aecbc448144cd" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48766469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DesignerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DesignerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DesignerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ad87f-101">指定用來實作元件之設計階段服務的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad87f-101">Specifies the class used to implement design-time services for a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-102">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-102">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="ad87f-103">使用<xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A>找不到設計工具的基底類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="ad87f-103">Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type.</span></span> <span data-ttu-id="ad87f-104">使用<xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A>屬性來取得這個成員與相關聯的設計工具型別名稱。</span><span class="sxs-lookup"><span data-stu-id="ad87f-104">Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.</span></span>  
  
 <span data-ttu-id="ad87f-105">如需詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="ad87f-105">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad87f-106">下列範例會建立類別，稱為`MyForm`。</span><span class="sxs-lookup"><span data-stu-id="ad87f-106">The following example creates a class called `MyForm`.</span></span> <span data-ttu-id="ad87f-107">`MyForm` 有兩個屬性<xref:System.ComponentModel.DesignerAttribute>，指定此類別會使用<xref:System.Windows.Forms.Design.DocumentDesigner>，，<xref:System.ComponentModel.DesignerCategoryAttribute>指定<xref:System.ComponentModel.DesignerCategoryAttribute.Form>類別。</span><span class="sxs-lookup"><span data-stu-id="ad87f-107">`MyForm` has two attributes, a <xref:System.ComponentModel.DesignerAttribute> that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.</span></span>  
  
 [!code-cpp[Classic DesignerAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DesignerAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic DesignerAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ad87f-108">下一個範例中建立的執行個體`MyForm`。</span><span class="sxs-lookup"><span data-stu-id="ad87f-108">The next example creates an instance of `MyForm`.</span></span> <span data-ttu-id="ad87f-109">然後它取得的屬性的類別，擷取<xref:System.ComponentModel.DesignerAttribute>，並會列印在設計工具的名稱。</span><span class="sxs-lookup"><span data-stu-id="ad87f-109">Then it gets the attributes for the class, extracts the <xref:System.ComponentModel.DesignerAttribute>, and prints the name of the designer.</span></span>  
  
 [!code-cpp[Classic DesignerAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DesignerAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic DesignerAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ad87f-110">初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-110">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute designerTypeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerTypeName">
          <span data-ttu-id="ad87f-111">針對這個屬性所繫結至之元件提供設計階段服務的型別，其完整名稱的串連，以及這個型別所在的組件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-111">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-112">使用提供設計階段服務的型別名稱來初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the name of the type that provides design-time services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-113">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-113">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (Type designerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type designerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(Type ^ designerType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute designerType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerType">
          <span data-ttu-id="ad87f-114">
            <see cref="T:System.Type" />，表示為與這個屬性繫結的元件提供設計階段服務的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-114">A <see cref="T:System.Type" /> that represents the class that provides design-time services for the component this attribute is bound to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-115">使用提供設計階段服務的型別來初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-115">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the type that provides design-time services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-116">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-116">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName, string designerBaseTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName, string designerBaseTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String, designerBaseTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName, System::String ^ designerBaseTypeName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string * string -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerTypeName, designerBaseTypeName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
        <Parameter Name="designerBaseTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="designerTypeName">
          <span data-ttu-id="ad87f-117">針對這個屬性所繫結至之元件提供設計階段服務的型別，其完整名稱的串連，以及這個型別所在的組件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-117">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span>
          </span>
        </param>
        <param name="designerBaseTypeName">
          <span data-ttu-id="ad87f-118">與設計工具類別相關的基底類別的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-118">The fully qualified name of the base class to associate with the designer class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-119">使用設計工具型別和設計工具的基底類別 (Base Class) 來初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-119">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the designer type and the base class for the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-120">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-120">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="ad87f-121">`designerBaseTypeName`參數可讓您將多個類型特定類別的設計工具的連結。</span><span class="sxs-lookup"><span data-stu-id="ad87f-121">The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (string designerTypeName, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string designerTypeName, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerTypeName As String, designerBaseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(System::String ^ designerTypeName, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : string * Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerTypeName, designerBaseType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerTypeName" Type="System.String" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerTypeName">
          <span data-ttu-id="ad87f-122">針對這個屬性所繫結至之元件提供設計階段服務的型別，其完整名稱的串連，以及這個型別所在的組件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-122">The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="ad87f-123">
            <see cref="T:System.Type" />，表示與 <c>designerTypeName</c> 建立關聯的基底類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-123">A <see cref="T:System.Type" /> that represents the base class to associate with the <c>designerTypeName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-124">使用設計工具類別的名稱和設計工具的基底類別來初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-124">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class, using the name of the designer class and the base class for the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-125">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-125">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="ad87f-126">`designerBaseType`參數可讓您將多個類型特定類別的設計工具的連結。</span><span class="sxs-lookup"><span data-stu-id="ad87f-126">The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerAttribute (Type designerType, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type designerType, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (designerType As Type, designerBaseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerAttribute(Type ^ designerType, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DesignerAttribute : Type * Type -&gt; System.ComponentModel.DesignerAttribute" Usage="new System.ComponentModel.DesignerAttribute (designerType, designerBaseType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="designerType" Type="System.Type" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="designerType">
          <span data-ttu-id="ad87f-127">
            <see cref="T:System.Type" />，表示為與這個屬性繫結的元件提供設計階段服務的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-127">A <see cref="T:System.Type" /> that represents the class that provides design-time services for the component this attribute is bound to.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="ad87f-128">
            <see cref="T:System.Type" />，表示與 <c>designerType</c> 建立關聯的基底類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-128">A <see cref="T:System.Type" /> that represents the base class to associate with the <c>designerType</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-129">使用設計工具的型別和設計工具基底類別來初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-129">Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerAttribute" /> class using the types of the designer and designer base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-130">您用於設計階段服務的類別必須實作<xref:System.ComponentModel.Design.IDesigner>介面。</span><span class="sxs-lookup"><span data-stu-id="ad87f-130">The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.</span></span>  
  
 <span data-ttu-id="ad87f-131">`designerBaseType`參數可讓您將多個類型特定類別的設計工具的連結。</span><span class="sxs-lookup"><span data-stu-id="ad87f-131">The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerBaseTypeName">
      <MemberSignature Language="C#" Value="public string DesignerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DesignerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DesignerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerBaseTypeName : string" Usage="System.ComponentModel.DesignerAttribute.DesignerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad87f-132">取得這個設計工具的基底型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-132">Gets the name of the base type of this designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad87f-133">這個設計工具的基底型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-133">The name of the base type of this designer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTypeName">
      <MemberSignature Language="C#" Value="public string DesignerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DesignerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.DesignerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DesignerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerTypeName : string" Usage="System.ComponentModel.DesignerAttribute.DesignerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad87f-134">取得與這個設計工具屬性相關的設計工具型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-134">Gets the name of the designer type associated with this designer attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad87f-135">與這個設計工具屬性相關的設計工具型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-135">The name of the designer type associated with this designer attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="designerAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ad87f-136">測試其數值相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-136">The object to test the value equality of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ad87f-137">傳回值，表示指定的物件值是否等於目前的 <see cref="T:System.ComponentModel.DesignerAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-137">Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DesignerAttribute" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad87f-138">如果指定的物件值等於目前的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-138">
              <see langword="true" /> if the value of the given object is equal to that of the current; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DesignerAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="designerAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ad87f-139">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-139">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ad87f-140">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-140">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DesignerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.DesignerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad87f-141">取得此屬性型別的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-141">Gets a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ad87f-142">此屬性型別的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad87f-142">A unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad87f-143">它是藉由篩選演算法用來識別兩個都是相同類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="ad87f-143">It is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="ad87f-144">對於大部分的屬性，這只會傳回<xref:System.Type>屬性的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ad87f-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="ad87f-145"><xref:System.ComponentModel.DesignerAttribute> 覆寫為包含設計工具的基底類型的類型。</span><span class="sxs-lookup"><span data-stu-id="ad87f-145"><xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>