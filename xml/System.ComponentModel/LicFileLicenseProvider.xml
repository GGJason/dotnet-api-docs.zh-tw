<Type Name="LicFileLicenseProvider" FullName="System.ComponentModel.LicFileLicenseProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4419962595c8c5a58f62fe680ed21620082c3d1c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LicFileLicenseProvider : System.ComponentModel.LicenseProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LicFileLicenseProvider extends System.ComponentModel.LicenseProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.LicFileLicenseProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LicFileLicenseProvider&#xA;Inherits LicenseProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LicFileLicenseProvider : System::ComponentModel::LicenseProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.LicenseProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="14caa-101">提供 <see cref="T:System.ComponentModel.LicenseProvider" /> 的實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14caa-101">Provides an implementation of a <see cref="T:System.ComponentModel.LicenseProvider" />.</span>
      </span>
      <span data-ttu-id="14caa-102">提供者 (Provider) 運作的方式與 Microsoft .NET Framework 標準授權模型類似。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14caa-102">The provider works in a similar fashion to the Microsoft .NET Framework standard licensing model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14caa-103"><xref:System.ComponentModel.LicFileLicenseProvider>提供<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>和<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14caa-103">The <xref:System.ComponentModel.LicFileLicenseProvider> offers <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> and <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> methods.</span></span> <span data-ttu-id="14caa-104"><xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法會判斷是否<xref:System.ComponentModel.License.LicenseKey%2A>擷取<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>方法都是有效。</span><span class="sxs-lookup"><span data-stu-id="14caa-104">The <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method determines whether the <xref:System.ComponentModel.License.LicenseKey%2A> retrieved by the <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> method is valid.</span></span> <span data-ttu-id="14caa-105">當您繼承自這個類別時，您可以覆寫<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法以提供您自己的驗證邏輯。</span><span class="sxs-lookup"><span data-stu-id="14caa-105">When you inherit from this class, you can override the <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method to provide your own validation logic.</span></span>  
  
 <span data-ttu-id="14caa-106">這個類別會提供類似 COM 授權的授權功能存在，而且使用文字授權檔案。</span><span class="sxs-lookup"><span data-stu-id="14caa-106">This class exists to provide similar licensing functionality to COM licensing and uses text license files.</span></span>  
  
 <span data-ttu-id="14caa-107">如需有關授權的詳細資訊，請參閱[How to： 授權元件和控制項](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)。</span><span class="sxs-lookup"><span data-stu-id="14caa-107">For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14caa-108">下列範例會建立授權的控制項使用<xref:System.ComponentModel.LicenseManager.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14caa-108">The following example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method.</span></span> <span data-ttu-id="14caa-109">它會使用<xref:System.ComponentModel.LicFileLicenseProvider>授權管理員。</span><span class="sxs-lookup"><span data-stu-id="14caa-109">It uses <xref:System.ComponentModel.LicFileLicenseProvider> for the license manager.</span></span>  
  
 [!code-cpp[Classic LicenseManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic LicenseManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LicenseManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic LicenseManager Example/CS/source.cs#1)]
 [!code-vb[Classic LicenseManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic LicenseManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.License" />
    <altmember cref="T:System.ComponentModel.LicenseContext" />
    <altmember cref="T:System.ComponentModel.LicenseException" />
    <altmember cref="T:System.ComponentModel.LicenseManager" />
    <altmember cref="T:System.ComponentModel.LicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
    <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
    <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LicFileLicenseProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LicFileLicenseProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14caa-110">初始化 <see cref="T:System.ComponentModel.LicFileLicenseProvider" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-110">Initializes a new instance of the <see cref="T:System.ComponentModel.LicFileLicenseProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="protected virtual string GetKey (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetKey(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetKey(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="14caa-111">要傳回索引鍵的物件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-111">The object type to return the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14caa-112">傳回指定型別的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-112">Returns a key for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14caa-113">
            <paramref name="type" /> 參數已授權的確認。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-113">A confirmation that the <paramref name="type" /> parameter is licensed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="GetLicense">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.License GetLicense(class System.ComponentModel.LicenseContext context, class System.Type type, object instance, bool allowExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::License ^ GetLicense(System::ComponentModel::LicenseContext ^ context, Type ^ type, System::Object ^ instance, bool allowExceptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.License</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.LicenseContext" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="allowExceptions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="14caa-114">
            <see cref="T:System.ComponentModel.LicenseContext" />，指定您可以使用授權物件的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-114">A <see cref="T:System.ComponentModel.LicenseContext" /> that specifies where you can use the licensed object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="14caa-115">
            <see cref="T:System.Type" />，表示要求 <see cref="T:System.ComponentModel.License" /> 的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-115">A <see cref="T:System.Type" /> that represents the component requesting the <see cref="T:System.ComponentModel.License" />.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="14caa-116">要求 <see cref="T:System.ComponentModel.License" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-116">An object that requests the <see cref="T:System.ComponentModel.License" />.</span>
          </span>
        </param>
        <param name="allowExceptions">
          <span data-ttu-id="14caa-117">如果元件無法取得授權時應該擲回 <see cref="T:System.ComponentModel.LicenseException" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-117">
              <see langword="true" /> if a <see cref="T:System.ComponentModel.LicenseException" /> should be thrown when a component cannot be granted a license; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14caa-118">傳回元件的執行個體 (Instance) 授權 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-118">Returns a license for the instance of the component, if one is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14caa-119">有效的 <see cref="T:System.ComponentModel.License" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-119">A valid <see cref="T:System.ComponentModel.License" />.</span>
          </span>
          <span data-ttu-id="14caa-120">如果這個方法無法找到有效的 <see cref="T:System.ComponentModel.License" /> 或有效的 <paramref name="context" /> 參數，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-120">If this method cannot find a valid <see cref="T:System.ComponentModel.License" /> or a valid <paramref name="context" /> parameter, it returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14caa-121">在設計階段<xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>方法會尋找名為的授權檔案`myClassName.LIC`，其中`myClassName`是<xref:System.Type.FullName%2A>来建立的元件。</span><span class="sxs-lookup"><span data-stu-id="14caa-121">At design time, the <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> method looks for a license file named `myClassName.LIC`, where `myClassName` is the <xref:System.Type.FullName%2A> of the component to create.</span></span> <span data-ttu-id="14caa-122">這個檔案必須是包含元件的.dll 檔案的相同目錄中。</span><span class="sxs-lookup"><span data-stu-id="14caa-122">This file must be in the same directory as the .dll file that contains the component.</span></span>  
  
 <span data-ttu-id="14caa-123">接下來，這個方法會檢查授權檔案，針對在指定的機碼的第一行<xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14caa-123">Next, this method checks the first line of the license file against a key specified in the <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> method.</span></span> <span data-ttu-id="14caa-124">如果金鑰是有效的這行做為<xref:System.ComponentModel.License.LicenseKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="14caa-124">If the key is valid, this line is used as the <xref:System.ComponentModel.License.LicenseKey%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyValid">
      <MemberSignature Language="C#" Value="protected virtual bool IsKeyValid (string key, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsKeyValid(string key, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsKeyValid(System::String ^ key, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="14caa-125">要進行檢查的 <see cref="P:System.ComponentModel.License.LicenseKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-125">The <see cref="P:System.ComponentModel.License.LicenseKey" /> to check.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="14caa-126">
            <see cref="T:System.Type" />，表示要求 <see cref="T:System.ComponentModel.License" /> 的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-126">A <see cref="T:System.Type" /> that represents the component requesting the <see cref="T:System.ComponentModel.License" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14caa-127">判斷 <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> 方法所擷取的索引鍵對指定型別是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-127">Determines whether the key that the <see cref="M:System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)" /> method retrieves is valid for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14caa-128">如果 <see cref="P:System.ComponentModel.License.LicenseKey" /> 是指定型別的有效索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14caa-128">
              <see langword="true" /> if the key is a valid <see cref="P:System.ComponentModel.License.LicenseKey" /> for the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14caa-129">這個方法會檢查片語的索引鍵:" `myClassName is a licensed component.` "，其中`myClassName`是<xref:System.Type.FullName%2A>您想要建立的元件。</span><span class="sxs-lookup"><span data-stu-id="14caa-129">This method checks the key against the phrase: " `myClassName is a licensed component.` ", where `myClassName` is the <xref:System.Type.FullName%2A> of the component you want to create.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="14caa-130">當您繼承自這個類別時，您可以覆寫這個方法以提供您自己的驗證邏輯。</span>
            <span class="sxs-lookup">
              <span data-stu-id="14caa-130">When you inherit from this class, you can override this method to provide your own validation logic.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.License" />
        <altmember cref="T:System.ComponentModel.LicenseContext" />
        <altmember cref="T:System.ComponentModel.LicenseException" />
        <altmember cref="T:System.ComponentModel.LicenseManager" />
        <altmember cref="T:System.ComponentModel.LicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseProviderAttribute" />
        <altmember cref="T:System.ComponentModel.LicFileLicenseProvider" />
        <altmember cref="T:System.ComponentModel.LicenseUsageMode" />
      </Docs>
    </Member>
  </Members>
</Type>