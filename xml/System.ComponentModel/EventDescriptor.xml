<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventDescriptor.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c154d70129679b536dc9cabf03a9b5cd88593d4f1f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d70129679b536dc9cabf03a9b5cd88593d4f1f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Provides information about an event.</source>
          <target state="translated">提供事件的相關資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>組成的名稱、 其屬性、 事件繫結至的元件、 事件委派、 委派型別，以及是否為多點傳送委派。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> 提供下列<ph id="ph2">`abstract`</ph>屬性和方法：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contains the type of the component this event is declared on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> 包含的類型上宣告此事件的元件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contains the type of delegate for the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> 包含事件的委派類型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contains a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> 包含值，指出事件委派多點傳送的委派。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> binds the event to a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> 將事件繫結至元件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> unbinds the delegate from the component so that the delegate no longer receives events from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> 解除繫結委派與元件，以便不會再從元件接收事件的委派。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需有關事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">如需反映的詳細資訊，請參閱<bpt id="p1">[</bpt>反映<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例會根據中的範例<ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It prints the information (category, description, and display name) of each event on a button in a text box.</source>
          <target state="translated">在文字方塊中的按鈕上列印的每個事件的資訊 （類別、 說明和顯示名稱）。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It requires that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">它要求<ph id="ph1">`button1`</ph>和<ph id="ph2">`textbox1`</ph>具現化表單上。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the event and its attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>，包含事件的名稱和其屬性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">使用指定 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 中的名稱和屬性，初始化 <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that has the name of the member and its attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>，具有成員的名稱和屬性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array with the attributes you want to add to this event description.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 陣列，具有要加入至這個事件描述的屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">使用指定 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 中的名稱，以及 <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 陣列中的屬性，初始化 <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">這個建構函式會將附加的屬性中<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>中屬性的陣列<ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">事件的名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the event attributes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型別的陣列，包含事件屬性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the specified name and attribute array.</source>
          <target state="translated">使用指定的名稱和屬性陣列，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A component that provides events to the delegate.</source>
          <target state="translated">元件，將事件提供給委派。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A delegate that represents the method that handles the event.</source>
          <target state="translated">委派，表示處理事件的方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, binds the event to the component.</source>
          <target state="translated">在衍生類別中覆寫時，將事件繫結至元件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">一般而言，透過反映來實作這個方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">如需反映的詳細資訊，請參閱<bpt id="p1">[</bpt>反映<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需委派的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should add the delegate to the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">當您覆寫這個方法時，它應該將委派加入元件的事件清單，叫用適當<bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of component this event is bound to.</source>
          <target state="translated">在衍生類別中覆寫時，取得這個事件所繫結的元件型別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component the event is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示事件所繫結的元件型別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常，這個屬性是透過反映來實作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>When overridden in a derived class, gets the type of delegate for the event.</source>
          <target state="translated">在衍生類別中覆寫時，取得事件的委派型別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of delegate for the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示事件的委派型別。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常，這個屬性是透過反映來實作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated">在衍生類別中覆寫時，取得指示事件委派是否為多點傳送委派的值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event delegate is multicast; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果事件委派是多點傳送，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常，這個屬性是透過反映來實作。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</source>
          <target state="translated">多點傳送的委派不同於一般委派，因為它可以包含一個以上方法的參考。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</source>
          <target state="translated">叫用委派時，它們出現的順序，會以同步方式執行多點傳送委派中的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</source>
          <target state="translated">如果其中一個被呼叫的方法會引發例外狀況，則委派會停止，然後該例外狀況傳遞至委派呼叫端。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The component that the delegate is bound to.</source>
          <target state="translated">委派所繫結的元件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate to unbind from the component.</source>
          <target state="translated">要與元件解除繫結的委派。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</source>
          <target state="translated">在衍生類別中覆寫時，將委派與元件解除繫結，以便委派不再接收來自元件的事件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">一般而言，透過反映來實作這個方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>反映<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需委派的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">當您覆寫這個方法時，它應該委派從清單中移除該元件的事件叫用適當<bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept>方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>