<Type Name="EventDescriptor" FullName="System.ComponentModel.EventDescriptor">
  <TypeSignature Language="C#" Value="public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EventDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="40df4-101">提供事件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="40df4-101">Provides information about an event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-102"><xref:System.ComponentModel.EventDescriptor>組成的名稱、 其屬性、 事件繫結至的元件、 事件委派、 委派型別，以及是否為多點傳送委派。</span><span class="sxs-lookup"><span data-stu-id="40df4-102">An <xref:System.ComponentModel.EventDescriptor> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</span></span>  
  
 <span data-ttu-id="40df4-103"><xref:System.ComponentModel.EventDescriptor> 提供下列`abstract`屬性和方法：</span><span class="sxs-lookup"><span data-stu-id="40df4-103"><xref:System.ComponentModel.EventDescriptor> provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="40df4-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> 包含的類型上宣告此事件的元件。</span><span class="sxs-lookup"><span data-stu-id="40df4-104"><xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.</span></span>  
  
-   <span data-ttu-id="40df4-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> 包含事件的委派類型。</span><span class="sxs-lookup"><span data-stu-id="40df4-105"><xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.</span></span>  
  
-   <span data-ttu-id="40df4-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> 包含值，指出事件委派多點傳送的委派。</span><span class="sxs-lookup"><span data-stu-id="40df4-106"><xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.</span></span>  
  
-   <span data-ttu-id="40df4-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> 將事件繫結至元件。</span><span class="sxs-lookup"><span data-stu-id="40df4-107"><xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.</span></span>  
  
-   <span data-ttu-id="40df4-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> 解除繫結委派與元件，以便不會再從元件接收事件的委派。</span><span class="sxs-lookup"><span data-stu-id="40df4-108"><xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.</span></span>  
  
 <span data-ttu-id="40df4-109">如需有關事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-109">For more information about events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span> <span data-ttu-id="40df4-110">如需反映的詳細資訊，請參閱[反映](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-110">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40df4-111">下列程式碼範例會根據中的範例<xref:System.ComponentModel.EventDescriptorCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="40df4-111">The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class.</span></span> <span data-ttu-id="40df4-112">在文字方塊中的按鈕上列印的每個事件的資訊 （類別、 說明和顯示名稱）。</span><span class="sxs-lookup"><span data-stu-id="40df4-112">It prints the information (category, description, and display name) of each event on a button in a text box.</span></span> <span data-ttu-id="40df4-113">它要求`button1`和`textbox1`具現化表單上。</span><span class="sxs-lookup"><span data-stu-id="40df4-113">It requires that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[EventDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/EventDescriptor/CPP/eventdescriptor.cpp#1)]
 [!code-csharp[EventDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/EventDescriptor/CS/eventdescriptor.cs#1)]
 [!code-vb[EventDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EventDescriptor/VB/eventdescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="40df4-114">初始化 <see cref="T:System.ComponentModel.EventDescriptor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="40df4-114">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="40df4-115"><see cref="T:System.ComponentModel.MemberDescriptor" />，包含事件的名稱和其屬性。</span><span class="sxs-lookup"><span data-stu-id="40df4-115">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the event and its attributes.</span></span></param>
        <summary><span data-ttu-id="40df4-116">使用指定 <see cref="T:System.ComponentModel.EventDescriptor" /> 中的名稱和屬性，初始化 <see cref="T:System.ComponentModel.MemberDescriptor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="40df4-116">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="40df4-117"><see cref="T:System.ComponentModel.MemberDescriptor" />，具有成員的名稱和屬性。</span><span class="sxs-lookup"><span data-stu-id="40df4-117">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that has the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="40df4-118"><see cref="T:System.Attribute" /> 陣列，具有要加入至這個事件描述的屬性。</span><span class="sxs-lookup"><span data-stu-id="40df4-118">An <see cref="T:System.Attribute" /> array with the attributes you want to add to this event description.</span></span></param>
        <summary><span data-ttu-id="40df4-119">使用指定 <see cref="T:System.ComponentModel.EventDescriptor" /> 中的名稱，以及 <see cref="T:System.ComponentModel.MemberDescriptor" /> 和 <see cref="T:System.ComponentModel.MemberDescriptor" /> 陣列中的屬性，初始化 <see cref="T:System.Attribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="40df4-119">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-120">這個建構函式會將附加的屬性中<xref:System.Attribute>中屬性的陣列<xref:System.ComponentModel.MemberDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="40df4-120">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="40df4-121">事件的名稱。</span><span class="sxs-lookup"><span data-stu-id="40df4-121">The name of the event.</span></span></param>
        <param name="attrs"><span data-ttu-id="40df4-122"><see cref="T:System.Attribute" /> 型別的陣列，包含事件屬性。</span><span class="sxs-lookup"><span data-stu-id="40df4-122">An array of type <see cref="T:System.Attribute" /> that contains the event attributes.</span></span></param>
        <summary><span data-ttu-id="40df4-123">使用指定的名稱和屬性陣列，初始化 <see cref="T:System.ComponentModel.EventDescriptor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="40df4-123">Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptor" /> class with the specified name and attribute array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public abstract void AddEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="40df4-124">元件，將事件提供給委派。</span><span class="sxs-lookup"><span data-stu-id="40df4-124">A component that provides events to the delegate.</span></span></param>
        <param name="value"><span data-ttu-id="40df4-125">委派，表示處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-125">A delegate that represents the method that handles the event.</span></span></param>
        <summary><span data-ttu-id="40df4-126">在衍生類別中覆寫時，將事件繫結至元件。</span><span class="sxs-lookup"><span data-stu-id="40df4-126">When overridden in a derived class, binds the event to the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-127">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-127">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="40df4-128">如需反映的詳細資訊，請參閱[反映](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-128">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="40df4-129">如需委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-129">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="40df4-130">當您覆寫這個方法時，它應該將委派加入元件的事件清單，叫用適當<c>add_myHandler</c>方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-130">When you override this method, it should add the delegate to the component's event list by invoking the appropriate <c>add_myHandler</c> method.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40df4-131">在衍生類別中覆寫時，取得這個事件所繫結的元件型別。</span><span class="sxs-lookup"><span data-stu-id="40df4-131">When overridden in a derived class, gets the type of component this event is bound to.</span></span></summary>
        <value><span data-ttu-id="40df4-132"><see cref="T:System.Type" />，表示事件所繫結的元件型別。</span><span class="sxs-lookup"><span data-stu-id="40df4-132">A <see cref="T:System.Type" /> that represents the type of component the event is bound to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-133">通常，這個屬性是透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="40df4-133">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public abstract Type EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.EventType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EventType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ EventType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40df4-134">在衍生類別中覆寫時，取得事件的委派型別。</span><span class="sxs-lookup"><span data-stu-id="40df4-134">When overridden in a derived class, gets the type of delegate for the event.</span></span></summary>
        <value><span data-ttu-id="40df4-135"><see cref="T:System.Type" />，表示事件的委派型別。</span><span class="sxs-lookup"><span data-stu-id="40df4-135">A <see cref="T:System.Type" /> that represents the type of delegate for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-136">通常，這個屬性是透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="40df4-136">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public abstract bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EventDescriptor.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40df4-137">在衍生類別中覆寫時，取得指示事件委派是否為多點傳送委派的值。</span><span class="sxs-lookup"><span data-stu-id="40df4-137">When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</span></span></summary>
        <value>
          <span data-ttu-id="40df4-138">如果事件委派是多點傳送，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40df4-138"><see langword="true" /> if the event delegate is multicast; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-139">通常，這個屬性是透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="40df4-139">Typically, this property is implemented through reflection.</span></span>  
  
 <span data-ttu-id="40df4-140">多點傳送的委派不同於一般委派，因為它可以包含一個以上方法的參考。</span><span class="sxs-lookup"><span data-stu-id="40df4-140">A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</span></span> <span data-ttu-id="40df4-141">叫用委派時，它們出現的順序，會以同步方式執行多點傳送委派中的方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-141">Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</span></span> <span data-ttu-id="40df4-142">如果其中一個被呼叫的方法會引發例外狀況，則委派會停止，然後該例外狀況傳遞至委派呼叫端。</span><span class="sxs-lookup"><span data-stu-id="40df4-142">If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.EventDescriptor.EventType" />
        <altmember cref="P:System.ComponentModel.EventDescriptor.ComponentType" />
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public abstract void RemoveEventHandler (object component, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object component, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveEventHandler (component As Object, value As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveEventHandler(System::Object ^ component, Delegate ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="40df4-143">委派所繫結的元件。</span><span class="sxs-lookup"><span data-stu-id="40df4-143">The component that the delegate is bound to.</span></span></param>
        <param name="value"><span data-ttu-id="40df4-144">要與元件解除繫結的委派。</span><span class="sxs-lookup"><span data-stu-id="40df4-144">The delegate to unbind from the component.</span></span></param>
        <summary><span data-ttu-id="40df4-145">在衍生類別中覆寫時，將委派與元件解除繫結，以便委派不再接收來自元件的事件。</span><span class="sxs-lookup"><span data-stu-id="40df4-145">When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40df4-146">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-146">Typically, this method is implemented through reflection.</span></span> <span data-ttu-id="40df4-147">如需詳細資訊，請參閱[反映](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-147">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="40df4-148">如需委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="40df4-148">For more information about delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="40df4-149">當您覆寫這個方法時，它應該委派從清單中移除該元件的事件叫用適當<c>remove_myHandler</c>方法。</span><span class="sxs-lookup"><span data-stu-id="40df4-149">When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <c>remove_myHandler</c> method.</span></span></para>
        </block>
        <altmember cref="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>