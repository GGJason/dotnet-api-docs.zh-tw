<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e059b64b5fedee627a7dad23bafc67c4252df0d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30381222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fad6b-101">提供類別上屬性的抽象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fad6b-101">Provides an abstraction of a property on a class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-102">屬性的描述是由名稱、 其屬性、 屬性相關聯，元件類別和屬性的型別所組成。</span><span class="sxs-lookup"><span data-stu-id="fad6b-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="fad6b-103"><xref:System.ComponentModel.PropertyDescriptor> 提供下列屬性和方法：</span><span class="sxs-lookup"><span data-stu-id="fad6b-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="fad6b-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> 包含<xref:System.ComponentModel.TypeConverter>這個屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="fad6b-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> 指出是否應該當地語系化此屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="fad6b-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> 傳回指定之型別的編輯器。</span><span class="sxs-lookup"><span data-stu-id="fad6b-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="fad6b-107"><xref:System.ComponentModel.PropertyDescriptor> 也提供了下列`abstract`屬性和方法：</span><span class="sxs-lookup"><span data-stu-id="fad6b-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="fad6b-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> 包含這個屬性所繫結至元件的類型。</span><span class="sxs-lookup"><span data-stu-id="fad6b-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="fad6b-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> 指出此屬性是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="fad6b-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="fad6b-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> 取得屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="fad6b-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="fad6b-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> 指出是否重設此元件變更元件的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="fad6b-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 在元件上傳回屬性的目前值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="fad6b-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> 重設元件的這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="fad6b-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 設定元件的值不同的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="fad6b-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> 指出是否需要保存此屬性的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="fad6b-116">一般而言，`abstract`成員會透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="fad6b-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="fad6b-117">如需反映的詳細資訊，請參閱[反映](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="fad6b-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fad6b-118">下列程式碼範例會根據中的範例<xref:System.ComponentModel.PropertyDescriptorCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="fad6b-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="fad6b-119">它會列印在文字方塊中的按鈕的文字資訊 （類別、 描述、 顯示名稱）。</span><span class="sxs-lookup"><span data-stu-id="fad6b-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="fad6b-120">它假設`button1`和`textbox1`具現化表單上。</span><span class="sxs-lookup"><span data-stu-id="fad6b-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="fad6b-121">下列程式碼範例示範如何實作提供屬性的唯讀包裝函式的自訂屬性描述元。</span><span class="sxs-lookup"><span data-stu-id="fad6b-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="fad6b-122">`SerializeReadOnlyPropertyDescriptor`用於自訂的設計工具提供控制項的唯讀屬性描述元<xref:System.Windows.Forms.Control.Size%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="fad6b-123">下列程式碼範例示範如何使用`SerializeReadOnlyPropertyDescriptor`自訂設計工具中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-124">初始化 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="fad6b-125">
            <see cref="T:System.ComponentModel.MemberDescriptor" />，包含屬性的名稱和其屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-126">使用指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 中的名稱和屬性，初始化 <see cref="T:System.ComponentModel.MemberDescriptor" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="fad6b-127">
            <see cref="T:System.ComponentModel.MemberDescriptor" />，包含成員名稱和其屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="fad6b-128">
            <see cref="T:System.Attribute" /> 陣列，含有要與屬性 (Property) 關聯的屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-129">使用指定 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 中的名稱，以及 <see cref="T:System.ComponentModel.MemberDescriptor" /> 和 <see cref="T:System.ComponentModel.MemberDescriptor" /> 陣列中的屬性，初始化 <see cref="T:System.Attribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-130">這個建構函式會將附加的屬性中<xref:System.Attribute>中屬性的陣列<xref:System.ComponentModel.MemberDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="fad6b-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fad6b-131">屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-131">The name of the property.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="fad6b-132">
            <see cref="T:System.Attribute" /> 型別的陣列，包含 Property 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-133">使用指定的名稱和屬性，初始化 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-134">要為其加入處理常式的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-134">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="fad6b-135">要加入以做為接聽程式 (Listener) 的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-135">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-136">使其他物件能在這個屬性變更時受到告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-136">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fad6b-137">
            <paramref name="component" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-137">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-138">要測試重設能力的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-138">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-139">在衍生類別中覆寫時，傳回重設物件是否變更其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-139">When overridden in a derived class, returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-140">如果重設元件會變更其值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-140">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-141">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fad6b-142">當在衍生類別中覆寫時，這個方法會尋找<see cref="T:System.ComponentModel.DefaultValueAttribute" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="fad6b-143">如果找到，它會比較屬性的目前值與屬性的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-143">If it finds one, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="fad6b-144">它會傳回<see langword="true" />當預設值不符合屬性的目前值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span>
            </span>
            <span data-ttu-id="fad6b-145">如果找不到這個方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />，它會尋找您需要實作您自己的 「 ShouldPersistMyProperty"方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="fad6b-146">如果找到，<see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />傳回"ShouldPersistMyProperty"的傳回值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span>
            </span>
            <span data-ttu-id="fad6b-147">否則，它會尋找您需要實作您自己的 「 ResetMyProperty"方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="fad6b-148">如果找到，<see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />傳回<see langword="true" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span>
            </span>
            <span data-ttu-id="fad6b-149">如果找不到<see cref="T:System.ComponentModel.DefaultValueAttribute" />，"ShouldPersistMyProperty"方法，或 「 ResetMyProperty"方法，則它會傳回<see langword="false" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-150">在衍生類別中覆寫時，取得這個屬性所繫結的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-150">When overridden in a derived class, gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-151">
            <see cref="T:System.Type" />，表示這個屬性所繫結的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="fad6b-152">當叫用 <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> 或 <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> 方法時，指定的物件可能是這個型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-153">通常，這個屬性是透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="fad6b-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-154">取得這個屬性的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-154">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-155">
            <see cref="T:System.ComponentModel.TypeConverter" />，用來轉換這個屬性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fad6b-156">
            <see cref="T:System.Type" />，表示要建立的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-156">A <see cref="T:System.Type" /> that represents the type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-157">建立指定類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-157">Creates an instance of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-158">型別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-158">A new instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> 看起來會採用指定之類型的建構函式。</span><span class="sxs-lookup"><span data-stu-id="fad6b-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="fad6b-160">如果找到建構函式，會傳入屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="fad6b-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="fad6b-161">轉換和編輯器使用這個方法來建立元件的版本。</span><span class="sxs-lookup"><span data-stu-id="fad6b-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="fad6b-162">這個方法可讓您可以重複使用於多個類型的單一元件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="fad6b-163">用於存取私用類別成員和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-163">for access to private class members and metadata.</span>
          </span>
          <span data-ttu-id="fad6b-164">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="fad6b-165">與這個 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 相比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-165">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-166">比較這個與另一個物件，以檢視它們是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-166">Compares this to another object to see if they are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-167">如果值相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-167">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="attributeList">
          <span data-ttu-id="fad6b-168">
            <see cref="T:System.Collections.IList" />，列出父類別中的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-168">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span>
          </span>
          <span data-ttu-id="fad6b-169">這個一開始是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-169">Initially, this is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-170">將 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的屬性加入至父類別中的指定屬性清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-170">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-171">針對重複的屬性，會保留最後一個新增至清單。</span><span class="sxs-lookup"><span data-stu-id="fad6b-171">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-172">傳回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-172">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-173">傳回預設的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-173">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-174">屬性描述元的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-174">A collection of property descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-175">這個方法會傳遞`null`兩者`instance`參數和`filter`參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-175">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="fad6b-176">屬性`instance`參數可能會與不同類別的屬性，因為容器可以新增或移除屬性，如果`instance`設置參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-176">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="fad6b-177">`filter`參數可以混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-177">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fad6b-178">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="fad6b-178">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fad6b-179">A<xref:System.Type>物件會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-179">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fad6b-180">如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-180">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-181">如果屬性的執行個體<xref:System.Attribute>，屬性必須是包含傳回陣列中完全相符。</span><span class="sxs-lookup"><span data-stu-id="fad6b-181">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-182">如果您指定<xref:System.Attribute>且其為預設屬性，就會包含在傳回陣列中，即使沒有任何執行個體<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-182">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="fad6b-183">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-184">使用指定的屬性陣列做為篩選條件，傳回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-185">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定屬性 (Attribute) 相符的屬性 (Property)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-186">這個方法會傳遞`null`如`instance`參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-186">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="fad6b-187">屬性`instance`參數可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果`instance`設置參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-187">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="fad6b-188">`filter`參數可以混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-188">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fad6b-189">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="fad6b-189">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fad6b-190">A<xref:System.Type>物件會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-190">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fad6b-191">如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-191">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-192">如果屬性的執行個體<xref:System.Attribute>，屬性必須是包含傳回陣列中完全相符。</span><span class="sxs-lookup"><span data-stu-id="fad6b-192">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-193">如果您指定<xref:System.Attribute>執行個體，且它的預設屬性，就會包含傳回陣列中即使沒有任何執行個體<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-193">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fad6b-194">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-194">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-195">傳回指定物件的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-195">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-196">具有指定元件屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-196">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-197">這個方法會傳遞`null`如`filter`參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-197">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="fad6b-198">屬性`instance`參數可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果`instance`設置參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-198">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="fad6b-199">`filter`參數可以混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-199">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fad6b-200">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="fad6b-200">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fad6b-201">A<xref:System.Type>物件會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-201">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fad6b-202">如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-202">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-203">如果屬性的執行個體<xref:System.Attribute>，屬性必須是包含傳回陣列中完全相符。</span><span class="sxs-lookup"><span data-stu-id="fad6b-203">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-204">如果您指定<xref:System.Attribute>執行個體，且它的預設屬性，就會包含傳回陣列中即使沒有任何執行個體<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-204">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fad6b-205">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-205">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="fad6b-206">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-206">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-207">使用指定的屬性陣列做為篩選條件，傳回指定物件的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-207">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-208">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定元件的指定屬性 (Attribute) 相符的屬性 (Property)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-208">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-209">屬性`instance`參數可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果`instance`設置參數。</span><span class="sxs-lookup"><span data-stu-id="fad6b-209">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="fad6b-210">`filter`參數可以混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-210">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="fad6b-211">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="fad6b-211">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="fad6b-212">A<xref:System.Type>物件會被視為萬用字元，它會比對的任何屬性<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-212">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="fad6b-213">如果屬性沒有<xref:System.Attribute>的相同類別中，屬性將不會包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-213">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-214">如果屬性的執行個體<xref:System.Attribute>，屬性必須是包含傳回陣列中完全相符。</span><span class="sxs-lookup"><span data-stu-id="fad6b-214">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="fad6b-215">如果您指定<xref:System.Attribute>執行個體，且它的預設屬性，就會包含傳回陣列中即使沒有任何執行個體<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="fad6b-215">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="fad6b-216">一般而言，子內容應該傳回藉由實作<xref:System.ComponentModel.TypeConverter.GetProperties%2A>隸屬<xref:System.ComponentModel.TypeConverter>這個屬性傳回。</span><span class="sxs-lookup"><span data-stu-id="fad6b-216">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="fad6b-217">編輯器的基底型別 (Base Type)，用來區分屬性支援的多個編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-217">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-218">取得指定型別的編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-218">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-219">要求的編輯器型別的執行個體，或者如果找不到，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-219">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-220">傳回這個物件的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-220">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-221">這個物件的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-221">The hash code for this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fad6b-222">引動目標的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-222">The <see cref="T:System.Type" /> of the invocation target.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="fad6b-223">可能的引動目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-223">The potential invocation target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-224">這個方法會傳回應該在成員的引動過程使用的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-224">This method returns the object that should be used during invocation of members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-225">
            <see cref="T:System.Object" />，應該在成員的引動過程使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-225">The <see cref="T:System.Object" /> that should be used during invocation of members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-226">傳回的值通常是相同`instance`傳入。</span><span class="sxs-lookup"><span data-stu-id="fad6b-226">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="fad6b-227">如果有人與這個執行個體，相關聯的另一個物件或執行個體是自訂類型描述元<xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A>方法可能會傳回不同的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-227">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="fad6b-228">要擷取型別的組件限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-228">The assembly-qualified name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-229">使用其名稱以傳回型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-229">Returns a type using its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-230">符合指定型別名稱的 <see cref="T:System.Type" />，或者如果找不到符合的指定型別名稱，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-230">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-231">若要尋找適當的型別，這個方法會先檢查類型的組件這個<xref:System.ComponentModel.PropertyDescriptor>參考。</span><span class="sxs-lookup"><span data-stu-id="fad6b-231">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="fad6b-232">如果它在組件中找不到型別，它會呼叫<xref:System.Type.GetType%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fad6b-232">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-233">具有要為其擷取值之屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-233">The component with the property for which to retrieve the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-234">在衍生類別中覆寫時，取得元件上屬性的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-234">When overridden in a derived class, gets the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-235">指定元件的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-235">The value of a property for a given component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-236">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-236">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="fad6b-237">這個方法會自動呼叫變更前方法<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>，以及變更後的方法，<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>的<xref:System.ComponentModel.Design.IComponentChangeService>。</span><span class="sxs-lookup"><span data-stu-id="fad6b-237">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fad6b-238">當您覆寫這個方法時，它會叫用 「 GetMyProperty"方法，您需要實作取得屬性的目前值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-238">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="fad6b-239">該方法中的例外狀況應該傳遞。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-239">An exception in that method should pass through.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-240">為其擷取事件處理常式的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-240">The component for which to retrieve event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-241">擷取特定元件目前的 <c>ValueChanged</c> 事件處理常式集</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-241">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-242">組合的多點傳送事件處理常式；如果目前沒有指定給 <paramref name="component" /> 的事件處理常式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-242">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-243">取得值，表示這個屬性是否應該當地語系化，如 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 中指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-243">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-244">如果成員是以設為 <see langword="true" /> 的 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 標記則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-244">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-245">當屬性會標示<xref:System.ComponentModel.LocalizableAttribute>設`true`和視覺化設計工具中使用，其值會儲存在資源檔。</span><span class="sxs-lookup"><span data-stu-id="fad6b-245">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="fad6b-246">如果標記與屬性的屬性，然後在程式碼中設定屬性時，不會使用資源檔。</span><span class="sxs-lookup"><span data-stu-id="fad6b-246">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-247">在衍生類別中覆寫時，取得數值以指示這個屬性是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-247">When overridden in a derived class, gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-248">如果屬性是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-248">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-249">引發事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-249">The object that raises the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="fad6b-250">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-251">引發您之前實作的 <c>ValueChanged</c> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-251">Raises the <c>ValueChanged</c> event that you implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-252">屬性值變更時，應該呼叫這個方法的屬性描述元實作。</span><span class="sxs-lookup"><span data-stu-id="fad6b-252">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-253">在衍生類別中覆寫時，取得屬性的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-253">When overridden in a derived class, gets the type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-254">
            <see cref="T:System.Type" />，表示屬性的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-254">A <see cref="T:System.Type" /> that represents the type of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-255">通常，這個屬性是透過反映來實作。</span><span class="sxs-lookup"><span data-stu-id="fad6b-255">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-256">要為其移除處理常式的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-256">The component to remove the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="fad6b-257">要移除以做為接聽程式的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-257">The delegate to remove as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-258">使其他物件能在這個屬性變更時受到告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-258">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fad6b-259">
            <paramref name="component" /> 或 <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-259">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-260">屬性值要重設為預設值的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-260">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-261">在衍生類別中覆寫時，將元件的這個屬性值重設為預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-261">When overridden in a derived class, resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-262">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-262">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="fad6b-263">這個方法會判斷要重設要依下列優先順序之屬性的值：</span><span class="sxs-lookup"><span data-stu-id="fad6b-263">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="fad6b-264">沒有這個屬性加上陰影的屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-264">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="fad6b-265">沒有<xref:System.ComponentModel.DefaultValueAttribute>這個屬性。</span><span class="sxs-lookup"><span data-stu-id="fad6b-265">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="fad6b-266">沒有您已實作，其中"MyProperty"是您傳遞給它的屬性名稱"ResetMyProperty 」 方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-266">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="fad6b-267">這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>自動以下列順序：</span><span class="sxs-lookup"><span data-stu-id="fad6b-267">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="fad6b-268">這個方法會呼叫<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType>方法來建立新<xref:System.ComponentModel.Design.DesignerTransaction>來代表所做的變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-268">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="fad6b-269">這個方法會呼叫<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType>方法，指出在交易開始，並不會發生的變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="fad6b-270">方法屬性重設為這個方法檢查順序所判斷的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-270">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="fad6b-271">這個方法會呼叫<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType>方法，以表示已發生變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-271">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="fad6b-272">這個方法會呼叫<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType>表示交易已完成。</span><span class="sxs-lookup"><span data-stu-id="fad6b-272">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="fad6b-273">交易的目的在於支援`Undo`和`Redo`功能。</span><span class="sxs-lookup"><span data-stu-id="fad6b-273">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fad6b-274">當在衍生類別中覆寫時，這個方法會尋找<see cref="T:System.ComponentModel.DefaultValueAttribute" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-274">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="fad6b-275">如果找到，它會設定的屬性值<see cref="T:System.ComponentModel.DefaultValueAttribute" />找到它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-275">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span>
            </span>
            <span data-ttu-id="fad6b-276">如果找不到這個方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />，它會尋找您需要實作 「 ResetMyProperty"方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-276">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="fad6b-277">如果找到，<see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />方法會叫用它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-277">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span>
            </span>
            <span data-ttu-id="fad6b-278">如果<see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />找不到<see cref="T:System.ComponentModel.DefaultValueAttribute" />或 「 ResetMyProperty"方法實作時，不會執行作業。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-278">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-279">取得值，表示這個屬性是否應該序列化，如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 中指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-279">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-280">其中一個 <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列舉值，指定這個屬性是否應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-280">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-281">屬性值將要設定的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-281">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fad6b-282">新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-282">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-283">在衍生類別中覆寫時，將元件的值設定為不同的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-283">When overridden in a derived class, sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-284">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-284">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="fad6b-285">這個方法會建立<xref:System.ComponentModel.Design.DesignerTransaction>自動以下列順序：</span><span class="sxs-lookup"><span data-stu-id="fad6b-285">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="fad6b-286">這個方法會呼叫<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType>方法來建立新<xref:System.ComponentModel.Design.DesignerTransaction>來代表所做的變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-286">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="fad6b-287">這個方法會呼叫<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType>方法，指出在交易開始，並不會發生的變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="fad6b-288">方法屬性重設為這個方法檢查順序所判斷的值。</span><span class="sxs-lookup"><span data-stu-id="fad6b-288">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="fad6b-289">這個方法會呼叫<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType>方法，以表示已發生變更。</span><span class="sxs-lookup"><span data-stu-id="fad6b-289">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="fad6b-290">這個方法會呼叫<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType>表示交易已完成。</span><span class="sxs-lookup"><span data-stu-id="fad6b-290">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="fad6b-291">交易的目的在於支援`Undo`和`Redo`功能。</span><span class="sxs-lookup"><span data-stu-id="fad6b-291">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fad6b-292">當您覆寫這個方法時，它應該藉由叫用適當的 「 SetMyProperty"方法，您需要實作設定屬性的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-292">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="fad6b-293">如果指定的值不是有效的元件應該擲回的例外狀況，它會向上傳遞。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-293">If the value specified is not valid, the component should throw an exception, which is passed up.</span>
            </span>
            <span data-ttu-id="fad6b-294">您應該設計屬性 （也就您已實作） 遵循 「 SetMyProperty"方法 」 GetMyProperty"方法會傳回"SetMyProperty"方法不會擲回例外狀況時，會傳遞值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-294">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="fad6b-295">元件，具有要檢查保存性 (Persistence) 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-295">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fad6b-296">在衍生類別中覆寫時，判斷指示這個屬性的值是否需要保存的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-296">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fad6b-297">如果屬性應該要保存，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-297">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-298">一般而言，透過反映來實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-298">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fad6b-299">當在衍生類別中覆寫時，這個方法會傳回<see langword="true" />如果屬性的目前值為其預設值不同。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-299">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span>
            </span>
            <span data-ttu-id="fad6b-300">做為預設值會尋找第一次尋找<see cref="T:System.ComponentModel.DefaultValueAttribute" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-300">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="fad6b-301">如果此方法會尋找此屬性，它會比較屬性的目前值與屬性的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-301">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="fad6b-302">如果找不到這個方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />，它會尋找您需要實作 「 ShouldSerializeMyProperty"方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="fad6b-303">如果找到，<see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />叫用它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-303">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span>
            </span>
            <span data-ttu-id="fad6b-304">如果找不到這個方法<see cref="T:System.ComponentModel.DefaultValueAttribute" />或 「 ShouldSerializeMyProperty"方法，它無法建立最佳化，並傳回<see langword="true" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="fad6b-304">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="fad6b-305">
                  <see cref="T:System.ComponentModel.Design.ComponentDesigner" />類別會實作繼承元件的特殊的序列化邏輯。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="fad6b-305">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span>
                </span>
                <span data-ttu-id="fad6b-306">如需詳細資訊，請參閱<see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="fad6b-306">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
                </span>
              </para>
            </block>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fad6b-307">取得值，表示這個屬性的數值變更告知是否可能來自屬性描述項之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-307">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fad6b-308">如果數值變更告知可能來自屬性描述項之外則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fad6b-308">
              <see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fad6b-309"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A>屬性會指出是否對此屬性的值變更通知可能來自外部的屬性描述元，例如與元件本身，或通知只能從直接呼叫對源自<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fad6b-309">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="fad6b-310">例如，實作元件可能<xref:System.ComponentModel.INotifyPropertyChanged>介面，或可能有明確的`name.Changed`這個屬性的事件。</span><span class="sxs-lookup"><span data-stu-id="fad6b-310">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>