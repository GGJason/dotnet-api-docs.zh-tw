<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b88ec9c085b8e59f0db7b40277a6be8ed9929825" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717052" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07471-101">提供補充性中繼資料給 <see cref="T:System.ComponentModel.TypeDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="07471-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-102"><xref:System.ComponentModel.TypeDescriptionProvider>類別會擴充以動態方式新增、 修改或隱藏特性，例如屬性、 屬性和事件與型別或物件相關聯的型別資訊。</span><span class="sxs-lookup"><span data-stu-id="07471-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="07471-103">可以有多個型別描述提供者的類別提供中繼資料，以單一<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="07471-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="07471-104">有兩種方式可建立關聯<xref:System.ComponentModel.TypeDescriptionProvider>與<xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="07471-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="07471-105">在設計階段，當目標類別可以指派適當<xref:System.ComponentModel.TypeDescriptionProviderAttribute>標記。</span><span class="sxs-lookup"><span data-stu-id="07471-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="07471-106">在執行階段，當一個的<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>方法的<xref:System.ComponentModel.TypeDescriptor>可以呼叫類別。</span><span class="sxs-lookup"><span data-stu-id="07471-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="07471-107">這些多載的方法需要目標物件或其類別型別。</span><span class="sxs-lookup"><span data-stu-id="07471-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="07471-108"><xref:System.ComponentModel.TypeDescriptionProvider>類別必須仰賴相同的類型，在建構期間所提供的父物件。</span><span class="sxs-lookup"><span data-stu-id="07471-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="07471-109">這可讓衍生自類別<xref:System.ComponentModel.CustomTypeDescriptor>選擇性地覆寫方法。</span><span class="sxs-lookup"><span data-stu-id="07471-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="07471-110">執行個體<xref:System.ComponentModel.TypeDescriptionProvider>只根據需求，自訂的型別資訊，對效能的影響降到最低。</span><span class="sxs-lookup"><span data-stu-id="07471-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="07471-111">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="07471-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="07471-112">衍生的型別可能會標示為<see langword="internal" />或是<see langword="private" />，但您類型的執行個體可以使用建立<see cref="T:System.ComponentModel.TypeDescriptor" />類別。</span><span class="sxs-lookup"><span data-stu-id="07471-112">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="07471-113">不要撰寫安全的程式碼假設呼叫端受信任。</span><span class="sxs-lookup"><span data-stu-id="07471-113">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="07471-114">相反地，假設呼叫端可能會建立您的型別執行個體，在部分信任中。</span><span class="sxs-lookup"><span data-stu-id="07471-114">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07471-115">初始化 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07471-116">初始化 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-116">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-117">這個建構函式相當於呼叫另<xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29>建構函式的參數值與`null`。</span><span class="sxs-lookup"><span data-stu-id="07471-117">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="07471-118">父型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-118">The parent type description provider.</span></span></param>
        <summary><span data-ttu-id="07471-119">使用父型別描述提供者，初始化 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-119">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-120">如果`parent`參數是`null`，則所有<xref:System.ComponentModel.TypeDescriptionProvider>方法會傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="07471-120">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="07471-121">否則，所有<xref:System.ComponentModel.TypeDescriptionProvider>方法會將委派的方法`parent`。</span><span class="sxs-lookup"><span data-stu-id="07471-121">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="07471-122">下表顯示的預設傳回值<xref:System.ComponentModel.TypeDescriptionProvider>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-122">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="07471-123">方法</span><span class="sxs-lookup"><span data-stu-id="07471-123">Method</span></span>|<span data-ttu-id="07471-124">預設的傳回值</span><span class="sxs-lookup"><span data-stu-id="07471-124">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="07471-125">新建立的物件，可透過呼叫<xref:System.Activator.CreateInstance%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-125">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="07471-126">預設執行個體<xref:System.ComponentModel.CustomTypeDescriptor>類別。</span><span class="sxs-lookup"><span data-stu-id="07471-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="07471-127">預設執行個體<xref:System.ComponentModel.CustomTypeDescriptor>類別。</span><span class="sxs-lookup"><span data-stu-id="07471-127">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="07471-128">`objectType`第一個參數。</span><span class="sxs-lookup"><span data-stu-id="07471-128">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="07471-129">選擇性的服務提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-129">An optional service provider.</span></span></param>
        <param name="objectType"><span data-ttu-id="07471-130">要建立的物件類型。</span><span class="sxs-lookup"><span data-stu-id="07471-130">The type of object to create.</span></span> <span data-ttu-id="07471-131">這個參數絕對不是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-131">This parameter is never <see langword="null" />.</span></span></param>
        <param name="argTypes"><span data-ttu-id="07471-132">選擇性的型別陣列，表示要傳遞至物件建構函式的參數型別。</span><span class="sxs-lookup"><span data-stu-id="07471-132">An optional array of types that represent the parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="07471-133">這個陣列可以是 <see langword="null" /> 或長度為零。</span><span class="sxs-lookup"><span data-stu-id="07471-133">This array can be <see langword="null" /> or of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="07471-134">要傳遞給物件建構函式的選擇性參數值陣列。</span><span class="sxs-lookup"><span data-stu-id="07471-134">An optional array of parameter values to pass to the object's constructor.</span></span></param>
        <summary><span data-ttu-id="07471-135">建立可以代替另一種資料類型的物件。</span><span class="sxs-lookup"><span data-stu-id="07471-135">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="07471-136">替代的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="07471-136">The substitute <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-137"><xref:System.IServiceProvider>所指定`provider`傳入的參數<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType>方法<xref:System.ComponentModel.TypeDescriptor>類別。</span><span class="sxs-lookup"><span data-stu-id="07471-137">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="07471-138">如果`provider`不是`null`，若要取得有關建立呼叫的其他內容的型別描述提供者可以使用服務提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-138">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="07471-139"><xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>方式`virtual`，預設情況下，傳回的結果<xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>方法如果`provider`是`null`。</span><span class="sxs-lookup"><span data-stu-id="07471-139">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="07471-140">如果`provider`已`null`，這個方法會叫用<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>父提供者的方法。</span><span class="sxs-lookup"><span data-stu-id="07471-140">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="07471-141">如果在衍生的類別不感興趣提供替代執行個體，它應該只會呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="07471-141">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="07471-142">要為其取得快取的物件。</span><span class="sxs-lookup"><span data-stu-id="07471-142">The object for which to get the cache.</span></span></param>
        <summary><span data-ttu-id="07471-143">取得個別物件的快取，以索引鍵/值組的 <see cref="T:System.Collections.IDictionary" /> 方式存取。</span><span class="sxs-lookup"><span data-stu-id="07471-143">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span></span></summary>
        <returns><span data-ttu-id="07471-144">如果提供的物件支援快取，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-144">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-145">A<xref:System.ComponentModel.TypeDescriptor>可能需要執行的中繼資料的集合上的複雜作業。</span><span class="sxs-lookup"><span data-stu-id="07471-145">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="07471-146">因為類型不是加入網域的存留期間卸載<xref:System.ComponentModel.TypeDescriptor>類別會自動快取這些類型為基礎的作業的結果。</span><span class="sxs-lookup"><span data-stu-id="07471-146">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="07471-147">不過，某些作業會使用即時物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-147">However, some operations use live object instances.</span></span> <span data-ttu-id="07471-148">這些作業無法快取內<xref:System.ComponentModel.TypeDescriptor>類別，因為快取它們會防止物件被記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="07471-148">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="07471-149">相反地，<xref:System.ComponentModel.TypeDescriptor>類別可讓每個物件的快取，以存取<xref:System.Collections.IDictionary>索引鍵/值組，在物件上存在。</span><span class="sxs-lookup"><span data-stu-id="07471-149">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="07471-150"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>方法會傳回此快取的執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="07471-151"><xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>方法會傳回`null`如果物件不支援快取。</span><span class="sxs-lookup"><span data-stu-id="07471-151">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="07471-152">預設值<xref:System.ComponentModel.TypeDescriptionProvider>供<xref:System.ComponentModel.TypeDescriptor>會檢查物件是否實作站台的元件<xref:System.ComponentModel.Design.IDictionaryService>介面。</span><span class="sxs-lookup"><span data-stu-id="07471-152">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="07471-153">如果物件是，它會使用字典服務來儲存物件的快取。</span><span class="sxs-lookup"><span data-stu-id="07471-153">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="07471-154">它會傳回物件，否則為`null`。</span><span class="sxs-lookup"><span data-stu-id="07471-154">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="07471-155">其他型別描述提供者可能會提供自己的實作。</span><span class="sxs-lookup"><span data-stu-id="07471-155">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="07471-156">比方說，相依性物件可以只將屬性附加型別的<xref:System.Collections.IDictionary>。</span><span class="sxs-lookup"><span data-stu-id="07471-156">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="07471-157">要為其取得擴充型別描述項的物件。</span><span class="sxs-lookup"><span data-stu-id="07471-157">The object for which to get the extended type descriptor.</span></span></param>
        <summary><span data-ttu-id="07471-158">取得特定物件的擴充自訂型別描述項。</span><span class="sxs-lookup"><span data-stu-id="07471-158">Gets an extended custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="07471-159"><see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，可以提供物件的擴充中繼資料。</span><span class="sxs-lookup"><span data-stu-id="07471-159">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-160">擴充型別描述元是供應項目屬性的其他物件加入至這個物件，但不是實際物件定義的自訂類型描述元。</span><span class="sxs-lookup"><span data-stu-id="07471-160">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="07471-161">例如，在[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]元件模型物件，實作<xref:System.ComponentModel.IExtenderProvider>介面可以將屬性附加至位於相同的邏輯容器中的其他物件。</span><span class="sxs-lookup"><span data-stu-id="07471-161">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="07471-162">多載<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法不會傳回型別描述項，提供這些額外的擴充屬性。</span><span class="sxs-lookup"><span data-stu-id="07471-162">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="07471-163"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>方法會傳回這些延伸屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="07471-163">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="07471-164"><xref:System.ComponentModel.TypeDescriptor>會自動合併這些兩個屬性集合的結果。</span><span class="sxs-lookup"><span data-stu-id="07471-164">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="07471-165">雖然[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]元件模型支援擴充屬性，僅<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>可用於擴充的屬性，以及事件，如果型別描述提供者支援它。</span><span class="sxs-lookup"><span data-stu-id="07471-165">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="07471-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> 是`virtual`和預設的情況下，會傳回自訂類型描述元，會傳回空的結果，如果沒有父提供者傳遞。</span><span class="sxs-lookup"><span data-stu-id="07471-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="07471-167">如果傳遞父提供者，這個方法會叫用父提供者的<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-167">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="07471-168">要為其取得擴充項提供者的物件。</span><span class="sxs-lookup"><span data-stu-id="07471-168">The object to get extender providers for.</span></span></param>
        <summary><span data-ttu-id="07471-169">取得指定之物件的擴充項提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-169">Gets the extender providers for the specified object.</span></span></summary>
        <returns><span data-ttu-id="07471-170"><paramref name="instance" /> 之擴充項提供者的陣列。</span><span class="sxs-lookup"><span data-stu-id="07471-170">An array of extender providers for <paramref name="instance" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-171"><paramref name="instance" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-171"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="07471-172">指定的元件。</span><span class="sxs-lookup"><span data-stu-id="07471-172">The specified component.</span></span></param>
        <summary><span data-ttu-id="07471-173">取得指定之元件的名稱，或 <see langword="null" /> (如果元件沒有名稱)。</span><span class="sxs-lookup"><span data-stu-id="07471-173">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span></span></summary>
        <returns><span data-ttu-id="07471-174">指定之元件的名稱。</span><span class="sxs-lookup"><span data-stu-id="07471-174">The name of the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-175"><paramref name="component" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-175"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07471-176">對物件執行一般反映。</span><span class="sxs-lookup"><span data-stu-id="07471-176">Performs normal reflection against an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="07471-177">型別的執行個體 (不可以是 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="07471-177">An instance of the type (should not be <see langword="null" />).</span></span></param>
        <summary><span data-ttu-id="07471-178">對指定的物件執行一般反映。</span><span class="sxs-lookup"><span data-stu-id="07471-178">Performs normal reflection against the given object.</span></span></summary>
        <returns><span data-ttu-id="07471-179">這個 <paramref name="instance" /> 的反映類型。</span><span class="sxs-lookup"><span data-stu-id="07471-179">The type of reflection for this <paramref name="instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-180"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>方法是較低層級版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-180">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="07471-181">如果沒有自訂類型描述元可以是物件，位於<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>呼叫來執行一般反映對物件。</span><span class="sxs-lookup"><span data-stu-id="07471-181">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="07471-182">如果您已經呼叫使用執行個體，而不是類型的類型描述元成員，請使用這個方法多載。</span><span class="sxs-lookup"><span data-stu-id="07471-182">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-183"><paramref name="instance" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-183"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="07471-184">要為其擷取 <see cref="T:System.Reflection.IReflect" /> 之物件的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-184">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <summary><span data-ttu-id="07471-185">對型別執行一般反映。</span><span class="sxs-lookup"><span data-stu-id="07471-185">Performs normal reflection against a type.</span></span></summary>
        <returns><span data-ttu-id="07471-186">這個 <paramref name="objectType" /> 的反映類型。</span><span class="sxs-lookup"><span data-stu-id="07471-186">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-187"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>方法是較低層級版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-187">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="07471-188">如果沒有自訂類型描述元可以是物件，位於<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>呼叫來執行一般反映對物件。</span><span class="sxs-lookup"><span data-stu-id="07471-188">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="07471-189">如果已呼叫類型描述元成員使用型別，而不是執行個體，請使用這個方法多載。</span><span class="sxs-lookup"><span data-stu-id="07471-189">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-190"><paramref name="objectType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-190"><paramref name="objectType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="07471-191">要為其擷取 <see cref="T:System.Reflection.IReflect" /> 之物件的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-191">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <param name="instance"><span data-ttu-id="07471-192">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-192">An instance of the type.</span></span> <span data-ttu-id="07471-193">可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-193">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="07471-194">對具有特定型別的特定物件執行一般反映。</span><span class="sxs-lookup"><span data-stu-id="07471-194">Performs normal reflection against the given object with the given type.</span></span></summary>
        <returns><span data-ttu-id="07471-195">這個 <paramref name="objectType" /> 的反映類型。</span><span class="sxs-lookup"><span data-stu-id="07471-195">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-196"><xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>方法是較低層級版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-196">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="07471-197">如果沒有自訂類型描述元可以是物件，位於<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>呼叫來執行一般反映對物件。</span><span class="sxs-lookup"><span data-stu-id="07471-197">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="07471-198">這個方法是原型都<see langword="virtual" />，並依預設會傳回<paramref name="objectType" />如果不傳遞任何父提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-198">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span></span> <span data-ttu-id="07471-199">如果傳遞父提供者，這個方法會叫用父提供者的<see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" />方法。</span><span class="sxs-lookup"><span data-stu-id="07471-199">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span></span></para></block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reflectionType"><span data-ttu-id="07471-200">要轉換成其執行階段對等項目的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-200">The type to convert to its runtime equivalent.</span></span></param>
        <summary><span data-ttu-id="07471-201">將反映型別轉換成執行階段型別。</span><span class="sxs-lookup"><span data-stu-id="07471-201">Converts a reflection type into a runtime type.</span></span></summary>
        <returns><span data-ttu-id="07471-202"><see cref="T:System.Type" />，表示 <paramref name="reflectionType" /> 的執行階段對等項目。</span><span class="sxs-lookup"><span data-stu-id="07471-202">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-203"><xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A>方法反轉<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>回執行階段類型的方法，將轉換的反映型別。</span><span class="sxs-lookup"><span data-stu-id="07471-203">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="07471-204">使用<xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A>方法，而不要使用<xref:System.Type.UnderlyingSystemType%2A>屬性，在舊版中用來傳回執行階段型別。</span><span class="sxs-lookup"><span data-stu-id="07471-204">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-205"><paramref name="reflectionType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-205"><paramref name="reflectionType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07471-206">取得特定型別或物件的自訂型別描述項。</span><span class="sxs-lookup"><span data-stu-id="07471-206">Gets a custom type descriptor for the given type or object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="07471-207">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-207">An instance of the type.</span></span> <span data-ttu-id="07471-208">如果未傳遞執行個體至 <see cref="T:System.ComponentModel.TypeDescriptor" />，可以為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-208">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="07471-209">取得特定物件的自訂型別描述項。</span><span class="sxs-lookup"><span data-stu-id="07471-209">Gets a custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="07471-210"><see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，可以提供型別的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="07471-210">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-211"><paramref name="instance" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-211"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="07471-212">要為其擷取型別描述項之物件的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-212">The type of object for which to retrieve the type descriptor.</span></span></param>
        <summary><span data-ttu-id="07471-213">取得特定型別的自訂型別描述項。</span><span class="sxs-lookup"><span data-stu-id="07471-213">Gets a custom type descriptor for the given type.</span></span></summary>
        <returns><span data-ttu-id="07471-214"><see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，可以提供型別的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="07471-214">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="07471-215">要為其擷取型別描述項之物件的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-215">The type of object for which to retrieve the type descriptor.</span></span></param>
        <param name="instance"><span data-ttu-id="07471-216">型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="07471-216">An instance of the type.</span></span> <span data-ttu-id="07471-217">如果未傳遞執行個體至 <see cref="T:System.ComponentModel.TypeDescriptor" />，可以為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-217">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="07471-218">取得特定型別和物件的自訂型別描述項。</span><span class="sxs-lookup"><span data-stu-id="07471-218">Gets a custom type descriptor for the given type and object.</span></span></summary>
        <returns><span data-ttu-id="07471-219"><see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，可以提供型別的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="07471-219">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07471-220">這個方法的原型為`virtual`和預設會傳回空的描述元如果不傳遞任何父提供者。</span><span class="sxs-lookup"><span data-stu-id="07471-220">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="07471-221">如果傳遞父提供者，這個方法會叫用父提供者的<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07471-221">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="07471-222"><see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />方法應該傳回物件的自訂類型描述元。</span><span class="sxs-lookup"><span data-stu-id="07471-222">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span></span> <span data-ttu-id="07471-223">如果方法未提供類型資訊物件，它應該傳回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-223">If the method does not provide type information for the object, it should return <see langword="null" />.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="07471-224">要測試其相容性的型別。</span><span class="sxs-lookup"><span data-stu-id="07471-224">The type to test for compatibility.</span></span></param>
        <summary><span data-ttu-id="07471-225">取得值，這個值指出指定的型別是否與型別描述及其型別描述提供者的鏈結相容。</span><span class="sxs-lookup"><span data-stu-id="07471-225">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span></span></summary>
        <returns><span data-ttu-id="07471-226">如果 <paramref name="type" /> 與型別描述及其型別描述提供者的鏈結相容則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07471-226"><see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07471-227"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="07471-227"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>