<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae1b812b22292721f7b8e6e474b15516e5215709" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供發現可繫結清單的結構描述 (Schema) 的功能，其中可用於繫結的屬性與要繫結物件的公用 (Public) 屬性是不同的。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您使用的執行個體，使用此介面<xref:System.Data.DataView>物件，代表`customer`資料表中，您想要繫結上的屬性`customer`物件<xref:System.Data.DataView>表示，不包含屬性的<xref:System.Data.DataView>。  
  
 這個介面不必要的可繫結清單的設計階段支援。  
  
 資料繫結可以發生在執行階段或在設計工具中，但這兩種規則。 在執行階段，您可以繫結至下列任一項中的資料：  
  
-   <xref:System.Array>  
  
-   實作器<xref:System.Collections.IList>，前提是實作器具有強型別<xref:System.Collections.IList.Item%2A>屬性 (也就是<xref:System.Type>以外是<xref:System.Object>)。 您可以完成這項作業所進行的預設實作<xref:System.Collections.IList.Item%2A>私用。 如果您想要建立<xref:System.Collections.IList>一節的規則的強類型集合，您應該從衍生<xref:System.Collections.CollectionBase>。  
  
-   實作器<xref:System.ComponentModel.ITypedList>。  
  
 您可以在設計工具，來初始化繫結至<xref:System.ComponentModel.Component>遵循相同的規則的物件。  
  
 如需有關繫結至資料來源的詳細資訊，請參閱<xref:System.Windows.Forms.Binding?displayProperty=nameWithType>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList>介面。 名為泛型型別`SortableBindingList`衍生自<xref:System.ComponentModel.BindingList%601>類別，並且實作<xref:System.ComponentModel.ITypedList>介面。 如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">尋找在集合中顯示為可繫結的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件陣列。 這可以是 <see langword="null" />。</param>
        <summary>傳回代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</summary>
        <returns>代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`listAccessors`參數不是`null`，它通常包含識別的容器，以擷取實作的物件清單的屬性描述元<xref:System.ComponentModel.ITypedList>。 例如，<xref:System.Data.DataSet>包含兩個資料表`myCustomers`和`myOrders`，呼叫這些之間有關聯性`myCustOrders`。 如果您建立<xref:System.Data.DataView>物件，以便檢視`myCustomers`，然後呼叫<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法`null`傳回中的資料行的屬性描述元`myCustomers`。 如此一來，其中一個傳回的屬性描述元是屬性的屬性描述元`myCustOrders`，則只會為呼叫<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法包含的屬性描述元的清單存取子陣列`myCustOrders`會傳回屬性描述項如`myOrders`。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法。 如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">傳回清單名稱之 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件的陣列。 這可以是 <see langword="null" />。</param>
        <summary>傳回清單的名稱。</summary>
        <returns>清單的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法使用只在設計階段架構和由過時<xref:System.Windows.Forms.DataGrid>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList.GetListName%2A>方法。 如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>