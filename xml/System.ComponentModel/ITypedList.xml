<Type Name="ITypedList" FullName="System.ComponentModel.ITypedList">
  <TypeSignature Language="C#" Value="public interface ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypedList" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypedList" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49a36-101">提供發現可繫結清單的結構描述 (Schema) 的功能，其中可用於繫結的屬性與要繫結物件的公用 (Public) 屬性是不同的。</span><span class="sxs-lookup"><span data-stu-id="49a36-101">Provides functionality to discover the schema for a bindable list, where the properties available for binding differ from the public properties of the object to bind to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49a36-102">如果您使用的執行個體，使用此介面<xref:System.Data.DataView>物件，代表`customer`資料表中，您想要繫結上的屬性`customer`物件<xref:System.Data.DataView>表示，不包含屬性的<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="49a36-102">Use this interface if, for instance, you are using a <xref:System.Data.DataView> object that represents a `customer` table, you want to bind to the properties on the `customer` object that the <xref:System.Data.DataView> represents, not the properties of the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="49a36-103">這個介面不必要的可繫結清單的設計階段支援。</span><span class="sxs-lookup"><span data-stu-id="49a36-103">This interface is not required for design-time support of a bindable list.</span></span>  
  
 <span data-ttu-id="49a36-104">資料繫結可以發生在執行階段或在設計工具中，但這兩種規則。</span><span class="sxs-lookup"><span data-stu-id="49a36-104">Binding to data can occur either at run time or in a designer, but there are rules for both.</span></span> <span data-ttu-id="49a36-105">在執行階段，您可以繫結至下列任一項中的資料：</span><span class="sxs-lookup"><span data-stu-id="49a36-105">At run time, you can bind to data in any of the following:</span></span>  
  
-   <xref:System.Array>  
  
-   <span data-ttu-id="49a36-106">實作器<xref:System.Collections.IList>，前提是實作器具有強型別<xref:System.Collections.IList.Item%2A>屬性 (也就是<xref:System.Type>以外是<xref:System.Object>)。</span><span class="sxs-lookup"><span data-stu-id="49a36-106">Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>).</span></span> <span data-ttu-id="49a36-107">您可以完成這項作業所進行的預設實作<xref:System.Collections.IList.Item%2A>私用。</span><span class="sxs-lookup"><span data-stu-id="49a36-107">You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private.</span></span> <span data-ttu-id="49a36-108">如果您想要建立<xref:System.Collections.IList>一節的規則的強類型集合，您應該從衍生<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="49a36-108">If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.</span></span>  
  
-   <span data-ttu-id="49a36-109">實作器<xref:System.ComponentModel.ITypedList>。</span><span class="sxs-lookup"><span data-stu-id="49a36-109">Implementer of <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 <span data-ttu-id="49a36-110">您可以在設計工具，來初始化繫結至<xref:System.ComponentModel.Component>遵循相同的規則的物件。</span><span class="sxs-lookup"><span data-stu-id="49a36-110">In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.</span></span>  
  
 <span data-ttu-id="49a36-111">如需有關繫結至資料來源的詳細資訊，請參閱<xref:System.Windows.Forms.Binding?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="49a36-111">For more information on binding to a data source, see the <xref:System.Windows.Forms.Binding?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49a36-112">下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList>介面。</span><span class="sxs-lookup"><span data-stu-id="49a36-112">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="49a36-113">名為泛型型別`SortableBindingList`衍生自<xref:System.ComponentModel.BindingList%601>類別，並且實作<xref:System.ComponentModel.ITypedList>介面。</span><span class="sxs-lookup"><span data-stu-id="49a36-113">A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the <xref:System.ComponentModel.ITypedList> interface.</span></span> <span data-ttu-id="49a36-114">如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。</span><span class="sxs-lookup"><span data-stu-id="49a36-114">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#1)]
 [!code-vb[System.ComponentModel.ITypedList#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="49a36-115">尋找在集合中顯示為可繫結的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="49a36-115">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable.</span></span> <span data-ttu-id="49a36-116">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="49a36-116">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="49a36-117">傳回代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="49a36-117">Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span></span></summary>
        <returns><span data-ttu-id="49a36-118">代表繫結資料所用各項目屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="49a36-118">The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the properties on each item used to bind data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49a36-119">如果`listAccessors`參數不是`null`，它通常包含識別的容器，以擷取實作的物件清單的屬性描述元<xref:System.ComponentModel.ITypedList>。</span><span class="sxs-lookup"><span data-stu-id="49a36-119">If the `listAccessors` parameter is not `null`, it typically contains a property descriptor that identifies a list of containers to retrieve for the object that implements <xref:System.ComponentModel.ITypedList>.</span></span> <span data-ttu-id="49a36-120">例如，<xref:System.Data.DataSet>包含兩個資料表`myCustomers`和`myOrders`，呼叫這些之間有關聯性`myCustOrders`。</span><span class="sxs-lookup"><span data-stu-id="49a36-120">For example, a <xref:System.Data.DataSet> containing two tables, `myCustomers` and `myOrders`, with a relationship between them called `myCustOrders`.</span></span> <span data-ttu-id="49a36-121">如果您建立<xref:System.Data.DataView>物件，以便檢視`myCustomers`，然後呼叫<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法`null`傳回中的資料行的屬性描述元`myCustomers`。</span><span class="sxs-lookup"><span data-stu-id="49a36-121">If you create a <xref:System.Data.DataView> object to view `myCustomers`, then calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with `null` returns the property descriptors for the columns in `myCustomers`.</span></span> <span data-ttu-id="49a36-122">如此一來，其中一個傳回的屬性描述元是屬性的屬性描述元`myCustOrders`，則只會為呼叫<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法包含的屬性描述元的清單存取子陣列`myCustOrders`會傳回屬性描述項如`myOrders`。</span><span class="sxs-lookup"><span data-stu-id="49a36-122">As a result, one of the returned property descriptors is a property descriptor for `myCustOrders`, just as calling the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method with a list accessor array containing the property descriptors for `myCustOrders` will return the property descriptors for `myOrders`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49a36-123">下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList.GetItemProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="49a36-123">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetItemProperties%2A> method.</span></span> <span data-ttu-id="49a36-124">如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。</span><span class="sxs-lookup"><span data-stu-id="49a36-124">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#3)]
 [!code-vb[System.ComponentModel.ITypedList#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="49a36-125">傳回清單名稱之 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="49a36-125">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects, for which the list name is returned.</span></span> <span data-ttu-id="49a36-126">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="49a36-126">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="49a36-127">傳回清單的名稱。</span><span class="sxs-lookup"><span data-stu-id="49a36-127">Returns the name of the list.</span></span></summary>
        <returns><span data-ttu-id="49a36-128">清單的名稱。</span><span class="sxs-lookup"><span data-stu-id="49a36-128">The name of the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49a36-129">這個方法使用只在設計階段架構和由過時<xref:System.Windows.Forms.DataGrid>控制項。</span><span class="sxs-lookup"><span data-stu-id="49a36-129">This method is used only in the design-time framework and by the obsolete <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49a36-130">下列程式碼範例示範如何實作<xref:System.ComponentModel.ITypedList.GetListName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="49a36-130">The following code example demonstrates how to implement the <xref:System.ComponentModel.ITypedList.GetListName%2A> method.</span></span> <span data-ttu-id="49a36-131">如需完整的程式碼清單，請參閱[How to： 實作 ITypedList 介面](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md)。</span><span class="sxs-lookup"><span data-stu-id="49a36-131">For a full code listing, see [How to: Implement the ITypedList Interface](~/docs/framework/winforms/how-to-implement-the-itypedlist-interface.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.ITypedList#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.ITypedList/CS/SortableBindingList.cs#4)]
 [!code-vb[System.ComponentModel.ITypedList#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.ITypedList/VB/SortableBindingList.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.BindingList`1" />
      </Docs>
    </Member>
  </Members>
</Type>