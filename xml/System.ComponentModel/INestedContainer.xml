<Type Name="INestedContainer" FullName="System.ComponentModel.INestedContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02b1e72fdefaebbeab1dbc0c25c94f11e880f939" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37693527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INestedContainer : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INestedContainer implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.INestedContainer" />
  <TypeSignature Language="VB.NET" Value="Public Interface INestedContainer&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class INestedContainer : IDisposable, System::ComponentModel::IContainer" />
  <TypeSignature Language="F#" Value="type INestedContainer = interface&#xA;    interface IContainer&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="545a7-101">提供巢狀容器的功能，巢狀容器邏輯上包含零或多個其他元件，並且由父元件所擁有。</span>
      <span class="sxs-lookup">
        <span data-stu-id="545a7-101">Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="545a7-102"><xref:System.ComponentModel.INestedContainer>介面新增至主控元件的概念<xref:System.ComponentModel.IContainer>介面。</span><span class="sxs-lookup"><span data-stu-id="545a7-102">The <xref:System.ComponentModel.INestedContainer> interface adds the concept of an owning component to the <xref:System.ComponentModel.IContainer> interface.</span></span> <span data-ttu-id="545a7-103">巢狀的容器是邏輯上來說，但不是一定是以視覺化方式，包含零個以上的子元件和某些父元件所擁有的物件。</span><span class="sxs-lookup"><span data-stu-id="545a7-103">A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</span></span> <span data-ttu-id="545a7-104">針對視覺化的內含項目，主控的元件通常是另一個容器。</span><span class="sxs-lookup"><span data-stu-id="545a7-104">For visual containment, the owning component is often another container.</span></span>  
  
 <span data-ttu-id="545a7-105">巢狀的容器可讓設計控制項，而不需要明確的序列化的成員變數或自訂序列化程式的每個子控制項的區段。</span><span class="sxs-lookup"><span data-stu-id="545a7-105">Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</span></span> <span data-ttu-id="545a7-106">相反地，表單設計工具會維護一個主要元件容器。</span><span class="sxs-lookup"><span data-stu-id="545a7-106">Instead, the form designer maintains one master container of components.</span></span> <span data-ttu-id="545a7-107">每個元件的站台可能會有巢狀的容器可用於放置額外的元件。</span><span class="sxs-lookup"><span data-stu-id="545a7-107">Each component’s site may have a nested container that provides a place to put extra components.</span></span> <span data-ttu-id="545a7-108">元件設置在巢狀容器，它會接收的名稱時，其指定名稱和其擁有的元件名稱的組合。</span><span class="sxs-lookup"><span data-stu-id="545a7-108">When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component’s name.</span></span> <span data-ttu-id="545a7-109">此外，元件加入至巢狀容器具有完整存取權的父容器中，服務和巢狀的容器會提供相同的行為方面新增新的元件之父代。</span><span class="sxs-lookup"><span data-stu-id="545a7-109">Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</span></span> <span data-ttu-id="545a7-110">巢狀的容器將會建立為包含每個元件設計工具藉此讓設計階段支援。</span><span class="sxs-lookup"><span data-stu-id="545a7-110">The nested container will create the designer for each component it contains, thereby enabling design-time support.</span></span> <span data-ttu-id="545a7-111">因為標準的程式碼的序列化程式不會查看巢狀容器，這些元件才會序列化它們的路徑，可由逐一查看的主要容器中的元件。</span><span class="sxs-lookup"><span data-stu-id="545a7-111">Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</span></span>  
  
 <span data-ttu-id="545a7-112">巢狀的容器可查詢類型的服務元件的站台<xref:System.ComponentModel.INestedContainer>。</span><span class="sxs-lookup"><span data-stu-id="545a7-112">Nested containers can be found by querying a component's site for services of type <xref:System.ComponentModel.INestedContainer>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.NestedContainer" />
    <altmember cref="T:System.ComponentModel.ContainerFilterService" />
    <altmember cref="M:System.ComponentModel.NestedContainer.GetService(System.Type)" />
  </Docs>
  <Members>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.INestedContainer.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Owner { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.ComponentModel.IComponent" Usage="System.ComponentModel.INestedContainer.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="545a7-113">取得巢狀容器的主控元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="545a7-113">Gets the owning component for the nested container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="545a7-114">擁有巢狀容器的 <see cref="T:System.ComponentModel.IComponent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="545a7-114">The <see cref="T:System.ComponentModel.IComponent" /> that owns the nested container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="545a7-115">主控的元件是區別來自一般容器的巢狀的容器的特性。</span><span class="sxs-lookup"><span data-stu-id="545a7-115">The owning component is the characteristic that differentiates nested containers from ordinary containers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.IContainer" />
        <altmember cref="P:System.ComponentModel.NestedContainer.Owner" />
      </Docs>
    </Member>
  </Members>
</Type>