<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69291c48b52d4549d8e0df6977ea9430611b5779" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37690862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="65001-101">提供元件特性的相關資訊，例如其屬性 (Attribute)、屬性 (Property) 和事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="65001-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span>
      </span>
      <span data-ttu-id="65001-102">此類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="65001-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-103">.NET Framework 會提供兩種方式可存取的型別上的中繼資料： 中提供的 API 反映<xref:System.Reflection?displayProperty=nameWithType>命名空間，而<xref:System.ComponentModel.TypeDescriptor>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="65001-104">反映是適用於所有類型的一般機制，因為其為建立中<xref:System.Object.GetType%2A>方法的根<xref:System.Object>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="65001-105">因為它無法修改目標型別的編譯後，不是可延伸，它傳回的型別資訊。</span><span class="sxs-lookup"><span data-stu-id="65001-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="65001-106">如需詳細資訊，請參閱中的主題[反映](~/docs/framework/reflection-and-codedom/reflection.md)。</span><span class="sxs-lookup"><span data-stu-id="65001-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="65001-107">相反地，<xref:System.ComponentModel.TypeDescriptor>元件為可延伸的檢查機制： 這些類別實作<xref:System.ComponentModel.IComponent>介面。</span><span class="sxs-lookup"><span data-stu-id="65001-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="65001-108">不同於反映，它不會檢查的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="65001-109"><xref:System.ComponentModel.TypeDescriptor> 可以由數個服務可透過目標元件的動態擴充<xref:System.ComponentModel.Component.Site%2A>。</span><span class="sxs-lookup"><span data-stu-id="65001-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="65001-110">下表顯示這些服務。</span><span class="sxs-lookup"><span data-stu-id="65001-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="65001-111">服務名稱</span><span class="sxs-lookup"><span data-stu-id="65001-111">Service name</span></span>|<span data-ttu-id="65001-112">描述</span><span class="sxs-lookup"><span data-stu-id="65001-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="65001-113">可讓另一個類別，例如<xref:System.Windows.Forms.ToolTip>，以提供給元件的額外屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="65001-114">可讓另一個物件，以修改標準由元件所公開的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="65001-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="65001-115">可讓類別完全，並以動態方式指定自己的中繼資料，取代標準的檢查機制<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="65001-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="65001-116">所提供的擴充<xref:System.ComponentModel.TypeDescriptor>可讓不同於其實際的執行階段表示，可讓該元件的設計階段表示<xref:System.ComponentModel.TypeDescriptor>適用於建立設計階段基礎結構。</span><span class="sxs-lookup"><span data-stu-id="65001-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="65001-117">中的所有方法<xref:System.ComponentModel.TypeDescriptor>是`static`。</span><span class="sxs-lookup"><span data-stu-id="65001-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="65001-118">您無法建立這個類別的執行個體，而且此類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="65001-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="65001-119">您可以設定屬性和事件值的兩個不同的方式： 元件 」 類別中指定它們，或在設計階段變更它們。</span><span class="sxs-lookup"><span data-stu-id="65001-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="65001-120">因為您可以設定這些值兩種方式，多載方法<xref:System.ComponentModel.TypeDescriptor>採取兩種不同的參數： 類別類型或物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="65001-121">當您想要存取<xref:System.ComponentModel.TypeDescriptor>資訊和您擁有之物件的執行個體，請使用元件呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="65001-122">使用您沒有物件的執行個體時，才會呼叫類別類型的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-123">所快取屬性和事件有<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="65001-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="65001-124">一般而言，它們都維持不變的物件存留期。</span><span class="sxs-lookup"><span data-stu-id="65001-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="65001-125">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</span><span class="sxs-lookup"><span data-stu-id="65001-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="65001-126">如果這種情況，則<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>必須呼叫方法，來更新快取。</span><span class="sxs-lookup"><span data-stu-id="65001-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-127">將類別層級屬性加入至目標元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-127">Adds class-level attributes to the target component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="65001-128">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-128">An instance of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-129">要加入至元件類別的 <see cref="T:System.Attribute" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-129">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-130">將類別層級屬性加入至目標元件執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-130">Adds class-level attributes to the target component instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-131">用來加入指定屬性的新建立 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-131">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-132"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29>方法會將類別層級屬性加入指定的執行個體的元件。</span><span class="sxs-lookup"><span data-stu-id="65001-132">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="65001-133">因為這是常見的需求，使用 Visual Studio Windows 表單設計工具 和 屬性 視窗的應用程式，則這個方法會提供捷徑藉由建立已合併提供的屬性與屬性的型別描述提供者存在於類別。</span><span class="sxs-lookup"><span data-stu-id="65001-133">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="65001-134">傳回的值是用來將屬性加入類型描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-134">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="65001-135">此提供者稍後傳遞到<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法時不再需要新增的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-135">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-136">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-136">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-137">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-137">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-138">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-138">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-139">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-139">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-140">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-140">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-141">要加入至元件類別的 <see cref="T:System.Attribute" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-141">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-142">將類別層級屬性加入至目標元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-142">Adds class-level attributes to the target component type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-143">用來加入指定屬性的新建立 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-143">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-144"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29>方法會將類別層級屬性加入指定的元件類型。</span><span class="sxs-lookup"><span data-stu-id="65001-144">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="65001-145">因為這是常見的需求，使用 Visual Studio Windows 表單設計工具 和 屬性 視窗的應用程式，則這個方法會提供捷徑藉由建立已合併提供的屬性與屬性的型別描述提供者存在於類別。</span><span class="sxs-lookup"><span data-stu-id="65001-145">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="65001-146">傳回的值是用來將屬性加入類型描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-146">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="65001-147">此提供者稍後傳遞到<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法時不再需要新增的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-147">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-148">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-148">One or both of the parameters is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-149">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-149">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-150">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-150">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-151">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-151">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="65001-152">要加入編輯器資料表的編輯器基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-152">The editor base type to add the editor table for.</span>
          </span>
          <span data-ttu-id="65001-153">如果此類型已經有資料表，這個方法將不會採取任何動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-153">If a table already exists for this type, this method will do nothing.</span>
          </span>
        </param>
        <param name="table">
          <span data-ttu-id="65001-154">要相加的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-154">The <see cref="T:System.Collections.Hashtable" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-155">加入指定編輯器基底型別的編輯器資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-155">Adds an editor table for the given editor base type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-156"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A>方法加入編輯器資料表的指定的編輯器的基底型別。</span><span class="sxs-lookup"><span data-stu-id="65001-156">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="65001-157">一般而言，編輯器會指定為在元件上的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="65001-157">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="65001-158">不過，如果要求的編輯器基底的中繼資料類型可於相關聯的元件<xref:System.ComponentModel.TypeDescriptor>將資料表中搜尋編輯器的編輯器型別，如果可以找到。</span><span class="sxs-lookup"><span data-stu-id="65001-158">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="65001-159">一旦加入編輯器資料表型別描述元，它無法移除，並擁有者型別描述項。</span><span class="sxs-lookup"><span data-stu-id="65001-159">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="65001-160">型別描述元可以自由地將此資料表的修改。</span><span class="sxs-lookup"><span data-stu-id="65001-160">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="65001-161">編輯器資料表的格式列為索引鍵，編輯器會使用資料類型，做為值。</span><span class="sxs-lookup"><span data-stu-id="65001-161">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="65001-162">值部分的資料表中的項目表示編輯器執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-162">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="65001-163">它可以有三個值之一。</span><span class="sxs-lookup"><span data-stu-id="65001-163">It can have one of three values.</span></span> <span data-ttu-id="65001-164">如果它包含一個字串，則型別描述項會假設這是完整限定的名稱的型別，然後載入型別物件。</span><span class="sxs-lookup"><span data-stu-id="65001-164">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="65001-165">如果它包含的類型，將建立此類型的執行個體取得編輯器。</span><span class="sxs-lookup"><span data-stu-id="65001-165">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="65001-166">最後，值部分可能會包含實際的編輯器執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-166">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="65001-167">如果型別描述項會解析編輯器執行個體，它會儲存回資料表供未來使用的執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-167">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-168">將型別描述提供者加入至這個型別描述項的提供者清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-168">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-169">要相加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-169">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="65001-170">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-170">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-171">加入元件單一執行個體的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-171">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-172"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法加入類型描述提供者提供輸入元件的單一執行個體的資訊。</span><span class="sxs-lookup"><span data-stu-id="65001-172">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="65001-173">如果提供者會加入這個方法，提供者的<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>將不會呼叫方法，因為執行個體已經存在。</span><span class="sxs-lookup"><span data-stu-id="65001-173">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="65001-174">這個方法不會維護硬式元件，參考，所以它無法防止進行最終處理的元件。</span><span class="sxs-lookup"><span data-stu-id="65001-174">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="65001-175">可以新增多個相同的型別或物件的型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-175">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="65001-176">如果發生這種情況，會以獨佔方式使用的第一個型別描述提供者遇到提供類型資訊。</span><span class="sxs-lookup"><span data-stu-id="65001-176">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="65001-177">因為類型資訊提供者會儲存在堆疊中，最後一個新增的提供者會第一個查詢。</span><span class="sxs-lookup"><span data-stu-id="65001-177">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="65001-178">此行為可讓<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法用於推入和彈出類型描述提供者所需的特定案例。</span><span class="sxs-lookup"><span data-stu-id="65001-178">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="65001-179">如果成功，這個方法會呼叫<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>方法`instance`參數。</span><span class="sxs-lookup"><span data-stu-id="65001-179">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-180">這個方法的兩個版本會產生不同的領域的結果。</span><span class="sxs-lookup"><span data-stu-id="65001-180">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="65001-181"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>採用方法<xref:System.Object>參數會影響指定之元件的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-181">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="65001-182">相反地，其他多載，其採用<xref:System.Type>參數，會影響該類型所描述之元件的所有執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-182">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="65001-183">使用<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果您需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-183">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-184">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-184">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-185">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-185">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-186">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-187">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-187">Associated state:</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-188">要相加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-188">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-189">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-189">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-190">加入元件類別的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-190">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-191"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法會將提供類型資訊所指定的類別、 衍生的類別，以及這些類型的所有執行個體的型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-191">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-192">`type`參數可以是任何類型，包括介面。</span><span class="sxs-lookup"><span data-stu-id="65001-192">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="65001-193">例如，若要提供自訂型別和所有元件的執行個體資訊，您會指定`typeof(IComponent)`。</span><span class="sxs-lookup"><span data-stu-id="65001-193">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="65001-194">傳遞`typeof(object)`會呼叫提供者會提供所有類型的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="65001-194">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="65001-195">這個方法不會維護任何物件，硬式參考，所以它無法防止進行最終處理物件。</span><span class="sxs-lookup"><span data-stu-id="65001-195">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="65001-196">可以新增多個相同的型別或物件的型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-196">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="65001-197">如果發生這種情況，會以獨佔方式使用的第一個型別描述提供者遇到提供類型資訊。</span><span class="sxs-lookup"><span data-stu-id="65001-197">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="65001-198">因為類型資訊提供者會儲存在堆疊中，最後一個新增的提供者將會第一個查詢。</span><span class="sxs-lookup"><span data-stu-id="65001-198">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="65001-199">此行為可讓<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>和<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>方法用於推入和彈出類型描述提供者所需的特定案例。</span><span class="sxs-lookup"><span data-stu-id="65001-199">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="65001-200">如果成功，這個方法會呼叫<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>方法`type`參數。</span><span class="sxs-lookup"><span data-stu-id="65001-200">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-201">這個方法的兩個版本會產生不同的領域的結果。</span><span class="sxs-lookup"><span data-stu-id="65001-201">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="65001-202"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>採用方法<xref:System.Object>參數會影響指定之元件的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-202">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="65001-203">相反地，其他多載，其採用<xref:System.Type>參數，會影響該類型所描述之元件的所有執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-203">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="65001-204">使用<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果您需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-204">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-205">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-205">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-206">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-206">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-207">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-207">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-208">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-208">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-209">將型別描述提供者加入至這個型別描述項的提供者清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-209">Adds a type description provider to the list of providers for this type descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-210">要相加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-210">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="65001-211">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-211">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-212">加入元件單一執行個體的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-212">Adds a type description provider for a single instance of a component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-213">可以從部分信任程式碼呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="65001-213">This method can be called from partially trusted code.</span></span> <span data-ttu-id="65001-214">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定義，呼叫端可以註冊指定的執行個體的提供者，如果其型別也是部分信任。</span><span class="sxs-lookup"><span data-stu-id="65001-214">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="65001-215">使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果您不需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-215">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-216">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-216">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="65001-217">進行登錄存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-217">For registry access.</span>
          </span>
          <span data-ttu-id="65001-218">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-218">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-219">相關聯的列舉型別： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-219">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="65001-220">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-221">關聯型別：<see cref="T:System.Security.PermissionSet" />所定義的組件<paramref name="instance" />參數的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-221">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-222">要相加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-222">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-223">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-223">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-224">加入元件類別的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-224">Adds a type description provider for a component class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-225">可以從部分信任程式碼呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="65001-225">This method can be called from partially trusted code.</span></span> <span data-ttu-id="65001-226">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定義，呼叫端可以註冊為指定的型別提供者，如果它也是部分信任。</span><span class="sxs-lookup"><span data-stu-id="65001-226">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="65001-227">使用<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果您不需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-227">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-228">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-228">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="65001-229">進行登錄存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-229">For registry access.</span>
          </span>
          <span data-ttu-id="65001-230">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-230">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-231">相關聯的列舉型別： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-231">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="65001-232">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-233">關聯型別：<see cref="T:System.Security.PermissionSet" />所定義的組件<paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-233">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65001-234">取得或設定目標元件的元件物件模型 (COM) 型別資訊提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-234">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65001-235">表示 COM 型別資訊提供者的 <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-235">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-236"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A>屬性和<xref:System.ComponentModel.IComNativeDescriptorHandler>介面已經過時。</span><span class="sxs-lookup"><span data-stu-id="65001-236">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="65001-237">如需詳細資訊，請參閱 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-237">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-238">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-238">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-239">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-239">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-240">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-240">Associated state:</span>
          </span>
        </permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65001-241">取得目標元件所表示之元件物件模型 (Component Object Model，COM) 物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-241">Gets the type of the Component Object Model (COM) object represented by the target component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65001-242">這個元件所表示之 COM 物件的 <see cref="T:System.Type" />，而 <see langword="null" /> 則表示非 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-242">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-243"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>屬性傳回的型別，可以傳遞至<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法來定義 COM 類型的型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-243">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="65001-244"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>屬性，這個類別中的其他成員取代過時的功能<xref:System.ComponentModel.IComNativeDescriptorHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="65001-244">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="65001-245">若要實作 COM 物件之間的對應層和<xref:System.ComponentModel.TypeDescriptor>，新增<xref:System.ComponentModel.TypeDescriptionProvider>來處理型別<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>。</span><span class="sxs-lookup"><span data-stu-id="65001-245">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="65001-246">主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-246">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="65001-247">次要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-247">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-248">建立兩個物件之間的主要-次要關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-248">Creates a primary-secondary association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-249"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法會建立主要和次要物件之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="65001-249">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="65001-250">一旦建立關聯，設計工具] 或 [其他篩選的機制可以加入至任一個物件將路由傳送至主要物件的屬性集的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-250">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="65001-251">當屬性的引動過程針對主要的物件，進行<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>會呼叫方法，來解決相關給其類型參數的實際的物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-251">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="65001-252">A<xref:System.WeakReference>是用來維護主要和次要物件之間的關聯; 因此，這個方法不會防止任一物件正在完成，而且記憶體回收所回收。</span><span class="sxs-lookup"><span data-stu-id="65001-252">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-253">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-253">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65001-254">
            <paramref name="primary" /> 等於 <paramref name="secondary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-254">
              <paramref name="primary" /> is equal to <paramref name="secondary" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-255">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-255">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-256">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-256">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-257">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-257">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-258">
            <see cref="T:System.ComponentModel.IComponent" />，指定元件與設計工具相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-258">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span>
          </span>
        </param>
        <param name="designerBaseType">
          <span data-ttu-id="65001-259">
            <see cref="T:System.Type" />，表示要建立的設計工具型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-259">A <see cref="T:System.Type" /> that represents the type of designer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-260">建立設計工具的執行個體，該設計工具與指定的元件相關聯並屬於指定的設計工具型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-260">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-261">
            <see cref="T:System.ComponentModel.Design.IDesigner" />，元件設計工具的執行個體，如果找不到設計工具，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-261">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-262">如果此方法找不到有效<xref:System.ComponentModel.DesignerAttribute>，它會搜尋設計工具的類別階層。</span><span class="sxs-lookup"><span data-stu-id="65001-262">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="65001-263">如果找不到設計工具類別階層架構中，它會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="65001-263">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-264">建立與現有的事件描述項相同的新事件描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-264">Creates a new event descriptor that is identical to an existing event descriptor.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-265">要為其建立新事件之元件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-265">The type of the component for which to create the new event.</span>
          </span>
        </param>
        <param name="oldEventDescriptor">
          <span data-ttu-id="65001-266">現有的事件資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-266">The existing event information.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-267">新屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-267">The new attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-268">建立新的事件描述項，當傳送現有的 <see cref="T:System.ComponentModel.EventDescriptor" /> 時，這個描述項與現有的事件描述項相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-268">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-269">新的 <see cref="T:System.ComponentModel.EventDescriptor" />，這個描述項已經將指定的中繼資料屬性 (Attribute) 與現有的中繼資料屬性合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-269">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="65001-270">需要檢查元件的非公用成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-270">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="65001-271">連結需求所需的存取權<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型別<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-271">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-272">事件賴以生存的元件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-272">The type of the component the event lives on.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="65001-273">事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-273">The name of the event.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-274">處理此事件的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-274">The type of the delegate that handles the event.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-275">這個事件的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-275">The attributes for this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-276">建立與現有的事件描述項相同的新事件描述項，方法是以動態方式從一個型別上的指定事件產生描述項資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-276">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-277">
            <see cref="T:System.ComponentModel.EventDescriptor" />，繫結至型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-277">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="65001-278">需要檢查元件的非公用成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-278">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="65001-279">連結需求所需的存取權<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型別<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-279">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-280">提供 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 服務的服務提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-280">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span>
          </span>
          <span data-ttu-id="65001-281">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-281">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectType">
          <span data-ttu-id="65001-282">要建立的物件 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-282">The <see cref="T:System.Type" /> of object to create.</span>
          </span>
        </param>
        <param name="argTypes">
          <span data-ttu-id="65001-283">要傳遞給物件建構函式的選擇性參數類型陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-283">An optional array of parameter types to be passed to the object's constructor.</span>
          </span>
          <span data-ttu-id="65001-284">這個參數可以是 <see langword="null" /> 或長度為零的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-284">This parameter can be <see langword="null" /> or an array of zero length.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="65001-285">要傳遞至物件建構函式的選擇性參數值陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-285">An optional array of parameter values to pass to the object's constructor.</span>
          </span>
          <span data-ttu-id="65001-286">如果不是 <see langword="null" />，元素數就必須和 <c>argTypes</c> 相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-286">If not <see langword="null" />, the number of elements must be the same as <c>argTypes</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-287">建立可以取代另一個資料型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-287">Creates an object that can substitute for another data type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-288">如果找到關聯的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，則為替代資料型別的執行個體，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-288">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-289"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>方法會搜尋<xref:System.ComponentModel.TypeDescriptionProvider>與指定相關聯`objectType`資料型別。</span><span class="sxs-lookup"><span data-stu-id="65001-289">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="65001-290">這個方法會先嘗試取得型別描述提供者，從`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="65001-290">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="65001-291">如果失敗，則會搜尋自己內部的資料表提供者 (這些項目透過先前呼叫建立<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>)。</span><span class="sxs-lookup"><span data-stu-id="65001-291">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="65001-292">如果找到的提供者，則這個方法會委派建立呼叫，該物件。</span><span class="sxs-lookup"><span data-stu-id="65001-292">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-293">
            <paramref name="objectType" /> 不是 <see langword="null" /> 時，<paramref name="args" /> 是 <see langword="null" />，或 <paramref name="argTypes" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-293">
              <paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="65001-294">
            <paramref name="argTypes" /> 和 <paramref name="args" /> 有不同的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-294">
              <paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="65001-295">
            <para>如果在衍生的類別未提供替代執行個體，這個方法應該呼叫基底實作。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-295">
              <para>If the derived class does not provide a substitute instance, this method should call the base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-296">建立元件現有屬性的新屬性描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-296">Creates a new property descriptor for an existing property of a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-297">屬性所隸屬之元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-297">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="oldPropertyDescriptor">
          <span data-ttu-id="65001-298">現有的屬性描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-298">The existing property descriptor.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-299">這個屬性 (Property) 的新屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-299">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-300">使用指定的現有 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和屬性 (Attribute) 陣列，從現有屬性 (Property) 描述項建立新屬性 (Property) 描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-300">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-301">新的 <see cref="T:System.ComponentModel.PropertyDescriptor" />，這個描述項已經將指定的中繼資料屬性與現有的中繼資料屬性合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-301">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="65001-302">需要檢查元件的非公用成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-302">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="65001-303">連結需求所需的存取權<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型別<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-303">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-304">屬性所隸屬之元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-304">The <see cref="T:System.Type" /> of the component that the property is a member of.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="65001-305">屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-305">The name of the property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-306">屬性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-306">The <see cref="T:System.Type" /> of the property.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-307">這個屬性 (Property) 的新屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-307">The new attributes for this property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-308">使用指定的屬性 (Property) 名稱、型別和屬性 (Attribute) 陣列，建立屬性 (Property) 描述項並動態繫結至型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-308">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-309">
            <see cref="T:System.ComponentModel.PropertyDescriptor" />，繫結至指定的型別，並且已經合併指定的中繼資料屬性和現有的中繼資料屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-309">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="65001-310">需要檢查元件的非公用成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-310">Required to inspect non-public members of the component.</span>
          </span>
          <span data-ttu-id="65001-311">連結需求所需的存取權<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型別<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-311">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-312">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-312">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="primary">
          <span data-ttu-id="65001-313">關聯的主要物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-313">The primary object of the association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-314">傳回與指定主要物件關聯的型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-314">Returns an instance of the type associated with the specified primary object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-315">如果關聯存在，則為與主要物件關聯的次要型別執行個體，如果指定的關聯不存在，則為 <paramref name="primary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-315">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-316">如果已對先前的關聯`type`參數使用<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法，則<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>方法會傳回正確的次要物件，要叫用要求的型別。</span><span class="sxs-lookup"><span data-stu-id="65001-316">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="65001-317">否則，請<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>相容的設計工具的搜尋`type`，並傳回在設計工具，如果找到的話。</span><span class="sxs-lookup"><span data-stu-id="65001-317">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="65001-318">這個方法永遠不會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="65001-318">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="65001-319">A<xref:System.WeakReference>是用來維護主要和次要物件之間的關聯; 因此，這個方法不會防止主要或次要物件所完成，而且記憶體回收所回收。</span><span class="sxs-lookup"><span data-stu-id="65001-319">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-320">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-320">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-321">傳回元件或型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-321">Returns the collection of attributes for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-322">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-322">The component for which you want to get attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-323">傳回指定元件的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-323">Returns the collection of attributes for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-324">包含元件屬性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-324">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span>
          </span>
          <span data-ttu-id="65001-325">如果 <paramref name="component" /> 是 <see langword="null" />，這個方法會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-325">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-326">所傳回的屬性<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>方法可動態修改從原始的元件來源，其中列出的擴充性提供者 (<xref:System.ComponentModel.IExtenderProvider>)，篩選服務 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)，和屬性篩選條件。</span><span class="sxs-lookup"><span data-stu-id="65001-326">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="65001-327">當您定義自訂屬性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>設定為`true`，您必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>使其成為唯一的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-327">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="65001-328">如果您的屬性的所有執行個體是唯一的覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回屬性的物件識別。</span><span class="sxs-lookup"><span data-stu-id="65001-328">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="65001-329">如果只有某些情況下的屬性是唯一的傳回值，以從<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，可在這些情況下傳回是否相等。</span><span class="sxs-lookup"><span data-stu-id="65001-329">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="65001-330">例如，某些屬性會有可做為唯一的索引鍵的建構函式參數。</span><span class="sxs-lookup"><span data-stu-id="65001-330">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="65001-331">對於這些屬性，傳回值的建構函式參數<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-331">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-332">預設實作<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回型別識別的值為何<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-332">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="65001-333">若要傳回多個執行個體<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性從<xref:System.ComponentModel.AttributeCollection>，您的屬性必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-333">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-334">如需這個方法的範例，請參閱<xref:System.ComponentModel.AttributeCollection.Matches%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-334">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-335">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-335">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-336">傳回元件指定型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-336">Returns a collection of attributes for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-337">具有元件型別屬性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-337">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span>
          </span>
          <span data-ttu-id="65001-338">如果元件是 <see langword="null" />，這個方法會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-338">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-339">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-339">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-340">針對具有的屬性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>設定為`true`，屬性集合移除重複的執行個體。</span><span class="sxs-lookup"><span data-stu-id="65001-340">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="65001-341">這些是在其中的執行個體<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性會傳回相同的值。</span><span class="sxs-lookup"><span data-stu-id="65001-341">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="65001-342">當您定義自訂屬性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>設定為`true`，您必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>使其成為唯一的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-342">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="65001-343">如果您的屬性的所有執行個體是唯一的覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回屬性的物件識別。</span><span class="sxs-lookup"><span data-stu-id="65001-343">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="65001-344">如果只有某些情況下的屬性是唯一的傳回值，以從<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，可在這些情況下傳回是否相等。</span><span class="sxs-lookup"><span data-stu-id="65001-344">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="65001-345">例如，某些屬性會有可做為唯一的索引鍵的建構函式參數。</span><span class="sxs-lookup"><span data-stu-id="65001-345">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="65001-346">對於這些屬性，傳回值的建構函式參數<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-346">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-347">預設實作<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回型別識別的值為何<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-347">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="65001-348">若要傳回多個執行個體<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性從<xref:System.ComponentModel.AttributeCollection>，您的屬性必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-348">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-349">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-349">The component for which you want to get attributes.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-350">
            <see langword="true" /> 表示如果 <c>component</c> 屬於型別 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，則使用自訂類型描述元的一組基準屬性，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-350">
              <see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <c>component</c> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-351">傳回指定元件的屬性集合和布林值 (Boolean)，表示已經建立自訂型別的描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-351">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-352">具有元件屬性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-352">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span>
          </span>
          <span data-ttu-id="65001-353">如果元件是 <see langword="null" />，這個方法會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-353">If the component is <see langword="null" />, this method returns an empty collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-354">所傳回的屬性<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>方法可動態修改原始來源的元件清單的擴充性提供者 (<xref:System.ComponentModel.IExtenderProvider>)，篩選服務 (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)，和屬性篩選條件。</span><span class="sxs-lookup"><span data-stu-id="65001-354">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="65001-355">當您定義自訂屬性<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>設定為`true`，您必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>使其成為唯一的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-355">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="65001-356">如果您的屬性的所有執行個體是唯一的覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回屬性的物件識別。</span><span class="sxs-lookup"><span data-stu-id="65001-356">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="65001-357">如果只有某些情況下的屬性是唯一的傳回值，以從<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>，可在這些情況下傳回是否相等。</span><span class="sxs-lookup"><span data-stu-id="65001-357">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="65001-358">例如，某些屬性會有可做為唯一的索引鍵的建構函式參數。</span><span class="sxs-lookup"><span data-stu-id="65001-358">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="65001-359">對於這些屬性，傳回值的建構函式參數<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-359">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65001-360">預設實作<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>傳回型別識別的值為何<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-360">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="65001-361">若要傳回多個執行個體<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>屬性從<xref:System.ComponentModel.AttributeCollection>，您的屬性必須覆寫<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-361">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-362">傳回指定元件的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-362">Returns the name of the class for the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-363">需要其類別名稱的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-363">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-364">使用預設型別描述項，傳回指定元件的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-364">Returns the name of the class for the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-365">
            <see cref="T:System.String" />，包含指定元件的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-365">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-366">一般而言，這個方法會傳回完整<xref:System.Type>名稱`component`參數類型。</span><span class="sxs-lookup"><span data-stu-id="65001-366">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="65001-367">例如，按鈕的類別名稱是"System.Windows.Forms.Button 」。</span><span class="sxs-lookup"><span data-stu-id="65001-367">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="65001-368">如果`component`實作<xref:System.ComponentModel.ICustomTypeDescriptor>，它可以傳回的替代名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-368">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="65001-369">這個方法相當於多載<xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>方法的第二個參數`false`。</span><span class="sxs-lookup"><span data-stu-id="65001-369">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-370">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-370">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-371">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-371">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-372">取得指定型別的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-372">Returns the name of the class for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-373">
            <see cref="T:System.String" />，包含指定元件型別的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-373">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-374">這個方法會使用指定之類型的快取的自訂類型描述元，探索相關聯的類別名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-374">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-375">
            <paramref name="componentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-375">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-376">需要其類別名稱的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-376">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-377">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-377">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-378">使用自訂型別描述項，傳回指定元件的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-378">Returns the name of the class for the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-379">
            <see cref="T:System.String" />，包含指定元件的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-379">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-380">一般而言，這個方法會傳回完整<xref:System.Type>名稱`component`參數類型。</span><span class="sxs-lookup"><span data-stu-id="65001-380">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="65001-381">例如，按鈕的類別名稱是"System.Windows.Forms.Button 」。</span><span class="sxs-lookup"><span data-stu-id="65001-381">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="65001-382">如果`component`參數會實作<xref:System.ComponentModel.ICustomTypeDescriptor>，它可以傳回的替代名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-382">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-383">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-383">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-384">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-384">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-385">傳回指定元件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-385">Returns the name of the specified component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-386">需要其類別名稱的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-386">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-387">使用預設型別描述項，傳回指定元件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-387">Returns the name of the specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-388">
            <see cref="T:System.String" />，包含指定元件的名稱，或 <see langword="null" /> (如果沒有元件名稱)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-388">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-389">一般而言，這個方法傳回元件的站台的名稱，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="65001-389">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="65001-390">例如，按鈕的類別名稱是"System.Windows.Forms.Button 」。</span><span class="sxs-lookup"><span data-stu-id="65001-390">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="65001-391">這個方法相當於多載<xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>方法的第二個參數`false`。</span><span class="sxs-lookup"><span data-stu-id="65001-391">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="65001-392">這個方法在設計階段用於擷取元件的執行個體的名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-392">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-393">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-393">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-394">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-394">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-395">需要其類別名稱的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-395">The <see cref="T:System.Object" /> for which you want the class name.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-396">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-396">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-397">使用自訂型別描述項，傳回指定元件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-397">Returns the name of the specified component using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-398">指定元件的類別名稱，或 <see langword="null" /> (如果沒有元件名稱)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-398">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-399">這個方法在設計階段用於擷取元件的執行個體的名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-399">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="65001-400">一般而言，這個方法傳回元件的站台的名稱，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="65001-400">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="65001-401">例如，按鈕的類別名稱是"System.Windows.Forms.Button 」。</span><span class="sxs-lookup"><span data-stu-id="65001-401">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="65001-402">如果元件實作<xref:System.ComponentModel.ICustomTypeDescriptor>介面，它可以傳回的替代名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-402">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-403">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-403">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-404">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-404">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-405">傳回元件或型別的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-405">Returns a type converter for a component or a type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-406">要為其取得轉換子的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-406">A component to get the converter for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-407">傳回指定元件型別的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-407">Returns a type converter for the type of the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-408">指定元件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-408">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-409">此方法可尋找適當的型別轉換子透過尋找<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="65001-409">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="65001-410">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它會周遊類別的基底類別階層，直到它找到的基本型別。</span><span class="sxs-lookup"><span data-stu-id="65001-410">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="65001-411">這個方法相當於多載<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>方法的第二個參數`false`。</span><span class="sxs-lookup"><span data-stu-id="65001-411">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-412">如需使用這個方法的範例，請參閱<xref:System.ComponentModel.TypeConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-412">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-413">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-413">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-414">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-414">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-415">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-415">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-416">傳回指定型別的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-416">Returns a type converter for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-417">指定之型別的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-417">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-418">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-418">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-419">這個方法會尋找適當的型別轉換子透過尋找<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="65001-419">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="65001-420">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它會周遊類別的基底類別階層，直到它找到的基本型別。</span><span class="sxs-lookup"><span data-stu-id="65001-420">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-421">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-421">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-422">要為其取得轉換子的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-422">A component to get the converter for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-423">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-423">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-424">使用自訂型別描述項，傳回指定元件型別的型別轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-424">Returns a type converter for the type of the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-425">指定元件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-425">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-426">這個方法，尋找適當的型別轉換子嘗試尋找<xref:System.ComponentModel.TypeConverterAttribute>。</span><span class="sxs-lookup"><span data-stu-id="65001-426">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="65001-427">如果找不到<xref:System.ComponentModel.TypeConverterAttribute>，它會周遊類別的基底類別階層，直到它找到的基本型別。</span><span class="sxs-lookup"><span data-stu-id="65001-427">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-428">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-428">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-429">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-429">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-430">傳回元件或型別的預設事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-430">Returns the default event for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-431">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-431">The component to get the event for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-432">傳回指定元件的預設事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-432">Returns the default event for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-433">具有預設事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或者如果沒有事件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-433">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-434">這個方法相當於多載<xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>方法的第二個參數`false`。</span><span class="sxs-lookup"><span data-stu-id="65001-434">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-435">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-435">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-436">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-436">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-437">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-437">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-438">傳回元件指定型別的預設事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-438">Returns the default event for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-439">具有預設事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或者如果沒有事件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-439">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-440">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-440">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-441">
            <paramref name="componentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-441">
              <paramref name="componentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-442">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-442">The component to get the event for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-443">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-443">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-444">使用自訂型別描述項，傳回元件的預設事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-444">Returns the default event for a component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-445">具有預設事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或者如果沒有事件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-445">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-446">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-446">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-447">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-447">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-448">傳回元件的預設屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-448">Returns the default property for a component.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-449">要為其取得預設屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-449">The component to get the default property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-450">傳回指定元件的預設屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-450">Returns the default property for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-451">具有預設屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />，或者如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-451">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-452">如果`component`參數是`null`，這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="65001-452">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-453">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-453">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-454">
            <see cref="T:System.Type" />，表示要為其取得屬性的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-454">A <see cref="T:System.Type" /> that represents the class to get the property for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-455">傳回元件指定型別的預設屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-455">Returns the default property for the specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-456">具有預設屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />，或者如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-456">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-457">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-457">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-458">如果`componentType`參數是`null`，這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="65001-458">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-459">要為其取得預設屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-459">The component to get the default property for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-460">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-460">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-461">使用自訂型別描述項，傳回指定元件的預設屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-461">Returns the default property for the specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-462">具有預設屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />，或者如果沒有屬性，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-462">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-463">如果`component`參數是`null`，這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="65001-463">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-464">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-464">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-465">傳回具有指定基底型別的編輯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-465">Returns an editor with the specified base type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-466">要為其取得編輯器的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-466">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="65001-467">
            <see cref="T:System.Type" />，表示您要尋找的編輯器的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-467">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-468">取得編輯器，具有指定元件的指定基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-468">Gets an editor with the specified base type for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-469">編輯器的執行個體，可以轉型為指定的編輯器型別，如果找不到要求型別的編輯器，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-469">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-470">型別`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>，但您也可以使用其他類型 (例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="65001-470">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="65001-471">您可以定義多個編輯器的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-471">You can define multiple editors for a property.</span></span> <span data-ttu-id="65001-472">您可以使用這個方法來選取您想要使用的編輯器。</span><span class="sxs-lookup"><span data-stu-id="65001-472">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-473">
            <paramref name="component" /> 或 <paramref name="editorBaseType" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-473">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-474">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-474">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-475">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-475">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="65001-476">
            <see cref="T:System.Type" />，表示您試著要尋找的編輯器的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-476">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-477">傳回編輯器，具有指定型別的指定基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-477">Returns an editor with the specified base type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-478">編輯器物件的執行個體，可以轉型為指定的基底型別，如果找不到要求型別的編輯器，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-478">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-479">型別`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>，但您也可以使用其他類型 (例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="65001-479">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="65001-480">您可以定義多個編輯器的型別。</span><span class="sxs-lookup"><span data-stu-id="65001-480">You can define multiple editors for a type.</span></span> <span data-ttu-id="65001-481">您可以使用這個方法來選取您想要使用的一個。</span><span class="sxs-lookup"><span data-stu-id="65001-481">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="65001-482">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-482">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-483">
            <paramref name="type" /> 或 <paramref name="editorBaseType" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-483">
              <paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-484">要為其取得編輯器的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-484">The component to get the editor for.</span>
          </span>
        </param>
        <param name="editorBaseType">
          <span data-ttu-id="65001-485">
            <see cref="T:System.Type" />，表示您要尋找的編輯器的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-485">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-486">旗標，指出是否應考慮自訂型別描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-486">A flag indicating whether custom type description information should be considered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-487">傳回編輯器，具有指定元件的指定基底型別和自訂型別描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-487">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-488">編輯器的執行個體，可以轉型為指定的編輯器型別，如果找不到要求型別的編輯器，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-488">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-489">型別`editorBaseType`通常<xref:System.Drawing.Design.UITypeEditor>，但您也可以使用其他類型 (例如<xref:System.ComponentModel.ComponentEditor>和<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="65001-489">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="65001-490">您可以定義多個編輯器的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-490">You can define multiple editors for a property.</span></span> <span data-ttu-id="65001-491">您可以使用這個方法來選取您想要使用的編輯器。</span><span class="sxs-lookup"><span data-stu-id="65001-491">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-492">
            <paramref name="component" /> 或 <paramref name="editorBaseType" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-492">
              <paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-493">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-493">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-494">傳回元件或型別的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-494">Returns the collection of events for a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-495">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-495">A component to get the events for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-496">傳回指定元件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-496">Returns the collection of events for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-497">具有這個元件事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-497">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-498">擷取事件的集合，指定`component`參數執行個體會提供。</span><span class="sxs-lookup"><span data-stu-id="65001-498">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="65001-499">此集合可能不同於類別所提供的事件集。</span><span class="sxs-lookup"><span data-stu-id="65001-499">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="65001-500">如果`component`設置參數、 站台可以新增或移除其他事件。</span><span class="sxs-lookup"><span data-stu-id="65001-500">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="65001-501">如果`component`是`null`，則會傳回空集合。</span><span class="sxs-lookup"><span data-stu-id="65001-501">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-502">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-502">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-503">如需這個方法的範例，請參閱<xref:System.ComponentModel.EventDescriptorCollection.Count%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-503">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-504">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-504">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-505">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-505">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-506">傳回指定元件型別的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-506">Returns the collection of events for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-507">具有這個元件事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-507">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-508">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-508">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-509">如果`componentType`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-509">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-510">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-510">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-511">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-511">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-512">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-512">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-513">使用指定的屬性陣列做為篩選條件，傳回指定元件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-513">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-514">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" />，具有與這個元件的指定屬性相符的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-514">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-515">事件`component`參數可以不同於類別的事件，因為站台可以新增或移除事件，如果`component`設置參數。</span><span class="sxs-lookup"><span data-stu-id="65001-515">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="65001-516">`attributes`陣列可以有混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="65001-516">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="65001-517">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-517">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-518">A<xref:System.Type>會被視為萬用字元使用，它會比對有任何事件<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-518">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="65001-519">如果事件沒有<xref:System.Attribute>相同類別的事件不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-519">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-520">如果屬性是的執行個體<xref:System.Attribute>類別的事件必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-520">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-521">如果<xref:System.Attribute>指定執行個體和它的預設事件，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>事件中。</span><span class="sxs-lookup"><span data-stu-id="65001-521">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="65001-522">如果`component`是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-522">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-523">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-523">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-524">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-524">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-525">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-525">A component to get the events for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-526">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-526">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-527">使用自訂型別描述項，傳回指定元件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-527">Returns the collection of events for a specified component with a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-528">具有這個元件事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-528">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-529">這個方法會擷取事件的集合，指定`component`參數執行個體會提供。</span><span class="sxs-lookup"><span data-stu-id="65001-529">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="65001-530">這可以與不同的類別所提供的事件集。</span><span class="sxs-lookup"><span data-stu-id="65001-530">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="65001-531">如果`component`設置參數、 站台可以新增或移除其他事件。</span><span class="sxs-lookup"><span data-stu-id="65001-531">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="65001-532">如果`component`是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-532">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-533">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-533">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-534">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-534">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-535">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-535">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-536">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-536">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-537">使用指定的屬性陣列做為篩選條件，傳回指定元件型別的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-537">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-538">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" />，具有與這個元件的指定屬性相符的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-538">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-539">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-539">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-540">`attributes`參數陣列可以有混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="65001-540">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="65001-541">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-541">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-542">A<xref:System.Type>會被視為萬用字元使用，它會比對有任何事件<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-542">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="65001-543">如果事件沒有<xref:System.Attribute>相同類別的事件不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-543">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-544">如果屬性是的執行個體<xref:System.Attribute>類別的事件必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-544">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-545">如果<xref:System.Attribute>指定執行個體和它的預設事件，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>事件中。</span><span class="sxs-lookup"><span data-stu-id="65001-545">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="65001-546">如果`componentType`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-546">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-547">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-547">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-548">要為其取得事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-548">A component to get the events for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-549">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-549">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-550">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-550">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-551">使用指定的屬性陣列做為篩選條件，並使用自訂型別描述項，傳回指定元件的事件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-551">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-552">
            <see cref="T:System.ComponentModel.EventDescriptorCollection" />，具有與這個元件的指定屬性相符的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-552">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-553">事件`component`參數可以不同於類別的事件，因為站台可以新增或移除事件，如果`component`設置參數。</span><span class="sxs-lookup"><span data-stu-id="65001-553">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="65001-554">`attributes`參數陣列可以有混合<xref:System.Type>和<xref:System.Attribute>物件。</span><span class="sxs-lookup"><span data-stu-id="65001-554">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="65001-555">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-555">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-556">A<xref:System.Type>會被視為萬用字元使用，它會比對有任何事件<xref:System.Type>集中的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-556">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="65001-557">如果事件沒有<xref:System.Attribute>相同類別的事件不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-557">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-558">如果屬性是的執行個體<xref:System.Attribute>類別的事件必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-558">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-559">如果<xref:System.Attribute>指定執行個體和它的預設事件，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>事件中。</span><span class="sxs-lookup"><span data-stu-id="65001-559">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="65001-560">如果`component`是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-560">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-561">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-561">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-562">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-562">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-563">要尋找名稱的 <see cref="T:System.ComponentModel.Component" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-563">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-564">傳回元件的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-564">Returns the fully qualified name of the component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-565">指定元件的完整名稱，或 <see langword="null" /> (如果元件沒有名稱)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-565">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-566">在許多情況下，<xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A>方法會傳回相同的值<xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-566">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="65001-567">不過，如果該元件位於巢狀容器，或具有其他巢狀的語意，它可能會傳回不同的完整的名稱。</span><span class="sxs-lookup"><span data-stu-id="65001-567">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-568">
            <paramref name="component" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-568">
              <paramref name="component" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-569">傳回元件或型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-569">Returns the collection of properties on a component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-570">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-570">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-571">傳回指定元件的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-571">Returns the collection of properties for a specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-572">具有指定元件屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-572">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-573">元件的屬性可以與不同類別的屬性，因為站台可以新增或移除屬性，如果元件決定位置。</span><span class="sxs-lookup"><span data-stu-id="65001-573">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="65001-574">如果`component`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-574">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-575">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-575">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-576">下列程式碼範例示範使用<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法來存取控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-576">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="65001-577">此程式碼範例是針對提供之較大範例的一部分<xref:System.ComponentModel.Design.ComponentDesigner>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-577">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-578">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-578">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-579">
            <see cref="T:System.Type" />，表示要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-579">A <see cref="T:System.Type" /> that represents the component to get properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-580">傳回指定元件型別的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-580">Returns the collection of properties for a specified type of component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-581">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有元件指定型別的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-581">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-582">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-582">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-583">如果`componentType`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-583">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-584">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-584">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-585">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-585">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-586">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-586">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-587">使用指定的屬性陣列做為篩選條件，傳回指定元件的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-587">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-588">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定元件的指定屬性 (Attribute) 相符的屬性 (Property)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-588">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-589">屬性`component`參數可以與不同類別的屬性，因為站台可以新增或移除屬性，如果`component`設置參數。</span><span class="sxs-lookup"><span data-stu-id="65001-589">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="65001-590">`attributes`參數陣列用來篩選陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-590">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="65001-591">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-591">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-592">如果屬性沒有<xref:System.Attribute>相同類別的屬性不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-592">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-593">如果屬性是的執行個體<xref:System.Attribute>類別的屬性必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-593">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-594">如果<xref:System.Attribute>指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="65001-594">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="65001-595">如果`attributes`具有預設屬性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法符合大小寫，當屬性並沒有所套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-595">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="65001-596">如果`component`是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-596">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-597">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-597">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-598">下列程式碼範例示範如何實作<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-598">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="65001-599">此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.Design.PropertyTab>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-599">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-600">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-600">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-601">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-601">A component to get the properties for.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-602">
            <see langword="true" /> 表示不要考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-602">
              <see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-603">使用預設型別描述項，傳回指定元件的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-603">Returns the collection of properties for a specified component using the default type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-604">具有指定元件屬性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-604">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-605">屬性`component`參數可以與不同類別的屬性，因為站台可以新增或移除屬性，如果`component`設置參數。</span><span class="sxs-lookup"><span data-stu-id="65001-605">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="65001-606">如果`component`是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-606">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-607">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-607">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-608">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-608">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType">
          <span data-ttu-id="65001-609">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-609">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-610">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-610">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-611">使用指定的屬性 (Attribute) 陣列做為篩選條件，傳回元件指定型別的屬性 (Property) 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-611">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-612">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與元件這個型別的指定屬性 (Attribute) 相符的屬性 (Property)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-612">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-613">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-613">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-614">`attributes`參數陣列用來篩選陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-614">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="65001-615">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-615">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-616">如果屬性沒有<xref:System.Attribute>相同類別的屬性不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-616">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-617">如果屬性是的執行個體<xref:System.Attribute>類別的屬性必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-617">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-618">如果<xref:System.Attribute>指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="65001-618">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="65001-619">如果`attributes`具有預設屬性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法符合大小寫，當屬性並沒有所套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-619">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="65001-620">如果`componentType`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-620">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-621">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-621">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-622">下列程式碼範例示範如何實作<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-622">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="65001-623">此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.Design.PropertyTab>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-623">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-624">要為其取得屬性的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-624">A component to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="65001-625">
            <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-625">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <param name="noCustomTypeDesc">
          <span data-ttu-id="65001-626">
            <see langword="true" /> 表示考慮自訂型別描述資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-626">
              <see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-627">使用指定的屬性 (Attribute) 陣列做為篩選條件，並使用自訂型別描述項，傳回指定元件的屬性 (Property) 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-627">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-628">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定元件的指定屬性相符的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-628">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-629">屬性`component`可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果`component`設置。</span><span class="sxs-lookup"><span data-stu-id="65001-629">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="65001-630">`attributes`參數陣列用來篩選陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-630">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="65001-631">篩選是由下列規則定義：</span><span class="sxs-lookup"><span data-stu-id="65001-631">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="65001-632">如果屬性沒有<xref:System.Attribute>相同類別的屬性不包含在傳回的陣列。</span><span class="sxs-lookup"><span data-stu-id="65001-632">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-633">如果屬性是的執行個體<xref:System.Attribute>類別的屬性必須完全相符或不包含傳回陣列中。</span><span class="sxs-lookup"><span data-stu-id="65001-633">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="65001-634">如果<xref:System.Attribute>指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含在傳回的陣列<xref:System.Attribute>屬性中。</span><span class="sxs-lookup"><span data-stu-id="65001-634">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="65001-635">如果`attributes`具有預設屬性，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>方法符合大小寫，當屬性並沒有所套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="65001-635">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="65001-636">如果`component`參數是`null`，則會傳回空的集合。</span><span class="sxs-lookup"><span data-stu-id="65001-636">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="65001-637">傳回集合的順序不保證相同呼叫之間，所以一定要訂購，才能使用。</span><span class="sxs-lookup"><span data-stu-id="65001-637">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65001-638">
            <paramref name="component" /> 是跨處理序的遠端物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-638">
              <paramref name="component" /> is a cross-process remoted object.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-639">傳回元件或型別的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-639">Returns the type description provider for the component or type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="65001-640">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-640">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-641">傳回指定元件的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-641">Returns the type description provider for the specified component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-642">與指定元件相關的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-642">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-643"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法一律會傳回型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-643">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="65001-644">即使是預設值<xref:System.ComponentModel.TypeDescriptor>實作的基礎<xref:System.ComponentModel.TypeDescriptionProvider>。</span><span class="sxs-lookup"><span data-stu-id="65001-644">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-645">
            <paramref name="instance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-645">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-646">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-646">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-647">傳回指定型別的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-647">Returns the type description provider for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-648">與指定型別相關的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>方法一律會傳回型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="65001-650">即使是預設值<xref:System.ComponentModel.TypeDescriptor>實作的基礎<xref:System.ComponentModel.TypeDescriptionProvider>。</span><span class="sxs-lookup"><span data-stu-id="65001-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-651">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-651">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-652">傳回可用來執行反映的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-652">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="65001-653">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-653">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-654">傳回可用來執行反映的 <see cref="T:System.Type" /> (已指定物件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-654">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-655">指定物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-655">A <see cref="T:System.Type" /> for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-656"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>方法是低層級版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-656">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="65001-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 通常用來執行對物件的標準反映，任何自訂類型描述元可以找到它。</span><span class="sxs-lookup"><span data-stu-id="65001-657"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-658">
            <paramref name="instance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-658">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-659">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-659">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-660">傳回可用來執行反映的 <see cref="T:System.Type" /> (已指定類別型別)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65001-661">指定類別的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-661">A <see cref="T:System.Type" /> of the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-662"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>方法是低層級版本<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="65001-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 通常用來執行標準的反映類別，沒有自訂類型描述元可以找到它。</span><span class="sxs-lookup"><span data-stu-id="65001-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-664">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-664">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65001-665">取得型別，這個型別表示所有介面型別的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-665">Gets a type that represents a type description provider for all interface types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65001-666">
            <see cref="T:System.Type" />，表示所有介面型別的自訂型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-666">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-667"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A>屬性會取得<xref:System.Type>物件，您可以傳遞給<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>方法用來定義介面類型的型別描述提供者。</span><span class="sxs-lookup"><span data-stu-id="65001-667">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-668">將屬性和事件從快取區清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-668">Clears the properties and events from the cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="65001-669">已經變更其屬性或事件的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-669">A component for which the properties or events have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-670">將指定元件的屬性和事件從快取區清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-670">Clears the properties and events for the specified component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-671">所快取屬性和事件有<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="65001-671">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="65001-672">一般而言，它們都維持不變的物件存留期。</span><span class="sxs-lookup"><span data-stu-id="65001-672">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="65001-673">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</span><span class="sxs-lookup"><span data-stu-id="65001-673">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="65001-674">如果沒有的話，它們應該呼叫這個方法，以清除該物件的屬性和事件描述項。</span><span class="sxs-lookup"><span data-stu-id="65001-674">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="65001-675">這個方法只能在設計階段使用。</span><span class="sxs-lookup"><span data-stu-id="65001-675">This method is used only at design time.</span></span> <span data-ttu-id="65001-676">它不會在執行階段期間使用。</span><span class="sxs-lookup"><span data-stu-id="65001-676">It is not used during run time.</span></span>  
  
 <span data-ttu-id="65001-677">這個方法也會引發<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件的屬性或事件的元件變更時。</span><span class="sxs-lookup"><span data-stu-id="65001-677">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="65001-678">先前呼叫時，才會引發這個事件<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>快取資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-678">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-679">如需使用這個方法的範例，請參閱<xref:System.ComponentModel.RefreshEventHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-679">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="65001-680">
            <see cref="T:System.Reflection.Assembly" />，表示要重新整理的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-680">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span>
          </span>
          <span data-ttu-id="65001-681">這個組件中的各個 <see cref="T:System.Type" /> 都會被重新整理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-681">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-682">將指定組件的屬性和事件從快取區 (Cache) 清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-682">Clears the properties and events for the specified assembly from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-683">所快取屬性和事件有<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="65001-683">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="65001-684">一般而言，它們都維持不變的物件存留期。</span><span class="sxs-lookup"><span data-stu-id="65001-684">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="65001-685">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</span><span class="sxs-lookup"><span data-stu-id="65001-685">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="65001-686">如果沒有的話，它們可以呼叫此方法，以清除該物件的屬性和事件描述元。</span><span class="sxs-lookup"><span data-stu-id="65001-686">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="65001-687">這個方法只能在設計階段使用。</span><span class="sxs-lookup"><span data-stu-id="65001-687">This method is used only at design time.</span></span> <span data-ttu-id="65001-688">它不會在執行階段期間使用。</span><span class="sxs-lookup"><span data-stu-id="65001-688">It is not used during run time.</span></span>  
  
 <span data-ttu-id="65001-689">在進行呼叫之前<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法，以清除快取中，您必須呼叫<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>要第一次快取資訊的特定組件的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-689">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="65001-690">這個方法也會引發<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件以通知所有想要的屬性集元件變更時收到通知的類別。</span><span class="sxs-lookup"><span data-stu-id="65001-690">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module">
          <span data-ttu-id="65001-691">
            <see cref="T:System.Reflection.Module" />，表示要重新整理的模組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-691">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span>
          </span>
          <span data-ttu-id="65001-692">這個模組中的各個 <see cref="T:System.Type" /> 都會被重新整理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-692">Each <see cref="T:System.Type" /> in this module will be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-693">將指定模組的屬性和事件從快取區清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-693">Clears the properties and events for the specified module from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-694">所快取屬性和事件有<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="65001-694">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="65001-695">一般而言，它們都維持不變的物件存留期。</span><span class="sxs-lookup"><span data-stu-id="65001-695">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="65001-696">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</span><span class="sxs-lookup"><span data-stu-id="65001-696">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="65001-697">如果沒有的話，它們可以呼叫此方法，以清除該物件的屬性和事件描述元。</span><span class="sxs-lookup"><span data-stu-id="65001-697">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="65001-698">這個方法只能在設計階段使用。</span><span class="sxs-lookup"><span data-stu-id="65001-698">This method is used only at design time.</span></span> <span data-ttu-id="65001-699">它不會在執行階段期間使用。</span><span class="sxs-lookup"><span data-stu-id="65001-699">It is not used during run time.</span></span>  
  
 <span data-ttu-id="65001-700">在進行呼叫之前<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>方法，以清除快取中，您必須呼叫<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>特定模組第一次快取資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-700">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="65001-701">這個方法也會引發<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件以通知所有想要的屬性集元件變更時收到通知的類別。</span><span class="sxs-lookup"><span data-stu-id="65001-701">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="65001-702">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-702">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-703">將指定元件型別的屬性和事件從快取區清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-703">Clears the properties and events for the specified type of component from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-704">只有在您不需要物件的執行個體時，請呼叫這個版本的此方法。</span><span class="sxs-lookup"><span data-stu-id="65001-704">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="65001-705">所快取屬性和事件有<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="65001-705">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="65001-706">一般而言，它們都維持不變的物件存留期。</span><span class="sxs-lookup"><span data-stu-id="65001-706">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="65001-707">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</span><span class="sxs-lookup"><span data-stu-id="65001-707">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="65001-708">如果沒有的話，它們可以呼叫此方法，以清除該物件的屬性和事件描述元。</span><span class="sxs-lookup"><span data-stu-id="65001-708">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="65001-709">這個方法只能在設計階段使用。</span><span class="sxs-lookup"><span data-stu-id="65001-709">This method is used only at design time.</span></span> <span data-ttu-id="65001-710">它不會在執行階段期間使用。</span><span class="sxs-lookup"><span data-stu-id="65001-710">It is not used during run time.</span></span>  
  
 <span data-ttu-id="65001-711">這個方法也會引發<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件的屬性或事件的元件變更時。</span><span class="sxs-lookup"><span data-stu-id="65001-711">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="65001-712">先前呼叫時，才會引發這個事件<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>或<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>快取資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-712">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65001-713">清除元件的快取時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-713">Occurs when the cache for a component is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-714">如需有關如何處理事件的詳細資訊，請參閱 < [NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="65001-714">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65001-715">如需使用此事件的範例，請參閱<xref:System.ComponentModel.RefreshEventHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="65001-715">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
        <Parameter Name="secondary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="65001-716">主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-716">The primary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="secondary">
          <span data-ttu-id="65001-717">次要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-717">The secondary <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-718">移除兩個物件之間的關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-718">Removes an association between two objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-719"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A>方法會移除所形成的兩個物件之間的關聯<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-719">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="65001-720">A<xref:System.WeakReference>是用來維護主要和次要物件之間的關聯; 因此，這個方法不會影響完成或透過記憶體回收回收物件時。</span><span class="sxs-lookup"><span data-stu-id="65001-720">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-721">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-721">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-722">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-722">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-723">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-723">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-724">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-724">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="primary">
          <span data-ttu-id="65001-725">關聯的主要 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-725">The primary <see cref="T:System.Object" /> in an association.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-726">移除主要物件的所有關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-726">Removes all associations for a primary object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-727"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A>方法會移除所有主要物件和其所有次要物件，由呼叫之間的關聯<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-727">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="65001-728">A<xref:System.WeakReference>是用來維護主要和次要物件之間的關聯; 因此，這個方法不會影響當完成次要物件的主要或記憶體回收所回收。</span><span class="sxs-lookup"><span data-stu-id="65001-728">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-729">
            <paramref name="primary" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-729">
              <paramref name="primary" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-730">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-730">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-731">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-731">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-732">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-732">Associated state:</span>
          </span>
        </permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-733">移除先前加入的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-733">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-734">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-734">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="65001-735">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-735">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-736">移除先前加入、與指定物件關聯的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-736">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-737">這個方法會移除先前新增的型別描述提供者<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-737">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="65001-738">移除提供者會導致<xref:System.ComponentModel.TypeDescriptor.Refreshed>相關聯的物件會引發事件。</span><span class="sxs-lookup"><span data-stu-id="65001-738">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="65001-739">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果您需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-739">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-740">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-740">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-741">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-741">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-742">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-742">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-743">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-743">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-744">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-744">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-745">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-745">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-746">移除先前加入、與指定型別關聯的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-746">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-747">這個方法會移除先前新增的型別描述提供者<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-747">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="65001-748">移除提供者會導致<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件引發相關聯的類型。</span><span class="sxs-lookup"><span data-stu-id="65001-748">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="65001-749">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果您需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-749">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-750">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-750">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.NamedPermissionSet">
          <span data-ttu-id="65001-751">取得的完整存取系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-751">for full access to system resources.</span>
          </span>
          <span data-ttu-id="65001-752">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-752">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="65001-753">相關聯的狀態：</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-753">Associated state:</span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="65001-754">移除先前加入的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-754">Removes a previously added type description provider.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-755">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-755">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="65001-756">目標元件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-756">An instance of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-757">移除先前加入、與指定物件關聯的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-757">Removes a previously added type description provider that is associated with the specified object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-758">這個方法會移除先前新增的型別描述提供者<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-758">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="65001-759">移除提供者會導致<xref:System.ComponentModel.TypeDescriptor.Refreshed>相關聯的物件會引發事件。</span><span class="sxs-lookup"><span data-stu-id="65001-759">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="65001-760">可以從部分信任程式碼呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="65001-760">This method can be called from partially trusted code.</span></span> <span data-ttu-id="65001-761">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定義，呼叫端可以註冊指定的執行個體的提供者，如果其型別也是部分信任。</span><span class="sxs-lookup"><span data-stu-id="65001-761">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="65001-762">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>如果您不需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-762">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-763">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-763">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="65001-764">進行登錄存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-764">For registry access.</span>
          </span>
          <span data-ttu-id="65001-765">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-765">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-766">相關聯的列舉型別： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-766">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="65001-767">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-767">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-768">關聯型別：<see cref="T:System.Security.PermissionSet" />所定義的組件<paramref name="instance" />參數的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-768">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="65001-769">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-769">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="65001-770">目標元件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-770">The <see cref="T:System.Type" /> of the target component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-771">移除先前加入、與指定型別關聯的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-771">Removes a previously added type description provider that is associated with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65001-772">這個方法會移除先前新增的型別描述提供者<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>方法。</span><span class="sxs-lookup"><span data-stu-id="65001-772">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="65001-773">移除提供者會導致<xref:System.ComponentModel.TypeDescriptor.Refreshed>事件引發相關聯的類型。</span><span class="sxs-lookup"><span data-stu-id="65001-773">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="65001-774">可以從部分信任程式碼呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="65001-774">This method can be called from partially trusted code.</span></span> <span data-ttu-id="65001-775">如果<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>是定義，呼叫端可以取消註冊指定的型別提供者也是部分信任。</span><span class="sxs-lookup"><span data-stu-id="65001-775">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="65001-776">使用<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>如果您不需要從部分信任程式碼呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="65001-776">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-777">參數的其中之一或兩者都是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-777">One or both of the parameters are <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission">
          <span data-ttu-id="65001-778">進行登錄存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-778">For registry access.</span>
          </span>
          <span data-ttu-id="65001-779">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-779">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-780">相關聯的列舉型別： <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-780">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span>
          </span>
        </permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet">
          <span data-ttu-id="65001-781">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-781">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="65001-782">關聯型別：<see cref="T:System.Security.PermissionSet" />所定義的組件<paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-782">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos">
          <span data-ttu-id="65001-783">
            <see cref="T:System.Collections.IList" />，包含要排序的描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-783">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65001-784">使用描述項的名稱排序描述項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-784">Sorts descriptors using the name of the descriptor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65001-785">
            <paramref name="infos" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="65001-785">
              <paramref name="infos" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>