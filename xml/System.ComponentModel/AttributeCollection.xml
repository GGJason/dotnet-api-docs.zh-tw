<Type Name="AttributeCollection" FullName="System.ComponentModel.AttributeCollection">
  <TypeSignature Language="C#" Value="public class AttributeCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f1518-101">表示屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="f1518-101">Represents a collection of attributes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-102"><xref:System.ComponentModel.AttributeCollection>類別是唯讀的; 它不會實作方法來新增或移除屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-102">The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes.</span></span> <span data-ttu-id="f1518-103">您必須繼承自這個類別來實作這些方法。</span><span class="sxs-lookup"><span data-stu-id="f1518-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="f1518-104">使用<xref:System.ComponentModel.AttributeCollection.Count%2A>屬性來尋找集合中存在的屬性數目。</span><span class="sxs-lookup"><span data-stu-id="f1518-104">Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.</span></span>  
  
 <span data-ttu-id="f1518-105">您也可以使用這個類別的方法來查詢有關集合的內容。</span><span class="sxs-lookup"><span data-stu-id="f1518-105">You can also use the methods of this class to query the collection about its contents.</span></span> <span data-ttu-id="f1518-106">呼叫<xref:System.ComponentModel.AttributeCollection.Contains%2A>方法以驗證指定的屬性或陣列屬性存在於集合中。</span><span class="sxs-lookup"><span data-stu-id="f1518-106">Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection.</span></span> <span data-ttu-id="f1518-107">呼叫<xref:System.ComponentModel.AttributeCollection.Matches%2A>方法以驗證指定的屬性或陣列的屬性存在於集合中，並指定屬性的值會在集合中的值相同。</span><span class="sxs-lookup"><span data-stu-id="f1518-107">Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</span></span>  
  
 <span data-ttu-id="f1518-108">雖然大部分屬性都有預設值，預設值不是必要的。</span><span class="sxs-lookup"><span data-stu-id="f1518-108">While most attributes have default values, default values are not required.</span></span> <span data-ttu-id="f1518-109">如果屬性沒有預設值，`null`傳回從採用型別之索引屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-109">If an attribute has no default value, `null` is returned from the indexed property that takes a type.</span></span> <span data-ttu-id="f1518-110">在定義您自己的屬性時，您可以藉由提供的建構函式不接受引數，或定義名為 「 預設 」 您屬性類型的公用靜態欄位宣告的預設值。</span><span class="sxs-lookup"><span data-stu-id="f1518-110">When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-111">若要查看的第一個程式碼範例會檢查是否<xref:System.ComponentModel.BrowsableAttribute>已設定這個集合中。</span><span class="sxs-lookup"><span data-stu-id="f1518-111">The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection.</span></span> <span data-ttu-id="f1518-112">第二個程式碼範例將取得的實際值<xref:System.ComponentModel.DescriptionAttribute>按鈕。</span><span class="sxs-lookup"><span data-stu-id="f1518-112">The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button.</span></span> <span data-ttu-id="f1518-113">這兩個範例需要`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-113">Both examples require that `button1` and `textBox1` have been created on a form.</span></span> <span data-ttu-id="f1518-114">使用屬性時，請確認已設定，或存取其值的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-114">When using attributes, verify that an attribute has been set, or access its value.</span></span>  
  
 [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  
  
 [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]
 [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
    <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1518-115">初始化 <see cref="T:System.ComponentModel.AttributeCollection" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1518-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AttributeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1518-116">初始化 <see cref="T:System.ComponentModel.AttributeCollection" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1518-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="f1518-117"><see cref="T:System.Attribute" /> 型別的陣列，提供這個集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-117">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span></param>
        <summary><span data-ttu-id="f1518-118">初始化 <see cref="T:System.ComponentModel.AttributeCollection" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1518-118">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1518-119">下列程式碼範例會建立新<xref:System.ComponentModel.AttributeCollection>上使用屬性`button1`。</span><span class="sxs-lookup"><span data-stu-id="f1518-119">The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`.</span></span> <span data-ttu-id="f1518-120">它假設`button1`表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-120">It assumes that `button1` has been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1518-121"><paramref name="attributes" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-121"><paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected virtual Attribute[] Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute[] Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Attributes As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Attribute ^&gt; ^ Attributes { cli::array &lt;Attribute ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-122">取得屬性集合。</span><span class="sxs-lookup"><span data-stu-id="f1518-122">Gets the attribute collection.</span></span></summary>
        <value><span data-ttu-id="f1518-123">屬性集合。</span><span class="sxs-lookup"><span data-stu-id="f1518-123">The attribute collection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1518-124">判斷這個屬性集合是否具有指定屬性或屬性陣列。</span><span class="sxs-lookup"><span data-stu-id="f1518-124">Determines whether this collection of attributes has the specified attribute or array of attributes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(Attribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="f1518-125">要在集合中尋找的 <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-125">An <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="f1518-126">判斷這個屬性集合是否具有指定屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-126">Determines whether this collection of attributes has the specified attribute.</span></span></summary>
        <returns>
          <span data-ttu-id="f1518-127">如果集合包含屬性，或者是屬性型別的預設屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-127"><see langword="true" /> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-128">如果指定的屬性類型存在於集合中，與指定之屬性的值是否與集合中屬性的執行個體的值相同，這個集合具有指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-128">This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</span></span>  
  
 <span data-ttu-id="f1518-129">之間的差異<xref:System.ComponentModel.AttributeCollection.Matches%2A>和<xref:System.ComponentModel.AttributeCollection.Contains%2A>方法是，<xref:System.ComponentModel.AttributeCollection.Matches%2A>呼叫<xref:System.Attribute.Match%2A>屬性、 方法和<xref:System.ComponentModel.AttributeCollection.Contains%2A>呼叫<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1518-129">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="f1518-130">對於大部分的屬性，這些方法會執行相同的動作。</span><span class="sxs-lookup"><span data-stu-id="f1518-130">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="f1518-131">屬性，可能會有多個旗標，但是<xref:System.Attribute.Match%2A>通常實作，使它傳回`true`如果任何旗標已滿足。</span><span class="sxs-lookup"><span data-stu-id="f1518-131">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="f1518-132">例如，請考慮與布林值旗標 」 SupportsSql"、"SupportsOleDb 」 和 「 SupportsXml 」 之資料繫結屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-132">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="f1518-133">這個屬性可能會出現在支援所有的三種資料繫結方法的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-133">This attribute may be present on a property that supports all three data-binding approaches.</span></span> <span data-ttu-id="f1518-134">它通常是程式設計人員只需要知道是否可用，特定方法的情況並非所有的三個。</span><span class="sxs-lookup"><span data-stu-id="f1518-134">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="f1518-135">因此，程式設計人員可以使用<xref:System.Attribute.Match%2A>與執行個體，包含程式設計人員的旗標屬性的需要。</span><span class="sxs-lookup"><span data-stu-id="f1518-135">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-136">下列程式碼範例會檢查集合是否具有<xref:System.ComponentModel.BrowsableAttribute>設`true`。</span><span class="sxs-lookup"><span data-stu-id="f1518-136">The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`.</span></span> <span data-ttu-id="f1518-137">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-137">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="f1518-138">要在集合中尋找之 <see cref="T:System.Attribute" /> 型別的陣列。</span><span class="sxs-lookup"><span data-stu-id="f1518-138">An array of type <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="f1518-139">判斷這個屬性集合是否包含屬性陣列中所有的指定屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-139">Determines whether this attribute collection contains all the specified attributes in the attribute array.</span></span></summary>
        <returns>
          <span data-ttu-id="f1518-140">如果集合包含所有的屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-140"><see langword="true" /> if the collection contains all the attributes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-141">這個集合具有指定的屬性陣列，如果存在於集合中所有指定的屬性類型，並指定陣列中的每個屬性是在集合中的屬性相同。</span><span class="sxs-lookup"><span data-stu-id="f1518-141">This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-142">下列程式碼範例會比較中的屬性`button1`和`textBox1`以查看是否在文字方塊中的屬性中包含按鈕的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-142">The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box.</span></span> <span data-ttu-id="f1518-143">它假設兩個`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-143">It assumes that both `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f1518-144">集合要複製到的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-144">The <see cref="T:System.Array" /> to copy the collection to.</span></span></param>
        <param name="index"><span data-ttu-id="f1518-145">做為開頭的索引。</span><span class="sxs-lookup"><span data-stu-id="f1518-145">The index to start from.</span></span></param>
        <summary><span data-ttu-id="f1518-146">複製集合至陣列，開始於指定的索引處。</span><span class="sxs-lookup"><span data-stu-id="f1518-146">Copies the collection to an array, starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-147">取得屬性的數目。</span><span class="sxs-lookup"><span data-stu-id="f1518-147">Gets the number of attributes.</span></span></summary>
        <value><span data-ttu-id="f1518-148">屬性的數目。</span><span class="sxs-lookup"><span data-stu-id="f1518-148">The number of attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-149">您可以使用<xref:System.ComponentModel.AttributeCollection.Count%2A>屬性來設定限制的迴圈，逐一查看集合的物件。</span><span class="sxs-lookup"><span data-stu-id="f1518-149">You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="f1518-150">如果集合是以零為起始，務必使用`Count - 1`做為迴圈的上限。</span><span class="sxs-lookup"><span data-stu-id="f1518-150">If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-151">下列程式碼範例使用<xref:System.ComponentModel.AttributeCollection.Count%2A>屬性可在列印的屬性數目`button1`在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="f1518-151">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box.</span></span> <span data-ttu-id="f1518-152">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-152">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.AttributeCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.AttributeCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.AttributeCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As AttributeCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::AttributeCollection ^ Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-153">指定可使用的空集合，而非建立新集合。</span><span class="sxs-lookup"><span data-stu-id="f1518-153">Specifies an empty collection that you can use, rather than creating a new one.</span></span> <span data-ttu-id="f1518-154">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="f1518-154">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExisting">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, params Attribute[] newAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class System.Attribute[] newAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExisting (existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ FromExisting(System::ComponentModel::AttributeCollection ^ existing, ... cli::array &lt;Attribute ^&gt; ^ newAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" />
        <Parameter Name="newAttributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="f1518-155">用於建立複本的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-155">An <see cref="T:System.ComponentModel.AttributeCollection" /> from which to create the copy.</span></span></param>
        <param name="newAttributes"><span data-ttu-id="f1518-156"><see cref="T:System.Attribute" /> 型別的陣列，提供這個集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-156">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span> <span data-ttu-id="f1518-157">可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-157">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f1518-158">從現有的 <see cref="T:System.ComponentModel.AttributeCollection" /> 建立新 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-158">Creates a new <see cref="T:System.ComponentModel.AttributeCollection" /> from an existing <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></summary>
        <returns><span data-ttu-id="f1518-159">新的 <see cref="T:System.ComponentModel.AttributeCollection" />，是 <paramref name="existing" /> 的複本。</span><span class="sxs-lookup"><span data-stu-id="f1518-159">A new <see cref="T:System.ComponentModel.AttributeCollection" /> that is a copy of <paramref name="existing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-160">如果`newAttributes`提供參數，其<xref:System.Attribute>項目會合併與`existing`參數。</span><span class="sxs-lookup"><span data-stu-id="f1518-160">If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f1518-161"><paramref name="existing" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-161"><paramref name="existing" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAttribute">
      <MemberSignature Language="C#" Value="protected Attribute GetDefaultAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Attribute GetDefaultAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultAttribute (attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute ^ GetDefaultAttribute(Type ^ attributeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="f1518-162">要擷取屬性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-162">The <see cref="T:System.Type" /> of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="f1518-163">傳回指定 <see cref="T:System.Attribute" /> 的預設 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-163">Returns the default <see cref="T:System.Attribute" /> of a given <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="f1518-164">指定之 <paramref name="attributeType" /> 的預設 <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-164">The default <see cref="T:System.Attribute" /> of a given <paramref name="attributeType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1518-165">取得這個集合的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="f1518-165">Gets an enumerator for this collection.</span></span></summary>
        <returns><span data-ttu-id="f1518-166"><see cref="T:System.Collections.IEnumerator" /> 型別的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="f1518-166">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1518-167">下列程式碼範例取得列舉值的屬性`button1`。</span><span class="sxs-lookup"><span data-stu-id="f1518-167">The following code example gets an enumerator for the attributes on `button1`.</span></span> <span data-ttu-id="f1518-168">它會使用列舉值以列印集合中屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="f1518-168">It uses the enumerator to print the names of the attributes in the collection.</span></span> <span data-ttu-id="f1518-169">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-169">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1518-170">取得具有指定索引的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-170">Gets the attribute with the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[int] { Attribute ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f1518-171"><see cref="T:System.ComponentModel.AttributeCollection" /> 之以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="f1518-171">The zero-based index of <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></param>
        <summary><span data-ttu-id="f1518-172">取得具有指定索引編號的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-172">Gets the attribute with the specified index number.</span></span></summary>
        <value><span data-ttu-id="f1518-173">具有指定索引編號的 <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-173">The <see cref="T:System.Attribute" /> with the specified index number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-174">以零為起始的索引編號。</span><span class="sxs-lookup"><span data-stu-id="f1518-174">The index number is zero-based.</span></span> <span data-ttu-id="f1518-175">因此，必須減 1 的特定數值位置<xref:System.Attribute>存取， <xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="f1518-175">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>.</span></span> <span data-ttu-id="f1518-176">例如，若要取得第三個<xref:System.Attribute>，您必須指定`myColl[2]`。</span><span class="sxs-lookup"><span data-stu-id="f1518-176">For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-177">下列程式碼範例使用<xref:System.ComponentModel.AttributeCollection.Item%2A>要列印的名稱屬性<xref:System.Attribute>索引編號，在文字方塊中所指定。</span><span class="sxs-lookup"><span data-stu-id="f1518-177">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box.</span></span> <span data-ttu-id="f1518-178">以零為起始的索引編號，因為此程式碼範例會列印第二個名稱<xref:System.Attribute>在文字方塊中。</span><span class="sxs-lookup"><span data-stu-id="f1518-178">Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box.</span></span> <span data-ttu-id="f1518-179">它會假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-179">It assumes `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[Type attributeType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[Type ^] { Attribute ^ get(Type ^ attributeType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="f1518-180">要從集合中取得之 <see cref="T:System.Type" /> 的 <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-180">The <see cref="T:System.Type" /> of the <see cref="T:System.Attribute" /> to get from the collection.</span></span></param>
        <summary><span data-ttu-id="f1518-181">取得具有指定型別的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-181">Gets the attribute with the specified type.</span></span></summary>
        <value><span data-ttu-id="f1518-182">具有指定型別的 <see cref="T:System.Attribute" />，或者，如果屬性不存在，則為屬性型別的預設值。</span><span class="sxs-lookup"><span data-stu-id="f1518-182">The <see cref="T:System.Attribute" /> with the specified type or, if the attribute does not exist, the default value for the attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-183">如果屬性不存在於集合中，這個屬性會傳回屬性類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="f1518-183">If the attribute does not exist in the collection, this property returns the default value for the attribute type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-184">下列程式碼範例取得<xref:System.ComponentModel.DesignerAttribute>從集合，並列印它的值。</span><span class="sxs-lookup"><span data-stu-id="f1518-184">The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value.</span></span> <span data-ttu-id="f1518-185">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-185">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 <span data-ttu-id="f1518-186">若要執行此程式碼範例，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="f1518-186">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="f1518-187">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="f1518-187">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1518-188">判斷指定屬性或屬性陣列是否和集合中的屬性或屬性陣列相同。</span><span class="sxs-lookup"><span data-stu-id="f1518-188">Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(Attribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="f1518-189">要與這個集合中屬性相比較之 <see cref="T:System.Attribute" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f1518-189">An instance of <see cref="T:System.Attribute" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="f1518-190">判斷指定屬性是否和集合中的屬性相同。</span><span class="sxs-lookup"><span data-stu-id="f1518-190">Determines whether a specified attribute is the same as an attribute in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="f1518-191">如果屬性包含在集合中，並且具有和集合中屬性相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-191"><see langword="true" /> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-192">屬性可提供用於比對的支援。</span><span class="sxs-lookup"><span data-stu-id="f1518-192">An attribute can provide support for matching.</span></span>  
  
 <span data-ttu-id="f1518-193">之間的差異<xref:System.ComponentModel.AttributeCollection.Matches%2A>和<xref:System.ComponentModel.AttributeCollection.Contains%2A>方法是，<xref:System.ComponentModel.AttributeCollection.Matches%2A>呼叫<xref:System.Attribute.Match%2A>屬性、 方法和<xref:System.ComponentModel.AttributeCollection.Contains%2A>呼叫<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f1518-193">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="f1518-194">對於大部分的屬性，這些方法會執行相同的動作。</span><span class="sxs-lookup"><span data-stu-id="f1518-194">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="f1518-195">屬性，可能會有多個旗標，但是<xref:System.Attribute.Match%2A>通常實作，使它傳回`true`如果任何旗標已滿足。</span><span class="sxs-lookup"><span data-stu-id="f1518-195">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="f1518-196">例如，請考慮與布林值旗標 」 SupportsSql"、"SupportsOleDb 」 和 「 SupportsXml 」 之資料繫結屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-196">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="f1518-197">這個屬性可能會出現在支援所有的三個資料繫結方法的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-197">This attribute may be present on a property that supports all three data binding approaches.</span></span> <span data-ttu-id="f1518-198">它通常是程式設計人員只需要知道是否可用，特定方法的情況並非所有的三個。</span><span class="sxs-lookup"><span data-stu-id="f1518-198">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="f1518-199">因此，程式設計人員可以使用<xref:System.Attribute.Match%2A>與執行個體，包含程式設計人員的旗標屬性的需要。</span><span class="sxs-lookup"><span data-stu-id="f1518-199">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-200">下列程式碼範例會確認<xref:System.ComponentModel.BrowsableAttribute>是集合的成員，而且設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="f1518-200">The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`.</span></span> <span data-ttu-id="f1518-201">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-201">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="f1518-202">要與這個集合中屬性相比較之 <see cref="T:System.CodeDom.MemberAttributes" /> 的陣列。</span><span class="sxs-lookup"><span data-stu-id="f1518-202">An array of <see cref="T:System.CodeDom.MemberAttributes" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="f1518-203">判斷指定陣列中的屬性是否與集合中的屬性相同。</span><span class="sxs-lookup"><span data-stu-id="f1518-203">Determines whether the attributes in the specified array are the same as the attributes in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="f1518-204">如果陣列中的所有屬性都包含在集合中，並且具有和集合中屬性相同的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-204"><see langword="true" /> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1518-205">屬性可提供用於比對的支援。</span><span class="sxs-lookup"><span data-stu-id="f1518-205">An attribute can provide support for matching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1518-206">下列程式碼範例會比較按鈕和文字方塊，以查看它們是否符合中的屬性。</span><span class="sxs-lookup"><span data-stu-id="f1518-206">The following code example compares the attributes in a button and a text box to see whether they match.</span></span> <span data-ttu-id="f1518-207">它假設`button1`和`textBox1`在表單上建立。</span><span class="sxs-lookup"><span data-stu-id="f1518-207">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-208">取得集合所包含的項目數目。</span><span class="sxs-lookup"><span data-stu-id="f1518-208">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="f1518-209">集合中所包含的項目數目。</span><span class="sxs-lookup"><span data-stu-id="f1518-209">The number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-210">取得值，指出對集合的存取是否為同步的 (安全執行緒)。</span><span class="sxs-lookup"><span data-stu-id="f1518-210">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value>
          <span data-ttu-id="f1518-211">如果對集合的存取是同步處理的 (安全執行緒)，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-211"><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1518-212">取得物件，這個物件可以用來對集合進行同步存取。</span><span class="sxs-lookup"><span data-stu-id="f1518-212">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="f1518-213">Object，可用來對集合同步存取。</span><span class="sxs-lookup"><span data-stu-id="f1518-213">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1518-214">傳回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-214">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="f1518-215"><see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="f1518-215">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>