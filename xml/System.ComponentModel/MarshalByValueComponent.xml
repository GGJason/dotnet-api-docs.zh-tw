<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MarshalByValueComponent.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5418bc3bc7751079647fd030bd42bf451d7759600.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">418bc3bc7751079647fd030bd42bf451d7759600</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> and provides the base implementation for remotable components that are marshaled by value (a copy of the serialized object is passed).</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 並且提供由數值 (傳遞序列化物件的複本) 所封送處理之可遠端使用元件的基底實作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>A component can be contained in a container.</source>
          <target state="translated">元件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">每個元件的容器中，容器會建立用來管理元件的網站。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>The component interacts with its container primarily through a container-provided <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, which is a repository of container-specific, per-component information.</source>
          <target state="translated">元件互動主要是透過容器提供與其容器<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>，這是特定容器中，每一個元件資訊的儲存機制。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>When you inherit from this class, you can override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.MarshalByValueComponent.Site" /&gt;</ph>, and the <ph id="ph3">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" /&gt;</ph> methods.</source>
          <target state="translated">當您繼承自這個類別時，您可以覆寫<ph id="ph1">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose" /&gt;</ph>， <ph id="ph2">&lt;see cref="P:System.ComponentModel.MarshalByValueComponent.Site" /&gt;</ph>，而<ph id="ph3">&lt;see cref="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>A component can be contained in a container.</source>
          <target state="translated">元件可以包含在容器中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>For each component in a container, the container creates a site that it uses to manage the component.</source>
          <target state="translated">每個元件的容器中，容器會建立用來管理元件的網站。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.#ctor">
          <source>The component interacts with its container primarily through a container-provided <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, which is a repository of container-specific, per-component information.</source>
          <target state="translated">元件互動主要是透過容器提供與其容器<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>，這是特定容器中，每一個元件資訊的儲存機制。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Container">
          <source>Gets the container for the component.</source>
          <target state="translated">取得元件的容器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Container">
          <source>An object implementing the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> interface that represents the component's container, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the component does not have a site.</source>
          <target state="translated">物件，實作表示元件容器的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> 介面，或者如果元件並沒有站台，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source>Gets a value indicating whether the component is currently in design mode.</source>
          <target state="translated">取得值，表示元件目前是否處於設計模式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component is in design mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元件處於設計模式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.DesignMode">
          <source>If the component does not have a site, this method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果元件並沒有站台，這個方法一律會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.MarshalByValueComponent">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent.Dispose%2A&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.MarshalByValueComponent" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>小心不要參考物件已處置過的早期呼叫中<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.MarshalByValueComponent.Disposed">
          <source>Adds an event handler to listen to the <ph id="ph1">&lt;see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" /&gt;</ph> event on the component.</source>
          <target state="translated">加入事件處理常式來接聽 (Listen) 元件上的 <ph id="ph1">&lt;see cref="E:System.ComponentModel.MarshalByValueComponent.Disposed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Events">
          <source>Gets the list of event handlers that are attached to this component.</source>
          <target state="translated">取得附加在這個元件上的事件處理常式清單。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>，提供這個元件的委派。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">在記憶體回收開始前，允許物件嘗試釋放資源，並執行其他清除作業。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of service you want.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，表示您想要服務的型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>Gets the implementer of the <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> 的實作器。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the implementer of the <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.IServiceProvider" /&gt;</ph> 的實作器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
          <source>For more information on designer services you can use, see <bpt id="p1">[</bpt>Design-Time Architecture<ept id="p1">](http://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a)</ept>.</source>
          <target state="translated">如需有關您可以使用設計工具服務的詳細資訊，請參閱<bpt id="p1">[</bpt>設計階段架構<ept id="p1">](http://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>Gets or sets the site of the component.</source>
          <target state="translated">取得或設定元件的站台。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>An object implementing the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> interface that represents the site of the component.</source>
          <target state="translated">物件，實作表示元件站台的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 介面。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>A valid value for this property - that is, the value is not <ph id="ph1">`null`</ph>, indicates that the component has been added to a container.</source>
          <target state="translated">有效的值，這個屬性-也就是值不是<ph id="ph1">`null`</ph>，表示元件已加入至容器。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>When the value of this property is <ph id="ph1">`null`</ph>, the property indicates that the component is being removed from a container.</source>
          <target state="translated">當這個屬性的值是<ph id="ph1">`null`</ph>，屬性會指出從容器移除元件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>However, this property does not remove the component from the container.</source>
          <target state="translated">不過，這個屬性不會移除該元件的容器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.MarshalByValueComponent.Site">
          <source>To change this behavior, inherit from this class and get and set in this property.</source>
          <target state="translated">若要變更此行為，繼承自這個類別以及取得和設定這個屬性中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated">傳回任何包含 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 名稱的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">不應覆寫此方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中可能含有 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> 尚未命名，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能或可能沒有名稱。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>是指定名稱之後，名稱是唯一的其他<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>內的物件及其<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>'s name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>儲存<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>的名稱。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have a <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>只能有<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>如果加入至<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>和<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>指派<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>給它。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>