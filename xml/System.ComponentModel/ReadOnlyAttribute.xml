<Type Name="ReadOnlyAttribute" FullName="System.ComponentModel.ReadOnlyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3354349e27ec39eb35003d32cafd4f2a5993b898" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48761778" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReadOnlyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ReadOnlyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ReadOnlyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f128a-101">指定這個屬性 (Attribute) 繫結的屬性 (Property) 是唯讀的或是讀取/寫入的。</span><span class="sxs-lookup"><span data-stu-id="f128a-101">Specifies whether the property this attribute is bound to is read-only or read/write.</span></span> <span data-ttu-id="f128a-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="f128a-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f128a-103">標記與成員<xref:System.ComponentModel.ReadOnlyAttribute>設定為`true`或沒有`Set`方法不能變更。</span><span class="sxs-lookup"><span data-stu-id="f128a-103">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="f128a-104">沒有這個屬性，或使用標示的成員<xref:System.ComponentModel.ReadOnlyAttribute>設定為`false`是可讀寫，而且可以變更它們。</span><span class="sxs-lookup"><span data-stu-id="f128a-104">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="f128a-105">預設值為 <xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-105">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f128a-106"><xref:System.ComponentModel.PropertyDescriptor>類別會強制執行<xref:System.ComponentModel.ReadOnlyAttribute>設計環境中，並在執行階段。</span><span class="sxs-lookup"><span data-stu-id="f128a-106">The <xref:System.ComponentModel.PropertyDescriptor> class enforces the <xref:System.ComponentModel.ReadOnlyAttribute> in the design environment and at run time.</span></span> <span data-ttu-id="f128a-107">當您將標記的屬性<xref:System.ComponentModel.ReadOnlyAttribute>設定為`true`，此屬性的值設定為常數成員<xref:System.ComponentModel.ReadOnlyAttribute.Yes>。</span><span class="sxs-lookup"><span data-stu-id="f128a-107">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="f128a-108">針對屬性標記為<xref:System.ComponentModel.ReadOnlyAttribute>設定為`false`，這個值是<xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-108">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="f128a-109">因此，當您想要檢查您的程式碼中的此屬性的值，您必須指定屬性做<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>或<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f128a-109">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f128a-110">如需詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f128a-110">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f128a-111">下列程式碼範例將屬性標示為唯讀。</span><span class="sxs-lookup"><span data-stu-id="f128a-111">The following code example marks a property as read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f128a-112">在下一步 的程式碼範例示範如何檢查的值<xref:System.ComponentModel.ReadOnlyAttribute>針對`MyProperty`。</span><span class="sxs-lookup"><span data-stu-id="f128a-112">The next code example shows how to check the value of the <xref:System.ComponentModel.ReadOnlyAttribute> for `MyProperty`.</span></span> <span data-ttu-id="f128a-113">首先，此程式碼取得<xref:System.ComponentModel.PropertyDescriptorCollection>含有物件的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="f128a-113">First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span> <span data-ttu-id="f128a-114">接下來，其索引至<xref:System.ComponentModel.PropertyDescriptorCollection>以取得`MyProperty`。</span><span class="sxs-lookup"><span data-stu-id="f128a-114">Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span> <span data-ttu-id="f128a-115">然後它會傳回這個屬性的屬性，並將它們儲存於屬性變數。</span><span class="sxs-lookup"><span data-stu-id="f128a-115">Then it returns the attributes for this property and saves them in the attributes variable.</span></span>  
  
 <span data-ttu-id="f128a-116">此範例顯示兩個不同的方式檢查值的<xref:System.ComponentModel.ReadOnlyAttribute>。</span><span class="sxs-lookup"><span data-stu-id="f128a-116">The example presents two different ways of checking the value of the <xref:System.ComponentModel.ReadOnlyAttribute>.</span></span> <span data-ttu-id="f128a-117">在第二個程式碼片段中，此範例會呼叫<xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f128a-117">In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method.</span></span> <span data-ttu-id="f128a-118">在最後的程式碼片段中，此範例會使用<xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A>來檢查值的屬性。</span><span class="sxs-lookup"><span data-stu-id="f128a-118">In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic ReadOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#2)]  
  
 <span data-ttu-id="f128a-119">如果您標示類別<xref:System.ComponentModel.ReadOnlyAttribute>，使用下列程式碼範例，來檢查值。</span><span class="sxs-lookup"><span data-stu-id="f128a-119">If you marked a class with the <xref:System.ComponentModel.ReadOnlyAttribute>, use the following code example to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic ReadOnlyAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.AttributeCollection" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyAttribute (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyAttribute(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ReadOnlyAttribute : bool -&gt; System.ComponentModel.ReadOnlyAttribute" Usage="new System.ComponentModel.ReadOnlyAttribute isReadOnly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><span data-ttu-id="f128a-120">如果這個屬性 (Attribute) 繫結的屬性 (Property) 是唯讀的，則為 <see langword="true" />；如果屬性 (property) 是可讀取/寫入的，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f128a-120"><see langword="true" /> to show that the property this attribute is bound to is read-only; <see langword="false" /> to show that the property is read/write.</span></span></param>
        <summary><span data-ttu-id="f128a-121">初始化 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f128a-121">Initializes a new instance of the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f128a-122">標記與成員<xref:System.ComponentModel.ReadOnlyAttribute>設定為`true`或沒有`Set`方法不能變更。</span><span class="sxs-lookup"><span data-stu-id="f128a-122">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="f128a-123">沒有這個屬性，或使用標示的成員<xref:System.ComponentModel.ReadOnlyAttribute>設定為`false`是可讀寫，而且可以變更它們。</span><span class="sxs-lookup"><span data-stu-id="f128a-123">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="f128a-124">預設值為 <xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-124">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f128a-125">當您將標記的屬性<xref:System.ComponentModel.ReadOnlyAttribute>設定為`true`，此屬性的值設定為常數成員<xref:System.ComponentModel.ReadOnlyAttribute.Yes>。</span><span class="sxs-lookup"><span data-stu-id="f128a-125">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="f128a-126">針對屬性標記為<xref:System.ComponentModel.ReadOnlyAttribute>設定為`false`，這個值是<xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-126">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="f128a-127">因此，當您想要檢查您的程式碼中的此屬性的值，您必須指定屬性做<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>或<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f128a-127">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f128a-128">下列程式碼範例將屬性標示為唯讀。</span><span class="sxs-lookup"><span data-stu-id="f128a-128">The following code example marks a property as read-only.</span></span> <span data-ttu-id="f128a-129">此程式碼會建立新<xref:System.ComponentModel.ReadOnlyAttribute>，其值設定為<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>，並將屬性繫結。</span><span class="sxs-lookup"><span data-stu-id="f128a-129">This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, and binds it to the property.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f128a-130">指定 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 的預設值，即 <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (換句話說，此屬性 (Attribute) 所繫結的屬性 (Property) 是可以讀取和寫入的)。</span><span class="sxs-lookup"><span data-stu-id="f128a-130">Specifies the default value for the <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, which is <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (that is, the property this attribute is bound to is read/write).</span></span> <span data-ttu-id="f128a-131">這個 <see langword="static" /> 欄位是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="f128a-131">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f128a-132">當您將標記具有此值的屬性時，這個屬性設為常數成員<xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-132">When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="f128a-133">因此，當您想要檢查屬性是否設定為這個程式碼中的值，您必須指定屬性做為<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f128a-133">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f128a-134">要比較的另一個物件。</span><span class="sxs-lookup"><span data-stu-id="f128a-134">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="f128a-135">指示這個執行個體和指定的物件是否相等。</span><span class="sxs-lookup"><span data-stu-id="f128a-135">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="f128a-136">如果 <paramref name="value" /> 等於這個執行個體則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f128a-136"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f128a-137">傳回這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="f128a-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="f128a-138">目前 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="f128a-138">A hash code for the current <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="readOnlyAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f128a-139">判斷這個屬性是否為預設值。</span><span class="sxs-lookup"><span data-stu-id="f128a-139">Determines if this attribute is the default.</span></span></summary>
        <returns><span data-ttu-id="f128a-140">如果屬性是這個屬性類別的預設值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f128a-140"><see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f128a-141">取得值，表示這個屬性 (Attribute) 繫結的內容 (Property) 是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="f128a-141">Gets a value indicating whether the property this attribute is bound to is read-only.</span></span></summary>
        <value><span data-ttu-id="f128a-142">如果這個屬性 (Attribute) 繫結的屬性 (Property) 是唯讀的則為 <see langword="true" />；如果屬性是可讀取/寫入的則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f128a-142"><see langword="true" /> if the property this attribute is bound to is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f128a-143">下列程式碼範例會檢查以查看是否`MyProperty`處於唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="f128a-143">The following code example checks to see whether `MyProperty` is read-only.</span></span> <span data-ttu-id="f128a-144">首先，程式碼會取得的屬性`MyProperty`執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="f128a-144">First, the code gets the attributes for `MyProperty` by doing the following:</span></span>  
  
-   <span data-ttu-id="f128a-145">擷取<xref:System.ComponentModel.PropertyDescriptorCollection>含有物件的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="f128a-145">Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span>  
  
-   <span data-ttu-id="f128a-146">編制<xref:System.ComponentModel.PropertyDescriptorCollection>以取得`MyProperty`。</span><span class="sxs-lookup"><span data-stu-id="f128a-146">Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span>  
  
-   <span data-ttu-id="f128a-147">屬性變數中儲存這個屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="f128a-147">Saving the attributes for this property in the attributes variable.</span></span>  
  
 <span data-ttu-id="f128a-148">然後程式碼集`myAttribute`的值<xref:System.ComponentModel.ReadOnlyAttribute>在<xref:System.ComponentModel.AttributeCollection>並檢查屬性是否唯讀。</span><span class="sxs-lookup"><span data-stu-id="f128a-148">Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f128a-149">指定這個屬性 (Attribute) 繫結的屬性 (Property) 是可讀取/寫入的，並可進行修改。</span><span class="sxs-lookup"><span data-stu-id="f128a-149">Specifies that the property this attribute is bound to is read/write and can be modified.</span></span> <span data-ttu-id="f128a-150">這個 <see langword="static" /> 欄位是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="f128a-150">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f128a-151">這個欄位是此屬性的預設設定。</span><span class="sxs-lookup"><span data-stu-id="f128a-151">This field is the default setting for this attribute.</span></span>  
  
 <span data-ttu-id="f128a-152">當您將標記的屬性<xref:System.ComponentModel.ReadOnlyAttribute>設定為`false`，此屬性的值設定為常數成員<xref:System.ComponentModel.ReadOnlyAttribute.No>。</span><span class="sxs-lookup"><span data-stu-id="f128a-152">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="f128a-153">因此，當您想要檢查屬性是否設定為這個程式碼中的值，您必須指定屬性做為<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f128a-153">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f128a-154">指定這個屬性 (Attribute) 繫結的屬性 (Property) 是唯讀的，並無法在伺服器總管中進行修改。</span><span class="sxs-lookup"><span data-stu-id="f128a-154">Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer.</span></span> <span data-ttu-id="f128a-155">這個 <see langword="static" /> 欄位是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="f128a-155">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f128a-156">當您將標記的屬性<xref:System.ComponentModel.ReadOnlyAttribute>設定為`true`，此屬性的值設定為常數成員<xref:System.ComponentModel.ReadOnlyAttribute.Yes>。</span><span class="sxs-lookup"><span data-stu-id="f128a-156">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="f128a-157">因此，當您想要檢查屬性是否設定為這個程式碼中的值，您必須指定屬性做為<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f128a-157">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>