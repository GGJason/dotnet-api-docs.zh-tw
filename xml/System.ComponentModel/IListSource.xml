<Type Name="IListSource" FullName="System.ComponentModel.IListSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="854d2280630e0531066f1e077cc99d8d435b9d8a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30375912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListSource" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IListSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataSourceListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供功能，使物件傳回可繫結至資料來源的清單。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您通常使用此介面來傳回清單，可以從物件未實作繫結到資料來源，<xref:System.Collections.IList>本身。  
  
 資料繫結可以發生在執行階段或在設計工具中，但每個規則。 在執行階段，您可以繫結至下列任一項中的資料：  
  
-   <xref:System.Array>  
  
-   實作器<xref:System.Collections.IList>，前提是實作器具有強型別<xref:System.Collections.IList.Item%2A>屬性 (也就是<xref:System.Type>以外是<xref:System.Object>)。 您可以完成這項作業所進行的預設實作<xref:System.Collections.IList.Item%2A>私用。 如果您想要建立<xref:System.Collections.IList>一節的規則的強類型集合，您應該從衍生<xref:System.Collections.CollectionBase>。  
  
-   實作器<xref:System.ComponentModel.ITypedList>。  
  
 您可以在設計工具，來初始化繫結至<xref:System.ComponentModel.Component>遵循相同的規則的物件。  
  
> [!NOTE]
>  實作器<xref:System.ComponentModel.IListSource>可以傳回<xref:System.Collections.IList>，其中包含的集合<xref:System.Collections.IList>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.IListSource>介面。 名為元件`EmployeeListSource`公開<xref:System.Collections.IList>藉由實作資料繫結<xref:System.ComponentModel.IListSource.GetList%2A>方法。 如需完整的程式碼清單，請參閱[How to： 實作 IListSource 介面](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)。  
  
 [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]
 [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IListSource" />
    <altmember cref="T:System.ComponentModel.ITypedList" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Collections.CollectionBase" />
  </Docs>
  <Members>
    <Member MemberName="ContainsListCollection">
      <MemberSignature Language="C#" Value="public bool ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsListCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示集合是否為 <see cref="T:System.Collections.IList" /> 物件的集合。</summary>
        <value>
          如果集合為 <see cref="T:System.Collections.IList" /> 物件的集合，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性中的<xref:System.Data.DataSet>傳回`true`因為<xref:System.Data.DataSet>類別包含集合的集合。 使用這個屬性中的<xref:System.Data.DataTable>傳回`false`因為<xref:System.Data.DataTable>類別包含物件的集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.IListSource>介面。 名為元件`EmployeeListSource`指出，它不包含<xref:System.Collections.IList>藉由傳回的資料繫結`false`從<xref:System.ComponentModel.IListSource.ContainsListCollection%2A>方法。 如需完整的程式碼清單，請參閱[How to： 實作 IListSource 介面](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)。  
  
 [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]
 [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="GetList">
      <MemberSignature Language="C#" Value="public System.Collections.IList GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IListSource.GetList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IList ^ GetList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從本身沒有實作 <see cref="T:System.Collections.IList" /> 的物件傳回可以繫結至資料來源的 <see cref="T:System.Collections.IList" />。</summary>
        <returns>
          <see cref="T:System.Collections.IList" />，從物件繫結至資料來源。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.ComponentModel.IListSource>介面。 名為元件`EmployeeListSource`公開<xref:System.Collections.IList>藉由實作資料繫結<xref:System.ComponentModel.IListSource.GetList%2A>方法。 如需完整的程式碼清單，請參閱[How to： 實作 IListSource 介面](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md)。  
  
 [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]
 [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
  </Members>
</Type>