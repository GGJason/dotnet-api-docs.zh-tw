<Type Name="EventSource" FullName="System.Diagnostics.Tracing.EventSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9123473d643481ca29d41523e7f65cea5413f138" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSource : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSource extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSource&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSource : IDisposable" />
  <TypeSignature Language="F#" Value="type EventSource = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="92c7d-101">提供建立 Windows 事件追蹤 (ETW) 事件的能力。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92c7d-101">Provides the ability to create events for event tracing for Windows (ETW).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-102">這個類別會提供特定事件，以用於 ETW 的使用者類別繼承。</span><span class="sxs-lookup"><span data-stu-id="92c7d-102">This class is intended to be inherited by a user class that provides specific events to be used for ETW.</span></span> <span data-ttu-id="92c7d-103"><xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType>方法會呼叫來記錄事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-103">The <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> methods are called to log the events.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="92c7d-104">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="92c7d-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="92c7d-105">當您完成使用類型時，您應該會處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="92c7d-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="92c7d-106">若要直接處置的類型，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="92c7d-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="92c7d-107">若要為其配置間接，使用語言建構例如`using`（C# 中） 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="92c7d-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="92c7d-108">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="92c7d-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="92c7d-109">基本功能<xref:System.Diagnostics.Tracing.EventSource>就足以應付大部分的應用程式。</span><span class="sxs-lookup"><span data-stu-id="92c7d-109">The basic functionality of <xref:System.Diagnostics.Tracing.EventSource> is sufficient for most applications.</span></span>  <span data-ttu-id="92c7d-110">如果您要建立的 ETW 資訊清單的更多控制，您可以套用<xref:System.Diagnostics.Tracing.EventAttribute>屬性的方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-110">If you want more control over the ETW manifest that is created, you can apply the <xref:System.Diagnostics.Tracing.EventAttribute> attribute to the methods.</span></span> <span data-ttu-id="92c7d-111">對於進階的事件來源的應用程式，可能是以攔截要傳送至衍生的事件來源的命令，並變更篩選，或造成動作 （例如傾印的資料結構） 繼承者必須執行。</span><span class="sxs-lookup"><span data-stu-id="92c7d-111">For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.</span></span>  <span data-ttu-id="92c7d-112">可以與 Windows ETW 控制站，例如 Logman 工具，立即啟動事件來源。</span><span class="sxs-lookup"><span data-stu-id="92c7d-112">An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.</span></span>  <span data-ttu-id="92c7d-113">它也可透過程式設計方式控制和攔截資料發送器。</span><span class="sxs-lookup"><span data-stu-id="92c7d-113">It is also possible to programmatically control and intercept the data dispatcher.</span></span>  <span data-ttu-id="92c7d-114"><xref:System.Diagnostics.Tracing.EventListener>類別會提供額外的功能。</span><span class="sxs-lookup"><span data-stu-id="92c7d-114">The <xref:System.Diagnostics.Tracing.EventListener> class provides additional functionality.</span></span>  
  
 <span data-ttu-id="92c7d-115">從開始[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，<xref:System.Diagnostics.Tracing.EventSource>提供放寬通道支援和一些事件來源的驗證規則。</span><span class="sxs-lookup"><span data-stu-id="92c7d-115">Starting with [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Diagnostics.Tracing.EventSource> provides channel support and some of the event source validation rules have been relaxed.</span></span> <span data-ttu-id="92c7d-116">這表示：</span><span class="sxs-lookup"><span data-stu-id="92c7d-116">This means:</span></span>  
  
-   <span data-ttu-id="92c7d-117"><xref:System.Diagnostics.Tracing.EventSource> 類型現在可能會實作介面。</span><span class="sxs-lookup"><span data-stu-id="92c7d-117"><xref:System.Diagnostics.Tracing.EventSource> types may now implement interfaces.</span></span> <span data-ttu-id="92c7d-118">這會啟用事件來源類型的進階的記錄系統中使用介面來定義常用的記錄目標。</span><span class="sxs-lookup"><span data-stu-id="92c7d-118">This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.</span></span>  
  
-   <span data-ttu-id="92c7d-119">已經導入的公用程式的事件來源類型的概念。</span><span class="sxs-lookup"><span data-stu-id="92c7d-119">The concept of a utility event source type has been introduced.</span></span> <span data-ttu-id="92c7d-120">這項功能可讓共用的程式碼，跨多個事件來源類型的專案中以啟用案例，例如最佳化<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="92c7d-120">This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads.</span></span>  
  
 <span data-ttu-id="92c7d-121">版本的<xref:System.Diagnostics.Tracing.EventSource>類別，可提供功能，例如通道可支援您的目標[!INCLUDE[net_v451](~/includes/net-v451-md.md)]或更早版本，請參閱[Microsoft EventSource 文件庫 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource)。</span><span class="sxs-lookup"><span data-stu-id="92c7d-121">For a version of the <xref:System.Diagnostics.Tracing.EventSource> class that provides features such as channel support you are targeting [!INCLUDE[net_v451](~/includes/net-v451-md.md)] or earlier, see [Microsoft EventSource Library 1.0.16](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-122">下列範例示範的簡單實作<xref:System.Diagnostics.Tracing.EventSource>類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-122">The following example shows a simple implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTraceSmall#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtracesmall/cs/program.cs#1)]
 [!code-vb[ETWTraceSmall#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtracesmall/vb/program.vb#1)]  
  
 <span data-ttu-id="92c7d-123">下列範例示範的較複雜實作<xref:System.Diagnostics.Tracing.EventSource>類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-123">The following example shows a more complex implementation of the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]
 [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="92c7d-124">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="92c7d-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-125">建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-125">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-126">建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-126">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (bool throwOnEventWriteErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool throwOnEventWriteErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (throwOnEventWriteErrors As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(bool throwOnEventWriteErrors);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : bool -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource throwOnEventWriteErrors" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="throwOnEventWriteErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="throwOnEventWriteErrors">
          <span data-ttu-id="92c7d-127">
            <see langword="true" /> 表示要在基礎 Windows 程式碼發生錯誤時擲回例外狀況，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-127">
              <see langword="true" /> to throw an exception when an error occurs in the underlying Windows code; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-128">建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體，並指定當基礎 Windows 程式碼發生錯誤時是否擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-128">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="92c7d-129">列舉值的位元組合，可指定要套用至事件來源的組態設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-129">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-130">使用指定的組態設定，建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-130">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-131">指定`settings`時<xref:System.Diagnostics.Tracing.EventSource>建構可讓您指定是否在資訊清單為基礎或自我描述的格式寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-131">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="92c7d-132">此外，您可以指定事件寫入程序期間發生錯誤時，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-132">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource eventSourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="92c7d-133">要套用至事件來源的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-133">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="92c7d-134">必須不是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-134">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-135">使用指定的名稱，建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-135">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92c7d-136">
            <paramref name="eventSourceName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-136">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settings As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventSource(System::Diagnostics::Tracing::EventSourceSettings settings, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (settings, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="92c7d-137">列舉值的位元組合，可指定要套用至事件來源的組態設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-137">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="92c7d-138">指定事件來源特性的機碼值組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-138">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-139">初始化要與非合約事件搭配使用之 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 的新執行個體，這些事件包含指定的設定和特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-139">Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> to be used with non-contract events that contains the specified settings and traits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-140">特性會提供事件的詳細資訊，並由事件接聽程式解譯。</span><span class="sxs-lookup"><span data-stu-id="92c7d-140">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="92c7d-141">特性指定為索引鍵-值組，如果未指定在配對中，會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-141">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="92c7d-142">您可以藉由傳遞的索引鍵擷取特性<xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>，方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-142">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="92c7d-143">指定`settings`時<xref:System.Diagnostics.Tracing.EventSource>建構可讓您指定是否在資訊清單為基礎或自我描述的格式寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-143">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="92c7d-144">此外，您可以指定事件寫入程序期間發生錯誤時，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-144">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92c7d-145">索引鍵/值組中未指定 <paramref name="traits" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-145">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="92c7d-146">要套用至事件來源的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-146">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="92c7d-147">必須不是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-147">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="92c7d-148">列舉值的位元組合，可指定要套用至事件來源的組態設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-148">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-149">使用指定的名稱和設定，建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-149">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified name and settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-150">指定`settings`時<xref:System.Diagnostics.Tracing.EventSource>建構可讓您指定是否在資訊清單為基礎或自我描述的格式寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-150">Specifying `settings` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="92c7d-151">此外，您可以指定事件寫入程序期間發生錯誤時，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-151">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92c7d-152">
            <paramref name="eventSourceName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-152">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, params string[] traits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventSourceName, valuetype System.Diagnostics.Tracing.EventSourceSettings config, string[] traits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventSourceName As String, config As EventSourceSettings, ParamArray traits As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSource(System::String ^ eventSourceName, System::Diagnostics::Tracing::EventSourceSettings config, ... cli::array &lt;System::String ^&gt; ^ traits);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Tracing.EventSource : string * System.Diagnostics.Tracing.EventSourceSettings * string[] -&gt; System.Diagnostics.Tracing.EventSource" Usage="new System.Diagnostics.Tracing.EventSource (eventSourceName, config, traits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="config" Type="System.Diagnostics.Tracing.EventSourceSettings" />
        <Parameter Name="traits" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="92c7d-153">要套用至事件來源的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-153">The name to apply to the event source.</span>
          </span>
          <span data-ttu-id="92c7d-154">必須不是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-154">Must not be <see langword="null" />.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="92c7d-155">列舉值的位元組合，可指定要套用至事件來源的組態設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-155">A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</span>
          </span>
        </param>
        <param name="traits">
          <span data-ttu-id="92c7d-156">指定事件來源特性的機碼值組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-156">The key-value pairs that specify traits for the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-157">使用指定的組態設定，建立 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-157">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class with the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-158">特性會提供事件的詳細資訊，並由事件接聽程式解譯。</span><span class="sxs-lookup"><span data-stu-id="92c7d-158">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="92c7d-159">特性指定為索引鍵-值組，如果未指定在配對中，會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-159">Traits are specified as key-value pairs and if not specified in pairs, an exception will occur.</span></span> <span data-ttu-id="92c7d-160">您可以藉由傳遞的索引鍵擷取特性<xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>，方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-160">You can retrieve a trait by passing the key to the <xref:System.Diagnostics.Tracing.EventSource.GetTrait%2A>, method.</span></span>  
  
 <span data-ttu-id="92c7d-161">指定`config`時<xref:System.Diagnostics.Tracing.EventSource>建構可讓您指定是否在資訊清單為基礎或自我描述的格式寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-161">Specifying `config` when the <xref:System.Diagnostics.Tracing.EventSource> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format.</span></span> <span data-ttu-id="92c7d-162">此外，您可以指定事件寫入程序期間發生錯誤時，會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-162">In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92c7d-163">
            <paramref name="eventSourceName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-163">
              <paramref name="eventSourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92c7d-164">索引鍵/值組中未指定 <paramref name="traits" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-164">
              <paramref name="traits" /> is not specified in key-value pairs.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ConstructionException">
      <MemberSignature Language="C#" Value="public Exception ConstructionException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConstructionException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConstructionException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionException : Exception" Usage="System.Diagnostics.Tracing.EventSource.ConstructionException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-165">[在 .NET Framework 4.5.1 和更新版本中支援]  取得事件來源建構期間擲回的任何例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-165">[Supported in the .NET Framework 4.5.1 and later versions]  Gets any exception that was thrown during the construction of the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92c7d-166">在事件來源建構期間擲回的例外狀況；如果沒有擲回任何例外狀況，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-166">The exception that was thrown during the construction of the event source, or <see langword="null" /> if no exception was thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-167"><xref:System.Diagnostics.Tracing.EventSource> 建構函式不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="92c7d-167"><xref:System.Diagnostics.Tracing.EventSource> constructors do not throw exceptions.</span></span> <span data-ttu-id="92c7d-168">相反地，將會擲回任何例外狀況指派給<xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A>屬性和所記錄的<xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-168">Instead, any exception that is thrown is assigned to the <xref:System.Diagnostics.Tracing.EventSource.ConstructionException%2A> property and logged by the <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static Guid CurrentThreadActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid CurrentThreadActivityId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThreadActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid CurrentThreadActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThreadActivityId : Guid" Usage="System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-169">[在 .NET Framework 4.5.1 和更新版本中支援]  取得目前執行緒的活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-169">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the activity ID of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92c7d-170">目前執行緒的活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-170">The activity ID of the current thread.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-171">將 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別目前的執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-171">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-172">將 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別目前的執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-172">Releases all resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-173">`Dispose` 使用完畢時，請呼叫 <xref:System.Diagnostics.Tracing.EventSource>。</span><span class="sxs-lookup"><span data-stu-id="92c7d-173">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="92c7d-174">`Dispose` 方法會將 <xref:System.Diagnostics.Tracing.EventSource> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="92c7d-174">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventSource> in an unusable state.</span></span> <span data-ttu-id="92c7d-175">在呼叫`Dispose`，您必須釋放所有參考<xref:System.Diagnostics.Tracing.EventSource>讓記憶體回收行程可以回收記憶體的<xref:System.Diagnostics.Tracing.EventSource>所佔用。</span><span class="sxs-lookup"><span data-stu-id="92c7d-175">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventSource> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventSource> was occupying.</span></span>  
  
 <span data-ttu-id="92c7d-176">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="92c7d-176">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92c7d-177">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Diagnostics.Tracing.EventSource>。</span><span class="sxs-lookup"><span data-stu-id="92c7d-177">Always call `Dispose` before you release your last reference to the <xref:System.Diagnostics.Tracing.EventSource>.</span></span> <span data-ttu-id="92c7d-178">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Diagnostics.Tracing.EventSource> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-178">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Diagnostics.Tracing.EventSource> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventSource.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="92c7d-179">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-179">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-180">釋放 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 類別所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-180">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.Tracing.EventSource" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-181">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-181">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="92c7d-182">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-182">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="92c7d-183">`Finalize` 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-183">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="92c7d-184">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Diagnostics.Tracing.EventSource> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="92c7d-184">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.Tracing.EventSource> references.</span></span> <span data-ttu-id="92c7d-185">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-185">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="92c7d-186">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到物件已經處置過在先前的 Dispose 方法呼叫<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see langword="Finalize" />，請參閱 [總未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 清除。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-186">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier the Dispose Method call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EventCommandExecuted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventCommandExecuted As EventHandler(Of EventCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventCommandEventArgs ^&gt; ^ EventCommandExecuted;" />
      <MemberSignature Language="F#" Value="member this.EventCommandExecuted : EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " Usage="member this.EventCommandExecuted : System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-187">發生於命令來自事件接聽程式時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-187">Occurs when a command comes from an event listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~EventSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!EventSource ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="eventSource.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-188">允許 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 物件嘗試釋放資源，並執行其他清除作業，不必等到記憶體回收回收物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-188">Allows the <see cref="T:System.Diagnostics.Tracing.EventSource" /> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateManifest">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-189">傳回 XML 資訊清單的字串，與目前的事件來源相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-189">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="92c7d-190">事件來源的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-190">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="92c7d-191">要包含在資訊清單之 [provider] (http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) 項目的組件檔 (.dll) 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-191">The path to the assembly file (.dll) to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-192">傳回 XML 資訊清單的字串，與目前的事件來源相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-192">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-193">XML 資料字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-193">The XML data string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-194">事件資訊清單中，XML 結構描述的相關資訊，請參閱[事件資訊清單結構描述](http://go.microsoft.com/fwlink/?LinkId=228077)MSDN Library 中。</span><span class="sxs-lookup"><span data-stu-id="92c7d-194">The information about the XML schema for the event manifest, see [Event Manifest Schema](http://go.microsoft.com/fwlink/?LinkId=228077) in the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateManifest">
      <MemberSignature Language="C#" Value="public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateManifest(class System.Type eventSourceType, string assemblyPathToIncludeInManifest, valuetype System.Diagnostics.Tracing.EventManifestOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateManifest (eventSourceType As Type, assemblyPathToIncludeInManifest As String, flags As EventManifestOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateManifest(Type ^ eventSourceType, System::String ^ assemblyPathToIncludeInManifest, System::Diagnostics::Tracing::EventManifestOptions flags);" />
      <MemberSignature Language="F#" Value="static member GenerateManifest : Type * string * System.Diagnostics.Tracing.EventManifestOptions -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GenerateManifest (eventSourceType, assemblyPathToIncludeInManifest, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
        <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="92c7d-195">事件來源的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-195">The type of the event source.</span>
          </span>
        </param>
        <param name="assemblyPathToIncludeInManifest">
          <span data-ttu-id="92c7d-196">要包含在資訊清單之 [provider] (http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) 項目的組件檔 (.dll) 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-196">The path to the assembly file (.dll) file to include in the [provider](http://msdn.microsoft.com/library/windows/desktop/aa384022\(v=vs.85\).aspx) element of the manifest.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="92c7d-197">列舉值的位元組合，指定產生資訊清單的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-197">A bitwise combination of the enumeration values that specify how the manifest is generated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-198">傳回 XML 資訊清單的字串，與目前的事件來源相關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-198">Returns a string of the XML manifest that is associated with the current event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-199">XML 資料字串或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-199">The XML data string or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-200">如果`flags`指定`OnlyIfNeededForRegistration`和`eventSourceType`指定不需要明確註冊，<xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A>傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-200">If `flags` specifies `OnlyIfNeededForRegistration` and the `eventSourceType` specified does not require explicit registration, <xref:System.Diagnostics.Tracing.EventSource.GenerateManifest%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGuid (eventSourceType As Type) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetGuid(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetGuid : Type -&gt; Guid" Usage="System.Diagnostics.Tracing.EventSource.GetGuid eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="92c7d-201">事件來源的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-201">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-202">取得這項事件來源實作的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-202">Gets the unique identifier for this implementation of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-203">這個事件來源類型的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-203">A unique identifier for this event source type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (eventSourceType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="static member GetName : Type -&gt; string" Usage="System.Diagnostics.Tracing.EventSource.GetName eventSourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="eventSourceType">
          <span data-ttu-id="92c7d-204">事件來源的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-204">The type of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-205">取得事件來源的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-205">Gets the friendly name of the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-206">事件來源的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-206">The friendly name of the event source.</span>
          </span>
          <span data-ttu-id="92c7d-207">預設為類別的簡單名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-207">The default is the simple name of the class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSources">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Diagnostics.Tracing.EventSource&gt; GetSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSources () As IEnumerable(Of EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Diagnostics::Tracing::EventSource ^&gt; ^ GetSources();" />
      <MemberSignature Language="F#" Value="static member GetSources : unit -&gt; seq&lt;System.Diagnostics.Tracing.EventSource&gt;" Usage="System.Diagnostics.Tracing.EventSource.GetSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-208">取得應用程式定義域中所有事件來源的快照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-208">Gets a snapshot of all the event sources for the application domain.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-209">應用程式定義域中所有事件來源的列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-209">An enumeration of all the event sources in the application domain.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrait">
      <MemberSignature Language="C#" Value="public string GetTrait (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTrait(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrait (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTrait(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetTrait : string -&gt; string" Usage="eventSource.GetTrait key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="92c7d-210">要取得之特性的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-210">The key of the trait to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-211">取得與指定索引鍵關聯的特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-211">Gets the trait value associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-212">與指定之索引鍵關聯的特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-212">The trait value associated with the specified key.</span>
          </span>
          <span data-ttu-id="92c7d-213">如果找不到索引鍵，會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-213">If the key is not found, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-214">特性會提供事件的詳細資訊，並由事件接聽程式解譯。</span><span class="sxs-lookup"><span data-stu-id="92c7d-214">Traits provide additional information for an event and are interpreted by an event listener.</span></span> <span data-ttu-id="92c7d-215">特性是在建構的事件來源時，指定為索引鍵-值組。</span><span class="sxs-lookup"><span data-stu-id="92c7d-215">Traits are specified as key-value pairs when the event source is constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public Guid Guid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Guid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Guid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Guid : Guid" Usage="System.Diagnostics.Tracing.EventSource.Guid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-216">事件來源的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-216">The unique identifier for the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92c7d-217">事件來源的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-217">A unique identifier for the event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEnabled">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-218">判斷是否已啟用目前的事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-218">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : unit -&gt; bool" Usage="eventSource.IsEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-219">判斷是否已啟用目前的事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-219">Determines whether the current event source is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-220">如果已啟用目前的事件來源，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-220">
              <see langword="true" /> if the current event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; bool" Usage="eventSource.IsEnabled (level, keywords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="92c7d-221">事件來源的層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-221">The level of the event source.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="92c7d-222">事件來源的關鍵字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-222">The keyword of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-223">判斷是否已啟用具有指定之層級和關鍵字的目前事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-223">Determines whether the current event source that has the specified level and keyword is enabled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-224">如果已啟用事件來源，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-224">
              <see langword="true" /> if the event source is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-225">這個方法的結果只可約略估算特定事件是否為作用中。</span><span class="sxs-lookup"><span data-stu-id="92c7d-225">The result of this method is only an approximation of whether a particular event is active.</span></span>  <span data-ttu-id="92c7d-226">可用來避免記錄的昂貴計算成本 (停用記錄時)。</span><span class="sxs-lookup"><span data-stu-id="92c7d-226">Use it to avoid expensive computation for logging when logging is disabled.</span></span>   <span data-ttu-id="92c7d-227">事件來源可能會有額外的篩選，決定他們的活動。</span><span class="sxs-lookup"><span data-stu-id="92c7d-227">Event sources may have additional filtering that determines their activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled(valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords keywords, valuetype System.Diagnostics.Tracing.EventChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled (level As EventLevel, keywords As EventKeywords, channel As EventChannel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel);" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Diagnostics.Tracing.EventChannel -&gt; bool" Usage="eventSource.IsEnabled (level, keywords, channel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="92c7d-228">要檢查的事件層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-228">The event level to check.</span>
          </span>
          <span data-ttu-id="92c7d-229">當事件層級大於或等於 <c>level</c> 時，事件來源會視為已啟用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-229">An event source will be considered enabled when its level is greater than or equal to <c>level</c>.</span>
          </span>
        </param>
        <param name="keywords">
          <span data-ttu-id="92c7d-230">要檢查的事件關鍵字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-230">The event keywords to check.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="92c7d-231">要檢查的事件通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-231">The event channel to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-232">判斷具有指定的層級、關鍵字和通道的事件是否已啟用目前的事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-232">Determines whether the current event source is enabled for events with the specified level, keywords and channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-233">如果已啟用指定事件層級、關鍵字和通道的事件來源，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-233">
              <see langword="true" /> if the event source is enabled for the specified event level, keywords and channel; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92c7d-234">這個方法的結果只可約略估算特定事件是否為作用中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-234">The result of this method is only an approximation of whether a particular event is active.</span>
          </span>
          <span data-ttu-id="92c7d-235">可用來避免記錄的昂貴計算成本 (停用記錄時)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-235">Use it to avoid expensive computation for logging when logging is disabled.</span>
          </span>
          <span data-ttu-id="92c7d-236">事件來源可能具有可判斷其活動的其他篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-236">Event sources may have additional filtering that determines their activity..</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-237">如果</span><span class="sxs-lookup"><span data-stu-id="92c7d-237">If the</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.Tracing.EventSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-238">衍生自事件來源的類別的好記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-238">The friendly name of the class that is derived from the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92c7d-239">衍生類別的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-239">The friendly name of the derived class.</span>
          </span>
          <span data-ttu-id="92c7d-240">預設為類別的簡單名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-240">The default is the simple name of the class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEventCommand(class System.Diagnostics.Tracing.EventCommandEventArgs command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEventCommand (command As EventCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs ^ command);" />
      <MemberSignature Language="F#" Value="abstract member OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit&#xA;override this.OnEventCommand : System.Diagnostics.Tracing.EventCommandEventArgs -&gt; unit" Usage="eventSource.OnEventCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="92c7d-241">事件的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-241">The arguments for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-242">當控制器更新目前事件來源時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-242">Called when the current event source is updated by the controller.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendCommand(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventCommand command, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; commandArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendCommand(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventCommand command, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ commandArguments);" />
      <MemberSignature Language="F#" Value="static member SendCommand : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventCommand * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SendCommand (eventSource, command, commandArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
        <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="92c7d-243">要傳送命令的目的地事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-243">The event source to send the command to.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="92c7d-244">要傳送的事件命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-244">The event command to send.</span>
          </span>
        </param>
        <param name="commandArguments">
          <span data-ttu-id="92c7d-245">事件命令的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-245">The arguments for the event command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-246">傳送命令到指定的事件來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-246">Sends a command to a specified event source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-247">呼叫<xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A>轉送命令<xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A>回呼。</span><span class="sxs-lookup"><span data-stu-id="92c7d-247">Calling <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> forwards the command to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback.</span></span>  <span data-ttu-id="92c7d-248">什麼<xref:System.Diagnostics.Tracing.EventSource>與命令和其引數是特定的事件來源。</span><span class="sxs-lookup"><span data-stu-id="92c7d-248">What the <xref:System.Diagnostics.Tracing.EventSource> does with the command and its arguments is specific to the event source.</span></span>  <span data-ttu-id="92c7d-249">命令和命令引數傳遞至<xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A>指定的事件來源的回呼。</span><span class="sxs-lookup"><span data-stu-id="92c7d-249">The command and command arguments are passed to the <xref:System.Diagnostics.Tracing.EventSource.OnEventCommand%2A> callback of the specified event source.</span></span>   <span data-ttu-id="92c7d-250">可能的話，目前的事件來源應該不會影響其他事件接聽程式的篩選事件。但是，不可能如果命令會讓記憶體回收、 排清，系統或其他一些通用的活動。</span><span class="sxs-lookup"><span data-stu-id="92c7d-250">If possible, the current event source should not affect other event listeners' filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCurrentThreadActivityId">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-251">[在 .NET Framework 4.5.1 和更新版本中支援]  設定目前執行緒的活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-251">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId activityId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="92c7d-252">目前執行緒的新活動識別碼，若要表示目前執行緒上的工作未與任何活動相關聯，則為 <see cref="F:System.Guid.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-252">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-253">[在 .NET Framework 4.5.1 和更新版本中支援]  設定目前執行緒的活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-253">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-254">呼叫<xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A>方法根據每個執行緒來設定的活動識別碼。</span><span class="sxs-lookup"><span data-stu-id="92c7d-254">Calling the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%2A> method sets the activity ID on a per-thread basis.</span></span> <span data-ttu-id="92c7d-255">在執行緒上的所有事件都必須該活動識別碼，直到在相同執行緒上啟動新的活動。</span><span class="sxs-lookup"><span data-stu-id="92c7d-255">All events on the thread will have that activity ID until a new activity is started on the same thread.</span></span>  
  
 <span data-ttu-id="92c7d-256">管理自己的執行緒的程式庫只會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-256">This method is called only by libraries that manage their own threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentThreadActivityId">
      <MemberSignature Language="C#" Value="public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCurrentThreadActivityId(valuetype System.Guid activityId, [out] valuetype System.Guid&amp; oldActivityThatWillContinue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCurrentThreadActivityId (activityId As Guid, ByRef oldActivityThatWillContinue As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCurrentThreadActivityId(Guid activityId, [Runtime::InteropServices::Out] Guid % oldActivityThatWillContinue);" />
      <MemberSignature Language="F#" Value="static member SetCurrentThreadActivityId : Guid *  -&gt; unit" Usage="System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId (activityId, oldActivityThatWillContinue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityId" Type="System.Guid" />
        <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="activityId">
          <span data-ttu-id="92c7d-257">目前執行緒的新活動識別碼，若要表示目前執行緒上的工作未與任何活動相關聯，則為 <see cref="F:System.Guid.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-257">The current thread's new activity ID, or <see cref="F:System.Guid.Empty" /> to indicate that work on the current thread is not associated with any activity.</span>
          </span>
        </param>
        <param name="oldActivityThatWillContinue">
          <span data-ttu-id="92c7d-258">當這個方法傳回時，會包含目前執行緒的上一個活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-258">When this method returns, contains the previous activity ID on the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-259">[在 .NET Framework 4.5.1 和更新版本中支援]  設定目前執行緒的活動識別碼，並傳回前一個活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-259">[Supported in the .NET Framework 4.5.1 and later versions]  Sets the activity ID on the current thread, and returns the previous activity ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-260">您可以呼叫<xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29>方法來暫時覆寫目前執行緒的活動識別碼，並提供新的活動識別碼。</span><span class="sxs-lookup"><span data-stu-id="92c7d-260">You can call the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%2CSystem.Guid%40%29> method to temporarily overwrite the current thread's activity ID with a new activity ID.</span></span> <span data-ttu-id="92c7d-261">您稍後必須藉由傳遞要還原先前的活動識別碼`oldActivityThatWillContinue`引數<xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29>方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-261">You must then restore the previous activity ID by passing the `oldActivityThatWillContinue` argument to the <xref:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId%28System.Guid%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventSourceSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As EventSourceSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventSourceSettings Settings { System::Diagnostics::Tracing::EventSourceSettings get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Diagnostics.Tracing.EventSourceSettings" Usage="System.Diagnostics.Tracing.EventSource.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventSourceSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-262">取得套用至這個事件來源的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-262">Gets the settings applied to this event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92c7d-263">套用至這個事件來源的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-263">The settings applied to this event source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="eventSource.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-264">取得目前事件來源執行個體的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-264">Obtains a string representation of the current event source instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92c7d-265">識別目前事件來源的名稱和唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-265">The name and unique identifier that identify the current event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-266">寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-266">Writes an event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="eventSource.Write eventName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="92c7d-267">要寫入的事件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-267">The name of the event to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-268">寫入不含欄位，但具有指定名稱和預設選項的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-268">Writes an event without fields, but with the specified name and default options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92c7d-269">
            <paramref name="eventName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-269">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (eventName As String, options As EventSourceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions -&gt; unit" Usage="eventSource.Write (eventName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
      </Parameters>
      <Docs>
        <param name="eventName">
          <span data-ttu-id="92c7d-270">要寫入的事件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-270">The name of the event to write.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="92c7d-271">事件的層級、關鍵字和作業程式碼等選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-271">The options such as level, keywords and operation code for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-272">寫入不含欄位，但具有指定名稱和選項的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-272">Writes an event without fields, but with the specified name and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92c7d-273">
            <paramref name="eventName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-273">
              <paramref name="eventName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * 'T -&gt; unit" Usage="eventSource.Write (eventName, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="92c7d-274">定義事件的類型及其相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-274">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="92c7d-275">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-275">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="92c7d-276">事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-276">The name of the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-277">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-277">The event data.</span>
          </span>
          <span data-ttu-id="92c7d-278">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-278">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-279">寫入具有指定名稱和資料的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-279">Writes an event with the specified name and data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-280">如果`eventName`是`null`，事件名稱自動衍生自型別 T 的事件資料 (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>)，或者判斷根據型別名稱`T`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-280">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="92c7d-281">執行個體的屬性的公用`data`寫入以遞迴方式來建立事件欄位。</span><span class="sxs-lookup"><span data-stu-id="92c7d-281">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions options, !!T data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, options As EventSourceOptions, data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions options, T data);" />
      <MemberSignature Language="F#" Value="member this.Write : string * System.Diagnostics.Tracing.EventSourceOptions * 'T -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        <Parameter Name="data" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="92c7d-282">定義事件的類型及其相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-282">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="92c7d-283">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-283">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="92c7d-284">事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-284">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="92c7d-285">事件選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-285">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-286">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-286">The event data.</span>
          </span>
          <span data-ttu-id="92c7d-287">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-287">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-288">寫入具有指定名稱、事件資料和選項的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-288">Writes an event with the specified name, event data and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-289">如果`eventName`是`null`，事件名稱自動衍生自型別 T 的事件資料 (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>)，或者判斷根據型別名稱`T`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-289">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="92c7d-290">執行個體的屬性的公用`data`寫入以遞迴方式來建立事件欄位。</span><span class="sxs-lookup"><span data-stu-id="92c7d-290">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="92c7d-291">定義事件的類型及其相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-291">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="92c7d-292">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-292">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="92c7d-293">事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-293">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="92c7d-294">事件選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-294">The event options.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-295">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-295">The event data.</span>
          </span>
          <span data-ttu-id="92c7d-296">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-296">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-297">寫入具有指定名稱、選項和事件資料的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-297">Writes an event with the specified name, options and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-298">如果`eventName`是`null`，事件名稱自動衍生自型別 T 的事件資料 (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>)，或者判斷根據型別名稱`T`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-298">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="92c7d-299">執行個體的屬性的公用`data`寫入以遞迴方式來建立事件欄位。</span><span class="sxs-lookup"><span data-stu-id="92c7d-299">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;T&gt;(string eventName, valuetype System.Diagnostics.Tracing.EventSourceOptions&amp; options, valuetype System.Guid&amp; activityId, valuetype System.Guid&amp; relatedActivityId, !!T&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T) (eventName As String, ByRef options As EventSourceOptions, ByRef activityId As Guid, ByRef relatedActivityId As Guid, ByRef data As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Write(System::String ^ eventName, System::Diagnostics::Tracing::EventSourceOptions % options, Guid % activityId, Guid % relatedActivityId, T % data);" />
      <MemberSignature Language="F#" Value="member this.Write : string *  *  *  *  -&gt; unit" Usage="eventSource.Write (eventName, options, activityId, relatedActivityId, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" RefType="ref" />
        <Parameter Name="activityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="relatedActivityId" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="data" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="92c7d-300">定義事件的類型及其相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-300">The type that defines the event and its associated data.</span>
          </span>
          <span data-ttu-id="92c7d-301">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-301">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> attribute.</span>
          </span>
        </typeparam>
        <param name="eventName">
          <span data-ttu-id="92c7d-302">事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-302">The name of the event.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="92c7d-303">事件選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-303">The event options.</span>
          </span>
        </param>
        <param name="activityId">
          <span data-ttu-id="92c7d-304">與事件關聯的活動識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-304">The ID of the activity associated with the event.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="92c7d-305">關聯的活動識別碼；如果沒有關聯的活動，則為 <see cref="F:System.Guid.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-305">The ID of an associated activity, or <see cref="F:System.Guid.Empty" /> if there is no associated activity.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-306">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-306">The event data.</span>
          </span>
          <span data-ttu-id="92c7d-307">此類型必須為匿名類型，或必須具有 <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 屬性標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-307">This type must be an anonymous type or marked with the <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-308">寫入具有指定名稱、選項、相關活動和事件資料的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-308">Writes an event with the specified name, options, related activity and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-309">如果`eventName`是`null`，事件名稱自動衍生自型別 T 的事件資料 (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>)，或者判斷根據型別名稱`T`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-309">If `eventName` is `null`, the event name is automatically derived from the type T’s event data (<xref:System.Diagnostics.Tracing.EventDataAttribute.Name%2A>) or determined based on the name of type `T`.</span></span> <span data-ttu-id="92c7d-310">執行個體的屬性的公用`data`寫入以遞迴方式來建立事件欄位。</span><span class="sxs-lookup"><span data-stu-id="92c7d-310">The public instance properties of `data` will be written recursively to create the event fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92c7d-311">使用所提供的事件識別元和選擇性引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-311">Writes an event by using the provided event identifier and optional arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-312">`WriteEvent`方法提供多載的字串與整數引數的組合。</span><span class="sxs-lookup"><span data-stu-id="92c7d-312">The `WriteEvent` method provides overloads with combinations of string and integer arguments.</span></span> <span data-ttu-id="92c7d-313">如果沒有這些組合的符合呼叫參數時，編譯器會使用<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>多載，也就是比其他多載慢很多。</span><span class="sxs-lookup"><span data-stu-id="92c7d-313">If none of these combinations match the parameters for the call, the compiler uses the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%28System.Int32%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload, which is considerably slower than the other overloads.</span></span> <span data-ttu-id="92c7d-314">請參閱詳細資料的多載頁面。</span><span class="sxs-lookup"><span data-stu-id="92c7d-314">See the overload page for details.</span></span>  
  
 <span data-ttu-id="92c7d-315">在所有情況下，`eventid`參數必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-315">In all cases, the `eventid` parameter should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-316">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-316">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-317">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-317">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-318">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-318">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-319">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-319">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 <span data-ttu-id="92c7d-320">您也可以建立自訂的多載使用<xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-320">You can also create a custom overload by using the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int -&gt; unit" Usage="eventSource.WriteEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-321">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-321">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-322">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-322">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-323">使用所提供的事件識別元，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-323">Writes an event by using the provided event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-324">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-324">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-325">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-325">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-326">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-326">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-327">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-327">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-328">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-328">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-329">下列範例會示範如何使用這個方法多載，寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-329">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="92c7d-330">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.Tracing.EventSource>類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-330">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, cli::array &lt;System::Byte&gt; ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-331">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-331">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-332">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-332">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-333">位元組陣列引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-333">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-334">使用所提供的事件識別項和位元組陣列引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-334">Writes an event by using the provided event identifier and byte array argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-335">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-335">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-336">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-336">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-337">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-337">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-338">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-338">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-339">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-339">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(byte[] arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-340">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-340">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-341">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-341">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-342">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-342">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-343">使用所提供的事件識別元和 32 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-343">Writes an event by using the provided event identifier and 32-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-344">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-344">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-345">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-345">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-346">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-346">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-347">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-347">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-348">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-348">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int  arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-349">下列範例會示範如何使用這個方法多載，寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-349">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="92c7d-350">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.Tracing.EventSource>類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-350">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]
 [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-351">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-351">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-352">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-352">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-353">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-353">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-354">使用所提供的事件識別元和 64 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-354">Writes an event by using the provided event identifier and 64-bit integer argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-355">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-355">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-356">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-356">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-357">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-357">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-358">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-358">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-359">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-359">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * obj[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-360">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-360">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-361">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-361">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="92c7d-362">物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-362">An array of objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-363">使用所提供的事件識別元和引數陣列，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-363">Writes an event by using the provided event identifier and array of arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-364">根據預設，編譯器會呼叫這個多載，如果呼叫的參數不符合其中一個其他的方法多載。</span><span class="sxs-lookup"><span data-stu-id="92c7d-364">By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads.</span></span> <span data-ttu-id="92c7d-365">這個多載會比其他多載，變得很慢，因為它會執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="92c7d-365">This overload is much slower than the other overloads, because it does the following:</span></span>  
  
1.  <span data-ttu-id="92c7d-366">配置陣列，用以保存的變數引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-366">It allocates an array to hold the variable argument.</span></span>  
  
2.  <span data-ttu-id="92c7d-367">它會轉換為物件 （這會導致配置的基本類型） 的每個參數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-367">It casts each parameter to an object (which causes allocations for primitive types).</span></span>  
  
3.  <span data-ttu-id="92c7d-368">它會指派這些物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="92c7d-368">It assigns these objects to the array.</span></span>  
  
4.  <span data-ttu-id="92c7d-369">它會呼叫函式，然後決定每個引數的類型，讓它可以序列化的 ETW。</span><span class="sxs-lookup"><span data-stu-id="92c7d-369">It calls the function, which then determines the type of each argument so it can be serialized for ETW.</span></span>  
  
 <span data-ttu-id="92c7d-370">這個多載的額外負荷很高並不重要時追蹤小量事件，因為只有在提供者啟用時，使用的方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-370">The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled.</span></span> <span data-ttu-id="92c7d-371">不過，對於大量的事件，可能十分顯著的效能負擔。</span><span class="sxs-lookup"><span data-stu-id="92c7d-371">However, for high-volume events, the performance overhead can be significant.</span></span>  <span data-ttu-id="92c7d-372">您可以避免使用<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType>藉由建立新的、 更快速的多載，以大量承載的<xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="92c7d-372">You can avoid using <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A?displayProperty=nameWithType> for high-volume payloads by creating a new, faster  overload with the <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> method.</span></span>  
  
 <span data-ttu-id="92c7d-373">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-373">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-374">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-374">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-375">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-375">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-376">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-376">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-377">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-377">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-378">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-378">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-379">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-379">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-380">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-380">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-381">使用所提供的事件識別元和字串引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-381">Writes an event by using the provided event identifier and string argument.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-382">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-382">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-383">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-383">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-384">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-384">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-385">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-385">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-386">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-386">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-387">下列範例會示範如何使用這個方法多載，寫入事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-387">The following example shows how to use this method overload to write an event.</span></span> <span data-ttu-id="92c7d-388">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Diagnostics.Tracing.EventSource>類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-388">This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.</span></span>  
  
 [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]
 [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-389">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-389">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-390">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-390">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-391">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-391">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-392">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-392">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-393">使用所提供的事件識別元和 32 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-393">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-394">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-394">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-395">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-395">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-396">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-396">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-397">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-397">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-398">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-398">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```csharp  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(int arg1, int arg2, int arg3)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-399">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-399">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-400">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-400">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-401">32 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-401">A 32-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-402">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-402">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-403">使用所提供的事件識別項、32 位元整數和字串引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-403">Writes an event by using the provided event identifier and 32-bit integer and string arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, cli::array &lt;System::Byte&gt; ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * byte[] -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-404">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-404">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-405">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-405">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-406">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-406">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-407">位元組陣列引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-407">A byte array argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-408">使用指定的識別項、64 位元整數和位元組陣列引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-408">Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-409">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-409">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-410">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-410">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-411">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-411">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-412">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-412">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-413">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-413">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, Byte[] arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-414">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-414">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-415">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-415">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-416">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-416">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-417">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-417">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-418">使用所提供的事件識別元和 64 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-418">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-419">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-419">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-420">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-420">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-421">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-421">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-422">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-422">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-423">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-423">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-424">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-424">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-425">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-425">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-426">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-426">A 64-bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-427">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-427">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-428">使用所提供的事件識別項、64 位元整數和字串引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-428">Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-429">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-429">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-430">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-430">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-431">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-431">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-432">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-432">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-433">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-433">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(Int64 arg1, string arg2)  
{  
 base.WriteEvent(2, arg1, arg2);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-434">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-434">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-435">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-435">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-436">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-436">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-437">32 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-437">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-438">使用所提供的事件識別元和引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-438">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-439">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-439">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-440">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-440">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-441">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-441">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-442">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-442">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-443">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-443">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, long arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int64 arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, long arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-444">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-444">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-445">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-445">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-446">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-446">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-447">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-447">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-448">使用所提供的事件識別元和引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-448">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-449">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-449">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-450">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-450">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-451">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-451">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-452">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-452">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-453">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-453">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-454">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-454">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-455">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-455">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-456">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-456">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-457">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-457">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-458">使用所提供的事件識別元和字串引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-458">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-459">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-459">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-460">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-460">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-461">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-461">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-462">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-462">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-463">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-463">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int32 arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Integer, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, int arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int32" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-464">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-464">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-465">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-465">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-466">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-466">An integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-467">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-467">An integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="92c7d-468">整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-468">An integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-469">使用所提供的事件識別元和 32 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-469">Writes an event by using the provided event identifier and 32-bit integer arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-470">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-470">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-471">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-471">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-472">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-472">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-473">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-473">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-474">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-474">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, int64 arg1, int64 arg2, int64 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As Long, arg2 As Long, arg3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, long arg1, long arg2, long arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * int64 * int64 * int64 -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.Int64" />
        <Parameter Name="arg2" Type="System.Int64" />
        <Parameter Name="arg3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-475">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-475">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-476">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-476">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-477">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-477">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-478">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-478">A 64 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="92c7d-479">64 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-479">A 64 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-480">使用所提供的事件識別元和 64 位元整數引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-480">Writes an event by using the provided event identifier and 64-bit arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-481">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-481">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-482">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-482">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-483">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-483">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-484">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-484">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-485">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-485">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, int32 arg2, int32 arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As Integer, arg3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, int arg2, int arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * int * int -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.Int32" />
        <Parameter Name="arg3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-486">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-486">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-487">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-487">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-488">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-488">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-489">32 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-489">A 32 bit integer argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="92c7d-490">32 位元整數引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-490">A 32 bit integer argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-491">使用所提供的事件識別元和引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-491">Writes an event by using the provided event identifier and arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-492">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-492">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-493">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-493">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-494">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-494">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-495">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-495">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-496">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-496">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEvent">
      <MemberSignature Language="C#" Value="protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEvent(int32 eventId, string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEvent (eventId As Integer, arg1 As String, arg2 As String, arg3 As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEvent(int eventId, System::String ^ arg1, System::String ^ arg2, System::String ^ arg3);" />
      <MemberSignature Language="F#" Value="member this.WriteEvent : int * string * string * string -&gt; unit" Usage="eventSource.WriteEvent (eventId, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-497">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-497">The event identifier.</span>
          </span>
          <span data-ttu-id="92c7d-498">這個值必須介於 0 到 65535 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-498">This value should be between 0 and 65535.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="92c7d-499">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-499">A string argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="92c7d-500">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-500">A string argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="92c7d-501">字串引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-501">A string argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-502">使用所提供的事件識別元和字串引數，寫入事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-502">Writes an event by using the provided event identifier and string arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-503">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-503">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-504">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-504">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-505">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-505">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-506">當您實作識別為中的 ETW 事件方法<xref:System.Diagnostics.Tracing.EventSource>-衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="92c7d-506">When you implement a method that is identified as an ETW event in an <xref:System.Diagnostics.Tracing.EventSource>-derived class.</span></span> <span data-ttu-id="92c7d-507">您必須先呼叫基底類別<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>方法傳遞<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A>和實作的方法類似於下列範例相同的引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-507">You must call the base class <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method passing the <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> and the same arguments as the implemented method similar to the following example.</span></span>  
  
```  
[Event(2, Level = EventLevel.Informational)]  
public void Info1(string arg1)  
{  
 base.WriteEvent(2, arg1);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventCore">
      <MemberSignature Language="C#" Value="protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventCore(int32 eventId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" />
      <MemberSignature Language="F#" Value="member this.WriteEventCore : int * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventCore (eventId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
        <Parameter Name="eventDataCount" Type="System.Int32" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-508">事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-508">The event identifier.</span>
          </span>
        </param>
        <param name="eventDataCount">
          <span data-ttu-id="92c7d-509">事件資料項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-509">The number of event data items.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-510">包含事件資料的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-510">The structure that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-511">使用所提供的事件識別項和事件資料，建立新的 <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> 多載。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-511">Creates a new <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> overload by using the provided event identifier and event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-512">`eventid` 必須大於 0 或小於 65535 或在作業中，可能會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-512">`eventid` should be greater than 0 or less than 65535 or errors can occur in the operation.</span></span> <span data-ttu-id="92c7d-513">如果發生錯誤，您可以取得有關錯誤的來源的詳細資訊檢查輸出資料流的偵錯工具，如果您有偵錯工具附加至處理程序引發的事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-513">If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.</span></span> <span data-ttu-id="92c7d-514">如果有發生錯誤的事件來源的 ETW 接聽程式，您也可以尋找的 ETW 事件資料流中報告的錯誤。</span><span class="sxs-lookup"><span data-stu-id="92c7d-514">You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</span></span>  
  
 <span data-ttu-id="92c7d-515">此受保護的方法可讓使用者定義新<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>會較快，提供多載的多載。</span><span class="sxs-lookup"><span data-stu-id="92c7d-515">This protected method  enables users to define new <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overloads that are faster than the provided overloads.</span></span>   <span data-ttu-id="92c7d-516">建立新的多載包含 unsafe 程式碼。</span><span class="sxs-lookup"><span data-stu-id="92c7d-516">Creating a new overload involves unsafe code.</span></span>  <span data-ttu-id="92c7d-517">基本程序是堆疊配置事件資料的描述項的陣列，符合的內容項目數目。</span><span class="sxs-lookup"><span data-stu-id="92c7d-517">The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.</span></span>   <span data-ttu-id="92c7d-518">每個內容項目，設定正確的大小，在事件值資料陣列。呼叫<xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>與初始化的陣列。</span><span class="sxs-lookup"><span data-stu-id="92c7d-518">For each payload item, set the correct size and value in the event data array.Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A> with the initialized array.</span></span>  
  
 <span data-ttu-id="92c7d-519">下列範例示範如何將加入<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>接受四個引數的多載。</span><span class="sxs-lookup"><span data-stu-id="92c7d-519">The following example shows how to add a <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> overload that accepts four arguments.</span></span> <span data-ttu-id="92c7d-520">範例就是如果您有記錄事件的記錄檔和 3 的整數的字串。</span><span class="sxs-lookup"><span data-stu-id="92c7d-520">An example would be if you have a logging event that logs a string and 3 integers.</span></span>  
  
```csharp  
  
[Event(1)]  
public void LogTime(string tag, int hour, int minute, int second)   
{  
    WriteEvent(1, tag, hour, minute, second);  
}  
  
```  
  
 <span data-ttu-id="92c7d-521">您無法執行這項操作而不需呼叫<xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>，但它必須是比速度較慢。</span><span class="sxs-lookup"><span data-stu-id="92c7d-521">You could do this without calling <xref:System.Diagnostics.Tracing.EventSource.WriteEventCore%2A>, but it would be slower than it needs to be.</span></span> <span data-ttu-id="92c7d-522">這是因為它會使用陣列 」 和 「 反映找出要執行的工作。</span><span class="sxs-lookup"><span data-stu-id="92c7d-522">That is because it uses arrays and reflection to figure out what to do.</span></span> <span data-ttu-id="92c7d-523">如果您將記錄這些以較高的速率 (> 1000年數 / 秒)，它可以是值得進行快速的協助程式，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="92c7d-523">If you log these at a high rate (> 1000 / sec), it can be worth making a fast helper, as shown in the following example.</span></span> <span data-ttu-id="92c7d-524">方法會遮蔽現有<xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="92c7d-524">The method shadows the existing <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A>.</span></span> <span data-ttu-id="92c7d-525">因此原始呼叫端程式碼 (LogTime) 實際上並未變更，但 C# 編譯器會將程式將會更快更具特製化的版本。</span><span class="sxs-lookup"><span data-stu-id="92c7d-525">Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.</span></span>  
  
 <span data-ttu-id="92c7d-526">若要編譯 unsafe 程式碼，您必須指定[/unsafe （C# 編譯器選項）](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md)編譯器選項。</span><span class="sxs-lookup"><span data-stu-id="92c7d-526">To compile unsafe code, you must specify the [/unsafe (C# Compiler Options)](~/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md) compiler option.</span></span>  
  
```csharp  
class AnotherEventSource : EventSource {  
  
    [NonEvent]  
    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  
    {  
  
        fixed (char* arg1Ptr = arg1)  
        {  
            EventData* dataDesc = stackalloc EventData[4];  
  
            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  
            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   
            dataDesc[1].DataPointer = (IntPtr)(&arg2);  
            dataDesc[1].Size = 4;  
            dataDesc[2].DataPointer = (IntPtr)(&arg3);  
            dataDesc[2].Size = 4;  
            dataDesc[3].DataPointer = (IntPtr)(&arg4);  
            dataDesc[3].Size = 4;  
  
            WriteEventCore(eventId, 4, dataDesc);  
        }  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="92c7d-527">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-527">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="92c7d-528">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-528">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityId">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, params object[] args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid relatedActivityId, object[] args) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, relatedActivityId As Guid, ParamArray args As Object())" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityId (int eventId, Guid childActivityID, params object[] args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityId(int32 eventId, valuetype System.Guid childActivityID, object[] args) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteEventWithRelatedActivityId (eventId As Integer, childActivityID As Guid, ParamArray args As Object())" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityId(int eventId, Guid childActivityID, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityId : int * Guid * obj[] -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityId (eventId, relatedActivityId, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="args" Type="System.Object[]" Index="2">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-529">可在 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 中唯一識別這個事件的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-529">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="92c7d-530">相關的活動識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-530">The related activity identifier.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="args">
          <span data-ttu-id="92c7d-531">包含事件相關資料的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-531">An array of objects that contain data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-532">[在 .NET Framework 4.5.1 和更新版本中支援]  寫入指出目前活動與另一個活動有關的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-532">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-533"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>方法記錄傳輸事件。</span><span class="sxs-lookup"><span data-stu-id="92c7d-533">The <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method logs a transfer event.</span></span> <span data-ttu-id="92c7d-534">目前執行緒的活動會記錄與事件，而這讓兩個活動相關的事件取用者。</span><span class="sxs-lookup"><span data-stu-id="92c7d-534">The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.</span></span>  
  
 <span data-ttu-id="92c7d-535">ETW 事件方法呼叫這個函式必須遵循這些指導方針：</span><span class="sxs-lookup"><span data-stu-id="92c7d-535">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="92c7d-536">指定第一個參數為<xref:System.Guid>名為`relatedActivityId`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-536">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="92c7d-537">指定<xref:System.Diagnostics.Tracing.EventOpcode.Send>或<xref:System.Diagnostics.Tracing.EventOpcode.Receive>為<xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="92c7d-537">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="92c7d-538">呼叫<xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>傳遞事件 ID，後面接著相關的識別碼 GUID，後面接著的所有參數的事件方法傳遞，以相同的順序。</span><span class="sxs-lookup"><span data-stu-id="92c7d-538">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
 <span data-ttu-id="92c7d-539">如果`args`是未使用，它會轉換成產生 ETW 呼叫的空陣列。</span><span class="sxs-lookup"><span data-stu-id="92c7d-539">If `args` is not used, it is converted to an empty array for the resulting call to ETW.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-540">下列程式碼範例示範如何您可能可以指定事件來源呼叫<xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>。</span><span class="sxs-lookup"><span data-stu-id="92c7d-540">The following code example shows how you might can specify an event source that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#1)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEventWithRelatedActivityIdCore">
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* relatedActivityId, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" FrameworkAlternate="netframework-4.5;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* childActivityID, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteEventWithRelatedActivityIdCore(int32 eventId, valuetype System.Guid* childActivityID, int32 eventDataCount, valuetype System.Diagnostics.Tracing.EventSource/EventData* data) cil managed" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteEventWithRelatedActivityIdCore(int eventId, Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data);" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.WriteEventWithRelatedActivityIdCore : int * nativeptr&lt;Guid&gt; * int * nativeptr&lt;System.Diagnostics.Tracing.EventSource.EventData&gt; -&gt; unit" Usage="eventSource.WriteEventWithRelatedActivityIdCore (eventId, relatedActivityId, eventDataCount, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" Index="0" />
        <Parameter Name="relatedActivityId" Type="System.Guid*" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="childActivityID" Type="System.Guid*" Index="1" FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netstandard-1.2" />
        <Parameter Name="eventDataCount" Type="System.Int32" Index="2" />
        <Parameter Name="data" Type="System.Diagnostics.Tracing.EventSource+EventData*" Index="3" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="92c7d-541">可在 <see cref="T:System.Diagnostics.Tracing.EventSource" /> 中唯一識別這個事件的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-541">An identifier that uniquely identifies this event within the <see cref="T:System.Diagnostics.Tracing.EventSource" />.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="92c7d-542">相關活動識別碼之 GUID 的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-542">A pointer to the GUID of the related activity ID.</span>
          </span>
        </param>
        <param name="childActivityID">To be added.</param>
        <param name="eventDataCount">
          <span data-ttu-id="92c7d-543">
            <c>data</c> 欄位中的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-543">The number of items in the <c>data</c> field.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="92c7d-544">事件資料欄位中第一個項目的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-544">A pointer to the first item in the event data field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92c7d-545">[在 .NET Framework 4.5.1 和更新版本中支援]  寫入指出目前活動與另一個活動有關的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="92c7d-545">[Supported in the .NET Framework 4.5.1 and later versions]  Writes an event that indicates that the current activity is related to another activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92c7d-546"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> 類似於<xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A>方法但提供較佳的效能，不需要進行 unbox 處理的 bevcause`childActivityID`和`data`引數。</span><span class="sxs-lookup"><span data-stu-id="92c7d-546"><xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> is similar to the <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId%2A> method but offers better performance, bevcause it does not have to unbox the `childActivityID` and `data` arguments.</span></span>  
  
 <span data-ttu-id="92c7d-547">ETW 事件方法呼叫這個函式必須遵循這些指導方針：</span><span class="sxs-lookup"><span data-stu-id="92c7d-547">Your ETW event method calling this function must follow these guidelines:</span></span>  
  
1.  <span data-ttu-id="92c7d-548">指定第一個參數為<xref:System.Guid>名為`relatedActivityId`。</span><span class="sxs-lookup"><span data-stu-id="92c7d-548">Specify the first parameter as a <xref:System.Guid> named `relatedActivityId`.</span></span>  
  
2.  <span data-ttu-id="92c7d-549">指定<xref:System.Diagnostics.Tracing.EventOpcode.Send>或<xref:System.Diagnostics.Tracing.EventOpcode.Receive>為<xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="92c7d-549">Specify either <xref:System.Diagnostics.Tracing.EventOpcode.Send> or <xref:System.Diagnostics.Tracing.EventOpcode.Receive> as the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="92c7d-550">呼叫<xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>傳遞事件 ID，後面接著相關的識別碼 GUID，後面接著的所有參數的事件方法傳遞，以相同的順序。</span><span class="sxs-lookup"><span data-stu-id="92c7d-550">Call <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A> passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92c7d-551">下列 C# 程式碼範例示範如何定義呼叫的方法多載<xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="92c7d-551">The following C# code example shows how to define a method overload that calls <xref:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore%2A>.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSource.WriteEventWithId#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#5)]  
[!code-csharp[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/cs/program.cs#3)]
[!code-vb[System.Diagnostics.EventSource.WriteEventWithId#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.diagnostics.eventsource.writeeventwithid/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>