<Type Name="ElapsedEventHandler" FullName="System.Timers.ElapsedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e96f2570c556b8e410e126d73d0f2436af460887" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ElapsedEventHandler(object sender, ElapsedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ElapsedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ElapsedEventHandler(sender As Object, e As ElapsedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ElapsedEventHandler(System::Object ^ sender, ElapsedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Timers.ElapsedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="90b0e-101">事件的來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90b0e-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="90b0e-102">包含事件資料的 <see cref="T:System.Timers.ElapsedEventArgs" /> 物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90b0e-102">An <see cref="T:System.Timers.ElapsedEventArgs" /> object that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="90b0e-103">代表將處理 <see cref="E:System.Timers.Timer.Elapsed" /> 之 <see cref="T:System.Timers.Timer" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90b0e-103">Represents the method that will handle the <see cref="E:System.Timers.Timer.Elapsed" /> event of a <see cref="T:System.Timers.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90b0e-104">當您建立<xref:System.Timers.ElapsedEventHandler>委派，就可以識別即將處理方法<xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="90b0e-104">When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="90b0e-105">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="90b0e-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="90b0e-106">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="90b0e-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="90b0e-107">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="90b0e-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90b0e-108">下列程式碼範例會設定事件處理常式<xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>事件，會建立一個計時器，並啟動計時器。</span><span class="sxs-lookup"><span data-stu-id="90b0e-108">The following code example sets up an event handler for the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event, creates a timer, and starts the timer.</span></span> <span data-ttu-id="90b0e-109">此事件處理常式具有相同的簽章<xref:System.Timers.ElapsedEventHandler>委派。</span><span class="sxs-lookup"><span data-stu-id="90b0e-109">The event handler has the same signature as the <xref:System.Timers.ElapsedEventHandler> delegate.</span></span> <span data-ttu-id="90b0e-110">事件處理常式會顯示<xref:System.Timers.ElapsedEventArgs.SignalTime%2A>屬性會引發此事件每次。</span><span class="sxs-lookup"><span data-stu-id="90b0e-110">The event handler displays the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property each time it is raised.</span></span>  
  
 [!code-cpp[Classic Timer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer Example/CS/source.cs#1)]
 [!code-vb[Classic Timer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="T:System.Timers.ElapsedEventArgs" />
  </Docs>
</Type>