<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7bafa234b9feebfcca1383b45c3b8555f5c167d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37758966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <TypeSignature Language="F#" Value="type LogPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6084f-101">代表與 <see cref="T:System.IO.Log.LogStore" /> 相關聯的原則。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6084f-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-102">原則是 <xref:System.IO.Log.LogStore> 執行個體及其用戶端所應遵循的規則集。</span><span class="sxs-lookup"><span data-stu-id="6084f-102">A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients.</span></span> <span data-ttu-id="6084f-103">您可以使用 <xref:System.IO.Log.LogPolicy> 執行個體來檢查和修改與特定 <xref:System.IO.Log.LogStore> 相關聯的原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-103">A <xref:System.IO.Log.LogPolicy> instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="6084f-104">原則可以描述允許的記錄檔大小上限及下限，或描述允許 <xref:System.IO.Log.LogStore> 執行個體擴增的方式。</span><span class="sxs-lookup"><span data-stu-id="6084f-104">A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow.</span></span> <span data-ttu-id="6084f-105">此外，您還可以控制是否封存 <xref:System.IO.Log.LogStore> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="6084f-105">In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span>  
  
 <span data-ttu-id="6084f-106">在變更任何屬性之後，您應該使用 <xref:System.IO.Log.LogPolicy.Commit%2A> 方法，以確保這項變更會套用至 <xref:System.IO.Log.LogStore>。</span><span class="sxs-lookup"><span data-stu-id="6084f-106">After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="6084f-107">您可以呼叫 <xref:System.IO.Log.LogPolicy.Refresh%2A> 方法來捨棄變更，或取得最新的原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-107">You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-108">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-108">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGrow : bool with get, set" Usage="System.IO.Log.LogPolicy.AutoGrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-109">取得或設定值，這個值表示 <see cref="T:System.IO.Log.LogStore" /> 是否可以自動擴增。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-110">如果 <see langword="true" /> 可以自動擴增其大小，則為 <see cref="T:System.IO.Log.LogStore" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-110">
              <see langword="true" /> if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6084f-111">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-111">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShrinkPercentage : int with get, set" Usage="System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-112">取得或設定 <see cref="T:System.IO.Log.LogStore" /> 可以縮減的可用空間百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-113">
            <see cref="T:System.IO.Log.LogStore" /> 可以縮減的可用空間百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-113">The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-114">當 <xref:System.IO.Log.LogStore> 中的可用空間數量大於這個屬性指定的數量時，<xref:System.IO.Log.LogStore> 會自動將大小減少到 <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> 屬性所指定的大小。</span><span class="sxs-lookup"><span data-stu-id="6084f-114">When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-115">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-115">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="logPolicy.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6084f-116">將這個原則設定為 <see cref="T:System.IO.Log.LogStore" /> 的目前原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-117">在進行任何變更之後，您必須呼叫 <xref:System.IO.Log.LogPolicy.Commit%2A> 以確保將此變更記錄下來。</span><span class="sxs-lookup"><span data-stu-id="6084f-117">You must call <xref:System.IO.Log.LogPolicy.Commit%2A> after making any changes to ensure that the changes are recorded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-118">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-118">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6084f-119">記錄上安裝的一組原則無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-119">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="6084f-120">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-120">-or-</span>
          </span>
          <span data-ttu-id="6084f-121">記錄檔的原則阻礙這項作業完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-121">A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6084f-122">由於意外的 I/O 例外狀況，所以無法執行要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-122">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6084f-123">目前的平台不支援設定這個原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-123">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6084f-124">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-124">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6084f-125">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-125">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="6084f-126">新延伸區的前置詞無效或太長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-126">The new extent prefix is invalid or too long.</span>
          </span>
          <span data-ttu-id="6084f-127">必須提供有效的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-127">A valid prefix must be provided.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="6084f-128">記錄順序已滿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-128">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6084f-129">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-129">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.GrowthRate : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.GrowthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-130">取得或設定 <see cref="T:System.IO.Log.LogStore" /> 的自動擴增速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-130">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-131">
            <see cref="T:System.IO.Log.LogStore" /> 的自動擴增速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-131">The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-132">當 <xref:System.IO.Log.LogStore> 已滿時，這個原則值會決定可以增加的空間數量。</span><span class="sxs-lookup"><span data-stu-id="6084f-132">When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added.</span></span> <span data-ttu-id="6084f-133">如果這會讓 <xref:System.IO.Log.LogStore> 中的延伸區數目超過 <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>，就不會增加空間。</span><span class="sxs-lookup"><span data-stu-id="6084f-133">Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-134">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-134">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-135">取得或設定 <see cref="T:System.IO.Log.LogExtent" /> 可以包含之 <see cref="T:System.IO.Log.LogStore" /> 執行個體的最大數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-135">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-136">
            <see cref="T:System.IO.Log.LogExtent" /> 可以包含之 <see cref="T:System.IO.Log.LogStore" /> 執行個體的最大數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-136">The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6084f-137">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-137">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-138">取得或設定 <see cref="T:System.IO.Log.LogExtent" /> 可以包含之 <see cref="T:System.IO.Log.LogStore" /> 執行個體的最小數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-138">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-139">整數，指定 <see cref="T:System.IO.Log.LogExtent" /> 可以包含之 <see cref="T:System.IO.Log.LogStore" /> 執行個體的最小數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-139">An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
          <span data-ttu-id="6084f-140">因為 CLFS 要求最小的延伸區計數必須是 2 個延伸區，所以這個值應該至少是 2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-140">Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6084f-141">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-141">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewExtentPrefix : string with get, set" Usage="System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-142">取得或設定自動建立之延伸區的前置字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-142">Gets or sets the prefix string for automatically created extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-143">自動建立之延伸區的前置字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-143">The prefix string for automatically created extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-144">這個字串可以包含建立新延伸區所在之目錄的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="6084f-144">This string can contain a full path to the directory where the new extent is created.</span></span> <span data-ttu-id="6084f-145">延伸區的預設路徑是包含基底 <xref:System.IO.Log.LogStore> 檔案的目錄。</span><span class="sxs-lookup"><span data-stu-id="6084f-145">The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-146">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-146">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.NextExtentSuffix : int64 with get, set" Usage="System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-147">取得或設定新延伸區的後置數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-147">Gets or sets the suffix number for new extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-148">新延伸區的後置數字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-148">The suffix number for new extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6084f-149">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-149">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PinnedTailThreshold : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6084f-150">取得或設定 <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> 事件要求將記錄檔基底往前移動時所需的空間量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-150">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6084f-151">
            <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> 事件要求將記錄檔基底往前移動時所需的空間量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-151">The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6084f-152">空間量可以表示為百分比或位元組，而此值會取捨至 CLFS 中最接近的容器。</span><span class="sxs-lookup"><span data-stu-id="6084f-152">The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.</span></span> <span data-ttu-id="6084f-153">預設為 35 %。</span><span class="sxs-lookup"><span data-stu-id="6084f-153">The default is 35 percent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6084f-154">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-154">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="logPolicy.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6084f-155">讀取 <see cref="T:System.IO.Log.LogStore" /> 的目前原則，並捨棄可能已進行的任何變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-155">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6084f-156">這個範例將示範如何使用 <xref:System.IO.Log.LogPolicy> 類別來為記錄檔記錄順序設定原則。</span><span class="sxs-lookup"><span data-stu-id="6084f-156">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6084f-157">記錄上安裝的一組原則無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-157">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="6084f-158">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-158">-or-</span>
          </span>
          <span data-ttu-id="6084f-159">記錄檔的原則阻礙這項作業完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-159">A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6084f-160">由於意外的 I/O 例外狀況，所以無法執行要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-160">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6084f-161">目前的平台不支援設定這個原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-161">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6084f-162">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-162">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="6084f-163">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-163">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="6084f-164">記錄順序已滿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-164">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="6084f-165">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6084f-165">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>