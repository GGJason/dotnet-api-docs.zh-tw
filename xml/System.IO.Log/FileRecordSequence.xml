<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="763eb8ce0dbdab465b9c9875d0ab3a66b11ff7ec" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299364" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type FileRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0eee4-101">在檔案頂端實作 <see cref="T:System.IO.Log.IRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span></span> <span data-ttu-id="0eee4-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-103"><xref:System.IO.Log.FileRecordSequence> 是根據檔案系統中單一記錄檔的記錄順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="0eee4-104">這是 <xref:System.IO.Log.IRecordSequence> 介面的簡單實作，其建構在簡單檔案記錄之上。</span><span class="sxs-lookup"><span data-stu-id="0eee4-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="0eee4-105">若要操作簡單檔案記錄，執行應用程式所使用的帳戶必須依照檔案系統安全性在建構 <xref:System.IO.Log.FileRecordSequence> 時的指定，取得足夠的權限。</span><span class="sxs-lookup"><span data-stu-id="0eee4-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="0eee4-106">另外，在建構階段中還會要求 FullTrust 權限。</span><span class="sxs-lookup"><span data-stu-id="0eee4-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="0eee4-107">在此之後，權限驗證結果會存放在快取中，以便與 Windows 安全性模型保持一致。</span><span class="sxs-lookup"><span data-stu-id="0eee4-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="0eee4-108">您務必要避免不小心將記錄順序內容公開給未經授權的使用者。</span><span class="sxs-lookup"><span data-stu-id="0eee4-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-109">下列範例會建立記錄順序，並附加記錄到其中，最後再讀取記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-110">初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0eee4-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0eee4-111">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 執行個體所要封裝之檔案的相對或絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="0eee4-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <summary><span data-ttu-id="0eee4-112">使用指定的檔案，初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0eee4-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-113">這個建構函式 (Constructor) 會建立檔案的讀取/寫入權限，並使用共用的讀取權限開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="0eee4-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="0eee4-114">這表示，在這個 <xref:System.IO.Log.FileRecordSequence> 執行個體已處置之前，這個或其他處理序要開啟檔案以執行寫入的要求都會失敗，但嘗試讀取則會成功。</span><span class="sxs-lookup"><span data-stu-id="0eee4-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="0eee4-115">如果找不到 `path`，會建立 0 位元組大小的新檔案。</span><span class="sxs-lookup"><span data-stu-id="0eee4-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-116">下列範例會建立記錄順序、附加記錄到其中、再讀取記錄，最後處置該順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-117"><paramref name="path" /> 指定的檔案無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-117">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0eee4-118">找不到 <paramref name="path" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="0eee4-118">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-119">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-119">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-120">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-120">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0eee4-121">存取指定的記錄存放區遭作業系統拒絕。</span><span class="sxs-lookup"><span data-stu-id="0eee4-121">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0eee4-122">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 執行個體所要封裝之檔案的相對或絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="0eee4-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="0eee4-123">有效的 <see cref="T:System.IO.FileAccess" /> 值，可控制使用者對記錄檔擁有的存取類型。</span><span class="sxs-lookup"><span data-stu-id="0eee4-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <summary><span data-ttu-id="0eee4-124">使用指定的檔案和存取模式初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0eee4-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-125"><paramref name="path" /> 指定的檔案無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-125">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0eee4-126">找不到 <paramref name="path" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="0eee4-126">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-127">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-127">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-128">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-128">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0eee4-129">存取指定的記錄存放區遭作業系統拒絕。</span><span class="sxs-lookup"><span data-stu-id="0eee4-129">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess * int -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="0eee4-130">此 <see cref="T:System.IO.Log.FileRecordSequence" /> 執行個體所要封裝之檔案的相對或絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="0eee4-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="0eee4-131">有效的 <see cref="T:System.IO.FileAccess" /> 值，可控制使用者對記錄檔擁有的存取類型。</span><span class="sxs-lookup"><span data-stu-id="0eee4-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <param name="size"><span data-ttu-id="0eee4-132">要開啟之記錄檔的大小。</span><span class="sxs-lookup"><span data-stu-id="0eee4-132">The size of the log file to be opened.</span></span></param>
        <summary><span data-ttu-id="0eee4-133">使用指定的檔案、存取模式和檔案大小初始化 <see cref="T:System.IO.Log.FileRecordSequence" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0eee4-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-134">一或多個參數超出有效範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-134">One or more of the parameters are out of the valid range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-135"><paramref name="path" /> 指定的檔案無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-135">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0eee4-136">找不到 <paramref name="path" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="0eee4-136">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-137">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-137">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-138">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-138">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="0eee4-139">存取指定的記錄存放區遭作業系統拒絕。</span><span class="sxs-lookup"><span data-stu-id="0eee4-139">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="fileRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="0eee4-140">記錄順序的新基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-140">The new base sequence number of the record sequence.</span></span></param>
        <summary><span data-ttu-id="0eee4-141">將記錄檔的基底序號往前移動。</span><span class="sxs-lookup"><span data-stu-id="0eee4-141">Moves the base sequence number of the log forward.</span></span> <span data-ttu-id="0eee4-142">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-142">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-143"><paramref name="newBaseSequenceNumber" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-143"><paramref name="newBaseSequenceNumber" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-144"><paramref name="newBaseSequenceNumber" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-144"><paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-145">修改序列時發生 I/O 錯誤。</span><span class="sxs-lookup"><span data-stu-id="0eee4-145">An I/O error occurred while modifying the sequence.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-146">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-146">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-147">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-147">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-148">將記錄寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eee4-149">下列範例會建立記錄順序，並附加記錄到其中，最後再讀取記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-150">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-150">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-151">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-151">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-152">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-152">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-153"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="0eee4-154">將記錄寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-155">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-156">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-156">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-157">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-158">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-159">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-160">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-161">下列範例會建立記錄順序，並附加記錄到其中，最後再讀取記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-162">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-162">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-163">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-163">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-164">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-164">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-165">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-165">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-166">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-166">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-167">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-167">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-168">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-168">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-169">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-169">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-170">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-170">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-171">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-171">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-172"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="0eee4-173">將記錄寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-174">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-174">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-175">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-175">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-176">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-177">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-178">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-179">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-180">下列範例顯示如何使用這個方法來建立記錄順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-181">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-181">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-182">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-182">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-183">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-183">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-184">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-184">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-185">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-185">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-186">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-186">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-187">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-187">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-188">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-188">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-189">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-189">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-190">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-190">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-191"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-192"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含這筆記錄所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="0eee4-193">使用之前在順序中保留的空間，將記錄寫入到 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-194">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-194">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-195">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-195">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-196">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-197">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-198">附加的記錄將會使用 `reservations` 參數指定的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="0eee4-199">如果附加成功，則會使用可以保存資料的最小保留區域，而且該保留區域將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-200">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-201">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-202">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-202">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-203">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-203">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-204"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-204"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-205">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-205">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-206">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-206">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-207">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-207">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-208">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-208">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-209">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-209">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-210">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-211">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-211">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-212">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-212">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-213">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-213">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-214"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-215"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含這筆記錄所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="0eee4-216">使用之前在順序中保留的空間，將記錄寫入到 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-217">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-217">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-218">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-218">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-219">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-220">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-221">附加的記錄將會使用 `reservations` 參數指定的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="0eee4-222">如果附加成功，則會使用可以保存資料的最小保留區域，而且該保留區域將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-223">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-224">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-225">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-225">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-226">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-226">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-227"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-227"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-228">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-228">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-229">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-229">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-230">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-231">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-232">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-232">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-233">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-234">取得目前 <see cref="T:System.IO.Log.FileRecordSequence" />中第一個有效記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="0eee4-235">對應至 <see cref="T:System.IO.Log.FileRecordSequence" /> 中之有效記錄的最小序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-236">有效的序號會大於或等於 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>，而且小於 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="0eee4-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="0eee4-237">其他所有序號全都無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="0eee4-238">這個屬性的值可藉由呼叫 <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> 或 <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> 方法加以變更。</span><span class="sxs-lookup"><span data-stu-id="0eee4-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-239">下列範例說明在迴圈中使用 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>：</span><span class="sxs-lookup"><span data-stu-id="0eee4-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-240">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-240">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-241">開始執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-241">Begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-242">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-242">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-243">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-243">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-244">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-244">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-245"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-246">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-246">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-247">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-248">開始執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-248">Begins an asynchronous append operation.</span></span> <span data-ttu-id="0eee4-249">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-249">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-250"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-251">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-252">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-253">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-254">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-255">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-256">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-257">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-257">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-258">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-258">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-259">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-259">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-260">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-260">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-261">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-261">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-262">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-262">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-263">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-263">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-264">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-264">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-265">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-265">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-266">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-266">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-267"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-268">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-268">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-269">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-270">開始執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-270">Begins an asynchronous append operation.</span></span> <span data-ttu-id="0eee4-271">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-271">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-272"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-273">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-274">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-275">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-276">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-277">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-278">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-279">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-279">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-280">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-280">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-281">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-281">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-282">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-282">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-283">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-283">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-284">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-284">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-285">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-285">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-286">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-286">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-287">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-287">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-288">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-288">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-289"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-290"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含這筆記錄所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-291">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-291">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-292">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-293">使用先前保留在順序中的空間，開始執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-294">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-294">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-295"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-296">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-297">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-298">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-299">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-300">附加的記錄將會使用 `reservations` 參數指定的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="0eee4-301">如果附加成功，則會使用可以保存資料的最小保留區域，而且該保留區域將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-302">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-303">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-304">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-304">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-305">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-305">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-306"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-306"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-307">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-307">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-308">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-308">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-309">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-309">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-310">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-310">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-311">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-311">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-312">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-313">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-313">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-314">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-314">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-315">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-315">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-316"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-317"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含這筆記錄所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-318">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-318">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-319">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-320">使用先前保留在順序中的空間，開始執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-321">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-321">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-322"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-323">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-324">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-325">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-326">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-327">附加的記錄將會使用 `reservations` 參數指定的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="0eee4-328">如果附加成功，則會使用可以保存資料的最小保留區域，而且該保留區域將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-329">此方法通常會在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="0eee4-330">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-331">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-331">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-332">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-332">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-333"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-333"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-334">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-334">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-335">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-335">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-336">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-336">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-337">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-337">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-338">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-338">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-339">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="0eee4-340">必須寫入之最新記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-340">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="0eee4-341">如果 <see cref="T:System.IO.Log.SequenceNumber" /> 無效，則必須寫入所有的記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-342">選擇性的非同步回呼，在清除完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-342">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-343">使用者所提供的物件，其可以從其他要求中區分出這個特定非同步清除的要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-344">使用先前保留在順序中的空間，開始執行非同步的清除作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-345">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-345">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-346"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步清除作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-347">您應該將目前方法傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 方法，以確保清除完成，並適當釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="0eee4-348">如果在非同步清除期間發生錯誤，則必須在使用這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 呼叫 <xref:System.IAsyncResult> 方法後才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-349">呼叫這個方法可以確保已永久寫入附加到 <xref:System.IO.Log.FileRecordSequence> 的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="0eee4-350">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-351">在非同步清除要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤)，會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-352">一或多個引數無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-352">One or more of the arguments is invalid.</span></span>  
  
 <span data-ttu-id="0eee4-353"><paramref name="sequenceNumber" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-353"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-354"><paramref name="sequenceNumber" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-354"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-355">清除資料時發生 I/O 錯誤。</span><span class="sxs-lookup"><span data-stu-id="0eee4-355">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-356">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-356">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-357">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-357">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-358">開始執行非同步的保留和附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-358">Begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-359">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-359">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-360">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-360">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-361">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-361">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-362"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="0eee4-363">要在其中建立保留區的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-363">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-364">要建立的保留區 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-364">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-365">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-365">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-366">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-367">開始執行非同步的保留和附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-367">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="0eee4-368">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-368">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-369"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的這項非同步作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-370">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-371">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-372">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-373">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-374">指定的保留區會在不可部分完成的作業 (Atomic Operation) 與記錄附加作業中，加入至提供的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="0eee4-375">如果附加失敗，就不會保留任何空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="0eee4-376">這個方法通常可以在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="0eee4-377">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-378">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-379">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-380">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-380">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-381">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-381">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-382"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-382"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-383">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-383">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-384">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-384">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-385">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-385">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-386">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-386">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-387">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-387">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-388">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-389">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-389">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-390">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-390">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-391">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-391">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-392"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="0eee4-393">要在其中建立保留區的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-393">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-394">要建立的保留區 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-394">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-395">選擇性的非同步回呼，在附加完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-395">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-396">使用者所提供的物件，可區別此特定非同步附加要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-397">開始執行非同步的保留和附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-397">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="0eee4-398">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-398">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-399"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的這項非同步作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-400">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法，以確定附加作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-401">如果在非同步附加期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-402">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-403">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-404">指定的保留區會在不可部分完成的作業 (Atomic Operation) 與記錄附加作業中，加入至提供的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="0eee4-405">如果附加失敗，就不會保留任何空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="0eee4-406">這個方法通常可以在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="0eee4-407">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-408">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-409">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-410">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-410">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-411">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-411">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-412"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-412"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-413">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-413">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-414">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-414">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-415">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-415">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-416">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-416">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-417">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-417">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-418">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-419">開始執行非同步的重新啟動區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-419">Begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-420">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-420">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-421">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-421">The new base sequence number.</span></span> <span data-ttu-id="0eee4-422">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-422">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="0eee4-423"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含此重新啟動區域所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-424">選擇性的非同步回呼 (Callback)，在重新啟動區域寫入完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-424">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-425">使用者所提供的物件，可區別此特定非同步重新啟動區域寫入要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-426">使用先前保留在順序中的空間，開始執行非同步的重新啟用區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-427">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-427">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-428"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步重新啟動區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-429">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法，以確定重新啟動區域寫入作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-430">如果在非同步重新啟動區域寫入作業期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-431">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-432">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-433">當這個作業成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-434">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="0eee4-435">如果已指定 <xref:System.IO.Log.ReservationCollection>，寫入的重新啟動區域將會使用包含在集合中的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="0eee4-436">如果此方法成功，便會取用可以保存資料的最小保留區，而且該保留區將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-437">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-438">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-439">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-439">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-440"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-440"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-441">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-441">-or-</span></span> 
<span data-ttu-id="0eee4-442">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-442">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-443"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-443"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="0eee4-444">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-444">-or-</span></span> 
 <span data-ttu-id="0eee4-445"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-445"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-446">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-446">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-447">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-447">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-448">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-448">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-449">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-449">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-450">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-450">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-451">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-451">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-452">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-452">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-453">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-453">The new base sequence number.</span></span> <span data-ttu-id="0eee4-454">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-454">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="0eee4-455"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含此重新啟動區域所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="0eee4-456">選擇性的非同步回呼 (Callback)，在重新啟動區域寫入完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="0eee4-456">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="0eee4-457">使用者所提供的物件，可區別此特定非同步重新啟動區域寫入要求與其他要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-457">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="0eee4-458">使用先前保留在順序中的空間，開始執行非同步的重新啟用區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-458">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="0eee4-459">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-459">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-460"><see cref="T:System.IAsyncResult" />，表示可能還在暫止中的非同步重新啟動區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-461">您應該將這個方法所傳回的 <xref:System.IAsyncResult> 傳遞給 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法，以確定重新啟動區域寫入作業已完成，而且可以適當地釋放資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="0eee4-462">如果在非同步重新啟動區域寫入作業期間發生錯誤，就要等到系統以這個方法傳回的 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 呼叫 <xref:System.IAsyncResult> 方法時，才會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-462">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="0eee4-463">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-464">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-465">當這個作業成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-465">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-466">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-466">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="0eee4-467">如果已指定 <xref:System.IO.Log.ReservationCollection>，寫入的重新啟動區域將會使用包含在集合中的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-467">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="0eee4-468">如果此方法成功，便會取用可以保存資料的最小保留區，而且該保留區將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-468">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-469">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-469">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-470">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-470">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-471">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-471">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-472"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-472"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-473">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-473">-or-</span></span> 
<span data-ttu-id="0eee4-474">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-474">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-475"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-475"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="0eee4-476">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-476">-or-</span></span> 
 <span data-ttu-id="0eee4-477"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-477"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-478">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-478">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-479">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-479">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-480">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-480">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-481">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-481">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-482">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-482">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-483">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-483">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="fileRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eee4-484">建立新的 <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-484">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="0eee4-485">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-485">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-486">新建立的 <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-486">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-487">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-487">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fileRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eee4-488">立即釋放物件所使用的 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="0eee4-488">Immediately releases the unmanaged resources used by an object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-489">清除資料時發生 I/O 錯誤。</span><span class="sxs-lookup"><span data-stu-id="0eee4-489">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-490">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-490">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-491">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-491">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0eee4-492">未處理的非同步 I/O 要求的參考。</span><span class="sxs-lookup"><span data-stu-id="0eee4-492">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="0eee4-493">結束執行非同步的附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-493">Ends an asynchronous append operation.</span></span> <span data-ttu-id="0eee4-494">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-494">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-495">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-495">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-496">這個方法會封鎖，直到 I/O 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0eee4-496">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="0eee4-497">在非同步寫入要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會在呼叫 <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> 時顯示出來。</span><span class="sxs-lookup"><span data-stu-id="0eee4-497">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="0eee4-498">在 <xref:System.IAsyncResult> 方法傳回的每一個 <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> 上必須剛好呼叫這個方法一次。</span><span class="sxs-lookup"><span data-stu-id="0eee4-498">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-499"><paramref name="result" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-499"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-500">已經針對此非同步作業呼叫 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-500"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-501">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-501">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-502">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-502">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-503">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-503">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0eee4-504">未處理的非同步 I/O 要求的參考。</span><span class="sxs-lookup"><span data-stu-id="0eee4-504">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="0eee4-505">結束執行非同步的清除作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-505">Ends an asynchronous flush operation.</span></span> <span data-ttu-id="0eee4-506">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-506">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-507">上一筆寫入之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-507">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-508">這個方法會封鎖，直到 I/O 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0eee4-508">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="0eee4-509">在非同步清除要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會在呼叫 <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> 時顯示出來。</span><span class="sxs-lookup"><span data-stu-id="0eee4-509">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="0eee4-510">在 <xref:System.IAsyncResult> 方法傳回的每一個 <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> 上必須剛好呼叫這個方法一次。</span><span class="sxs-lookup"><span data-stu-id="0eee4-510">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-511"><paramref name="result" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-511"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-512">已經針對此非同步作業呼叫 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-512"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-513">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-513">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-514">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-514">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-515">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-515">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0eee4-516">未處理的非同步 I/O 要求的參考。</span><span class="sxs-lookup"><span data-stu-id="0eee4-516">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="0eee4-517">結束執行非同步的保留和附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-517">Ends an asynchronous reserve and append operation.</span></span> <span data-ttu-id="0eee4-518">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-518">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-519">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-519">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-520">這個方法會封鎖，直到 I/O 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0eee4-520">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="0eee4-521">在非同步寫入要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會在呼叫 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 時顯示出來。</span><span class="sxs-lookup"><span data-stu-id="0eee4-521">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="0eee4-522">在 <xref:System.IAsyncResult> 方法傳回的每一個 <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> 上必須剛好呼叫這個方法一次。</span><span class="sxs-lookup"><span data-stu-id="0eee4-522">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-523"><paramref name="result" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-523"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-524">已經針對此非同步作業呼叫 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-524"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-525">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-525">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-526">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-526">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-527">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-527">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="0eee4-528">未處理的非同步 I/O 要求的參考。</span><span class="sxs-lookup"><span data-stu-id="0eee4-528">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="0eee4-529">結束執行非同步的重新啟動區域寫入作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-529">Ends an asynchronous restart area write operation.</span></span> <span data-ttu-id="0eee4-530">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-530">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-531">已寫入之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-531">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-532">這個方法會封鎖，直到 I/O 作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="0eee4-532">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="0eee4-533">在非同步寫入要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會在呼叫 <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> 時顯示出來。</span><span class="sxs-lookup"><span data-stu-id="0eee4-533">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="0eee4-534">在 <xref:System.IAsyncResult> 方法傳回的每一個 <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> 上必須剛好呼叫這個方法一次。</span><span class="sxs-lookup"><span data-stu-id="0eee4-534">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-535"><paramref name="result" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-535"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-536">已經針對此非同步作業呼叫 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-536"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-537">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-537">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-538">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-538">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-539">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-539">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-540">使得附加的記錄永久地寫入。</span><span class="sxs-lookup"><span data-stu-id="0eee4-540">Causes appended records to be durably written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eee4-541">確定已寫入所有附加的記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-541">Ensures that all appended records have been written.</span></span> <span data-ttu-id="0eee4-542">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-542">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-543">上一筆寫入之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-543">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-544">呼叫這個方法可以確保已永久寫入附加到 <xref:System.IO.Log.FileRecordSequence>的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-544">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-545">清除資料時發生 I/O 錯誤。</span><span class="sxs-lookup"><span data-stu-id="0eee4-545">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-546">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-546">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-547">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-547">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="0eee4-548">必須寫入之最新記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-548">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="0eee4-549">如果這個 <see cref="T:System.IO.Log.SequenceNumber" /> 無效，則必須寫入所有的記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-549">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="0eee4-550">確定已寫入所有附加的記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-550">Ensures that all appended records have been written.</span></span> <span data-ttu-id="0eee4-551">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-551">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-552">上一筆寫入之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-552">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-553">呼叫這個方法可以確保已將內含指定序號的所有記錄永久寫入。</span><span class="sxs-lookup"><span data-stu-id="0eee4-553">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-554"><paramref name="sequenceNumber" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-554"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-555"><paramref name="sequenceNumber" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-555"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-556">清除資料時發生 I/O 錯誤。</span><span class="sxs-lookup"><span data-stu-id="0eee4-556">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-557">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-557">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-558">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-558">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-559">取得大於上一筆附加記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-559">Gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="0eee4-560">大於上一筆附加記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-560">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-561">這個屬性包含保證大於上一個附加記錄之序號的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-561">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="0eee4-562">有效的序號會大於或等於 <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>，而且小於 <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="0eee4-562">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="0eee4-563">其他所有序號全都無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-563">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-564">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-564">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-565">取得可在順序中附加或讀取之最大記錄的大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-565">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></summary>
        <value><span data-ttu-id="0eee4-566">可在此順序中附加或讀取的最大記錄大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-566">The size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-567">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-567">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="0eee4-568">開始讀取之第一筆記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-568">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="0eee4-569"><see cref="T:System.IO.Log.LogRecordEnumeratorType" /> 的有效值，其中指定從 <see cref="T:System.IO.Log.LogRecordSequence" /> 讀取記錄的方式 (即往前或往後讀取)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-569">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="0eee4-570">傳回順序中之記錄的可列舉集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-570">Returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="0eee4-571">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-571">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-572">順序中的記錄的可列舉集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-572">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-573">這個方法會傳回順序中之記錄的可列舉集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-573">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="0eee4-574">列舉的記錄順序取決於 `logRecordEnum` 參數的值。</span><span class="sxs-lookup"><span data-stu-id="0eee4-574">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eee4-575">下列範例將示範如何使用這個方法來讀取記錄順序中的記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-575">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-576">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-576">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-577">記錄順序是以唯寫存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-577">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-578">記錄順序已損毀。</span><span class="sxs-lookup"><span data-stu-id="0eee4-578">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="0eee4-579">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-579">-or-</span></span> 
<span data-ttu-id="0eee4-580">記錄是以不相容的記錄順序版本所寫入。</span><span class="sxs-lookup"><span data-stu-id="0eee4-580">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-581">列舉已經結束。</span><span class="sxs-lookup"><span data-stu-id="0eee4-581">The enumeration has ended.</span></span>  
  
<span data-ttu-id="0eee4-582">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-582">-or-</span></span> 
<span data-ttu-id="0eee4-583">列舉尚未啟動。</span><span class="sxs-lookup"><span data-stu-id="0eee4-583">The enumeration has not been started.</span></span> <span data-ttu-id="0eee4-584">必須呼叫 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-584">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-585">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-585">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-586">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-586">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0eee4-587">傳回序列中重新啟動區域的可列舉集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-587">Returns an enumerable collection of the restart areas in the sequence.</span></span> <span data-ttu-id="0eee4-588">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-588">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-589">順序中的重新啟動區域的可列舉集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-589">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-590">列舉重新啟動區域的方式是依照序號的相反順序列舉，也就是由最大序號到最小序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-590">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="0eee4-591">只會列舉含有介於最後一個序號和基底序號之間序號的重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-591">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-592">記錄順序是以唯寫存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-592">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-593">記錄順序已損毀。</span><span class="sxs-lookup"><span data-stu-id="0eee4-593">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="0eee4-594">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-594">-or-</span></span> 
<span data-ttu-id="0eee4-595">記錄是以不相容的記錄順序版本所寫入。</span><span class="sxs-lookup"><span data-stu-id="0eee4-595">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0eee4-596">列舉已經結束。</span><span class="sxs-lookup"><span data-stu-id="0eee4-596">The enumeration has ended.</span></span>  
  
<span data-ttu-id="0eee4-597">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-597">-or-</span></span> 
<span data-ttu-id="0eee4-598">列舉尚未啟動。</span><span class="sxs-lookup"><span data-stu-id="0eee4-598">The enumeration has not been started.</span></span> <span data-ttu-id="0eee4-599">必須呼叫 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-599">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-600">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-600">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-601">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-601">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-602">自動建立單一保留區，並將記錄附加至順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-602">Automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-603">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-603">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-604">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-604">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-605">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-605">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-606"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-606">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="0eee4-607"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含要在其中建立保留區的集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-607">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-608">要建立的保留區 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-608">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="0eee4-609">自動建立單一保留區，並將記錄附加至順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-609">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="0eee4-610">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-610">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-611">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-611">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-612">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-612">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-613">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-613">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-614">指定的保留區會在不可部分完成的作業 (Atomic Operation) 與記錄附加作業中，加入至提供的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-614">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="0eee4-615">如果附加失敗，就不會保留任何空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-615">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="0eee4-616">這個方法通常可以在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-616">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="0eee4-617">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-617">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-618">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-618">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-619">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-619">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-620"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-620"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-621">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-621">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-622">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-622">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-623">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-623">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-624">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-624">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-625">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-625">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-626">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-626">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="0eee4-627">下一筆記錄的序號 (依照使用者指定的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-627">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="0eee4-628">下一筆記錄的序號 (依照之前的順序)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-628">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="0eee4-629"><see cref="T:System.IO.Log.RecordAppendOptions" /> 的有效值，其中指定資料的寫入方式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-629">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="0eee4-630">要在其中建立保留區的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-630">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-631">要建立的保留區 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="0eee4-631">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="0eee4-632">自動建立單一保留區，並將記錄附加至順序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-632">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="0eee4-633">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-633">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-634">已附加之記錄的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-634">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-635">包含在 `data` 參數中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-635">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-636">不過，在讀取記錄時，並不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-636">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="0eee4-637">指定的保留區會在不可部分完成的作業 (Atomic Operation) 與記錄附加作業中，加入至提供的保留區集合。</span><span class="sxs-lookup"><span data-stu-id="0eee4-637">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="0eee4-638">如果附加失敗，就不會保留任何空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-638">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="0eee4-639">這個方法通常可以在寫入記錄前完成。</span><span class="sxs-lookup"><span data-stu-id="0eee4-639">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="0eee4-640">若要確定已寫入某筆記錄，請使用 <xref:System.IO.Log.RecordAppendOptions.ForceFlush> 參數指定 `recordAppendOptions` 旗標，或是呼叫 <xref:System.IO.Log.FileRecordSequence.Flush%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-640">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-641">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-641">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-642">一或多個引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="0eee4-642">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-643"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-643"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-644">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-644">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-645">由於意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-645">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-646">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-646">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-647">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-647">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-648">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-648">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-649">取得保留的位元組總數。</span><span class="sxs-lookup"><span data-stu-id="0eee4-649">Gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="0eee4-650">在此記錄順序中建立之所有保留區的總共大小。</span><span class="sxs-lookup"><span data-stu-id="0eee4-650">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-651">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-651">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-652">取得最近寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-652">Gets the sequence number of the most recently written restart area.</span></span></summary>
        <value><span data-ttu-id="0eee4-653">最近寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-653">The sequence number of the most recently written restart area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-654">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-654">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-655">一般記錄檔系統 (CLFS) 會維護兩個重新啟動區域，以保證至少有一個有效區域永遠可供使用。</span><span class="sxs-lookup"><span data-stu-id="0eee4-655">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="0eee4-656">當需要復原時，CLFS 會讀取其重新啟動區域，以及上一個檢查點作業傳回的所有資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-656">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-657">這些資料會初始化異動資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-657">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-658">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-658">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-659">取得或設定值，這個值表示是否在記錄已滿時自動重試附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-659">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="0eee4-660">如果要在記錄檔已滿時自動重試附加作業，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-660"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0eee4-661">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-661">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-662">如果這個屬性的值是 `true`，且 <xref:System.IO.Log.FileRecordSequence.Append%2A> 呼叫因為順序中的空間不足而失敗，記錄順序將會嘗試釋放空間，並重試附加作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-662">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-663">已在處置序列之後存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0eee4-663">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eee4-664">會在記錄順序判斷必須將結尾往前移動時發生。</span><span class="sxs-lookup"><span data-stu-id="0eee4-664">Occurs when the record sequence determines that the tail must be moved forward.</span></span> <span data-ttu-id="0eee4-665">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-665">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-666">您可以在記錄順序的空間用完時引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="0eee4-666">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="0eee4-667">這個事件一經引發，就會將順序的結尾 (即基底序號) 往前移動以釋放空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-667">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eee4-668">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-668">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-669">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-670">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-671">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-672">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-673">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-673">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="0eee4-674">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-674">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-675">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-675">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-676">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-676">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-677">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-677">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-678">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-678">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-679">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-679">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-680">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-680">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-681">位元組陣列區段中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-681">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-682">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-682">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-683">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-683">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-684">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-684">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-685">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-685">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-686">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-686">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-687">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-687">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-688">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-688">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-689">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-689">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="0eee4-690">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-690">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-691">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-691">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-692">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-692">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-693">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-693">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-694">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-694">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-695">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-695">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-696">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-696">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-697">位元組陣列區段中的資料將串連至單一位元組陣列中，以便附加成記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-697">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-698">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-698">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-699">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-699">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-700">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-700">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-701">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-701">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-702">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-702">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-703">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-703">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-704">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-704">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-705">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-705">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-706">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-706">The new base sequence number.</span></span> <span data-ttu-id="0eee4-707">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-707">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="0eee4-708">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-708">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-709">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-709">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-710">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-710">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-711">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-711">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-712">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-712">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-713">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-713">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-714">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-714">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-715">當寫入重新啟動區域時，位元組陣列區段中的資料會串連至單一位元組陣列，以便附加為記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-715">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-716">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-716">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="0eee4-717">當這個方法成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-717">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-718">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-718">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-719">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-719">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-720"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-720"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-721">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-721">-or-</span></span> 
<span data-ttu-id="0eee4-722">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-722">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-723"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-723"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-724">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-724">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-725">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-725">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-726">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-726">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-727">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-727">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-728">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-728">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-729">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-729">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-730">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-730">The new base sequence number.</span></span> <span data-ttu-id="0eee4-731">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-731">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="0eee4-732">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-732">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-733">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-733">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-734">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-734">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-735">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-735">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-736">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-736">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-737">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-737">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-738">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-738">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-739">當寫入重新啟動區域時，位元組陣列區段中的資料會串連至單一位元組陣列，以便附加為記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-739">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-740">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-740">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="0eee4-741">當這個方法成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-741">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-742">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-742">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-743">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-743">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-744"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-744"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-745">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-745">-or-</span></span> 
<span data-ttu-id="0eee4-746">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-746">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-747"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-747"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-748">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-748">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-749">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-749">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-750">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-750">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-751">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-751">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-752">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-752">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-753">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-753">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-754">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-754">The new base sequence number.</span></span> <span data-ttu-id="0eee4-755">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-755">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-756"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含此重新啟動區域所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-756">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="0eee4-757">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-757">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-758">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-758">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-759">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-759">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-760">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-760">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-761">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-761">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-762">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-762">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-763">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-763">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-764">當寫入重新啟動區域時，位元組陣列區段中的資料會串連至單一位元組陣列，以便附加為記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-764">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-765">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-765">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="0eee4-766">如果已指定保留區，寫入的重新啟動區域將會使用包含在集合中的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-766">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="0eee4-767">如果此方法成功，便會取用可以容納資料的最小保留區，而且該保留區將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-767">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-768">當這個方法成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-768">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-769">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-769">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="0eee4-770">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-770">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-771">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-771">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-772">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-772">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-773"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-773"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-774">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-774">-or-</span></span> 
<span data-ttu-id="0eee4-775">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-775">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-776"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-776"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="0eee4-777">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-777">-or-</span></span> 
 <span data-ttu-id="0eee4-778"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-778"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-779">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-779">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-780">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-780">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-781">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-781">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-782">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-782">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-783">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-783">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-784">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-784">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="0eee4-785">即將串連並附加成記錄之位元組陣列區段的清單。</span><span class="sxs-lookup"><span data-stu-id="0eee4-785">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="0eee4-786">新的基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-786">The new base sequence number.</span></span> <span data-ttu-id="0eee4-787">指定的序號必須大於或等於目前基底序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-787">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="0eee4-788"><see cref="T:System.IO.Log.ReservationCollection" />，其中包含此重新啟動區域所應使用的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-788">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="0eee4-789">將重新啟動區域寫入 <see cref="T:System.IO.Log.FileRecordSequence" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-789">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="0eee4-790">這個方法無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0eee4-790">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="0eee4-791">寫入之重新啟動區域的序號。</span><span class="sxs-lookup"><span data-stu-id="0eee4-791">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eee4-792">重新啟動區域可用來暫時儲存包含用戶端上一個檢查點作業的資訊。</span><span class="sxs-lookup"><span data-stu-id="0eee4-792">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="0eee4-793">當需要復原時，您可以讀取重新啟動區域，並從上一個檢查點作業擷取所有的資料。</span><span class="sxs-lookup"><span data-stu-id="0eee4-793">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="0eee4-794">這些資料會初始化交易資料表、中途分頁資料表和開啟檔案資料表，好讓它們可用於復原程序。</span><span class="sxs-lookup"><span data-stu-id="0eee4-794">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="0eee4-795">您可以使用 <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> 方法來讀取重新啟動區域。</span><span class="sxs-lookup"><span data-stu-id="0eee4-795">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="0eee4-796">當寫入重新啟動區域時，位元組陣列區段中的資料會串連至單一位元組陣列，以便附加為記錄。</span><span class="sxs-lookup"><span data-stu-id="0eee4-796">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="0eee4-797">在讀取重新啟動區域時，不會將資料分割回陣列區段。</span><span class="sxs-lookup"><span data-stu-id="0eee4-797">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="0eee4-798">如果已指定保留區，寫入的重新啟動區域將會使用包含在集合中的保留區，以取用先前所保留的空間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-798">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="0eee4-799">如果此方法成功，便會取用可以容納資料的最小保留區，而且該保留區將會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="0eee4-799">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="0eee4-800">當這個方法成功完成時，基底序號已經更新。</span><span class="sxs-lookup"><span data-stu-id="0eee4-800">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="0eee4-801">只要是序號小於新基底序號的所有記錄都無法存取。</span><span class="sxs-lookup"><span data-stu-id="0eee4-801">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="0eee4-802">如果處置了記錄順序，或是您傳遞了無效的引數，就會立即在此作業中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-802">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="0eee4-803">在非同步附加要求期間發生的錯誤 (例如，在 I/O 要求期間發生的磁碟錯誤) 會導致在呼叫 <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> 方法時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0eee4-803">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0eee4-804">一或多個引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0eee4-804">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0eee4-805"><paramref name="newBaseSeqNum" /> 不是介於這個順序的基底序號和最後一個序號之間。</span><span class="sxs-lookup"><span data-stu-id="0eee4-805"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="0eee4-806">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-806">-or-</span></span> 
<span data-ttu-id="0eee4-807">新的或現有封存結尾或作用中記錄的基底無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-807">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0eee4-808"><paramref name="reservations" /> 不是由此記錄順序所建立。</span><span class="sxs-lookup"><span data-stu-id="0eee4-808"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="0eee4-809">-或-</span><span class="sxs-lookup"><span data-stu-id="0eee4-809">-or-</span></span> 
 <span data-ttu-id="0eee4-810"><paramref name="newBaseSeqNum" /> 對此順序無效。</span><span class="sxs-lookup"><span data-stu-id="0eee4-810"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0eee4-811">記錄順序是以唯讀存取所開啟，無法執行作業。</span><span class="sxs-lookup"><span data-stu-id="0eee4-811">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0eee4-812">因為意外的 I/O 例外狀況，所以無法執行要求。</span><span class="sxs-lookup"><span data-stu-id="0eee4-812">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0eee4-813">已在處置序列之後呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="0eee4-813">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0eee4-814">沒有足夠的記憶體可以繼續執行程式。</span><span class="sxs-lookup"><span data-stu-id="0eee4-814">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="0eee4-815">記錄順序已滿。</span><span class="sxs-lookup"><span data-stu-id="0eee4-815">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="0eee4-816">在 <paramref name="data" /> 找不到有足夠空間可以容納 <paramref name="reservations" /> 的保留區。</span><span class="sxs-lookup"><span data-stu-id="0eee4-816">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>