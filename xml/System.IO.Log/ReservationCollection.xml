<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e0abb9e640cc995fa2b1c6aba3d4962d7a4114b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37759033" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="97b12-101">管理以記錄順序建立的空間保留區集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97b12-101">Manages the collection of space reservations made in a record sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97b12-102">這個類別代表一組依據記錄順序所建立的保留區域。</span><span class="sxs-lookup"><span data-stu-id="97b12-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="97b12-103">將項目新增至此集合，便會配置新的保留。</span><span class="sxs-lookup"><span data-stu-id="97b12-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="97b12-104">從此集合中移除項目，便會釋放這些保留。</span><span class="sxs-lookup"><span data-stu-id="97b12-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="97b12-105">如果應用程式有將在日後寫入記錄檔但無法立即寫入的資料時，應用程式就會在記錄檔中保留空間。</span><span class="sxs-lookup"><span data-stu-id="97b12-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="97b12-106">保留會保證在該資料可以寫入時，可以將資料寫入至記錄檔。</span><span class="sxs-lookup"><span data-stu-id="97b12-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="97b12-107">當使用記錄檔時，應用程式常常會在封送處理區域中保留一或多個記錄檔記錄。</span><span class="sxs-lookup"><span data-stu-id="97b12-107">When using logs, applications often reserve one or more log records in a marshalling area.</span></span> <span data-ttu-id="97b12-108">您必須先保留記錄，再進行附加。</span><span class="sxs-lookup"><span data-stu-id="97b12-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="97b12-109">保留可用於保證作業可以在認可資料之前完成；否則，便會回復變更。</span><span class="sxs-lookup"><span data-stu-id="97b12-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="97b12-110">它也可以用於記錄在記錄檔中的「復原動作」。</span><span class="sxs-lookup"><span data-stu-id="97b12-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="97b12-111">在復原作業期間，異動資源管理員 (RM) 必須在其被中斷時能夠復原自己的狀態。</span><span class="sxs-lookup"><span data-stu-id="97b12-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="97b12-112">藉由使用保留區域，RM 可以在其使用之前先在記錄檔中保留空間。</span><span class="sxs-lookup"><span data-stu-id="97b12-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="97b12-113"><xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> 方法可以保留空間或附加資料，或是兩者；這要視進行呼叫時指定的參數而定。</span><span class="sxs-lookup"><span data-stu-id="97b12-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="97b12-114">當工作在交易中進行時，應用程式可以附加復原資訊並保留補償記錄的空間。</span><span class="sxs-lookup"><span data-stu-id="97b12-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="97b12-115">在復原作業期間，所建立的補償記錄會指出已在磁碟上復原的內容。</span><span class="sxs-lookup"><span data-stu-id="97b12-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="97b12-116">這些記錄會以先前所保留的空間完成附加。</span><span class="sxs-lookup"><span data-stu-id="97b12-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="97b12-117">如此可保證在執行復原作業時，RM 不會用完記錄檔空間 (這是很嚴重的情況)。</span><span class="sxs-lookup"><span data-stu-id="97b12-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="97b12-118">如果在異動期間記錄檔填滿了，應用程式便可以安全地回復異動，而不會損毀永久性資料。</span><span class="sxs-lookup"><span data-stu-id="97b12-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="97b12-119">CLFS 是一種與 ARIES 相容的記錄系統，適用於預寫式記錄功能。</span><span class="sxs-lookup"><span data-stu-id="97b12-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="97b12-120">進行預寫式記錄時，應用程式會先寫入復原記錄再執行作業，以在記錄檔中保留要用來寫入補償記錄 (可能會在復原期間用到) 的空間量。</span><span class="sxs-lookup"><span data-stu-id="97b12-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="97b12-121">稍後，當實際寫入補償記錄時，便會使用此保留的空間。</span><span class="sxs-lookup"><span data-stu-id="97b12-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="97b12-122">應用程式可以在任何指定時間保留或存取長空間 (它們是互斥作業)。</span><span class="sxs-lookup"><span data-stu-id="97b12-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="97b12-123">在認可記錄寫入記錄檔之後，應用程式就可以釋放補償記錄的保留。</span><span class="sxs-lookup"><span data-stu-id="97b12-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="97b12-124">呼叫 <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> 或 <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> 方法，即可完成這個動作。</span><span class="sxs-lookup"><span data-stu-id="97b12-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="97b12-125">呼叫 <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> 方法，便會保證此作業是不可部分完成的 (Atomic)，但是呼叫 <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> 方法則無法保證此點。</span><span class="sxs-lookup"><span data-stu-id="97b12-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="97b12-126">當釋放記錄時，您必須釋放先前呼叫 <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> 方法時所同時保留的相同記錄。</span><span class="sxs-lookup"><span data-stu-id="97b12-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97b12-127">您的 <xref:System.IO.Log.IRecordSequence> 的實作必須實作 <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> 和 <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> 方法，以執行實際保留的配置和解除配置。</span><span class="sxs-lookup"><span data-stu-id="97b12-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="97b12-128">此外，您的實作也必須在記錄寫入至該保留空間時呼叫 <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A>。</span><span class="sxs-lookup"><span data-stu-id="97b12-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97b12-129">您可以透過兩種方式執行保留，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="97b12-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="97b12-130">您可以採用範例中的做法進行穩固的處理。</span><span class="sxs-lookup"><span data-stu-id="97b12-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="97b12-131">請注意，您只能在使用 CLFS 的 <xref:System.IO.Log.LogRecordSequence> 類別時執行這項工作。</span><span class="sxs-lookup"><span data-stu-id="97b12-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97b12-132">初始化 <see cref="T:System.IO.Log.ReservationCollection" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-133">所要求保留的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-133">The size of the requested reservation, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-134">配置保留，並將其新增至集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-134">Allocates a reservation and adds it to the collection.</span>
          </span>
          <span data-ttu-id="97b12-135">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-135">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97b12-136">下列範例將示範如何手動建立保留。</span><span class="sxs-lookup"><span data-stu-id="97b12-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="97b12-137">請注意，您只能在使用 CLFS 的 <xref:System.IO.Log.LogRecordSequence> 類別時執行這項工作。</span><span class="sxs-lookup"><span data-stu-id="97b12-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97b12-138">
            <paramref name="archiveTail" /> 不是介於這個順序的基底序號和最後一個序號之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-138">
              <paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97b12-139">
            <paramref name="size" /> 無效或是超過保留大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-139">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97b12-140">建立封存快照時發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-140">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-141">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-141">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-142">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-142">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-143">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-143">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="97b12-144">記錄順序已滿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-144">The record sequence is full.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97b12-145">釋放集合中所有的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-145">Releases all of the reservations in the collection.</span>
          </span>
          <span data-ttu-id="97b12-146">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-146">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97b12-147">
            <paramref name="size" /> 無效或是超過保留大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-147">
              <paramref name="size" /> is invalid or exceeds maximum reservation size.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97b12-148">建立封存快照時發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-148">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-149">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-149">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-150">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-150">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="97b12-151">記錄順序已滿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-151">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-152">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-152">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-153">要在集合中尋找的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-153">The size to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-154">判斷是否已建立指定大小的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-154">Determines whether a reservation of the specified size has been made.</span>
          </span>
          <span data-ttu-id="97b12-155">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-155">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97b12-156">如果已建立至少一個指定大小的保留，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-156">
              <see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-157">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-157">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-158">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-158">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-159">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-159">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="97b12-160">做為複製之目的地的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-160">The array that is the destination of the copy.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="97b12-161">陣列中以零為起始的索引，而且複製會從該位置開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-161">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-162">從目標陣列的指定索引開始，將整個集合複製到一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span>
          </span>
          <span data-ttu-id="97b12-163">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-163">This method cannot be inherited.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="97b12-164">
            <paramref name="array" /> 或 <paramref name="arrayIndex" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-164">
              <paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="97b12-165">
            <paramref name="arrayIndex" /> 小於零，或大於或等於 <paramref name="array" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-165">
              <paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97b12-166">指定要複製資料的陣列空間不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-166">There is not enough space in the specified array to copy the data.</span>
          </span>
          <span data-ttu-id="97b12-167">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-167">-or-</span>
          </span>
          <span data-ttu-id="97b12-168">
            <paramref name="array" /> 不是單一維度陣列，單一維度陣列是所要求動作唯一支援的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-168">
              <paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-169">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-169">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-170">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-170">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-171">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-171">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97b12-172">取得此集合中的保留數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-172">Gets the number of reservations in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97b12-173">集合中的保留數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-173">The number of reservations in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97b12-174">允許 <see cref="T:System.IO.Log.ReservationCollection" /> 在由記憶體回收行程終結之前釋放資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-174">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-175">要釋放的保留區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-175">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-176">在衍生類別中覆寫時，釋放指定大小的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-176">When overridden in a derived class, releases a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="97b12-177">
            <para>當您繼承自<see cref="T:System.IO.Log.ReservationCollection" />，您必須實作這個方法，以實際釋放記錄順序中的空間。您不應該在這個方法完成時呼叫 <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />；該邏輯會為您處理。當您釋放記錄時，您必須釋放記錄相同，同時保留先前呼叫<see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-177">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.  When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-178">必須符合的保留大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-178">The size of the reservation that must be fit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-179">在衍生類別中覆寫時，取得最符合指定大小的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-179">When overridden in a derived class, gets the best matching reservation for a given size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97b12-180">在集合中大於或等於指定大小的保留，如果沒有此類保留區時，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-180">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97b12-181">從保留的空間將記錄附加到記錄順序時，通常會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="97b12-181">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="97b12-182">當它傳回時，便會從集合中移除傳回大小的保留區。</span><span class="sxs-lookup"><span data-stu-id="97b12-182">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="97b12-183">如果因故而實際上未存取保留的空間時，則應呼叫 <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> 方法以確保 <xref:System.IO.Log.ReservationCollection> 可精確表示記錄順序中的保留空間數量。</span><span class="sxs-lookup"><span data-stu-id="97b12-183">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97b12-184">傳回可以用來逐一查看 <see cref="T:System.IO.Log.ReservationCollection" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-184">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="97b12-185">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-185">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97b12-186">可以逐一查看 <see cref="T:System.IO.Log.ReservationCollection" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-186">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="97b12-187">因為下列其中一個原因而導致作業無效：</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-187">The operation is invalid for one of the following reasons:</span>
          </span>
          <span data-ttu-id="97b12-188">-   列舉已經結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-188">-   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="97b12-189">-   集合已經過修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-189">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="97b12-190">-   列舉尚未啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-190">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="97b12-191">必須呼叫 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-191">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-192">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-192">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-193">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-193">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-194">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-194">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97b12-195">取得值，這個值表示集合是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-195">Gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97b12-196">這個屬性永遠會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-196">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97b12-197"><xref:System.IO.Log.ReservationCollection> 絕對不是唯讀。</span><span class="sxs-lookup"><span data-stu-id="97b12-197">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-198">要配置的保留大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-198">The size of the reservation to allocate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-199">在衍生類別中覆寫時，配置指定大小的保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-199">When overridden in a derived class, allocates a reservation of the specified size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="97b12-200">
            <para>當您繼承自<see cref="T:System.IO.Log.ReservationCollection" />，您必須實作這個方法，以實際保留記錄順序中的空間。您不應該呼叫<see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />當這個方法完成時，會為您處理邏輯。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-200">
              <para>When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence. You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="97b12-201">要釋放的保留區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-201">The size of the reservation to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-202">釋放指定大小的保留，如果有建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-202">Releases a reservation of the specified size, if one has been made.</span>
          </span>
          <span data-ttu-id="97b12-203">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-203">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97b12-204">如果已找到並移除指定大小的保留，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-204">
              <see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97b12-205">下列範例將示範如何手動建立保留。</span><span class="sxs-lookup"><span data-stu-id="97b12-205">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="97b12-206">請注意，您只能在使用 CLFS 的 <xref:System.IO.Log.LogRecordSequence> 類別時執行這項工作。</span><span class="sxs-lookup"><span data-stu-id="97b12-206">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="97b12-207">在指定的保留集合中，找不到符合所提供之記錄的保留大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-207">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="97b12-208">建立封存快照時發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-208">An I/O error occurs when creating the archive snapshot.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-209">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-209">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-210">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-210">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="97b12-211">記錄順序已滿。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-211">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-212">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-212">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-213">已釋放的保留大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-213">The size of the reservation that has been released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-214">在衍生類別中覆寫時，指出已釋放保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-214">When overridden in a derived class, indicates that a reservation has been released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97b12-215">當您繼承自 <xref:System.IO.Log.ReservationCollection> 時，如果保留的釋放原因並不是它已從集合移除，這時您必須呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="97b12-215">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="97b12-216">已建立的保留大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-216">The size of the reservation that has been made.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97b12-217">在衍生類別中覆寫時，指出已建立保留。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-217">When overridden in a derived class, indicates that a reservation has been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97b12-218">當您繼承自<xref:System.IO.Log.ReservationCollection>，保留項目進行外部呼叫時，您必須呼叫這個方法<xref:System.IO.Log.ReservationCollection.Add%2A>。</span><span class="sxs-lookup"><span data-stu-id="97b12-218">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97b12-219">傳回可以用來逐一查看 <see cref="T:System.IO.Log.ReservationCollection" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-219">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
          <span data-ttu-id="97b12-220">這個方法無法被繼承。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-220">This method cannot be inherited.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="97b12-221">可以逐一查看 <see cref="T:System.IO.Log.ReservationCollection" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-221">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="97b12-222">因為下列其中一個原因而導致作業無效：</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-222">The operation is invalid for one of the following reasons:</span>
          </span>
          <span data-ttu-id="97b12-223">-   列舉已經結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-223">-   The enumeration has ended.</span>
          </span>
          <span data-ttu-id="97b12-224">-   集合已經過修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-224">-   The collection has been modified.</span>
          </span>
          <span data-ttu-id="97b12-225">-   列舉尚未啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-225">-   The enumeration has not been started.</span>
          </span>
          <span data-ttu-id="97b12-226">必須呼叫 <see cref="M:System.Collections.IEnumerator.MoveNext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-226">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="97b12-227">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-227">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="97b12-228">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-228">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="97b12-229">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="97b12-229">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>