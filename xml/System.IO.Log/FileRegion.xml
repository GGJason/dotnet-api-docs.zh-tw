<Type Name="FileRegion" FullName="System.IO.Log.FileRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a060b3e8bf8cf5eff816618c88c043998848cb5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37759148" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRegion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRegion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRegion sealed" />
  <TypeSignature Language="F#" Value="type FileRegion = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2c921-101">表示要封存之檔案的區域。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c921-101">Represents a region of a file to be archived.</span>
      </span>
      <span data-ttu-id="2c921-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c921-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c921-103"><xref:System.IO.Log.LogArchiveSnapshot> 物件含有在 <xref:System.IO.Log.LogStore> 中產生一致的資料備份所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="2c921-103">A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="2c921-104">實際的資料會包含在 <xref:System.IO.Log.FileRegion> 屬性傳回之 <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> 物件的可列舉集合中。</span><span class="sxs-lookup"><span data-stu-id="2c921-104">The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property.</span></span> <span data-ttu-id="2c921-105">每個 <xref:System.IO.Log.FileRegion> 執行個體代表必須封存之檔案中的位元組序列。</span><span class="sxs-lookup"><span data-stu-id="2c921-105">Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c921-106">下列範例將示範如何使用 <xref:System.IO.Log.LogStore> 和 <xref:System.IO.Log.FileRegion> 類別，將記錄存放區封存至 XML。</span><span class="sxs-lookup"><span data-stu-id="2c921-106">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FileLength">
      <MemberSignature Language="C#" Value="public long FileLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FileLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.FileLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FileLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FileLength : int64" Usage="System.IO.Log.FileRegion.FileLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c921-107">取得檔案的長度 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-107">Gets the length of the file in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c921-108">檔案的長度 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-108">The length of the file in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c921-109">這個屬性會傳回整個檔案的長度，而非檔案中單一區域的長度。</span><span class="sxs-lookup"><span data-stu-id="2c921-109">This property returns the length of the entire file instead of that of a single region in the file.</span></span> <span data-ttu-id="2c921-110">您可以檢查 <xref:System.IO.Log.LogStore.Length%2A> 方法傳回之資料流的 <xref:System.IO.Log.FileRegion.GetStream%2A> 屬性，以得知檔案中區域的長度。</span><span class="sxs-lookup"><span data-stu-id="2c921-110">The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c921-111">下列範例將示範如何使用 <xref:System.IO.Log.LogStore> 和 <xref:System.IO.Log.FileRegion> 類別，將記錄存放區封存至 XML。</span><span class="sxs-lookup"><span data-stu-id="2c921-111">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRegion.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="fileRegion.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c921-112">傳回資料流，此資料流可以用於讀取要封存的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-112">Returns a stream that can be used to read the data to be archived.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c921-113">包含要封存之資料的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-113">A stream that contains the data to be archived.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c921-114">下列範例將示範如何使用 <xref:System.IO.Log.LogStore> 和 <xref:System.IO.Log.FileRegion> 類別，將記錄存放區封存至 XML。</span><span class="sxs-lookup"><span data-stu-id="2c921-114">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2c921-115">由於意外的 I/O 例外狀況，所以無法執行要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-115">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2c921-116">不支援此作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-116">The operation is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2c921-117">已在處置序列之後呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-117">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="2c921-118">沒有足夠的記憶體可以繼續執行程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-118">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2c921-119">存取指定的記錄存放區遭作業系統拒絕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-119">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.IO.Log.FileRegion.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c921-120">取得檔案中資料起始位置的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-120">Gets the offset into the file where the data begins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c921-121">檔案中資料起始位置的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-121">The offset into the file where the data begins.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c921-122">下列範例將示範如何使用 <xref:System.IO.Log.LogStore> 和 <xref:System.IO.Log.FileRegion> 類別，將記錄存放區封存至 XML。</span><span class="sxs-lookup"><span data-stu-id="2c921-122">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.IO.Log.FileRegion.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c921-123">取得含有此區域之檔案的完整位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-123">Gets the fully qualified location of the file containing this region.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c921-124">含有此區域之檔案的完整位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c921-124">The fully qualified location of the file containing this region.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c921-125">下列範例將示範如何使用 <xref:System.IO.Log.LogStore> 和 <xref:System.IO.Log.FileRegion> 類別，將記錄存放區封存至 XML。</span><span class="sxs-lookup"><span data-stu-id="2c921-125">The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.</span></span>  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>