<Type Name="LogExtent" FullName="System.IO.Log.LogExtent">
  <TypeSignature Language="C#" Value="public sealed class LogExtent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogExtent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogExtent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogExtent" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogExtent sealed" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="058ce-101">代表包含記錄檔資料的延伸磁碟區。</span><span class="sxs-lookup"><span data-stu-id="058ce-101">Represents a disk extent that contains log data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="058ce-102"><xref:System.IO.Log.LogStore> 執行個體會將它的資料儲存在 <xref:System.IO.Log.LogExtent> 執行個體所代表的延伸磁碟區集合中。</span><span class="sxs-lookup"><span data-stu-id="058ce-102">A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances.</span></span> <span data-ttu-id="058ce-103">特定 <xref:System.IO.Log.LogExtent> 只會與一個 <xref:System.IO.Log.LogStore> 相關聯，而且在同一個 <xref:System.IO.Log.LogExtent> 中的 <xref:System.IO.Log.LogStore> 物件的大小都相同。</span><span class="sxs-lookup"><span data-stu-id="058ce-103">A particular <xref:System.IO.Log.LogExtent> is associated with exactly one <xref:System.IO.Log.LogStore>, and <xref:System.IO.Log.LogExtent> objects in the same <xref:System.IO.Log.LogStore> are of identical size.</span></span> <span data-ttu-id="058ce-104">在 <xref:System.IO.Log.LogStore> 執行個體中新增及移除空間時，將會以延伸區的倍數來進行。</span><span class="sxs-lookup"><span data-stu-id="058ce-104">Space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments.</span></span>  
  
 <span data-ttu-id="058ce-105">雖然 <xref:System.IO.Log.LogExtent> 物件會在磁碟上以檔案形式表示，但是您不可以將它們當做一般的檔案來移動或刪除。</span><span class="sxs-lookup"><span data-stu-id="058ce-105">Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files.</span></span> <span data-ttu-id="058ce-106">若要刪除 <xref:System.IO.Log.LogExtent> 執行個體，請從它所在的 <xref:System.IO.Log.LogExtentCollection> 中進行移除。</span><span class="sxs-lookup"><span data-stu-id="058ce-106">To delete a <xref:System.IO.Log.LogExtent> instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="058ce-107">這個範例將示範如何使用 <xref:System.IO.Log.LogExtent> 類別，在記錄順序中新增及模擬延伸區。</span><span class="sxs-lookup"><span data-stu-id="058ce-107">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Log.LogExtentCollection" />
    <altmember cref="T:System.IO.Log.LogStore" />
  </Docs>
  <Members>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="058ce-108">取得這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="058ce-108">Gets the fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></summary>
        <value><span data-ttu-id="058ce-109">這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="058ce-109">The fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="058ce-110">雖然 <xref:System.IO.Log.LogExtent> 物件會在磁碟上以檔案形式表示，但是您不可以將它們當做一般的檔案來移動或刪除。</span><span class="sxs-lookup"><span data-stu-id="058ce-110">Although <xref:System.IO.Log.LogExtent> objects are represented on disk as files, they should not be moved or deleted as normal files.</span></span> <span data-ttu-id="058ce-111">若要刪除 <xref:System.IO.Log.LogExtent> 執行個體，請從它所在的 <xref:System.IO.Log.LogExtentCollection> 中進行移除。</span><span class="sxs-lookup"><span data-stu-id="058ce-111">To delete a <xref:System.IO.Log.LogExtent> instance, remove it from the <xref:System.IO.Log.LogExtentCollection> that contains it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="058ce-112">這個範例將示範如何使用 <xref:System.IO.Log.LogExtent> 類別，在記錄順序中新增及模擬延伸區。</span><span class="sxs-lookup"><span data-stu-id="058ce-112">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public long Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Size" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Size { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="058ce-113">取得這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="058ce-113">Gets the size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="058ce-114">這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="058ce-114">The size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="058ce-115">這個範例將示範如何使用 <xref:System.IO.Log.LogExtent> 類別，在記錄順序中新增及模擬延伸區。</span><span class="sxs-lookup"><span data-stu-id="058ce-115">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogExtentState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.LogExtentState State" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As LogExtentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::LogExtentState State { System::IO::Log::LogExtentState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogExtentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="058ce-116">取得這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的狀態。</span><span class="sxs-lookup"><span data-stu-id="058ce-116">Gets the state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></summary>
        <value><span data-ttu-id="058ce-117">這個 <see cref="T:System.IO.Log.LogExtent" /> 執行個體的狀態。</span><span class="sxs-lookup"><span data-stu-id="058ce-117">The state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="058ce-118">這個範例將示範如何使用 <xref:System.IO.Log.LogExtent> 類別，在記錄順序中新增及模擬延伸區。</span><span class="sxs-lookup"><span data-stu-id="058ce-118">This example shows how to use the <xref:System.IO.Log.LogExtent> class to add and emulate extents in a log sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>