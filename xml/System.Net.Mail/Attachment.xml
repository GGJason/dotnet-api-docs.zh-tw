<Type Name="Attachment" FullName="System.Net.Mail.Attachment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07139a408f38c99a7b673fff9f86b9508b6329d6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37646181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Attachment : System.Net.Mail.AttachmentBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Attachment extends System.Net.Mail.AttachmentBase" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.Attachment" />
  <TypeSignature Language="VB.NET" Value="Public Class Attachment&#xA;Inherits AttachmentBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Attachment : System::Net::Mail::AttachmentBase" />
  <TypeSignature Language="F#" Value="type Attachment = class&#xA;    inherit AttachmentBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Mail.AttachmentBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示電子郵件的附件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.Attachment>類別會搭配<xref:System.Net.Mail.MailMessage>類別。 所有的訊息包括<xref:System.Net.Mail.MailMessage.Body%2A>，其中包含訊息的內容。 除了本文中，您可能想要將其他檔案傳送。 這些會當成附件來傳送，並表示為<xref:System.Net.Mail.Attachment>執行個體。 若要新增的電子郵件訊息的附件，將它加入<xref:System.Net.Mail.MailMessage.Attachments?displayProperty=nameWithType>集合。  
  
 附件內容可以是<xref:System.String>， <xref:System.IO.Stream>，或檔案名稱。 您也可以使用的任何附件中指定內容<xref:System.Net.Mail.Attachment.%23ctor%2A>建構函式。  
  
 附件的 MIME 內容類型標頭資訊由<xref:System.Net.Mail.AttachmentBase.ContentType%2A>屬性。 Content-type 標頭指定的媒體類型和子型別以及任何相關聯的參數。 使用<xref:System.Net.Mail.AttachmentBase.ContentType%2A>取得附件相關聯的執行個體。  
  
 MIME 內容配置標頭由<xref:System.Net.Mail.Attachment.ContentDisposition%2A>屬性。 內容配置標頭會指定在展示層和附件的檔案時間戳記。 附件是一個檔案時，才傳送的內容配置標頭。 使用<xref:System.Net.Mail.Attachment.ContentDisposition%2A>取得附件相關聯的執行個體的屬性。  
  
 MIME 內容傳遞編碼標頭由<xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何將檔案附加到電子郵件訊息。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : string -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <see cref="T:System.String" />，包含要用於建立這個附件的檔案路徑。</param>
        <summary>使用指定的內容字串，初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性設定，如下所示：  
  
|屬性|值|  
|--------------|-----------|  
|<xref:System.Net.Mime.ContentType.MediaType%2A>|<xref:System.Net.Mime.MediaTypeNames.Text.Plain>。|  
|<xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A>|<xref:System.Net.Mime.TransferEncoding.QuotedPrintable>。|  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileName" /> 是空的。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::Net::Mime::ContentType ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : System.IO.Stream * System.Net.Mime.ContentType -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment (contentStream, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="contentStream">可讀取的 <see cref="T:System.IO.Stream" />，包含這個附件的內容。</param>
        <param name="contentType">
          <see cref="T:System.Net.Mime.ContentType" />，描述 <c>資料流</c> 中的資料。</param>
        <summary>使用指定的資料流和內容類型，初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 屬性設定為 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果資料流的<xref:System.IO.Stream.CanSeek%2A>屬性是`false`、 附件和<xref:System.Net.Mail.MailMessage>包含它不是可重複使用。 您必須提供可重複使用附件要搜尋的資料流。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#14)]
 [!code-csharp[NclMailSync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentType" /> 為 <see langword="null" />。  或 <paramref name="contentStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentStream As Stream, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : System.IO.Stream * string -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment (contentStream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentStream">可讀取的 <see cref="T:System.IO.Stream" />，包含這個附件的內容。</param>
        <param name="name">
          <see cref="T:System.String" />，包含與這個附件關聯之 <see cref="P:System.Net.Mime.ContentType.Name" /> 的 <see cref="T:System.Net.Mime.ContentType" /> 屬性值。 這個值可以是 <see langword="null" />。</param>
        <summary>使用指定的資料流和名稱，初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`name`不是`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>("")，則<xref:System.Net.Mime.ContentType>建構這個附件的<xref:System.Net.Mime.ContentType.Name%2A>屬性設定為`name`。 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 屬性設定為 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果資料流的<xref:System.IO.Stream.CanSeek%2A>屬性是`false`、 附件和<xref:System.Net.Mail.MailMessage>包含它不是可重複使用。 您必須提供可供搜尋，以供重複使用附件的資料流。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName, System::Net::Mime::ContentType ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : string * System.Net.Mime.ContentType -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment (fileName, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <see cref="T:System.String" />，包含要用於建立這個附件的檔案路徑。</param>
        <param name="contentType">
          <see cref="T:System.Net.Mime.ContentType" />，描述 <c>字串</c> 中的資料。</param>
        <summary>使用指定的內容字串和 <see cref="T:System.Net.Mail.Attachment" />，初始化 <see cref="T:System.Net.Mime.ContentType" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="mediaType" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (string fileName, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, mediaType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::String ^ fileName, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : string * string -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment (fileName, mediaType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <see cref="T:System.String" />，包含這個附件的內容。</param>
        <param name="mediaType">
          <see cref="T:System.String" />，包含這個附件的 MIME 內容標頭資訊。 這個值可以是 <see langword="null" />。</param>
        <summary>使用指定的內容字串和 MIME 類型資訊，初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mediaType`已`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>("")，則<xref:System.Net.Mime.ContentType.MediaType%2A>這個附件的屬性設定為<xref:System.Net.Mime.MediaTypeNames.Text.Plain>。 如果`mediaType`不是`null`並不是零長度字串，它用來建構<xref:System.Net.Mime.ContentType>與這個附件關聯。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#12)]
 [!code-csharp[NclMailSync#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachment (System.IO.Stream contentStream, string name, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream contentStream, string name, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentStream As Stream, name As String, mediaType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Attachment(System::IO::Stream ^ contentStream, System::String ^ name, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.Attachment : System.IO.Stream * string * string -&gt; System.Net.Mail.Attachment" Usage="new System.Net.Mail.Attachment (contentStream, name, mediaType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentStream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentStream">可讀取的 <see cref="T:System.IO.Stream" />，包含這個附件的內容。</param>
        <param name="name">
          <see cref="T:System.String" />，包含與這個附件關聯之 <see cref="P:System.Net.Mime.ContentType.Name" /> 的 <see cref="T:System.Net.Mime.ContentType" /> 屬性值。 這個值可以是 <see langword="null" />。</param>
        <param name="mediaType">
          <see cref="T:System.String" />，包含這個附件的 MIME 內容標頭資訊。 這個值可以是 <see langword="null" />。</param>
        <summary>使用指定的資料流、名稱和 MIME 類型資訊，初始化 <see cref="T:System.Net.Mail.Attachment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mediaType`不是`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>("")，它用來建構<xref:System.Net.Mime.ContentType>與這個附件關聯的類別。  
  
 如果`mediaType`並`name`同時包含<xref:System.Net.Mime.ContentType.Name%2A>資訊、 指定的值`name`用。 <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> 屬性設定為 <xref:System.Net.Mime.TransferEncoding.Base64>。  
  
 如果資料流的<xref:System.IO.Stream.CanSeek%2A>屬性是`false`、 附件和<xref:System.Net.Mail.MailMessage>包含它不是可重複使用。 您必須提供可供搜尋，以供重複使用附件的資料流。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#16)]
 [!code-csharp[NclMailSync#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="mediaType" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentDisposition">
      <MemberSignature Language="C#" Value="public System.Net.Mime.ContentDisposition ContentDisposition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mime.ContentDisposition ContentDisposition" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.ContentDisposition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentDisposition As ContentDisposition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::ContentDisposition ^ ContentDisposition { System::Net::Mime::ContentDisposition ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentDisposition : System.Net.Mime.ContentDisposition" Usage="System.Net.Mail.Attachment.ContentDisposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.ContentDisposition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個附件的 MIME 內容配置。</summary>
        <value>
          <see cref="T:System.Net.Mime.ContentDisposition" />，提供這個附件的展示資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的資訊<xref:System.Net.Mime.ContentDisposition>類別表示的 MIME 內容配置標頭。 此標頭所述 RFC 2183，網址[ https://www.ietf.org/ ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例取得<xref:System.Net.Mime.ContentDisposition>附件，並顯示其屬性。  
  
 [!code-cpp[NclMailSync#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#11)]
 [!code-csharp[NclMailSync#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAttachmentFromString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從字串建立附件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, System.Net.Mime.ContentType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, class System.Net.Mime.ContentType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::Net::Mime::ContentType ^ contentType);" />
      <MemberSignature Language="F#" Value="static member CreateAttachmentFromString : string * System.Net.Mime.ContentType -&gt; System.Net.Mail.Attachment" Usage="System.Net.Mail.Attachment.CreateAttachmentFromString (content, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.Net.Mime.ContentType" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.String" />，包含這個附件的內容。</param>
        <param name="contentType">
          <see cref="T:System.Net.Mime.ContentType" /> 物件，表示要使用的多用途網際網路郵件交換 (Multipurpose Internet Mail Exchange，MIME) 通訊協定內容類型標頭。</param>
        <summary>使用指定字串中的內容，以及指定的 <see cref="T:System.Net.Mime.ContentType" />，建立郵件附件。</summary>
        <returns>
          <see cref="T:System.Net.Mail.Attachment" /> 類型的物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAttachmentFromString (content As String, name As String) As Attachment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateAttachmentFromString : string * string -&gt; System.Net.Mail.Attachment" Usage="System.Net.Mail.Attachment.CreateAttachmentFromString (content, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.String" />，包含這個附件的內容。</param>
        <param name="name">與這個附件關聯之內容類型中的 MIME 內容類型名稱值。</param>
        <summary>使用指定字串中的內容，以及指定的 MIME 內容類型名稱，建立郵件附件。</summary>
        <returns>
          <see cref="T:System.Net.Mail.Attachment" /> 類型的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果內容是以 ASCII 格式則的字元編碼會設定為 ASCII。 針對其他所有格式，字元編碼方式是設定為 utf-8。 預設媒體類型是純文字。  
  
 如果內容不是以 ASCII 格式編碼為 null，會使用 utf-8 編碼。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttachmentFromString">
      <MemberSignature Language="C#" Value="public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name, System.Text.Encoding contentEncoding, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Mail.Attachment CreateAttachmentFromString(string content, string name, class System.Text.Encoding contentEncoding, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAttachmentFromString (content As String, name As String, contentEncoding As Encoding, mediaType As String) As Attachment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Mail::Attachment ^ CreateAttachmentFromString(System::String ^ content, System::String ^ name, System::Text::Encoding ^ contentEncoding, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateAttachmentFromString : string * string * System.Text.Encoding * string -&gt; System.Net.Mail.Attachment" Usage="System.Net.Mail.Attachment.CreateAttachmentFromString (content, name, contentEncoding, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.Attachment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.String" />，包含這個附件的內容。</param>
        <param name="name">與這個附件關聯之內容類型中的 MIME 內容類型名稱值。</param>
        <param name="contentEncoding">
          <see cref="T:System.Text.Encoding" />。 這個值可以是 <see langword="null" />。</param>
        <param name="mediaType">
          <see cref="T:System.String" />，包含這個附件的 MIME 內容標頭資訊。 這個值可以是 <see langword="null" />。</param>
        <summary>使用指定字串中的內容、指定的 MIME 內容類型名稱、字元編碼方式，以及附件的 MIME 標頭資訊，建立郵件附件。</summary>
        <returns>
          <see cref="T:System.Net.Mail.Attachment" /> 類型的物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Net.Mail.Attachment.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與這個附件關聯之內容類型中的 MIME 內容類型名稱值。</summary>
        <value>
          <see cref="T:System.String" />，包含內容類型 <paramref name="name" /> 的值，而且該內容類型是由 <see cref="P:System.Net.Mime.ContentType.Name" /> 屬性表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.Attachment.Name%2A>產生這個附件的內容類型標頭中使用的屬性。 <xref:System.Net.Mail.Attachment.Name%2A>收到有附件的電子郵件時，會顯示為附件的名稱。 詳細說明 Content-type 標頭語法的文法是在 RFC 2045 5.1 節中所述。 RFC 2046 提供有關 MIME 媒體類型和其參數的詳細的資訊。 這些 Rfc 位於[ https://www.ietf.org/ ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例示範如何顯示附件的相關資訊。  
  
 [!code-cpp[NclMailSync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#19)]
 [!code-csharp[NclMailSync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">為設定作業指定的值為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">為設定作業指定的值是 <see cref="F:System.String.Empty" /> ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="NameEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding NameEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding NameEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.Attachment.NameEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property NameEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ NameEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.Attachment.NameEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Net.Mail.Attachment" /><see cref="P:System.Net.Mail.Attachment.Name" /> 的編碼方式。</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> 值，指定名稱編碼方式的型別。 預設值由附件的名稱決定。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>