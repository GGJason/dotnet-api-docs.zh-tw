<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9831c8e1399f8987976ca2033dfbd2e5adacd5d5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709678" /></Metadata><TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class MailMessage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailMessage : IDisposable" />
  <TypeSignature Language="F#" Value="type MailMessage = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示可以使用 <see cref="T:System.Net.Mail.SmtpClient" /> 類別傳送的電子郵件訊息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行個體<xref:System.Net.Mail.MailMessage>類別用來建構電子郵件訊息傳送給 SMTP 伺服器進行傳遞使用<xref:System.Net.Mail.SmtpClient>類別。  
  
 寄件者、 收件者、 主旨和電子郵件訊息本文可能會做為參數指定當<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。 這些參數也可以設定，或使用上的屬性存取<xref:System.Net.Mail.MailMessage>物件。  
  
 主要的郵件訊息標頭和訊息的項目可能會設定使用的下列屬性<xref:System.Net.Mail.MailMessage>類別。  
  
|郵件標頭或組件|屬性|  
|-------------------------|--------------|  
|附件|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|密件副本 (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|密件副本 (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|自訂標頭的編碼方式|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|訊息內文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先權|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|收件者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|回覆至|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|寄件者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|主旨|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 <xref:System.Net.Mail.MailMessage>類別也可讓應用程式存取訊息使用的標頭集合<xref:System.Net.Mail.MailMessage.Headers%2A>屬性。 雖然這個集合是唯讀的 （新的集合可以不設定），自訂標頭可以加入或刪除從這個集合。 新增任何自訂標頭會包含當<xref:System.Net.Mail.MailMessage>傳送執行個體。 在傳送訊息之前，只有標頭特別加入至這個集合中<xref:System.Net.Mail.MailMessage.Headers%2A>屬性會包含在集合中。 之後<xref:System.Net.Mail.MailMessage>傳送執行個體時，<xref:System.Net.Mail.MailMessage.Headers%2A>屬性也會包含使用相關聯的屬性設定標頭<xref:System.Net.Mail.MailMessage>類別或參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。  
  
 如果某些郵件標頭格式不正確，它們可能會導致損毀的電子郵件訊息。 因此任何可以使用屬性上設定之標頭集合中的郵件標頭<xref:System.Net.Mail.MailMessage>類別應該只能使用來設定<xref:System.Net.Mail.MailMessage>類別屬性，或做為參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>初始化<xref:System.Net.Mail.MailMessage>物件。 下列清單中的郵件標頭不應新增使用<xref:System.Net.Mail.MailMessage.Headers%2A>屬性，且任何值設定為使用這些標頭<xref:System.Net.Mail.MailMessage.Headers%2A>屬性將會捨棄或覆寫在傳送訊息時：  
  
-   Bcc  
  
-   Cc  
  
-   Content-ID  
  
-   Content-Location  
  
-   Content-Transfer-Encoding  
  
-   Content-Type  
  
-   日期  
  
-   從  
  
-   重要性  
  
-   MIME 版本  
  
-   優先權  
  
-   回覆至  
  
-   寄件者  
  
-   以  
  
-   X 優先順序  
  
 如果應用程式未指定使用您建立 X 寄件者標頭<xref:System.Net.Mail.MailMessage.Headers%2A>屬性，<xref:System.Net.Mail.MailMessage>在傳送訊息時，類別會建立一個。  
  
 使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A>屬性來指定不同格式的電子郵件訊息的複本。 比方說，如果您以 HTML 傳送一則訊息，也可能會想要提供純文字版本，如果使用電子郵件無法顯示 HTML 內容的讀取器部分收件者。 如需示範如何使用替代的檢視建立一則訊息的範例，請參閱<xref:System.Net.Mail.MailMessage.AlternateViews%2A>。  
  
 使用<xref:System.Net.Mail.MailMessage.Attachments%2A>將附件新增至電子郵件訊息的屬性。 如需示範如何建立訊息與附件的範例，請參閱<xref:System.Net.Mail.MailMessage.Attachments%2A>。  
  
 之後組合您的電子郵件訊息時，您可以傳送使用它<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立及傳送電子郵件訊息，其中包含附件。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.MailMessage" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.MailMessage" /> 類別的空執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從設定 mailSettings 的網路項目中的值為[&lt;smtp&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)，如果有的話。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As MailAddress, to As MailAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::Net::Mail::MailAddress ^ from, System::Net::Mail::MailAddress ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : System.Net.Mail.MailAddress * System.Net.Mail.MailAddress -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from"><see cref="T:System.Net.Mail.MailAddress" />，包含電子郵件訊息寄件者的地址。</param>
        <param name="to"><see cref="T:System.Net.Mail.MailAddress" />，包含電子郵件訊息收件者的地址。</param>
        <summary>使用指定的 <see cref="T:System.Net.Mail.MailMessage" /> 類別物件，初始化 <see cref="T:System.Net.Mail.MailAddress" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A>屬性會初始化使用`from`並<xref:System.Net.Mail.MailMessage.To%2A>屬性會初始化使用`to`。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="to" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> 或 <paramref name="to" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from"><see cref="T:System.String" />，包含電子郵件訊息寄件者的地址。</param>
        <param name="to"><see cref="T:System.String" />，包含電子郵件訊息收件者的地址。 必須使用逗號字元 (",") 分隔多個電子郵件地址。</param>
        <summary>使用指定的 <see cref="T:System.Net.Mail.MailMessage" /> 類別物件，初始化 <see cref="T:System.String" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A>屬性會初始化使用`from`並<xref:System.Net.Mail.MailMessage.To%2A>屬性會初始化使用`to`。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="to" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> 為 <see cref="F:System.String.Empty" /> ("")。  
  
-或- 
 <paramref name="to" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> 或 <paramref name="to" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String, subject As String, body As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string * string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to, subject, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from"><see cref="T:System.String" />，包含電子郵件訊息寄件者的地址。</param>
        <param name="to"><see cref="T:System.String" />，包含電子郵件訊息收件者的地址。 必須使用逗號字元 (",") 分隔多個電子郵件地址。</param>
        <param name="subject"><see cref="T:System.String" />，包含主旨文字。</param>
        <param name="body"><see cref="T:System.String" />，包含訊息主體。</param>
        <summary>初始化 <see cref="T:System.Net.Mail.MailMessage" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新屬性<xref:System.Net.Mail.MailMessage>物件會初始化，如下所示：  
  
|參數|屬性|  
|---------------|--------------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|`to`|<xref:System.Net.Mail.MailMessage.To%2A>|  
|`subject`|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
|`body`|<xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 根據預設的主旨和內容會假設使用預設的編碼方式根據本機電腦的設定。 使用<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>和<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>屬性來指定不同的編碼方式。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="to" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> 為 <see cref="F:System.String.Empty" /> ("")。  
  
-或- 
 <paramref name="to" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> 或 <paramref name="to" /> 的格式不正確。</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternateViews As AlternateViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AlternateViewCollection ^ AlternateViews { System::Net::Mail::AlternateViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternateViews : System.Net.Mail.AlternateViewCollection" Usage="System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得附件集合，用於儲存訊息主體的替代格式。</summary>
        <value>可寫入的 <see cref="T:System.Net.Mail.AlternateViewCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A>屬性來指定不同格式的電子郵件訊息的複本。 比方說，如果您以 HTML 傳送一則訊息，也可能會想要提供純文字版本，如果使用電子郵件無法顯示 HTML 內容的讀取器部分收件者。  
  
 若要加入至替代的檢視<xref:System.Net.Mail.MailMessage>物件，請建立<xref:System.Net.Mail.Attachment>檢視，然後將它新增至所傳回的集合<xref:System.Net.Mail.MailMessage.AlternateViews%2A>。 使用 <xref:System.Net.Mail.MailMessage.Body%2A>屬性設為指定的文字版本，並使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A>集合，以指定其他的 MIME 類型的檢視。 使用<xref:System.Net.Mime.MediaTypeNames>類別來指定替代的檢視的 MIME 類型的成員。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立及傳送電子郵件訊息使用純文字和 HTML 的替代檢視。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As AttachmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AttachmentCollection ^ Attachments { System::Net::Mail::AttachmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Net.Mail.AttachmentCollection" Usage="System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得附件集合，用於儲存附加到這個電子郵件訊息的資料。</summary>
        <value>可寫入的 <see cref="T:System.Net.Mail.AttachmentCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用所傳回的集合<xref:System.Net.Mail.MailMessage.Attachments%2A>屬性來新增附件，例如檔案或內容<xref:System.IO.Stream>，這個<xref:System.Net.Mail.MailMessage>。  
  
 建立<xref:System.Net.Mail.Attachment>，包含或參考的資料連接，然後再新增<xref:System.Net.Mail.Attachment>所傳回的集合以<xref:System.Net.Mail.MailMessage.Attachments%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立及傳送電子郵件與附件。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bcc As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ Bcc { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bcc : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得地址集合，其中包含這個電子郵件訊息的密件副本 (BCC) 收件者。</summary>
        <value>可寫入的 <see cref="T:System.Net.Mail.MailAddressCollection" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要新增到電子郵件的密件副本收件者，建立<xref:System.Net.Mail.MailAddress>收件者的位址，並再將該物件加入至所傳回的集合<xref:System.Net.Mail.MailMessage.Bcc%2A>屬性。  
  
 當收件者檢視電子郵件訊息，<xref:System.Net.Mail.MailMessage.Bcc%2A>位址通常不會顯示。  
  
   
  
## Examples  
 下列程式碼範例示範如何將位址<xref:System.Net.Mail.MailMessage.Bcc%2A>地址集合。  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Body { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : string with get, set" Usage="System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定訊息主體。</summary>
        <value><see cref="T:System.String" /> 值，包含主體文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mime.ContentType>的<xref:System.Net.Mail.MailMessage.Body%2A>內容為"text/plain"。 指定主體所使用的編碼<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>屬性。  
  
 本文內容是否可提供更豐富的呈現方式選項，收件者的替代格式，您可以使用指定的內文內容的替代檢視<xref:System.Net.Mail.MailMessage.AlternateViews%2A>屬性。 例如，應用程式可能會選擇傳送純文字本文和訊息內文的 HTML 版本。 電子郵件的讀取器可以顯示 HTML 可以呈現 HTML 版本的內文的收件者，而無法顯示 HTML 的讀取器會顯示訊息的純文字版本改。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Net.Mail.MailMessage.Body%2A>屬性。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ BodyEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來對訊息主體進行編碼的編碼方式。</summary>
        <value>套用至 <see cref="T:System.Text.Encoding" /> 內容的 <see cref="P:System.Net.Mail.MailMessage.Body" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的值<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>屬性會設定內容類型標頭中的字元組的欄位。 預設字元集為`"us-ascii"`。  
  
 如果您設定<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>屬性，以<xref:System.Text.Encoding.UTF8%2A>， <xref:System.Text.Encoding.Unicode%2A>，或<xref:System.Text.Encoding.UTF32%2A>，則架構會選取<xref:System.Net.Mime.TransferEncoding>的<xref:System.Net.Mime.TransferEncoding.Base64>這個<xref:System.Net.Mail.MailMessage>。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立使用 UTF8 編碼方式的電子郵件訊息。  
  
 [!code-cpp[NclMailAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyTransferEncoding As TransferEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::TransferEncoding BodyTransferEncoding { System::Net::Mime::TransferEncoding get(); void set(System::Net::Mime::TransferEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.BodyTransferEncoding : System.Net.Mime.TransferEncoding with get, set" Usage="System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來對訊息主體進行編碼的傳輸編碼方式。</summary>
        <value>套用至 <see cref="T:System.Net.Mime.TransferEncoding" /> 內容的 <see cref="P:System.Net.Mail.MailMessage.Body" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CC As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ CC { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CC : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得地址集合，其中包含這個電子郵件訊息的副本 (CC) 收件者。</summary>
        <value>可寫入的 <see cref="T:System.Net.Mail.MailAddressCollection" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要新增至電子郵件訊息的副本收件者，建立<xref:System.Net.Mail.MailAddress>收件者的位址，然後將該物件加入至所傳回的集合<xref:System.Net.Mail.MailMessage.CC%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何將位址<xref:System.Net.Mail.MailMessage.CC%2A>地址集合。  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryNotificationOptions As DeliveryNotificationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::DeliveryNotificationOptions DeliveryNotificationOptions { System::Net::Mail::DeliveryNotificationOptions get(); void set(System::Net::Mail::DeliveryNotificationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryNotificationOptions : System.Net.Mail.DeliveryNotificationOptions with get, set" Usage="System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息的傳遞告知。</summary>
        <value><see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> 值，包含這個訊息的傳遞告知。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>釋放 <see cref="T:System.Net.Mail.MailMessage" /> 使用的資源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mailMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放 <see cref="T:System.Net.Mail.MailMessage" /> 所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您完成使用 <xref:System.Net.Mail.MailMessage.Dispose%2A> 後，請呼叫 <xref:System.Net.Mail.MailMessage> 方法。 <xref:System.Net.Mail.MailMessage.Dispose%2A> 方法會將 <xref:System.Net.Mail.MailMessage> 保留在無法使用的狀態。 之後呼叫<xref:System.Net.Mail.MailMessage.Dispose%2A>，您必須釋放所有的參考<xref:System.Net.Mail.MailMessage>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Mail.MailMessage>所佔用。 如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.Net.Mail.MailMessage.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Net.Mail.MailMessage>。  
  
   
  
## Examples  
 下列程式碼範例示範如何處置<xref:System.Net.Mail.MailMessage>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="mailMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Net.Mail.MailMessage" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。 <xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。  
  
 當`disposing`參數為 true 時，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Net.Mail.MailMessage>參考。 這個方法會叫用每個參考物件的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> 可以被其他物件呼叫多次。 當覆寫<see langword="Dispose(Boolean)" />小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。 如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</para></block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ From { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息的寄件者地址。</summary>
        <value><see cref="T:System.Net.Mail.MailAddress" />，包含寄件者地址資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從位址不會驗證或繫結至目前登入的使用者。  
  
   
  
## Examples  
 下列程式碼範例將示範如何設定的值<xref:System.Net.Mail.MailMessage.From%2A>屬性。  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個電子郵件訊息一起傳送的電子郵件標頭。</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> ，包含電子郵件標頭。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.Headers%2A>屬性可讓應用程式存取訊息的標頭集合。 雖然這個集合是唯讀的 （新的集合可以不設定），自訂標頭可以加入或刪除從這個集合。 新增任何自訂標頭會包含當<xref:System.Net.Mail.MailMessage>傳送執行個體。 在傳送訊息之前，只有標頭特別加入至這個集合中<xref:System.Net.Mail.MailMessage.Headers%2A>屬性會包含在集合中。 之後<xref:System.Net.Mail.MailMessage>傳送執行個體時，<xref:System.Net.Mail.MailMessage.Headers%2A>屬性也會包含使用相關聯的屬性設定標頭<xref:System.Net.Mail.MailMessage>類別或參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。  
  
 如果某些郵件標頭格式不正確，它們可能會導致損毀的電子郵件訊息。 因此任何可以使用屬性上設定之標頭集合中的郵件標頭<xref:System.Net.Mail.MailMessage>類別應該只能使用來設定<xref:System.Net.Mail.MailMessage>類別屬性，或做為參數傳遞時<xref:System.Net.Mail.MailMessage.%23ctor%2A>初始化<xref:System.Net.Mail.MailMessage>物件。 下列清單中的郵件標頭不應新增使用<xref:System.Net.Mail.MailMessage.Headers%2A>屬性，且任何值設定為使用這些標頭<xref:System.Net.Mail.MailMessage.Headers%2A>屬性將會捨棄或覆寫在傳送訊息時：  
  
-   Bcc  
  
-   Cc  
  
-   Content-ID  
  
-   Content-Location  
  
-   Content-Transfer-Encoding  
  
-   Content-Type  
  
-   日期  
  
-   從  
  
-   重要性  
  
-   MIME 版本  
  
-   優先權  
  
-   回覆至  
  
-   寄件者  
  
-   以  
  
-   X 優先順序  
  
 如果應用程式未指定使用您建立 X 寄件者標頭<xref:System.Net.Mail.MailMessage.Headers%2A>屬性，<xref:System.Net.Mail.MailMessage>在傳送訊息時，類別會建立一個。  
  
 寄件者、 收件者、 主旨和電子郵件訊息本文可能會做為參數指定當<xref:System.Net.Mail.MailMessage.%23ctor%2A>用來初始化<xref:System.Net.Mail.MailMessage>物件。 這些參數也可以設定，或使用上的屬性存取<xref:System.Net.Mail.MailMessage>物件。  
  
 主要的郵件訊息標頭和訊息的項目可能會設定使用的下列屬性<xref:System.Net.Mail.MailMessage>類別。  
  
|郵件標頭或組件|屬性|  
|-------------------------|--------------|  
|附件|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|密件副本 (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|密件副本 (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Content-Type|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|自訂標頭的編碼方式|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|訊息內文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先權|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|收件者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|回覆至|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|寄件者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|主旨|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示的電子郵件訊息的標頭。  
  
 [!code-cpp[NclMailSync#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeadersEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeadersEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定編碼，此編碼會用於此電子郵件訊息中的使用者定義自訂標頭。</summary>
        <value>使用者定義此電子郵件訊息的自訂標頭的編碼方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>屬性會預設為<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>。  
  
 SMTP 郵件是由標頭和本文部分所組成。 IETF Rfc smtp 限制的標頭和本文部分的名稱是 ASCII。 不過，IETF Rfc 所允許的標頭和本文部分值，以包含 Unicode 字元。 在任何特定的值，如果存在非 ASCII 字元，然後對值進行編碼使用組合的字元編碼 （UTF8 或 Shift JIS，例如） 後面接著位元組編碼 (<xref:System.Net.Mime.TransferEncoding.Base64>或<xref:System.Net.Mime.TransferEncoding.QuotedPrintable>例如)。 結果通常是只能使用 ASCII 字元會在網路傳輸資料流中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出郵件訊息主體是否採用 HTML 格式。</summary>
        <value><see langword="true" /> 如果訊息主體採用 html 格式;其他<see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息的優先權。</summary>
        <value><see cref="T:System.Net.Mail.MailPriority" />，包含這個訊息的優先權。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ ReplyTo { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定郵件訊息的 ReplyTo 地址。</summary>
        <value>MailAddress，表示 <see cref="P:System.Net.Mail.MailMessage.ReplyTo" /> 欄位的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Net.Mail.MailMessage.ReplyTo%2A>屬性，指出位址以外的其他<xref:System.Net.Mail.MailMessage.From%2A>用來回覆這封郵件的地址。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplyToList As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ ReplyToList { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToList : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得郵件訊息回覆的地址清單。</summary>
        <value>要對郵件訊息回覆時的地址清單。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Net.Mail.MailMessage.ReplyToList%2A>屬性來表示的位址清單以外的其他<xref:System.Net.Mail.MailMessage.From%2A>用來回覆這封郵件的地址。  
  
 <xref:System.Net.Mail.MailMessage.ReplyToList%2A>屬性會取代<xref:System.Net.Mail.MailMessage.ReplyTo%2A>只允許單一回覆位址的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberSignature Language="VB.NET" Value="Public Property Sender As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ Sender { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sender : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息的寄件者地址。</summary>
        <value><see cref="T:System.Net.Mail.MailAddress" />，包含寄件者的地址資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 寄件者地址未驗證或繫結至目前登入的使用者。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息的主旨。</summary>
        <value><see cref="T:System.String" />，包含主旨內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定使用主體所使用的編碼<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Net.Mail.MailMessage.Subject%2A>屬性。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ SubjectEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SubjectEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個電子郵件訊息之主旨內容所用的編碼方式。</summary>
        <value><see cref="T:System.Text.Encoding" />，用來對 <see cref="P:System.Net.Mail.MailMessage.Subject" /> 屬性進行編碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果郵件代理程式有困難的部份<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>的<xref:System.Text.Encoding.Unicode%2A>，使用<xref:System.Text.Encoding.UTF8%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Net.Mail.MailMessage.SubjectEncoding%2A>屬性。  
  
 [!code-cpp[NclMailASync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property To As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ To { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.To : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得地址集合，其中包含這個電子郵件訊息的收件者。</summary>
        <value>可寫入的 <see cref="T:System.Net.Mail.MailAddressCollection" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.To%2A>屬性用來將指定的電子郵件訊息上的位址。 若要新增到電子郵件的收件者，請建立<xref:System.Net.Mail.MailAddress>收件者的位址，並再將該物件加入至這個屬性所傳回的集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Net.Mail.MailMessage.To%2A>屬性。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
  </Members>
</Type>