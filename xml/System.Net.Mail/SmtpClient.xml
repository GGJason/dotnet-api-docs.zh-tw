<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed8ce43d1fb03376cd6b79bde7bced0e3d59109e" />
    <Meta Name="ms.sourcegitcommit" Value="996ba67625b61917bcf75bfefe6dcb016019c2d8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/02/2018" />
    <Meta Name="ms.locfileid" Value="50965522" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允許應用程式使用簡易郵件傳輸通訊協定 (SMTP) 傳送電子郵件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `System.Net.Mail.SmtpClient`類別用來傳送電子郵件給 SMTP 伺服器進行傳遞。 SMTP 通訊協定定義於 RFC 2821，位於[ https://www.ietf.org ](https://www.ietf.org/)。  

>  [!IMPORTANT]
>  我們不建議您改用`SmtpClient`開發新的類別。 如需詳細資訊，請參閱 < [SmtpClient 不應使用](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md)GitHub 上。

 下表所示的類別用來建構使用傳送的電子郵件訊息<xref:System.Net.Mail.SmtpClient>。  
  
|類別|描述|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|表示檔案附件。 這個類別可讓您將檔案、 資料流或文字附加至電子郵件訊息。|  
|<xref:System.Net.Mail.MailAddress>|表示傳送者和收件者電子郵件地址。|  
|<xref:System.Net.Mail.MailMessage>|表示電子郵件訊息。|  
  
 建構和傳送電子郵件訊息使用<xref:System.Net.Mail.SmtpClient>，您必須指定下列資訊：  
  
-   您用來傳送電子郵件的 SMTP 主機伺服器。 請參閱<xref:System.Net.Mail.SmtpClient.Host%2A>和<xref:System.Net.Mail.SmtpClient.Port%2A>屬性。  
  
-   進行驗證，如果 SMTP 伺服器所需的認證。 請參閱 <xref:System.Net.Mail.SmtpClient.Credentials%2A> 屬性。  
  
-   寄件者電子郵件地址。 請參閱<xref:System.Net.Mail.SmtpClient.Send%2A>並<xref:System.Net.Mail.SmtpClient.SendAsync%2A>採用的方法`from`參數。 另請參閱<xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType>屬性。  
  
-   電子郵件地址的收件者地址。 請參閱<xref:System.Net.Mail.SmtpClient.Send%2A>並<xref:System.Net.Mail.SmtpClient.SendAsync%2A>採用的方法`recipient`參數。 另請參閱<xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType>屬性。  
  
-   訊息內容。 請參閱<xref:System.Net.Mail.SmtpClient.Send%2A>並<xref:System.Net.Mail.SmtpClient.SendAsync%2A>採用的方法`body`參數。 另請參閱<xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType>屬性。  
  
 若要包含的電子郵件訊息的附件，請先建立附件 」 使用<xref:System.Net.Mail.Attachment>類別，並再將它新增至訊息，使用<xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType>屬性。 收件者和附件的檔案類型所使用的電子郵件讀取器，根據某些收件者可能無法讀取附件。 對於無法在其原始形式顯示附件的用戶端，您可以指定替代的檢視，使用<xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType>屬性。  
  
 在.NET Framework 中，您可以使用應用程式或電腦組態檔，以指定預設為所有的主機、 連接埠和認證值<xref:System.Net.Mail.SmtpClient>物件。 如需詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 .NET core 不支援設定預設值。 因應措施，您必須設定相關的屬性上<xref:System.Net.Mail.SmtpClient>直接。  
  
 若要等候要傳送到 SMTP 伺服器的電子郵件時傳送電子郵件訊息和區塊，使用其中一種同步<xref:System.Net.Mail.SmtpClient.Send%2A>方法。 若要允許您的程式的主執行緒繼續執行時傳送電子郵件，請使用其中一個非同步<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。 <xref:System.Net.Mail.SmtpClient.SendCompleted>就會引發事件時<xref:System.Net.Mail.SmtpClient.SendAsync%2A>作業完成。 若要收到此事件，您必須新增<xref:System.Net.Mail.SendCompletedEventHandler>委派給<xref:System.Net.Mail.SmtpClient.SendCompleted>。 <xref:System.Net.Mail.SendCompletedEventHandler>委派必須參考所處理的通知的回呼方法<xref:System.Net.Mail.SmtpClient.SendCompleted>事件。 若要取消非同步電子郵件傳輸，請使用<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>方法。  
  
> [!NOTE]
>  如果沒有進行中的電子郵件傳輸，而且您呼叫<xref:System.Net.Mail.SmtpClient.SendAsync%2A>或是<xref:System.Net.Mail.SmtpClient.Send%2A>同樣地，您會收到<xref:System.InvalidOperationException>。  
  
 建立目前執行個體的連接<xref:System.Net.Mail.SmtpClient>到 SMTP 伺服器的類別可能會重複使用，如果應用程式想要將多個訊息傳送至相同的 SMTP 伺服器。 使用驗證或加密時，這會特別有用連接到 SMTP 伺服器。 驗證和建立 TLS 工作階段的程序可能會耗費資源的作業。 需要重新建立每個訊息的連線，傳送到相同的 SMTP 伺服器的數量龐大的電子郵件時對效能有重大影響。 有一些大量電子郵件應用程式傳送電子郵件狀態更新，電子報的散發套件，或電子郵件警示。 也許多電子郵件用戶端應用程式支援離線模式，其中使用者可以撰寫許多建立 SMTP 伺服器的連接時稍後傳送的電子郵件訊息。 通常會將所有的 SMTP 訊息傳送至特定的 SMTP 伺服器 （網際網路服務提供者所提供），然後將轉送到其他的 SMTP 伺服器的這封電子郵件的電子郵件用戶端。  
  
 <xref:System.Net.Mail.SmtpClient>好讓它可以避免重新建立每個訊息至相同的伺服器連接的額外負荷 SMTP 連線集區的類別實作。 應用程式可能會重複使用相同<xref:System.Net.Mail.SmtpClient>物件，將許多不同的電子郵件傳送到相同的 SMTP 伺服器以及許多不同的 SMTP 伺服器。 如此一來，沒有任何方法來判斷應用程式完成時使用<xref:System.Net.Mail.SmtpClient>物件，而且它應該會清除。  
  
 當 SMTP 工作階段完成並在用戶端想要終止的連接時，它必須傳送至伺服器，以表示它具有任何訊息来傳送的 QUIT 訊息。 這可讓伺服器釋出與從用戶端連接相關聯的資源，並處理用戶端所傳送的訊息。  
  
 <xref:System.Net.Mail.SmtpClient>類別沒有`Finalize`方法，所以應用程式必須呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>以明確釋放資源。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法逐一查看所有已建立連接中指定的 SMTP 伺服器<xref:System.Net.Mail.SmtpClient.Host%2A>屬性並將 QUIT 訊息後面接著正常結束 TCP 連線。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法也會釋放所使用的 unmanaged 的資源<xref:System.Net.Sockets.Socket>並選擇性處置 managed 資源。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法會將 <xref:System.Net.Mail.SmtpClient> 保留在無法使用的狀態。 之後呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>，您必須釋放所有的參考<xref:System.Net.Mail.SmtpClient>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Mail.SmtpClient>所佔用。  
  
   
  
## Examples  
 下列程式碼範例示範如何以非同步方式傳送電子郵件訊息。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">以 .NET Framework 進行網路程式設計</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">網路程式設計範例</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">以 .NET Framework 進行網路追蹤</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">網路程式設計的安全性</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用組態檔設定，初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式初始化<xref:System.Net.Mail.SmtpClient.Host%2A>， <xref:System.Net.Mail.SmtpClient.Credentials%2A>，並<xref:System.Net.Mail.SmtpClient.Port%2A>新的屬性<xref:System.Net.Mail.SmtpClient>使用應用程式或電腦組態檔中的設定。 如需詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何傳送電子郵件訊息。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 如需\<mailSettings > 節點中的應用程式或電腦組態檔，請參閱[ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要建構<see cref="T:System.Net.Mail.SmtpClient" />。 關聯的列舉型別：<see cref="F:System.Net.Mail.SmtpAccess.Connect" />。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">
          <see cref="T:System.String" />，包含用於 SMTP 交易的主機電腦名稱或 IP 位址。</param>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 類別的新執行個體，該類別使用指定的 SMTP 伺服器來傳送電子郵件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host`參數用來初始化值的<xref:System.Net.Mail.SmtpClient.Host%2A>屬性。 <xref:System.Net.Mail.SmtpClient.Credentials%2A>和<xref:System.Net.Mail.SmtpClient.Port%2A>屬性會初始化使用中應用程式或電腦組態檔的設定。 如果`host`已`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>，<xref:System.Net.Mail.SmtpClient.Host%2A>初始化使用中應用程式或電腦組態檔的設定。  
  
 如需使用應用程式和電腦組態檔的詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用指定的資訊<xref:System.Net.Mail.SmtpClient>建構函式或屬性，這項資訊會覆寫組態檔設定。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要建構<see cref="T:System.Net.Mail.SmtpClient" />。 關聯的列舉型別：<see cref="F:System.Net.Mail.SmtpAccess.Connect" />。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <see cref="T:System.String" />，包含用於 SMTP 交易的主機名稱或 IP 位址。</param>
        <param name="port">大於零的 <see cref="T:System.Int32" />，包含 <c>host</c> 上要使用的連接埠。</param>
        <summary>初始化 <see cref="T:System.Net.Mail.SmtpClient" /> 類別的新執行個體，該類別使用指定的 SMTP 伺服器和連接埠來傳送電子郵件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host`並`port`的值設定參數<xref:System.Net.Mail.SmtpClient.Host%2A>和<xref:System.Net.Mail.SmtpClient.Port%2A>屬性，分別。 如果`host`已`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>，<xref:System.Net.Mail.SmtpClient.Host%2A>初始化使用中應用程式或電腦組態檔的設定。 如果`port`為零，<xref:System.Net.Mail.SmtpClient.Port%2A>初始化使用中應用程式或電腦組態檔的設定。 <xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性會初始化使用中應用程式或電腦組態檔的設定。  
  
 如需使用應用程式和電腦組態檔的詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用指定的資訊<xref:System.Net.Mail.SmtpClient>建構函式或屬性，這項資訊會覆寫組態檔設定。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> 不得小於零。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">指定的連接埠。 關聯的列舉型別：<see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定應該用來建立 Secure Sockets Layer (SSL) 連線的憑證。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />，保存一個或多個用戶端憑證。 預設值是擷取自組態檔中的郵件組態屬性 (Attribute)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用戶端憑證的是，根據預設，選擇性的。不過，將伺服器設定可能需要用戶端出示有效的憑證，做為初始連線交涉的一部分。  
  
> [!NOTE]
>  架構在建立快取的 SSL 工作階段，並嘗試盡可能重複使用快取的工作階段，對新的要求。 嘗試將重複使用的 SSL 工作階段時，架構會使用第一個項目<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>（如果有一個），或嘗試重複使用匿名的工作階段，如果<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>是空的。  
  
   
  
## Examples  
 下列的程式碼範例會建立與 SMTP 伺服器的 SSL 連線，並傳送電子郵件會使用連接。  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings 項目 （網路設定）</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來驗證寄件者的認證。</summary>
        <value>
          <see cref="T:System.Net.ICredentialsByHost" />，表示用於驗證的認證，如果未指定認證則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 部分 SMTP 伺服器要求用戶端驗證伺服器會傳送電子郵件，代替它之前。 若要使用您的預設網路認證，您可以設定<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>至`true`而不是設定這個屬性。 如果<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>屬性設定為`false,`的值的設定然後<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性將使用的認證，連接到伺服器時。 如果<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>屬性設定為`false`而<xref:System.Net.Mail.SmtpClient.Credentials%2A>未設定屬性，則郵件以匿名方式傳送到伺服器。  
  
 認證資訊也可以使用應用程式和電腦組態檔來指定。 如需詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用指定的資訊<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性，這項資訊會覆寫組態檔設定。  
  
> [!CAUTION]
>  如果您提供認證來進行基本驗證時，它們會以純文字傳送到伺服器。 這可能會有安全性問題，因為可以看出，，然後其他人使用您的認證。  
  
   
  
## Examples  
 下列程式碼範例將示範如何設定用來傳送電子郵件的認證。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">正在傳送電子郵件時，無法變更這個屬性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Net.Mail.SmtpClient" /> 用來傳送電子郵件的傳遞格式。</summary>
        <value>傳回 <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />。  
  
<see cref="T:System.Net.Mail.SmtpClient" /> 所使用的傳遞格式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定將要如何處理外送的電子郵件訊息。</summary>
        <value>
          <see cref="T:System.Net.Mail.SmtpDeliveryMethod" />，指出如何傳遞電子郵件訊息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳遞方法包括：  
  
-   SMTP 伺服器。  
  
-   請將電子郵件移至的收取目錄中，iis，後者接著會將訊息傳遞。  
  
-   將電子郵件移到指定的目錄<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>稍後傳遞另一個應用程式。  
  
 這個屬性的預設值也可以在機器中設定或應用程式組態檔。 所做的變更<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>屬性覆寫組態檔設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 QUIT 訊息傳送至 SMTP 伺服器、正常結束 TCP 連接，並且釋放 <see cref="T:System.Net.Mail.SmtpClient" /> 類別之目前執行個體所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立目前執行個體的連接<xref:System.Net.Mail.SmtpClient>到 SMTP 伺服器的類別可能會重複使用，如果應用程式想要將多個訊息傳送至相同的 SMTP 伺服器。 使用驗證或加密時，這會特別有用連接到 SMTP 伺服器。 驗證和建立 TLS 工作階段的程序可能會耗費資源的作業。 需要重新建立每個訊息的連線，傳送到相同的 SMTP 伺服器的數量龐大的電子郵件時對效能有重大影響。 有一些大量電子郵件應用程式傳送電子郵件狀態更新，電子報的散發套件，或電子郵件警示。 也許多電子郵件用戶端應用程式支援離線模式，其中使用者可以撰寫許多建立 SMTP 伺服器的連接時稍後傳送的電子郵件訊息。 通常會將所有的 SMTP 訊息傳送至特定的 SMTP 伺服器 （網際網路服務提供者所提供），然後將轉送到其他的 SMTP 伺服器的這封電子郵件的電子郵件用戶端。  
  
 <xref:System.Net.Mail.SmtpClient>好讓它可以避免重新建立每個訊息至相同的伺服器連接的額外負荷 SMTP 連線集區的類別實作。 應用程式可能會重複使用相同<xref:System.Net.Mail.SmtpClient>物件，將許多不同的電子郵件傳送到相同的 SMTP 伺服器以及許多不同的 SMTP 伺服器。 如此一來，沒有任何方法來判斷應用程式完成時使用<xref:System.Net.Mail.SmtpClient>物件，而且它應該會清除。  
  
 當 SMTP 工作階段完成並在用戶端想要終止的連接時，它必須傳送至伺服器，以表示它具有任何訊息来傳送的 QUIT 訊息。 這可讓伺服器釋出與從用戶端連接相關聯的資源，並處理用戶端所傳送的訊息。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法逐一查看所有已建立的連線及傳送 QUIT 訊息，每個 SMTP 伺服器，後面依正常程序結束的 TCP 連線。 這些方法也會發行所使用的 unmanaged 的資源<xref:System.Net.Sockets.Socket>並選擇性處置 managed 資源。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 QUIT 訊息傳送至 SMTP 伺服器、正常結束 TCP 連接，並且釋放 <see cref="T:System.Net.Mail.SmtpClient" /> 類別之目前執行個體所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立目前執行個體的連接<xref:System.Net.Mail.SmtpClient>到 SMTP 伺服器的類別可能會重複使用，如果應用程式想要將多個訊息傳送至相同的 SMTP 伺服器。 使用驗證或加密時，這會特別有用連接到 SMTP 伺服器。 驗證和建立 TLS 工作階段的程序可能會耗費資源的作業。 需要重新建立每個訊息的連線，傳送到相同的 SMTP 伺服器的數量龐大的電子郵件時對效能有重大影響。 有一些大量電子郵件應用程式傳送電子郵件狀態更新，電子報的散發套件，或電子郵件警示。 也許多電子郵件用戶端應用程式支援離線模式，其中使用者可以撰寫許多建立 SMTP 伺服器的連接時稍後傳送的電子郵件訊息。 通常會將所有的 SMTP 訊息傳送至特定的 SMTP 伺服器 （網際網路服務提供者所提供），然後將轉送到其他的 SMTP 伺服器的這封電子郵件的電子郵件用戶端。  
  
 <xref:System.Net.Mail.SmtpClient>好讓它可以避免重新建立每個訊息至相同的伺服器連接的額外負荷 SMTP 連線集區的類別實作。 應用程式可能會重複使用相同<xref:System.Net.Mail.SmtpClient>物件，將許多不同的電子郵件傳送到相同的 SMTP 伺服器以及許多不同的 SMTP 伺服器。 如此一來，沒有任何方法來判斷應用程式完成時使用<xref:System.Net.Mail.SmtpClient>物件，而且它應該會清除。  
  
 當 SMTP 工作階段完成並在用戶端想要終止的連接時，它必須傳送至伺服器，以表示它具有任何訊息来傳送的 QUIT 訊息。 這可讓伺服器釋出與從用戶端連接相關聯的資源，並處理用戶端所傳送的訊息。  
  
 呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>方法<xref:System.Net.Mail.SmtpClient>物件，執行非同步<xref:System.Net.Mail.SmtpClient.SendAsync%2A>作業將會取消傳送作業，不過<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>呼叫方法。  
  
 <xref:System.Net.Mail.SmtpClient>類別沒有`Finalize`方法。 讓應用程式必須呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>以明確釋放資源。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法逐一查看所有已建立連接中指定的 SMTP 伺服器<xref:System.Net.Mail.SmtpClient.Host%2A>屬性並將 QUIT 訊息後面接著正常結束 TCP 連線。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法也會釋出基礎使用的 unmanaged 的資源<xref:System.Net.Sockets.Socket>。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法會將 <xref:System.Net.Mail.SmtpClient> 保留在無法使用的狀態。 之後呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>，您必須釋放所有的參考<xref:System.Net.Mail.SmtpClient>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Mail.SmtpClient>所佔用。  
  
 如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Net.Mail.SmtpClient>。 否則，它所使用的資源將不會釋放讓記憶體回收行程可以回收記憶體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>將 QUIT 訊息傳送至 SMTP 伺服器、正常結束 TCP 連接、釋放 <see cref="T:System.Net.Mail.SmtpClient" /> 類別之目前執行個體所使用的所有資源，並選擇性處置 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立目前執行個體的連接<xref:System.Net.Mail.SmtpClient>到 SMTP 伺服器的類別可能會重複使用，如果應用程式想要將多個訊息傳送至相同的 SMTP 伺服器。 使用驗證或加密時，這會特別有用連接到 SMTP 伺服器。 驗證和建立 TLS 工作階段的程序可能會耗費資源的作業。 需要重新建立每個訊息的連線，傳送到相同的 SMTP 伺服器的數量龐大的電子郵件時對效能有重大影響。 有一些大量電子郵件應用程式傳送電子郵件狀態更新，電子報的散發套件，或電子郵件警示。 也許多電子郵件用戶端應用程式支援離線模式，其中使用者可以撰寫許多建立 SMTP 伺服器的連接時稍後傳送的電子郵件訊息。 通常會將所有的 SMTP 訊息傳送至特定的 SMTP 伺服器 （網際網路服務提供者所提供），然後將轉送到其他的 SMTP 伺服器的這封電子郵件的電子郵件用戶端。  
  
 <xref:System.Net.Mail.SmtpClient>好讓它可以避免重新建立每個訊息至相同的伺服器連接的額外負荷 SMTP 連線集區的類別實作。 應用程式可能會重複使用相同<xref:System.Net.Mail.SmtpClient>物件，將許多不同的電子郵件傳送到相同的 SMTP 伺服器以及許多不同的 SMTP 伺服器。 如此一來，沒有任何方法來判斷應用程式完成時使用<xref:System.Net.Mail.SmtpClient>物件，而且它應該會清除。  
  
 當 SMTP 工作階段完成並在用戶端想要終止的連接時，它必須傳送至伺服器，以表示它具有任何訊息来傳送的 QUIT 訊息。 這可讓伺服器釋出與從用戶端連接相關聯的資源，並處理用戶端所傳送的訊息。  
  
 呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>方法<xref:System.Net.Mail.SmtpClient>物件，執行非同步<xref:System.Net.Mail.SmtpClient.SendAsync%2A>作業將會取消傳送作業，不過<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>呼叫方法。  
  
 <xref:System.Net.Mail.SmtpClient>類別沒有`Finalize`方法。 讓應用程式必須呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>以明確釋放資源。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法逐一查看所有已建立連接中指定的 SMTP 伺服器<xref:System.Net.Mail.SmtpClient.Host%2A>屬性並將 QUIT 訊息後面接著正常結束 TCP 連線。 <xref:System.Net.Mail.SmtpClient.Dispose%2A>方法也會釋放所使用的 unmanaged 的資源<xref:System.Net.Sockets.Socket>並選擇性處置 managed 資源。  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Net.Mail.SmtpClient>。 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 方法會將 <xref:System.Net.Mail.SmtpClient> 保留在無法使用的狀態。 之後呼叫<xref:System.Net.Mail.SmtpClient.Dispose%2A>，您必須釋放所有的參考<xref:System.Net.Mail.SmtpClient>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Mail.SmtpClient>所佔用。  
  
 如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.Net.Mail.SmtpClient.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Net.Mail.SmtpClient>。 否則，它所使用的資源將不會釋放讓記憶體回收行程可以回收記憶體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定 <see cref="T:System.Net.Mail.SmtpClient" /> 是否使用 Secure Sockets Layer (SSL) 加密連線。</summary>
        <value>如果 <see cref="T:System.Net.Mail.SmtpClient" /> 使用 SSL 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性會指定 SSL 是否用來存取指定的 SMTP 郵件伺服器。  
  
 這個屬性的預設值也可以在機器中設定或應用程式組態檔。 所做的變更<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性覆寫組態檔設定。  
  
 <xref:System.Net.Mail.SmtpClient>類別只支援 SMTP 服務延伸模組保護 smtp 傳輸層安全性透過 RFC 3207 中所定義。 在此模式中，SMTP 工作階段開始在未加密的通道，然後 STARTTLS 命令發出用戶端到伺服器，以切換為使用 SSL 的安全通訊。 RFC 3207 發佈由 Internet Engineering Task Force (IETF) 如需詳細資訊，請參閱。  
  
 其他連線方法是 SSL 工作階段事先建立之前命令會傳送任何通訊協定。 此連線方法有時稱為 SMTP/SSL，透過 SSL 或 SMTPS 和預設 SMTP 則是使用連接埠 465。 目前不支援這種替代的連線方法，使用 SSL。  
  
 您可以使用<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>指定建立 SSL 連線，應該使用哪一個用戶端憑證。 <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>可讓您拒絕提供的 SMTP 伺服器的憑證。 <xref:System.Net.ServicePointManager.SecurityProtocol%2A>屬性可讓您指定要使用的 SSL 通訊協定版本。  
  
> [!NOTE]
>  如果<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性設定為`true`，和 SMTP 郵件伺服器不會通告 STARTTLS 回應對 EHLO 命令，然後呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>或是<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法會擲回<xref:System.Net.Mail.SmtpException>。  
  
   
  
## Examples  
 下列的程式碼範例會建立與 SMTP 伺服器的 SSL 連線，並傳送電子郵件會使用連接。  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;網路&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於 SMTP 交易的主機名稱或 IP 位址。</summary>
        <value>
          <see cref="T:System.String" />，包含用於 SMTP 交易的電腦名稱或 IP 位址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Net.Mail.SmtpClient.Host%2A>屬性也可以設定使用建構函式應用程式或電腦組態檔。 如需詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 如果使用這個屬性來指定資訊，這項資訊會覆寫組態檔設定。  
  
   
  
## Examples  
 下列程式碼範例示範使用主應用程式和應用程式組態檔中指定的連接埠傳送電子郵件訊息。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">為設定作業指定的值為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">為設定作業指定的值等於 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.InvalidOperationException">正在傳送電子郵件時，無法變更這個屬性的值。</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings 看見 system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;網路&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繼承自類別<xref:System.Net.Mail.SmtpClient>類別可以覆寫<xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>方法，以執行其他工作時<xref:System.Net.Mail.SmtpClient.SendCompleted>就會發生事件。  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> 也可讓衍生的類別，來處理<xref:System.Net.Mail.SmtpClient.SendCompleted>但不附加委派。 這是處理的慣用的技巧<xref:System.Net.Mail.SmtpClient.SendCompleted>衍生類別中。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />方法，好讓註冊的委派能接收<see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料夾，應用程式會在其中儲存要由本機 SMTP 伺服器處理的郵件訊息。</summary>
        <value>
          <see cref="T:System.String" />，指定郵件訊息的收取目錄。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本機 SMTP 伺服器 （如果有的話），例如 IIS 會自動傳送郵件訊息的收取目錄中。  
  
 這個屬性的預設值也可以在機器中設定或應用程式組態檔。 所做的變更<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>屬性覆寫組態檔設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於 SMTP 交易的連接埠。</summary>
        <value>
          <see cref="T:System.Int32" />，包含 SMTP 主機上的連接埠編號。 預設值為 25。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Net.Mail.SmtpClient.Port%2A>屬性也可以設定使用建構函式應用程式或電腦組態檔。 如需使用組態檔的詳細資訊，請參閱[ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。 如果使用這個屬性來指定資訊，這項資訊會覆寫組態檔設定。  
  
   
  
## Examples  
 下列程式碼範例示範使用主應用程式和應用程式組態檔中指定的連接埠傳送電子郵件訊息。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">為設定作業指定的值小於或等於零。</exception>
        <exception cref="T:System.InvalidOperationException">正在傳送電子郵件時，無法變更這個屬性的值。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要設定<see cref="P:System.Net.Mail.SmtpClient.Port" />屬性。 關聯的列舉型別：<see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />。</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings 看見 system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;網路&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送電子郵件訊息給 SMTP 伺服器進行傳遞。 在傳送訊息時，會封鎖這些方法。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Net.Mail.MailMessage" />，包含要傳送的訊息。</param>
        <summary>傳送指定的訊息給 SMTP 伺服器進行傳遞。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會封鎖在傳送電子郵件時。 您可以指定逾時的值使用<xref:System.Net.Mail.SmtpClient.Timeout%2A>屬性，以確認此方法會傳回在指定的時間之後。  
  
 呼叫此方法中前,<xref:System.Net.Mail.SmtpClient.Host%2A>並<xref:System.Net.Mail.SmtpClient.Port%2A>屬性必須設定透過組態檔設定相關的屬性，或藉由傳遞到此資訊<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>建構函式。  
  
 以非同步方式傳送的訊息時，您不能呼叫這個方法。  
  
 如果 SMTP 主機需要認證，您必須呼叫這個方法之前設定它們。 若要指定認證，請使用<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>或<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性。  
  
 如果您收到<xref:System.Net.Mail.SmtpException>例外狀況，核取<xref:System.Net.Mail.SmtpException.StatusCode%2A>屬性，以找出原因作業失敗。 <xref:System.Net.Mail.SmtpException>也可以包含內部例外狀況，指出作業失敗的原因。  
  
 傳送電子郵件使用時<xref:System.Net.Mail.SmtpClient.Send%2A>多位收件者和 SMTP 伺服器接受為有效的部分收件者，以及拒絕其他<xref:System.Net.Mail.SmtpClient.Send%2A>可接受的收件者會傳送電子郵件，然後<xref:System.Net.Mail.SmtpFailedRecipientsException>就會擲回 (或<xref:System.Net.Mail.SmtpFailedRecipientException>如果只有一個收件者會拒絕）。 A<xref:System.Net.Mail.SmtpFailedRecipientsException>包含收件者已拒絕的清單。
  
> [!NOTE]
>  如果<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性設定為`true`，和 SMTP 郵件伺服器不會通告 STARTTLS 回應對 EHLO 命令，然後呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>或是<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法會擲回<xref:System.Net.Mail.SmtpException>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個方法。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">這個 <see cref="T:System.Net.Mail.SmtpClient" /> 有正在進行中的 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 呼叫。  
  
-或- 
 <see cref="P:System.Net.Mail.MailMessage.From" /> 為 <see langword="null" />。  
  
-或- 
<see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 和<see cref="P:System.Net.Mail.MailMessage.Bcc" /> 屬性中沒有指定任何收件者。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 為 <see langword="null" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 等於空字串 ("")。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> ，而且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 為零、負數或大於 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">這個物件已經過處置。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">與 SMTP 伺服器的連接失敗。  
  
-或- 
驗證失敗。  
  
-或- 
作業逾時。 
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設定為 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設為 <see langword="true," /> 不過 SMTP 郵件伺服器並未在對 EHLO 命令的回應中通告 STARTTLS。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">無法將 <paramref name="message" /> 傳遞給 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一個收件者。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">無法將 <paramref name="message" /> 傳遞給 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的兩個或多個收件者。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要連接到 SMTP 伺服器。 相關聯的列舉型別： <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.String" />，包含訊息寄件者的地址資訊。</param>
        <param name="recipients">
          <see cref="T:System.String" />，包含訊息要傳送到的地址。</param>
        <param name="to">
          <see cref="T:System.String" />，包含訊息要傳送到的地址。</param>
        <param name="subject">
          <see cref="T:System.String" />，包含訊息的主旨行。</param>
        <param name="body">
          <see cref="T:System.String" />，包含訊息主體。</param>
        <summary>傳送指定的電子郵件訊息給 SMTP 伺服器進行傳遞。 訊息寄件者、收件者、主旨和訊息主體是使用 <see cref="T:System.String" /> 物件來指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會封鎖在傳送電子郵件時。 您可以指定逾時的值使用<xref:System.Net.Mail.SmtpClient.Timeout%2A>屬性，以確認此方法會傳回在指定的時間之後。  
  
 呼叫此方法中前,<xref:System.Net.Mail.SmtpClient.Host%2A>並<xref:System.Net.Mail.SmtpClient.Port%2A>屬性必須設定透過組態檔設定相關的屬性，或藉由傳遞到此資訊<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>建構函式。  
  
 以非同步方式傳送的訊息時，您不能呼叫這個方法。  
  
 如果 SMTP 主機需要認證，您必須呼叫這個方法之前設定它們。 若要指定認證，請使用<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>或<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性。  
  
 如果您收到<xref:System.Net.Mail.SmtpException>例外狀況，核取<xref:System.Net.Mail.SmtpException.StatusCode%2A>屬性，以找出原因作業失敗。 <xref:System.Net.Mail.SmtpException>也可以包含內部例外狀況，指出作業失敗的原因。  

 傳送電子郵件使用時<xref:System.Net.Mail.SmtpClient.Send%2A>多位收件者和 SMTP 伺服器接受為有效的部分收件者，以及拒絕其他<xref:System.Net.Mail.SmtpClient.Send%2A>可接受的收件者會傳送電子郵件，然後<xref:System.Net.Mail.SmtpFailedRecipientsException>就會擲回 (或<xref:System.Net.Mail.SmtpFailedRecipientException>如果只有一個收件者會拒絕）。 A<xref:System.Net.Mail.SmtpFailedRecipientsException>包含收件者已拒絕的清單。
 
> [!NOTE]
>  如果<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性設定為`true`，和 SMTP 郵件伺服器不會通告 STARTTLS 回應對 EHLO 命令，然後呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>或是<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法會擲回<xref:System.Net.Mail.SmtpException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="recipients" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> 為 <see cref="F:System.String.Empty" />。  
  
-或- 
 <paramref name="recipients" /> 為 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.InvalidOperationException">這個 <see cref="T:System.Net.Mail.SmtpClient" /> 有正在進行中的 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 呼叫。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 為 <see langword="null" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 等於空字串 ("")。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> ，而且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 為零、負數或大於 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">這個物件已經過處置。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">與 SMTP 伺服器的連接失敗。  
  
-或- 
驗證失敗。  
  
-或- 
作業逾時。 
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設定為 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設為 <see langword="true," /> 不過 SMTP 郵件伺服器並未在對 EHLO 命令的回應中通告 STARTTLS。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">無法將 <paramref name="message" /> 傳遞給 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一個收件者。</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">無法將 <paramref name="message" /> 傳遞給 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的兩個或多個收件者。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要連接到 SMTP 伺服器。 相關聯的列舉型別： <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送電子郵件訊息。 這些方法不會封鎖呼叫執行緒。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Net.Mail.MailMessage" />，包含要傳送的訊息。</param>
        <param name="userToken">使用者定義的物件，這個物件會在非同步作業完成時傳遞至叫用的方法。</param>
        <summary>傳送指定的電子郵件訊息給 SMTP 伺服器進行傳遞。 這個方法不會封鎖呼叫執行緒，而且允許呼叫端將物件傳遞給作業完成時所叫用 (Invoke) 的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已傳送電子郵件，或已取消作業時，收到通知，加入事件處理常式<xref:System.Net.Mail.SmtpClient.SendCompleted>事件。 您可以取消<xref:System.Net.Mail.SmtpClient.SendAsync%2A>藉由呼叫的作業<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>方法。  
  
 之後呼叫<xref:System.Net.Mail.SmtpClient.SendAsync%2A>，您必須等到完成，然後再嘗試使用另一個電子郵件訊息傳送的電子郵件傳輸<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>。  
  
 呼叫這個方法之前<xref:System.Net.Mail.SmtpClient.Host%2A>並<xref:System.Net.Mail.SmtpClient.Port%2A>藉由設定相關的屬性，或傳遞到此資訊必須透過組態檔設定<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>建構函式。  
  
 如果 SMTP 主機需要認證，您必須呼叫這個方法之前設定它們。 若要指定認證，請使用<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>或<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性。  
  
 如果您收到<xref:System.Net.Mail.SmtpException>例外狀況，核取<xref:System.Net.Mail.SmtpException.StatusCode%2A>屬性，以找出原因作業失敗。 <xref:System.Net.Mail.SmtpException>也可以包含內部例外狀況，指出作業失敗的原因。  
  
 傳送電子郵件使用時<xref:System.Net.Mail.SmtpClient.SendAsync%2A>給多個收件者的 SMTP 伺服器接受為有效的部分收件者，並拒絕其他項目，如果<xref:System.Net.Mail.SmtpException>會擲回<xref:System.NullReferenceException>內部例外狀況。 如果發生這種情況，<xref:System.Net.Mail.SmtpClient.SendAsync%2A>失敗時傳送電子郵件給任何收件者。  
  
 您的應用程式可以藉由檢查偵測的伺服器憑證驗證錯誤<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性傳遞至<xref:System.Net.Mail.SendCompletedEventHandler>委派。  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A>屬性沒有任何作用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼叫。  
  
 若要傳送郵件和區塊，它會傳送到 SMTP 伺服器時，使用其中一種<xref:System.Net.Mail.SmtpClient.Send%2A>方法。  
  
> [!NOTE]
>  如果<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性設定為`true`，和 SMTP 郵件伺服器不會通告 STARTTLS 回應對 EHLO 命令，然後呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>或是<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法會擲回<xref:System.Net.Mail.SmtpException>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個方法。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。  
  
-或- 
 <see cref="P:System.Net.Mail.MailMessage.From" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">這個 <see cref="T:System.Net.Mail.SmtpClient" /> 有正在進行中的 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 呼叫。  
  
-或- 
<see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 和<see cref="P:System.Net.Mail.MailMessage.Bcc" /> 屬性中沒有指定任何收件者。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 為 <see langword="null" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 等於空字串 ("")。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> ，而且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 為零、負數或大於 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">這個物件已經過處置。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">與 SMTP 伺服器的連接失敗。  
  
-或- 
驗證失敗。  
  
-或- 
作業逾時。 
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設定為 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設為 <see langword="true," /> 不過 SMTP 郵件伺服器並未在對 EHLO 命令的回應中通告 STARTTLS。  
  
-或- 
無法將 <paramref name="message" /> 傳遞給 <see cref="P:System.Net.Mail.MailMessage.To" />、<see cref="P:System.Net.Mail.MailMessage.CC" /> 或 <see cref="P:System.Net.Mail.MailMessage.Bcc" /> 中的一個或多個收件者。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要連接到 SMTP 伺服器。 相關聯的列舉型別： <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.String" />，包含訊息寄件者的地址資訊。</param>
        <param name="recipients">
          <see cref="T:System.String" />，包含訊息要傳送到的地址。</param>
        <param name="to">
          <see cref="T:System.String" />，包含訊息要傳送到的地址。</param>
        <param name="subject">
          <see cref="T:System.String" />，包含訊息的主旨行。</param>
        <param name="body">
          <see cref="T:System.String" />，包含訊息主體。</param>
        <param name="userToken">使用者定義的物件，這個物件會在非同步作業完成時傳遞至叫用的方法。</param>
        <summary>傳送電子郵件訊息給 SMTP 伺服器進行傳遞。 訊息寄件者、收件者、主旨和訊息主體是使用 <see cref="T:System.String" /> 物件來指定。 這個方法不會封鎖呼叫執行緒，而且允許呼叫端將物件傳遞給作業完成時所叫用 (Invoke) 的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 已傳送電子郵件，或已取消作業時，收到通知，加入事件處理常式<xref:System.Net.Mail.SmtpClient.SendCompleted>事件。 您可以取消<xref:System.Net.Mail.SmtpClient.SendAsync%2A>藉由呼叫的作業<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>方法。  
  
 之後呼叫<xref:System.Net.Mail.SmtpClient.SendAsync%2A>，您必須等到完成，然後再嘗試使用另一個電子郵件訊息傳送的電子郵件傳輸<xref:System.Net.Mail.SmtpClient.Send%2A>或<xref:System.Net.Mail.SmtpClient.SendAsync%2A>。  
  
 呼叫這個方法之前<xref:System.Net.Mail.SmtpClient.Host%2A>並<xref:System.Net.Mail.SmtpClient.Port%2A>必須設定屬性，透過組態檔，或是藉由設定屬性，或傳遞到此資訊<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>建構函式。  
  
 如果 SMTP 主機需要認證，您必須呼叫這個方法之前設定它們。 若要指定認證，請使用<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>或<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性。  
  
 如果您收到<xref:System.Net.Mail.SmtpException>例外狀況，核取<xref:System.Net.Mail.SmtpException.StatusCode%2A>屬性，以找出原因作業失敗。 <xref:System.Net.Mail.SmtpException>也可以包含內部例外狀況，指出作業失敗的原因。  
  
 傳送電子郵件使用時<xref:System.Net.Mail.SmtpClient.SendAsync%2A>給多個收件者的 SMTP 伺服器接受為有效的部分收件者，並拒絕其他項目，如果<xref:System.Net.Mail.SmtpException>會擲回<xref:System.NullReferenceException>內部例外狀況。 如果發生這種情況，<xref:System.Net.Mail.SmtpClient.SendAsync%2A>失敗時傳送電子郵件給任何收件者。  
  
 您的應用程式可以藉由檢查偵測的伺服器憑證驗證錯誤<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性傳遞至<xref:System.Net.Mail.SendCompletedEventHandler>委派。  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A>屬性沒有任何作用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼叫。  
  
 若要傳送郵件和區塊，它會傳送到 SMTP 伺服器時，使用其中一種<xref:System.Net.Mail.SmtpClient.Send%2A>方法。  
  
> [!NOTE]
>  如果<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>屬性設定為`true`，和 SMTP 郵件伺服器不會通告 STARTTLS 回應對 EHLO 命令，然後呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>或是<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法會擲回<xref:System.Net.Mail.SmtpException>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="recipient" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> 為 <see cref="F:System.String.Empty" />。  
  
-或- 
 <paramref name="recipient" /> 為 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.InvalidOperationException">這個 <see cref="T:System.Net.Mail.SmtpClient" /> 有正在進行中的 <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> 呼叫。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 為 <see langword="null" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" />，且 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 等於空字串 ("")。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> ，而且 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 為零、負數或大於 65,535。</exception>
        <exception cref="T:System.ObjectDisposedException">這個物件已經過處置。</exception>
        <exception cref="T:System.Net.Mail.SmtpException">與 SMTP 伺服器的連接失敗。  
  
-或- 
驗證失敗。  
  
-或- 
作業逾時。 
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設定為 <see langword="true" />，但 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> 屬性設定為 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> 或 <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> 設為 <see langword="true," /> 不過 SMTP 郵件伺服器並未在對 EHLO 命令的回應中通告 STARTTLS。  
  
-或- 
無法將訊息傳遞給 <paramref name="recipients" /> 中的一個或多個收件者。</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">若要連接到 SMTP 伺服器。 相關聯的列舉型別： <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消傳送電子郵件訊息的非同步作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>方法來取消暫止<xref:System.Net.Mail.SmtpClient.SendAsync%2A>作業。 如果沒有等候要傳送的郵件，則這個方法會釋放資源用來儲存此郵件。 如果沒有任何等候要傳送的郵件，這個方法任何作用。  
  
   
  
## Examples  
 下列程式碼範例示範如何以非同步方式傳送電子郵件訊息。 使用者已取消郵件，如果未傳送的選項。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">這個物件已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在非同步電子郵件傳送作業完成時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.SendCompleted>傳送作業完成時以非同步方式傳送電子郵件訊息每次引發事件。 若要以非同步方式傳送電子郵件訊息，請使用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> 是的委派<xref:System.Net.Mail.SmtpClient.SendCompleted>。 <xref:System.ComponentModel.AsyncCompletedEventArgs>類別會提供事件處理常式與事件資料。  
  
   
  
## Examples  
 下列程式碼範例示範如何以非同步方式傳送電子郵件訊息。  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送指定的訊息給 SMTP 伺服器以進行非同步作業形式的傳遞。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="T:System.Net.Mail.MailMessage" />，包含要傳送的訊息。</param>
        <summary>傳送指定的訊息給 SMTP 伺服器以進行非同步作業形式的傳遞。</summary>
        <returns>傳回 <see cref="T:System.Threading.Tasks.Task" />。  
  
工作物件，表示非同步作業。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task>> 一旦傳送訊息之後，物件會完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.String" />，包含訊息寄件者的地址資訊。</param>
        <param name="recipients">
          <see cref="T:System.String" />，包含訊息要傳送到的地址。</param>
        <param name="subject">
          <see cref="T:System.String" />，包含訊息的主旨行。</param>
        <param name="body">
          <see cref="T:System.String" />，包含訊息主體。</param>
        <summary>傳送指定的訊息給 SMTP 伺服器以進行非同步作業形式的傳遞。 。 訊息寄件者、收件者、主旨和訊息主體是使用 <see cref="T:System.String" /> 物件來指定。</summary>
        <returns>傳回 <see cref="T:System.Threading.Tasks.Task" />。  
  
工作物件，表示非同步作業。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這項作業不會封鎖。 傳回<xref:System.Threading.Tasks.Task>> 一旦傳送訊息之後，物件會完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="recipients" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> 為 <see cref="F:System.String.Empty" />。  
  
-或- 
 <paramref name="recipients" /> 為 <see cref="F:System.String.Empty" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來傳送電子郵件訊息的網路連線。</summary>
        <value>
          <see cref="T:System.Net.ServicePoint" />，連接到用於 SMTP 的 <see cref="P:System.Net.Mail.SmtpClient.Host" /> 屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>屬性會使用應用程式或電腦組態檔中指定的預設值和<xref:System.Net.ServicePointManager>類別。  
  
   
  
## Examples  
 下列程式碼範例將示範如何存取<xref:System.Net.Mail.SmtpClient.ServicePoint%2A>屬性。  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.Mail.SmtpClient.Host" /> 為 <see langword="null" /> 或空字串 ("")。  
  
-或- 
 <see cref="P:System.Net.Mail.SmtpClient.Port" /> 為零。</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement 項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">管理連接</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定服務提供者名稱 (SPN)，當使用延伸保護時會用此名稱進行驗證。</summary>
        <value>
          <see cref="T:System.String" />，用來指定延伸保護所使用的 SPN。 此 SPN 的預設值是"SMTPSVC /&lt;主機&gt;」 所在&lt;主機&gt;是 SMTP 郵件伺服器主機名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.TargetName%2A>屬性搭配整合式 Windows 驗證，應用程式使用擴充的保護時。 <xref:System.Net.Mail.SmtpClient>隨後可以提供擴充的保護，以確保認證的挑戰回應包含服務特定資訊 (SPN) 和，必要時，通道特定資訊 （通道繫結權杖或 CBT）。 利用此資訊在認證交換中，服務就能進一步免於惡意使用可能未正確取得的認證挑戰回應的。  
  
 這個屬性的預設值也可以在機器中設定或應用程式組態檔。 所做的變更<xref:System.Net.Mail.SmtpClient.TargetName%2A>屬性覆寫組態檔設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">具有延伸保護的整合式 Windows 驗證</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;smtp&gt;項目 （網路設定）</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;網路&gt;項目 （網路設定）</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定同步 <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> 呼叫逾時的時間長度。</summary>
        <value>
          <see cref="T:System.Int32" />，指定以毫秒為單位的逾時值。 預設值為 100,000 (100 秒)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，呼叫<xref:System.Net.Mail.SmtpClient.Send%2A>方法區塊，直到作業完成為止。 如果您設定<xref:System.Net.Mail.SmtpClient.Timeout%2A>設為正值的屬性和<xref:System.Net.Mail.SmtpClient.Send%2A>作業無法在分配的時間，完成<xref:System.Net.Mail.SmtpClient>類別會擲回<xref:System.Net.Mail.SmtpException>例外狀況。  
  
 若要傳送訊息，並繼續執行應用程式執行緒中，使用<xref:System.Net.Mail.SmtpClient.SendAsync%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何取得和設定的逾時值。  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">為設定作業指定的值小於零。</exception>
        <exception cref="T:System.InvalidOperationException">正在傳送電子郵件時，無法變更這個屬性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Boolean" /> 值，控制是否隨著要求傳送 <see cref="P:System.Net.CredentialCache.DefaultCredentials" />。</summary>
        <value>如果使用預設認證，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 部分 SMTP 伺服器需要用戶端進行驗證之前，伺服器會代替它來傳送電子郵件。 將此屬性設定為`true`時這<xref:System.Net.Mail.SmtpClient>物件，如果要求的伺服器上，驗證使用目前登入使用者的預設認證。 用戶端應用程式，這是在大部分情況下想要的行為。  
  
 認證資訊也可以使用應用程式和電腦組態檔來指定。 如需詳細資訊，請參閱 < [ &lt;mailSettings&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md)。  
  
 如果<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>屬性設定為`false,`的值的設定然後<xref:System.Net.Mail.SmtpClient.Credentials%2A>屬性將使用的認證，連接到伺服器時。 如果<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>屬性設定為`false`而<xref:System.Net.Mail.SmtpClient.Credentials%2A>未設定屬性，則郵件以匿名方式傳送到伺服器。  
  
> [!CAUTION]
>  如果您提供認證來進行基本驗證時，它們會以純文字傳送到伺服器。 這可能會有安全性問題，因為可以看出，，然後其他人使用您的認證。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個屬性。  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">正在傳送電子郵件時，無法變更這個屬性的值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>