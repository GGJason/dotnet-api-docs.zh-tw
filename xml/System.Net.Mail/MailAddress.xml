<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="762353f1ded7fc016489bf03175a6e5d2e2a0000" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34244576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示電子郵件寄件者或收件者的地址。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<xref:System.Net.Mail.MailAddress>類別會由<xref:System.Net.Mail.SmtpClient>和<xref:System.Net.Mail.MailMessage>類別來儲存地址資訊的電子郵件訊息。  
  
郵件地址組成<xref:System.Net.Mail.MailAddress.User%2A>名稱<xref:System.Net.Mail.MailAddress.Host%2A>名稱並選擇性地<xref:System.Net.Mail.MailAddress.DisplayName%2A>。 <xref:System.Net.Mail.MailAddress.DisplayName%2A>可以包含非 ASCII 字元，如果您將其編碼。  
  
<xref:System.Net.Mail.MailAddress>類別支援下列的郵件地址格式：  
  
-   簡單地址格式`user@host`。 如果<xref:System.Net.Mail.MailAddress.DisplayName%2A>未設定，這是產生的郵件地址格式。  
  
-   標準加上引號的顯示名稱格式為`"display name" <user@host>`。 如果<xref:System.Net.Mail.MailAddress.DisplayName%2A>已經設定，這是產生的格式。  
  
-   角括號前後加入<xref:System.Net.Mail.MailAddress.User%2A>名稱<xref:System.Net.Mail.MailAddress.Host%2A>名稱`"display name" user@host`如果它們未包含。  
  
-   前後加入引號<xref:System.Net.Mail.MailAddress.DisplayName%2A>如`display name <user@host>`，如果這些不會包含。  
  
-   支援 Unicode 字元<xref:System.Net.Mail.MailAddress.DisplayName%2A>屬性。  
  
-   A<xref:System.Net.Mail.MailAddress.User%2A>括住名稱。 例如，`"user name"@host`。  
  
-   使用者名稱中的連續和尾端點。 例如，`user...name..@host`。  
  
-   以方括弧括住的網域常值。 例如，`<user@[my domain]>`。  
  
-   註解。 例如，`(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`。 註解會在傳輸之前移除。  
  
逗號會用來分隔項目清單中的郵件地址。 如此一來，逗號不應該在清單中不具引號的顯示名稱中使用。 允許下列的郵件地址：
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
不允許下列的郵件地址：  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
引號可以內嵌在加上引號的字串，但必須逸出。 允許下列的郵件地址：
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
不允許下列的郵件地址：  
  
`"John "Jr" Doe" <user@host>`  
  
當使用者名稱的附註附加引號的字串 （或逗號） 的開始之間的所有文字，且位址會被視為屬於<xref:System.Net.Mail.MailAddress.DisplayName%2A>，包括註解。 例如: 
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
雖然<xref:System.Net.Mail.MailAddress>類別接受有效、 郵件伺服器可能不會接受郵件地址的郵件地址。  
  
<xref:System.Net.Mail.MailAddress>類別不支援下列的郵件地址格式：  
  
- 混合加引號及不具引號的顯示名稱。 例如，`display "name" <user@host>`。
  
- 群組，如 RFC 2822 IETF 所發行的 3.4 節中所定義。  
  
- 過時的使用者名稱格式的`"user"."name"@host`，`user."name"@host`或`"user".name@host`。
  
   
  
## Examples  
下列程式碼範例示範如何使用傳送電子郵件訊息<xref:System.Net.Mail.SmtpClient>， <xref:System.Net.Mail.MailAddress>，和<xref:System.Net.Mail.MailMessage>類別。  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mail.MailAddress" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">包含電子郵件地址的 <see cref="T:System.String" />。</param>
        <summary>使用指定的地址，初始化 <see cref="T:System.Net.Mail.MailAddress" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `address`參數可以包含顯示名稱和相關聯的電子郵件地址，如果您將位址括在角括弧中。 例如:   
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 顯示名稱和角括弧之間可以使用空白字元。  
  
 下表顯示的屬性值<xref:System.Net.Mail.MailAddress>建構使用上述的範例位址物件。  
  
|屬性|值|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 下列程式碼範例會使用這個建構函式來建立<xref:System.Net.Mail.MailAddress>物件<xref:System.Net.Mail.MailMessage.Bcc%2A>收件者的電子郵件訊息。  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> 不是可辨認的格式。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">包含電子郵件地址的 <see cref="T:System.String" />。</param>
        <param name="displayName">
          <see cref="T:System.String" />，包含與 <c>address</c> 建立關聯的顯示名稱。 這個參數可以是 <see langword="null" />。</param>
        <summary>使用指定的地址和顯示名稱，初始化 <see cref="T:System.Net.Mail.MailAddress" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的顯示名稱的開頭和尾端空白會獲得保留。  
  
 如果`displayName`包含非 ASCII 字元的 iso 8859-1 字元集用於`displayName`編碼方式。 非 ASCII 字元的編碼方式在 RFC 1522，可以在討論[ https://www.ietf.org/ ](https://www.ietf.org/)。  
  
 如果`address`包含顯示名稱，和`displayName`不`null`和不等於<xref:System.String.Empty?displayProperty=nameWithType>，`displayName`中指定的值會覆寫`address`。  
  
   
  
## Examples  
 下列程式碼範例會使用這個建構函式來建立<xref:System.Net.Mail.MailAddress>寄件者和收件者電子郵件訊息的執行個體。  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> 不是可辨認的格式。  -或-  <paramref name="address" /> 包含非 ASCII 字元。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">包含電子郵件地址的 <see cref="T:System.String" />。</param>
        <param name="displayName">
          <see cref="T:System.String" />，包含與 <c>address</c> 建立關聯的顯示名稱。</param>
        <param name="displayNameEncoding">
          <see cref="T:System.Text.Encoding" />，其定義用於 <c>displayName</c> 的字元集。</param>
        <summary>使用指定的地址、顯示名稱和編碼方式，初始化 <see cref="T:System.Net.Mail.MailAddress" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的顯示名稱的開頭和尾端空白會獲得保留。  
  
 如果`address`包含顯示名稱，和`displayName`不`null`和不等於<xref:System.String.Empty?displayProperty=nameWithType>，`displayName`中指定的值會覆寫`address`。  
  
 <xref:System.Net.Mail.MailAddress.%23ctor%2A>方法不會檢查，如果`displayName`參數才有效。 這個方法會移除周圍的引號不顯示<xref:System.Net.Mail.MailAddress.DisplayName%2A>屬性。 引號將會加入傳輸，除了 where 之前<xref:System.Text.Encoding.ASCII%2A>或<xref:System.Text.Encoding.Unicode%2A>中指定`displayNameEncoding`參數。 中指定的編碼`displayNameEncoding`參數將會套用到<xref:System.Net.Mail.MailAddress.DisplayName%2A>屬性，才能傳輸<xref:System.Text.Encoding.ASCII%2A>或<xref:System.Text.Encoding.Unicode%2A>中指定`displayNameEncoding`參數。 <xref:System.Text.Encoding.UTF8%2A> 預設編碼方式如果未指定。  
  
 如需有關支援的郵件地址格式的詳細資訊，請參閱<xref:System.Net.Mail.MailAddress>。  
  
   
  
## Examples  
 下列程式碼範例會使用這個建構函式來建立<xref:System.Net.Mail.MailAddress>寄件者的電子郵件訊息的執行個體。  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> 為 <see langword="null" />。  -或-  <paramref name="displayName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> 為 <see cref="F:System.String.Empty" /> ("")。  -或-  <paramref name="displayName" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> 不是可辨認的格式。  -或-  <paramref name="address" /> 包含非 ASCII 字元。</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建立這個執行個體時所指定的電子郵件地址。</summary>
        <value>包含電子郵件地址的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回的值不包含<xref:System.Net.Mail.MailAddress.DisplayName%2A>資訊。  
  
   
  
## Examples  
 下列程式碼範例顯示電子郵件訊息的收件者地址。  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得顯示名稱，該名稱是由建立這個執行個體時所指定的顯示名稱和地址資訊所組成。</summary>
        <value>包含顯示名稱的 <see cref="T:System.String" />，但如果在建立這個執行個體時沒有指定顯示名稱資訊，則為 <see cref="F:System.String.Empty" /> ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 人類看得懂的格式，會傳回包含非 ASCII 字元的顯示名稱。 使用<xref:System.Net.Mail.MailAddress.ToString%2A>方法來取得編碼的格式<xref:System.Net.Mail.MailAddress.DisplayName%2A>。  
  
 有些軟體程式，可用來讀取電子郵件顯示<xref:System.Net.Mail.MailAddress.DisplayName%2A>屬性值，而不是，或除了電子郵件地址。  
  
   
  
## Examples  
 下列程式碼範例顯示<xref:System.Net.Mail.MailAddress.DisplayName%2A>電子郵件訊息的收件者。  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>比較兩個郵件地址。</summary>
        <returns>如果兩個郵件地址相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回郵件地址的雜湊值 (Hash Value)。</summary>
        <returns>整數雜湊值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailAddress.GetHashCode%2A>方法傳回的郵件地址的雜湊碼。 這個值可以當做雜湊表中的索引鍵。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建立這個執行個體時所指定之地址的主機部分。</summary>
        <value>A<see cref="T:System.String" />其中包含主機電腦可接受的電子郵件名稱<see cref="P:System.Net.Mail.MailAddress.User" />屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在典型的電子郵件地址，主機字串包含下列資訊所有條件 」`@`"符號。 例如，在`"tsmith@contoso.com"`，主機是`"contoso.com"`。  
  
   
  
## Examples  
 下列程式碼範例會顯示電子郵件訊息的目的地。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的字串表示。</summary>
        <returns>
          <see cref="T:System.String" />，包含這個 <see cref="T:System.Net.Mail.MailAddress" /> 的內容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法所傳回的字串不一定相同執行個體建立時指定的字串。 如果<xref:System.Net.Mail.MailAddress.DisplayName%2A>屬性不是`null`和不等於<xref:System.String.Empty?displayProperty=nameWithType>("")，<xref:System.Net.Mail.MailAddress.ToString%2A>傳回字串，由使用下列語法：  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 如果<xref:System.Net.Mail.MailAddress.DisplayName%2A>是`null`或等於<xref:System.String.Empty?displayProperty=nameWithType>，<xref:System.Net.Mail.MailAddress.ToString%2A>傳回的值<xref:System.Net.Mail.MailAddress.Address%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會顯示電子郵件訊息的目的地。  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建立這個執行個體時所指定之地址的使用者資訊。</summary>
        <value>
          <see cref="T:System.String" />，包含 <see cref="P:System.Net.Mail.MailAddress.Address" /> 的使用者名稱部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在典型的電子郵件地址，使用者字串包含上述所有資訊 」`@`"符號。 例如，在`"tsmith@contoso.com"`，使用者是`"tsmith"`。  
  
   
  
## Examples  
 下列程式碼範例會顯示電子郵件訊息的目的地。  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>