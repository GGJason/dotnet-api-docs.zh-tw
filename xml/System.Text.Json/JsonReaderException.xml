<Type Name="JsonReaderException" FullName="System.Text.Json.JsonReaderException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b733ec301906d6ddd7f438bff4eaa4ccd79cad12" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541719" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonReaderException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonReaderException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonReaderException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderException sealed : Exception" />
  <TypeSignature Language="F#" Value="type JsonReaderException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Text.Json.Utf8JsonReader" /> 遇到無效資料或任一選項不允許的資料時，所擲回的例外狀況。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReaderException (string message, long lineNumber, long bytePositionInLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int64 lineNumber, int64 bytePositionInLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderException.#ctor(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Long, bytePositionInLine As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonReaderException(System::String ^ message, long lineNumber, long bytePositionInLine);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonReaderException : string * int64 * int64 -&gt; System.Text.Json.JsonReaderException" Usage="new System.Text.Json.JsonReaderException (message, lineNumber, bytePositionInLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int64" />
        <Parameter Name="bytePositionInLine" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="message">特定內容的錯誤訊息。</param>
        <param name="lineNumber">發現無效 JSON 處的行號 (從 0 開始)。</param>
        <param name="bytePositionInLine">發現無效 JSON 所在之目前這一行的位元組計數 (從 0 開始)。</param>
        <summary>建立新的例外狀況物件，將錯誤資訊轉送給使用者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
        
請注意，`bytePositionInLine`計算數個位元組 （也就是 utf-8 字碼單位） 和不字元或純量。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytePositionInLine">
      <MemberSignature Language="C#" Value="public long BytePositionInLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytePositionInLine" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderException.BytePositionInLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytePositionInLine As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytePositionInLine { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytePositionInLine : int64" Usage="System.Text.Json.JsonReaderException.BytePositionInLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得例外狀況之前，在目前這一行 (從 0 開始) 內讀取的位元組數目。</summary>
        <value>在目前這一行 （從 0 開始） 的例外狀況之前，讀取的位元組數。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="jsonReaderException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
        <param name="context">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
        <summary>使用例外狀況的相關資訊來設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="System.Text.Json.JsonReaderException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得例外狀況之前讀取 (從 0 開始) 的行數。</summary>
        <value>行讀取 （從 0 開始） 的例外狀況之前的數字。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
