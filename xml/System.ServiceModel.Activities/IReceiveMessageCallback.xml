<Type Name="IReceiveMessageCallback" FullName="System.ServiceModel.Activities.IReceiveMessageCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48617362bb22b3ea0804a9c4fee87a6af0495c6f" /><Meta Name="ms.sourcegitcommit" Value="1ed56302ed1a98fc49550c1db40aae2529449969" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/11/2018" /><Meta Name="ms.locfileid" Value="44369940" /></Metadata><TypeSignature Language="C#" Value="public interface IReceiveMessageCallback" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMessageCallback" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.IReceiveMessageCallback" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMessageCallback" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMessageCallback" />
  <TypeSignature Language="F#" Value="type IReceiveMessageCallback = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>實作 <see cref="T:System.ServiceModel.Activities.Receive" /> 和 <see cref="T:System.ServiceModel.Activities.ReceiveParametersContent" /> 活動接收到服務訊息時要執行的回呼。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何實作 <xref:System.ServiceModel.Activities.IReceiveMessageCallback> 介面，以便在接收到訊息時存取訊息標頭。  
  
 [!code-csharp[AccessingOperationContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/accessingoperationcontext/cs/receiveinstanceidcallback.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnReceiveMessage">
      <MemberSignature Language="C#" Value="public void OnReceiveMessage (System.ServiceModel.OperationContext operationContext, System.Activities.ExecutionProperties activityExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceiveMessage(class System.ServiceModel.OperationContext operationContext, class System.Activities.ExecutionProperties activityExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.IReceiveMessageCallback.OnReceiveMessage(System.ServiceModel.OperationContext,System.Activities.ExecutionProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnReceiveMessage(System::ServiceModel::OperationContext ^ operationContext, System::Activities::ExecutionProperties ^ activityExecutionProperties);" />
      <MemberSignature Language="F#" Value="abstract member OnReceiveMessage : System.ServiceModel.OperationContext * System.Activities.ExecutionProperties -&gt; unit" Usage="iReceiveMessageCallback.OnReceiveMessage (operationContext, activityExecutionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="activityExecutionProperties" Type="System.Activities.ExecutionProperties" />
      </Parameters>
      <Docs>
        <param name="operationContext">作業內容，訊息會在這個內容中接收。</param>
        <param name="activityExecutionProperties">工作流程內可用的執行屬性集。</param>
        <summary>在接收到服務訊息時執行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何實作 <xref:System.ServiceModel.Activities.IReceiveMessageCallback> 介面，以便在接收到訊息時存取訊息標頭。  
  
 [!code-csharp[AccessingOperationContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/accessingoperationcontext/cs/receiveinstanceidcallback.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>