<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe8b8-101">提供簡單的接聽程式，將記錄輸出導向到檔案。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別會提供自動的維護功能，以封存記錄檔，如有需要在每日或每個應用程式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="fe8b8-103">此自動保存功能有助於減少的開發人員和管理員維護責任。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="fe8b8-104">執行個體<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可以加入至<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>或<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合，以重新導向輸出記錄到文字檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="fe8b8-105">這個類別的執行個體也可以加入至`My.Application.Log`或`My.Log`（適用於 Web 應用程式） 在 Visual Basic 應用程式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="fe8b8-106">如需詳細資訊，請參閱[逐步解說： 變更位置 My.Application.Log 寫入資訊](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="fe8b8-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="fe8b8-107">這個類別的主要功能包括：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="fe8b8-108">*保存功能*。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-108">*Archival functionality*.</span></span> <span data-ttu-id="fe8b8-109">這個類別所產生的記錄檔會根據基底名稱和日期，以及要在區別記錄檔的後續版本中的記錄檔的數字來命名。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="fe8b8-110">可視需要在建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="fe8b8-111">明確的檔案名稱的格式，是`baseName`[-`dateStamp`] [-`version`].log，其中：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="fe8b8-112">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="fe8b8-113">`dateStamp`組件具有格式"YYYY-MM-DD"，並會顯示當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="fe8b8-114">如果需要多個記錄檔具有相同`baseName`和`dateStamp`、`version`組件正`Integer`，加入至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="fe8b8-115">*多個類別執行個體*。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-115">*Multiple class instances*.</span></span> <span data-ttu-id="fe8b8-116">如果執行個體<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別寫入正在使用中的檔案：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="fe8b8-117">類別共用檔案，如果另一個執行個體正在使用它<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>相同的處理序中的類別。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="fe8b8-118">類別會建立新的記錄檔，如果另一個處理序正在使用檔案，請使用下一個可用的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="fe8b8-119">*執行緒安全*。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-119">*Thread safety*.</span></span> <span data-ttu-id="fe8b8-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="fe8b8-121">這可讓您安全地寫入訊息記錄檔從多個執行緒不使用鎖定。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="fe8b8-122">**記錄檔位置**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="fe8b8-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性所接受<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列舉來指定要寫入的記錄檔的一般目錄的其中一個。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="fe8b8-124">若要將記錄寫入另一個位置，設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>至該位置的屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="fe8b8-125">**記錄檔名稱**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="fe8b8-126">記錄檔的基底的名稱由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="fe8b8-127">目前的記錄檔名稱可以從讀取<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="fe8b8-128">在檔案系統，它被衍生自其他幾個屬性和記錄檔的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="fe8b8-129">**記錄維護**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="fe8b8-130">建立新的記錄檔的最小頻率由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="fe8b8-131">當這個值是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>、 每日或每週至少一次建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="fe8b8-132">記錄檔的大小上限 （以位元組為單位） 由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="fe8b8-133">如果記錄檔大小超過此大小，其他訊息寫入記錄檔會捨棄並視<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="fe8b8-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>屬性會決定必須有多少可用空間 （以位元組為單位）。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="fe8b8-135">這有助於確保<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別不會耗用所有可用磁碟空間。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="fe8b8-136">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性來指定記錄檔的行為，當有將小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>位元組可用。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="fe8b8-137">**記錄檔輸出設定**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="fe8b8-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>屬性會指定是否基礎資料流應該自動清除之後每次寫入至記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="fe8b8-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>屬性會指定是否要將訊息附加至目前的記錄檔，如果允許，或將它們寫入至新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="fe8b8-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性會指定要用於記錄檔訊息中的欄位用來分隔字串。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="fe8b8-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>屬性會指定要建立新的記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="fe8b8-142">**記錄檔輸出**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="fe8b8-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法會將訊息寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="fe8b8-144">這些方法會檢查<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性，以及任何現有的記錄檔具有相同的基底名稱，來判斷是否應該建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="fe8b8-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法排清目前在記錄檔的輸出緩衝區中的任何訊息。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="fe8b8-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法會關閉記錄檔，使其可以用於其他處理程序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="fe8b8-147">**啟用輸出**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="fe8b8-148">您必須啟用追蹤或偵錯才能使用追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="fe8b8-149">下列語法是特定的編譯器。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="fe8b8-150">如果您使用 C# 或 Visual Basic 以外的編譯器，請參閱編譯器的文件。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="fe8b8-151">若要啟用偵錯 C# 中，加入`/d:DEBUG`旗標設為編譯器命令列，當您編譯程式碼，或者您可以加入`#define DEBUG`加入您的檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="fe8b8-152">在 Visual Basic 中，加入`/d:DEBUG=True`編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="fe8b8-153">若要啟用追蹤，在 C# 中的，加入`/d:TRACE`旗標設為編譯器命令列，當您編譯程式碼，或新增`#define TRACE`加入您的檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="fe8b8-154">在 Visual Basic 中，加入`/d:TRACE=True`編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="fe8b8-155">若要設定接聽程式的層級，編輯您的應用程式的組態檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="fe8b8-156">在這個檔案中，您可以加入接聽程式、 設定它的型別和它的參數，方法移除接聽程式，或清除所有先前設定的應用程式的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="fe8b8-157">組態檔應該格式如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="fe8b8-158">針對要執行此範例中，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="fe8b8-159">如需如何取得完整組件名稱資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe8b8-160">初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體，並設定名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-160">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe8b8-161">使用預設的名稱，初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-162">這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>FileLogTraceListener 的類別。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-162">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="fe8b8-163">您可以存取執行個體名稱，透過<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-163">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fe8b8-164"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-164"><see langword="String" />.</span></span> <span data-ttu-id="fe8b8-165">執行個體物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-165">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="fe8b8-166">使用提供的名稱，初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-166">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-167">這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別`name`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-167">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="fe8b8-168">您可以存取的執行個體名稱，以為<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-168">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-169">判斷是否要將輸出附加至目前的檔案，或將其寫入新檔案。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-169">Determines whether to append the output to the current file or write it to a new file.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-170"><see langword="Boolean" />，如果為 <see langword="True" /> 表示會將輸出附加至目前的檔案，如果為 <see langword="False" /> 則表示會將輸出寫入新檔案。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-170"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="fe8b8-171">這個屬性的預設設定為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-171">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-172">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>屬性是`False`，輸出會寫入到新的檔案。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-172">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="fe8b8-173">若屬性是`True`，輸出就會附加至目前的檔案，除非：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-173">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="fe8b8-174">輸出檔案已遭其他處理程序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-174">The output file is locked by another process.</span></span> <span data-ttu-id="fe8b8-175">在此情況下，新的記錄檔會建立與版本號碼，就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-175">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="fe8b8-176">目前檔案大小大於什麼<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性允許。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-176">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="fe8b8-177">在此情況下，額外的訊息會捨棄並視<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-177">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="fe8b8-178">現有的檔案名稱是根據指定的記錄建立排程過期<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-178">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="fe8b8-179">在此情況下，會建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-179">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-180">指出對記錄檔資料流的寫入過程是否會清除緩衝區。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-180">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-181"><see langword="Boolean" />，如果為 <see langword="True" /> 表示會在每次寫入後清除資料流，否則會緩衝記錄項目並且以更有效率的方式寫入。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-181"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="fe8b8-182">這個屬性的預設設定為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-182">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-183">`False`設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>屬性會提供大部分的應用程式的最佳效能，因為它是更有效率的方式一次將多個訊息寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-183">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="fe8b8-184">您可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>排清目前在記錄檔中的任何訊息方法的輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-184">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="fe8b8-185">您也可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法，這個方法會隱含地關閉記錄檔之前排清資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-185">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-186">取得或設定記錄檔的主檔名，該名稱是用來建立完整的記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-186">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-187"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-187"><see langword="String" />.</span></span> <span data-ttu-id="fe8b8-188">記錄檔的主檔名。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-188">The base name for the log files.</span></span> <span data-ttu-id="fe8b8-189">預設為應用程式的產品名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-189">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-190"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性決定記錄檔的基底名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別寫入。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-190">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="fe8b8-191"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性可讓目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-191">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="fe8b8-192">它會產生根據記錄檔路徑、 基底名稱、 日期和數字來區分從不同版本的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-192">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="fe8b8-193">可視需要在建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-193">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="fe8b8-194">明確完整記錄檔名稱的格式，是`path` \\ `baseName`[-`dateStamp`] [-`iteration`].log，其中</span><span class="sxs-lookup"><span data-stu-id="fe8b8-194">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="fe8b8-195">`path`組件由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性和屬性值設定為<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-195">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="fe8b8-196">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-196">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="fe8b8-197">`dateStamp`組件具有格式"YYYY-MM-DD"，並會顯示當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>設<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-197">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="fe8b8-198">如果需要多個記錄檔具有相同`baseName`和`dateStamp`、`iteration`組件正`Integer`，加入至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-198">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe8b8-199">關閉目前記錄檔的基礎資料流，並釋放與目前資料流關聯的任何資源。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-199">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-200">您不需要呼叫<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法明確地因為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別會管理基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-200">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-201">當 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 屬性設定為 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> 時，取得或設定記錄檔目錄。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-201">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-202"><see langword="String" />，這是記錄檔目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-202"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="fe8b8-203">這個屬性的預設值是使用者的應用程式資料目錄。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-203">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-204">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性設定，它也會設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-204">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="fe8b8-205"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性將會擲回例外狀況，如果目錄不能解析。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-205">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-206">取得或設定用來分隔記錄訊息內欄位的分隔符號 (Delimiter)。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-206">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-207"><see langword="String" />，這是用來分隔記錄訊息內之欄位的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-207"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="fe8b8-208">這個屬性的預設值為 TAB 字元。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-208">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-209"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性可讓您變更預設的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-209">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-210">決定當寫入記錄檔而可用的磁碟空間少於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 屬性所指定的空間時，所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-210">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-211"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-211"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="fe8b8-212">決定當寫入記錄檔而可用的磁碟空間少於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 屬性所指定的空間時，或是記錄檔大小大於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 屬性所允許的大小時，所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-212">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="fe8b8-213">預設值是 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-213">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-214">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性設定為<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>，如果不是保留的磁碟空間不足，會以無訊息方式捨棄記錄訊息。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-214">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="fe8b8-215">這是預設行為，並且防止簡單應用程式失敗的磁碟空間不足時。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-215">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="fe8b8-216">更穩固的應用程式可以設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>，並加入`Try...Catch`區塊寫入記錄檔的所有程式碼周圍。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-216">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fe8b8-217"><see langword="True" /> 表示同時釋放 Managed 和 Unmanaged 資源，<see langword="False" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-217"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="fe8b8-218">關閉基礎資料流，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-218">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-219">`disposing` 參數為 `True` 時，這個方法會釋放 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-219">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="fe8b8-220">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-220">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fe8b8-221"><see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-221"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="fe8b8-222">覆寫 <see langword="Dispose" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-222">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
 <span data-ttu-id="fe8b8-223">這個方法會呼叫<see langword="Dispose" />基底類別方法， <see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-223">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-224">取得或設定要在建立新記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-224">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-225"><see cref="T:System.Text.Encoding" />，這是要在建立新記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-225"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="fe8b8-226">此屬性的預設值為 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-226">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-227">時將文字附加到現有的記錄檔，而不是所指定的編碼方式中使用該檔案的編碼方式<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-227">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe8b8-228">清除寫入目前記錄檔的基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-228">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-229">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法將所有緩衝的資料寫入至目前的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-229">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-230">取得目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-230">Gets the current full log-file name.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-231"><see langword="String" />，這是目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-231"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-232"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性可讓目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-232">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="fe8b8-233">它會產生根據記錄檔路徑、 基底名稱、 日期和數字來區分從不同版本的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-233">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="fe8b8-234">可視需要在建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-234">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="fe8b8-235">明確完整的記錄檔名稱的格式，是`path` \\ `baseName`[-`dateStamp`] [-`iteration`].log，其中：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-235">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="fe8b8-236">`path`組件由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性和屬性值設定為<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-236">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="fe8b8-237">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-237">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="fe8b8-238">`dateStamp`組件具有格式 YYYY MM DD，，而且它會顯示當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-238">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="fe8b8-239">如果需要多個記錄檔具有相同`baseName`和`dateStamp`、`iteration`組件正`Integer`，加入至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-239">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe8b8-240">取得追蹤接聽項所支援的自訂 XML 組態屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-240">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns>
          <span data-ttu-id="fe8b8-241"><see langword="String" /> 陣列，含有這個接聽程式可辨認的 XML 組態屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-241"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-242">自訂屬性<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可用於控制行為的執行個體的 XML 組態檔<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-242">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="fe8b8-243">使用任何其他屬性會造成組態例外狀況。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-243">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-244">指出記錄電腦的主機名稱是否應該包含在輸出中。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-244">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-245"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-245"><see langword="Boolean" />.</span></span> <span data-ttu-id="fe8b8-246">如果應該包含主機識別項則使用 <see langword="True" />，否則使用 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-246">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="fe8b8-247">預設值是 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-247">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-248">使用屬性來設定的行為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-248">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-249">取得或設定記錄檔的位置。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-249">Gets or sets location for the log files.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-250"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />，這是記錄檔的位置。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-250"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="fe8b8-251">預設值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-251">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-252">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性設定為其中一個預先定義的路徑，由的記錄檔路徑<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列舉值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-252">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="fe8b8-253">**位置值**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-253">**Location value**</span></span>|<span data-ttu-id="fe8b8-254">**路徑**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-254">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="fe8b8-255">與格式的所有使用者之間共用之應用程式資料路徑：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-255">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="fe8b8-256">一般值`BasePath`是：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-256">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="fe8b8-257">C:\Documents and Settings\All Users\Application 資料</span><span class="sxs-lookup"><span data-stu-id="fe8b8-257">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="fe8b8-258">值`CompanyName`， `ProductName`，和`ProductVersion`來自組件。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-258">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="fe8b8-259">啟動應用程式的可執行檔路徑。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-259">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="fe8b8-260">具有格式的使用者，應用程式資料路徑：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-260">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="fe8b8-261">一般值`BasePath`是：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-261">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="fe8b8-262">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="fe8b8-262">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="fe8b8-263">值`CompanyName`， `ProductName`，和`ProductVersion`會形成組件。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-263">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="fe8b8-264">目前的系統暫存資料夾的路徑。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-264">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="fe8b8-265">如果指定的字串<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>是未清空，然後使用它做為路徑; 否則使用使用者的應用程式資料的路徑。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-265">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-266">決定要包含在記錄檔名稱中的日期。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-266">Determines which date to include in the names of the log files.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-267"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-267"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="fe8b8-268">指出要包含在記錄檔名稱中的日期。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-268">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="fe8b8-269">預設值是 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-269">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-270">將指定的其中一個<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>列舉值來<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性來指定要在記錄檔的名稱中包含的日期。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-270">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="fe8b8-271">日期格式為 YYYY-MM-DD 的-</span><span class="sxs-lookup"><span data-stu-id="fe8b8-271">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="fe8b8-272">記錄檔名稱的格式資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-272">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="fe8b8-273">**LogFileCreationSchedule 值**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-273">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="fe8b8-274">**日期的記錄檔名稱**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-274">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="fe8b8-275">將目前的日期包含在記錄檔名稱中。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-275">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="fe8b8-276">不要在記錄檔名稱中包含日期。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-276">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="fe8b8-277">在記錄檔名稱中包含當週的第一天。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-277">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="fe8b8-278">一週的開始星期六。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-278">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-279">取得或設定允許的記錄檔大小最大值 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-279">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-280"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-280"><see langword="Long" />.</span></span> <span data-ttu-id="fe8b8-281">這是允許的記錄檔大小最大值 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-281">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="fe8b8-282">預設值是 5000000。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-282">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-283">您可以使用這個屬性來確定該記錄檔不會變得太大。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-283">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="fe8b8-284">如果記錄檔大小 （以位元組為單位） 大於此屬性值，然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>值而定的類別會嘗試將訊息寫入記錄檔中，會捨棄該訊息和失敗是無訊息或例外狀況就會擲回<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-284">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="fe8b8-285">否則，訊息會寫入記錄檔，（以位元組為單位） 的可用磁碟空間數量是否小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-285">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fe8b8-286">當這個屬性設定為小於 1000 的值時。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-286">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe8b8-287">取得或設定將訊息寫入記錄檔前所需的可用磁碟空間總數 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-287">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value>
          <span data-ttu-id="fe8b8-288"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-288"><see langword="Long" />.</span></span> <span data-ttu-id="fe8b8-289">這是所需的可用磁碟空間總數。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-289">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="fe8b8-290">預設值為 10000000。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-290">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-291">您可以使用這個屬性來確定該記錄檔未完全填滿磁碟。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-291">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="fe8b8-292">如果數量的可用磁碟空間 （以位元組為單位） 小於的值，這個屬性，然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別嘗試將訊息寫入記錄檔，會捨棄該訊息和失敗是無訊息或例外狀況就會擲回的值而定 <c2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-292">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="fe8b8-293">否則，訊息會寫入記錄檔，如果記錄檔案大小 （以位元組為單位） 大於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-293">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fe8b8-294">當這個屬性設定為小於 0 的值時。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-294">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe8b8-295">將追蹤資料寫入輸出檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-295">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 方法不適合由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="fe8b8-297">會呼叫這些方法的成員<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤輸出的資料。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-297">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="fe8b8-298"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-298">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="fe8b8-299">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-299">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="fe8b8-300">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-300">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="fe8b8-301">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-301">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="fe8b8-302">要發出的追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-302">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="fe8b8-303">寫入追蹤資訊、資料物件，及事件資訊至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-303">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-304">這個方法：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-304">This method:</span></span>  
  
1.  <span data-ttu-id="fe8b8-305">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-305">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="fe8b8-306">若有需要，請建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-306">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="fe8b8-307">您可以將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-307">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="fe8b8-308">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-308">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="fe8b8-309">下表列出的輸出欄位中出現的順序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-309">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="fe8b8-310">欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-310">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="fe8b8-311">**欄位**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-311">**Field**</span></span>|<span data-ttu-id="fe8b8-312">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-312">**Output condition**</span></span>|<span data-ttu-id="fe8b8-313">**描述**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-313">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="fe8b8-314">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-314">Always</span></span>|<span data-ttu-id="fe8b8-315">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-315">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="fe8b8-316">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-316">Always</span></span>|<span data-ttu-id="fe8b8-317">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-317">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="fe8b8-318">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-318">Always</span></span>|<span data-ttu-id="fe8b8-319">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-319">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="fe8b8-320">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-320">Always</span></span>|<span data-ttu-id="fe8b8-321">`data` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-321">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="fe8b8-322">當<xref:System.Diagnostics.TraceOptions.Callstack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-322">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-323"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-323">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="fe8b8-324">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-324">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-325"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-325">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="fe8b8-326">當<xref:System.Diagnostics.TraceOptions.DateTime>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-326">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-327">字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-327">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-328">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-328">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="fe8b8-329">當<xref:System.Diagnostics.TraceOptions.ProcessId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-329">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-330">字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-331">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-331">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="fe8b8-332">當<xref:System.Diagnostics.TraceOptions.ThreadId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-332">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-333"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-333">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="fe8b8-334">當<xref:System.Diagnostics.TraceOptions.Timestamp>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-334">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-335">字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-335">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-336">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-336">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="fe8b8-337">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-337">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="fe8b8-338">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-338">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="fe8b8-339"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-339">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="fe8b8-340">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-340">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="fe8b8-341">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-341">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="fe8b8-342">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-342">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="fe8b8-343">要發出做為資料的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-343">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="fe8b8-344">將追蹤資訊、資料物件的陣列及事件資訊寫入至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-344">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-345">這個方法：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-345">This method:</span></span>  
  
1.  <span data-ttu-id="fe8b8-346">格式化輸出中的資料和內容資訊</span><span class="sxs-lookup"><span data-stu-id="fe8b8-346">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="fe8b8-347">若有需要，建立新的記錄檔，</span><span class="sxs-lookup"><span data-stu-id="fe8b8-347">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="fe8b8-348">您可以將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-348">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="fe8b8-349">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-349">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="fe8b8-350">下表列出的輸出欄位中出現的順序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-350">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="fe8b8-351">欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-351">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="fe8b8-352">**欄位**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-352">**Field**</span></span>|<span data-ttu-id="fe8b8-353">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-353">**Output condition**</span></span>|<span data-ttu-id="fe8b8-354">**描述**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-354">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="fe8b8-355">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-355">Always</span></span>|<span data-ttu-id="fe8b8-356">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-356">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="fe8b8-357">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-357">Always</span></span>|<span data-ttu-id="fe8b8-358">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-358">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="fe8b8-359">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-359">Always</span></span>|<span data-ttu-id="fe8b8-360">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-360">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="fe8b8-361">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-361">Always</span></span>|<span data-ttu-id="fe8b8-362">字串，其中包含每個項目中的字串表示`data`，區隔<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-362">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="fe8b8-363">當<xref:System.Diagnostics.TraceOptions.Callstack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-363">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-364"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-364">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="fe8b8-365">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-365">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-366"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-366">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="fe8b8-367">當<xref:System.Diagnostics.TraceOptions.DateTime>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-367">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-368">字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-368">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-369">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-369">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="fe8b8-370">當<xref:System.Diagnostics.TraceOptions.ProcessId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-370">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-371">字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-372">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-372">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="fe8b8-373">當<xref:System.Diagnostics.TraceOptions.ThreadId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-373">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-374"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-374">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="fe8b8-375">當<xref:System.Diagnostics.TraceOptions.Timestamp>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-375">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-376">字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-376">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-377">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-377">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="fe8b8-378">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-378">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="fe8b8-379">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-379">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe8b8-380">將追蹤和事件資訊寫入輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-380">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 方法不適合由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="fe8b8-382">會呼叫這些方法的成員<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別來寫入追蹤輸出的資料。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-382">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="fe8b8-383"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-383">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="fe8b8-384">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-384">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="fe8b8-385">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-385">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="fe8b8-386">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-386">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="fe8b8-387">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-387">A message to write.</span></span></param>
        <summary><span data-ttu-id="fe8b8-388">將追蹤資訊、訊息和事件資訊寫入至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-388">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-389">這個方法：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-389">This method:</span></span>  
  
1.  <span data-ttu-id="fe8b8-390">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-390">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="fe8b8-391">若有需要，請建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-391">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="fe8b8-392">您可以將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-392">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="fe8b8-393">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-393">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="fe8b8-394">下表列出的輸出欄位以它們出現的順序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-394">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="fe8b8-395">欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-395">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="fe8b8-396">**欄位**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-396">**Field**</span></span>|<span data-ttu-id="fe8b8-397">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-397">**Output condition**</span></span>|<span data-ttu-id="fe8b8-398">**描述**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-398">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="fe8b8-399">永遠。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-399">Always.</span></span>|<span data-ttu-id="fe8b8-400">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-400">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="fe8b8-401">永遠。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-401">Always.</span></span>|<span data-ttu-id="fe8b8-402">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-402">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="fe8b8-403">永遠。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-403">Always.</span></span>|<span data-ttu-id="fe8b8-404">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-404">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="fe8b8-405">永遠。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-405">Always.</span></span>|<span data-ttu-id="fe8b8-406">`message` 的值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-406">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="fe8b8-407">當<xref:System.Diagnostics.TraceOptions.Callstack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-407">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-408"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-408">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="fe8b8-409">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-409">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-410"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-410">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="fe8b8-411">當<xref:System.Diagnostics.TraceOptions.DateTime>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-411">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-412">字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-412">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-413">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-413">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="fe8b8-414">當<xref:System.Diagnostics.TraceOptions.ProcessId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-414">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-415">字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-416">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-416">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="fe8b8-417">當<xref:System.Diagnostics.TraceOptions.ThreadId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-417">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-418"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-418">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="fe8b8-419">當<xref:System.Diagnostics.TraceOptions.Timestamp>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-419">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-420">字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-420">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-421">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-421">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="fe8b8-422">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-422">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="fe8b8-423">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-423">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="fe8b8-424"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-424">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="fe8b8-425">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-425">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="fe8b8-426">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-426">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="fe8b8-427">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-427">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="fe8b8-428">包含零或多個格式項目的格式字串，它與 <c>args</c> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-428">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="fe8b8-429"><see langword="Object" /> 陣列，含有零或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-429">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="fe8b8-430">寫入追蹤資訊、格式化的物件陣列，及事件資訊至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-430">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-431">這個方法：</span><span class="sxs-lookup"><span data-stu-id="fe8b8-431">This method:</span></span>  
  
1.  <span data-ttu-id="fe8b8-432">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-432">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="fe8b8-433">建立新的新的記錄檔，如有必要。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-433">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="fe8b8-434">您可以將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-434">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="fe8b8-435">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-435">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="fe8b8-436">下表列出的輸出欄位以它們出現的順序。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-436">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="fe8b8-437">欄位字串所分隔的<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-437">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="fe8b8-438">**欄位**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-438">**Field**</span></span>|<span data-ttu-id="fe8b8-439">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-439">**Output condition**</span></span>|<span data-ttu-id="fe8b8-440">**描述**</span><span class="sxs-lookup"><span data-stu-id="fe8b8-440">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="fe8b8-441">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-441">Always</span></span>|<span data-ttu-id="fe8b8-442">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-442">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="fe8b8-443">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-443">Always</span></span>|<span data-ttu-id="fe8b8-444">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-444">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="fe8b8-445">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-445">Always</span></span>|<span data-ttu-id="fe8b8-446">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-446">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="fe8b8-447">永遠</span><span class="sxs-lookup"><span data-stu-id="fe8b8-447">Always</span></span>|<span data-ttu-id="fe8b8-448">中的資料`args`以格式化`format`字串，對於字串轉換使用文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-448">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="fe8b8-449">當<xref:System.Diagnostics.TraceOptions.Callstack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-449">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-450"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-450">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="fe8b8-451">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-451">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-452"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-452">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="fe8b8-453">當<xref:System.Diagnostics.TraceOptions.DateTime>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-453">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-454">字串表示<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-454">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-455">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-455">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="fe8b8-456">當<xref:System.Diagnostics.TraceOptions.ProcessId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-456">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-457">字串表示<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-458">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-458">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="fe8b8-459">當<xref:System.Diagnostics.TraceOptions.ThreadId>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-459">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-460"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-460">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="fe8b8-461">當<xref:System.Diagnostics.TraceOptions.Timestamp>設定旗標<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-461">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="fe8b8-462">字串表示<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-462">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="fe8b8-463">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-463">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="fe8b8-464">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-464">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="fe8b8-465">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-465">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="fe8b8-466"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-466"><see langword="String" />.</span></span> <span data-ttu-id="fe8b8-467">要寫入的自訂訊息。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-467">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="fe8b8-468">將訊息逐字寫入磁碟，但不含任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-468">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-469"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>方法會將特定訊息寫入記錄檔，不含任何額外的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-469">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="fe8b8-470">使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法，以在記錄檔輸出中包含的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-470">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="fe8b8-471"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-471"><see langword="String" />.</span></span> <span data-ttu-id="fe8b8-472">要寫入的自訂訊息。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-472">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="fe8b8-473">將訊息逐字寫入磁碟，後面接著目前的行結束字元，但不含任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-473">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8b8-474"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>方法會將特定訊息寫入記錄檔，不含任何額外的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-474">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="fe8b8-475">使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>方法，以在記錄檔輸出中包含的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="fe8b8-475">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>