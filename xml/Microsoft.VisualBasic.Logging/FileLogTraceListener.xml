<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3dda8dbc945755a81e528980b8ccc08173297de" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55318974" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8e374-101">提供簡單的接聽程式，將記錄輸出導向到檔案。</span><span class="sxs-lookup"><span data-stu-id="8e374-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別會提供自動的維護功能，可封存記錄檔，如有需要每日或每個應用程式的基礎。</span><span class="sxs-lookup"><span data-stu-id="8e374-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="8e374-103">此自動封存功能有助於減少維護責任的開發人員和管理員。</span><span class="sxs-lookup"><span data-stu-id="8e374-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="8e374-104">執行個體<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可以加入至<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>或<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>從記錄到文字檔中的輸出重新導向的集合。</span><span class="sxs-lookup"><span data-stu-id="8e374-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="8e374-105">此類別的執行個體也可以加入至`My.Application.Log`或`My.Log`（適用於 Web 應用程式） 在 Visual Basic 應用程式。</span><span class="sxs-lookup"><span data-stu-id="8e374-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="8e374-106">如需詳細資訊，請參閱[逐步解說：變更 My.Application.Log 寫入資訊](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="8e374-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="8e374-107">這個類別的主要功能如下：</span><span class="sxs-lookup"><span data-stu-id="8e374-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="8e374-108">*封存功能*。</span><span class="sxs-lookup"><span data-stu-id="8e374-108">*Archival functionality*.</span></span> <span data-ttu-id="8e374-109">這個類別所產生的記錄檔會命名為根據的基底名稱和日期，以及數字，以區別記錄檔的後續版本中的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="8e374-110">為需要建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="8e374-111">是明確的檔案名稱形式`baseName`[-`dateStamp`] [-`version`].log，其中：</span><span class="sxs-lookup"><span data-stu-id="8e374-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="8e374-112">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="8e374-113">`dateStamp`組件的格式 」-YYYY-MM-DD"，，它會顯示何時<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="8e374-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="8e374-114">如果需要一個以上的記錄檔具有相同`baseName`並`dateStamp`，則`version`部分，正`Integer`，新增至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="8e374-115">*多個類別執行個體*。</span><span class="sxs-lookup"><span data-stu-id="8e374-115">*Multiple class instances*.</span></span> <span data-ttu-id="8e374-116">如果執行個體<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別寫入正在使用中的檔案：</span><span class="sxs-lookup"><span data-stu-id="8e374-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="8e374-117">類別會共用檔案，如果它正由另一個執行個體<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>相同的處理序中的類別。</span><span class="sxs-lookup"><span data-stu-id="8e374-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="8e374-118">類別會建立新的記錄檔，如果檔案正由另一個處理序，請使用下一個可用的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="8e374-119">*執行緒安全*。</span><span class="sxs-lookup"><span data-stu-id="8e374-119">*Thread safety*.</span></span> <span data-ttu-id="8e374-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="8e374-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="8e374-121">這可讓您安全地訊息寫入記錄檔從多個執行緒而不使用鎖定。</span><span class="sxs-lookup"><span data-stu-id="8e374-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="8e374-122">**記錄檔位置**</span><span class="sxs-lookup"><span data-stu-id="8e374-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="8e374-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性所接受<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列舉，來指定要寫入的記錄檔的一般目錄的其中一個。</span><span class="sxs-lookup"><span data-stu-id="8e374-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="8e374-124">若要將記錄寫入另一個位置，設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>至該位置的屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="8e374-125">**記錄檔名稱**</span><span class="sxs-lookup"><span data-stu-id="8e374-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="8e374-126">所指定的記錄檔的基底名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="8e374-127">可讀取目前的記錄檔名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="8e374-128">在檔案系統，它被衍生自數個其他屬性和記錄檔的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="8e374-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="8e374-129">**記錄維護**</span><span class="sxs-lookup"><span data-stu-id="8e374-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="8e374-130">建立新的記錄檔的最小頻率由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="8e374-131">當這個值是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>、 每日或每週至少一次建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="8e374-132">記錄檔的大小上限 （以位元組為單位） 由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="8e374-133">如果記錄檔大小超過此大小，其他訊息寫入記錄檔會捨棄，取決於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 屬性中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8e374-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="8e374-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>屬性會決定必須可使用多少可用空間 （以位元組為單位）。</span><span class="sxs-lookup"><span data-stu-id="8e374-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="8e374-135">這有助於確保<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別將不會取用所有可用磁碟空間。</span><span class="sxs-lookup"><span data-stu-id="8e374-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="8e374-136">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性來指定記錄檔的行為，當有將小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>個位元組可用。</span><span class="sxs-lookup"><span data-stu-id="8e374-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="8e374-137">**記錄檔的輸出設定**</span><span class="sxs-lookup"><span data-stu-id="8e374-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="8e374-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>屬性會指定是否基礎資料流應該會自動清除之後每次寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="8e374-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>屬性會指定是否要將訊息附加至目前的記錄檔，如果允許，或將它們寫入至新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="8e374-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性會指定要用於分隔記錄訊息內欄位的字串。</span><span class="sxs-lookup"><span data-stu-id="8e374-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="8e374-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>屬性會指定要建立新的記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8e374-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="8e374-142">**記錄檔輸出**</span><span class="sxs-lookup"><span data-stu-id="8e374-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="8e374-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法會將訊息寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="8e374-144">這些方法會檢查<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性，以及任何現有的記錄檔具有相同的基底名稱，以判斷是否應該建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="8e374-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法排清目前在記錄檔的輸出緩衝區中的任何訊息。</span><span class="sxs-lookup"><span data-stu-id="8e374-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="8e374-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法會關閉記錄檔，以便可供其他處理序。</span><span class="sxs-lookup"><span data-stu-id="8e374-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="8e374-147">**啟用輸出**</span><span class="sxs-lookup"><span data-stu-id="8e374-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="8e374-148">您必須啟用追蹤或偵錯要使用的追蹤接聽項。</span><span class="sxs-lookup"><span data-stu-id="8e374-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="8e374-149">下列語法是特定的編譯器。</span><span class="sxs-lookup"><span data-stu-id="8e374-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="8e374-150">如果您使用 C# 或 Visual Basic 以外的編譯器時，請參閱編譯器的文件。</span><span class="sxs-lookup"><span data-stu-id="8e374-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="8e374-151">若要啟用偵錯 C# 中，新增`/d:DEBUG`旗標，當您編譯程式碼，或者您可以新增時，編譯器命令列以`#define DEBUG`至檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="8e374-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="8e374-152">在 Visual Basic 中，新增`/d:DEBUG=True`至編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="8e374-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="8e374-153">若要啟用 C# 中的追蹤，請新增`/d:TRACE`旗標來編譯程式碼，或新增時，才會進行編譯器命令列`#define TRACE`至檔案頂端。</span><span class="sxs-lookup"><span data-stu-id="8e374-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="8e374-154">在 Visual Basic 中，新增`/d:TRACE=True`至編譯器命令列的旗標。</span><span class="sxs-lookup"><span data-stu-id="8e374-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="8e374-155">若要設定將接聽程式的層級，編輯您的應用程式的組態檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="8e374-156">在此檔案中，您可以加入接聽程式、 設定其類型和其參數、 移除接聽程式，或清除先前設定的應用程式的所有接聽程式。</span><span class="sxs-lookup"><span data-stu-id="8e374-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="8e374-157">組態檔的格式應該類似下列的範例。</span><span class="sxs-lookup"><span data-stu-id="8e374-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="8e374-158">針對要執行此範例中，您必須提供完整的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8e374-159">如需如何取得完整組件名稱的資訊，請參閱[組件名稱](~/docs/framework/app-domains/assembly-names.md)。</span><span class="sxs-lookup"><span data-stu-id="8e374-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a"><span data-ttu-id="8e374-160">逐步解說：變更 My.Application.Log 寫入資訊的位置</span><span class="sxs-lookup"><span data-stu-id="8e374-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e374-161">初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體，並設定名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e374-162">使用預設的名稱，初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8e374-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-163">這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>FileLogTraceListener 的類別。</span><span class="sxs-lookup"><span data-stu-id="8e374-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="8e374-164">您可以存取執行個體名稱，透過<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8e374-165">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8e374-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8e374-166"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-166"><see langword="String" />.</span></span> <span data-ttu-id="8e374-167">執行個體物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="8e374-168">使用提供的名稱，初始化 <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8e374-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-169">這個方法會設定的執行個體名稱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別來`name`。</span><span class="sxs-lookup"><span data-stu-id="8e374-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="8e374-170">您可以存取執行個體名稱，以為<xref:System.Diagnostics.TraceListener.Name%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8e374-171">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8e374-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-172">判斷是否要將輸出附加至目前的檔案，或將其寫入新檔案。</span><span class="sxs-lookup"><span data-stu-id="8e374-172">Determines whether to append the output to the current file or write it to a new file.</span></span></summary>
        <value><span data-ttu-id="8e374-173"><see langword="Boolean" />，如果為 <see langword="True" /> 表示會將輸出附加至目前的檔案，如果為 <see langword="False" /> 則表示會將輸出寫入新檔案。</span><span class="sxs-lookup"><span data-stu-id="8e374-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="8e374-174">這個屬性的預設設定為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-175">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>屬性是`False`，輸出會寫入到新的檔案。</span><span class="sxs-lookup"><span data-stu-id="8e374-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="8e374-176">若屬性是`True`，將輸出附加至目前的檔案，除非：</span><span class="sxs-lookup"><span data-stu-id="8e374-176">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="8e374-177">輸出檔案已被另一個處理序鎖定。</span><span class="sxs-lookup"><span data-stu-id="8e374-177">The output file is locked by another process.</span></span> <span data-ttu-id="8e374-178">在此情況下，新的記錄檔使用版本號碼，就會合併至建立<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-178">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="8e374-179">目前的檔案大小大於什麼<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>屬性允許。</span><span class="sxs-lookup"><span data-stu-id="8e374-179">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="8e374-180">在此情況下，額外的訊息會捨棄並視<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 屬性中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8e374-180">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="8e374-181">現有的檔案名稱是根據所指定的記錄建立排程過期<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-181">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="8e374-182">在此情況下，建立新的記錄檔和日期戳記就會合併至<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-182">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-183">指出對記錄檔資料流的寫入過程是否會清除緩衝區。</span><span class="sxs-lookup"><span data-stu-id="8e374-183">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="8e374-184"><see langword="Boolean" />，如果為 <see langword="True" /> 表示會在每次寫入後清除資料流，否則會緩衝記錄項目並且以更有效率的方式寫入。</span><span class="sxs-lookup"><span data-stu-id="8e374-184"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="8e374-185">這個屬性的預設設定為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-185">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-186">`False`設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>屬性會提供大部分的應用程式的最佳效能，因為它是更有效率的方式一次將多個訊息寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-186">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="8e374-187">您可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法，以排清目前在記錄檔中的任何訊息的輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="8e374-187">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="8e374-188">您也可以使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法，這個方法會隱含地關閉記錄檔之前清除資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-188">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-189">取得或設定記錄檔的主檔名，該名稱是用來建立完整的記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-189">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="8e374-190"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-190"><see langword="String" />.</span></span> <span data-ttu-id="8e374-191">記錄檔的主檔名。</span><span class="sxs-lookup"><span data-stu-id="8e374-191">The base name for the log files.</span></span> <span data-ttu-id="8e374-192">預設為應用程式的產品名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-192">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-193"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性會決定的基底名稱的記錄檔，<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別寫入。</span><span class="sxs-lookup"><span data-stu-id="8e374-193">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="8e374-194"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性可讓目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-194">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="8e374-195">它是根據記錄檔路徑、 的基底名稱、 日期和數字，以區分它與不同版本的記錄檔中產生。</span><span class="sxs-lookup"><span data-stu-id="8e374-195">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="8e374-196">為需要建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-196">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="8e374-197">完整的記錄檔名稱的明確形式`path` \\ `baseName`[-`dateStamp`] [-`iteration`].log，其中</span><span class="sxs-lookup"><span data-stu-id="8e374-197">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="8e374-198">`path`組件由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性，而如果該屬性值設定為<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>，則<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-198">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="8e374-199">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-199">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="8e374-200">`dateStamp`組件的格式 」-YYYY-MM-DD"，，它會顯示何時<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>設為<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="8e374-200">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="8e374-201">如果需要一個以上的記錄檔具有相同`baseName`並`dateStamp`，則`iteration`部分，正`Integer`，新增至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-201">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e374-202">關閉目前記錄檔的基礎資料流，並釋放與目前資料流關聯的任何資源。</span><span class="sxs-lookup"><span data-stu-id="8e374-202">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-203">您不需要呼叫<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>方法明確地因為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別管理的基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-203">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-204">當 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> 屬性設定為 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> 時，取得或設定記錄檔目錄。</span><span class="sxs-lookup"><span data-stu-id="8e374-204">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="8e374-205"><see langword="String" />，這是記錄檔目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-205"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="8e374-206">這個屬性的預設值是使用者的應用程式資料目錄。</span><span class="sxs-lookup"><span data-stu-id="8e374-206">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-207">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性設定，它也會設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性設<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>。</span><span class="sxs-lookup"><span data-stu-id="8e374-207">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="8e374-208"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性將會擲回例外狀況，如果目錄不能解析。</span><span class="sxs-lookup"><span data-stu-id="8e374-208">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-209">取得或設定用來分隔記錄訊息內欄位的分隔符號 (Delimiter)。</span><span class="sxs-lookup"><span data-stu-id="8e374-209">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="8e374-210"><see langword="String" />，這是用來分隔記錄訊息內之欄位的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="8e374-210"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="8e374-211">這個屬性的預設值為 TAB 字元。</span><span class="sxs-lookup"><span data-stu-id="8e374-211">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-212"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性可讓您變更預設的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="8e374-212">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-213">決定當寫入記錄檔而可用的磁碟空間少於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 屬性所指定的空間時，所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="8e374-213">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="8e374-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="8e374-215">決定當寫入記錄檔而可用的磁碟空間少於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> 屬性所指定的空間時，或是記錄檔大小大於 <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> 屬性所允許的大小時，所要執行的動作。</span><span class="sxs-lookup"><span data-stu-id="8e374-215">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="8e374-216">預設值為 <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-216">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-217">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性設定為<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>，如果沒有足夠的保留的磁碟空間，會以無訊息方式捨棄的記錄訊息。</span><span class="sxs-lookup"><span data-stu-id="8e374-217">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="8e374-218">這是預設行為，而且它會防止從失敗的磁碟空間不足時的簡單應用程式。</span><span class="sxs-lookup"><span data-stu-id="8e374-218">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="8e374-219">更穩固的應用程式可以設定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性，以<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>，並新增`Try...Catch`寫入記錄檔的所有程式碼周圍的區塊。</span><span class="sxs-lookup"><span data-stu-id="8e374-219">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8e374-220"><see langword="True" /> 表示同時釋放 Managed 和 Unmanaged 資源，<see langword="False" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="8e374-220"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8e374-221">關閉基礎資料流，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="8e374-221">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-222">`disposing` 參數為 `True` 時，這個方法會釋放 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="8e374-222">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="8e374-223">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="8e374-223">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8e374-224">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="8e374-224">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8e374-225">覆寫 <see langword="Dispose" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span><span class="sxs-lookup"><span data-stu-id="8e374-225">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="8e374-226">這個方法會呼叫<see langword="Dispose" />基底類別方法， <see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-226">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-227">取得或設定要在建立新記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8e374-227">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="8e374-228"><see cref="T:System.Text.Encoding" />，這是要在建立新記錄檔時使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8e374-228"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="8e374-229">此屬性的預設值為 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-229">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-230">時將文字附加至現有的記錄檔，而不是所指定的編碼方式中使用該檔案的編碼方式<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-230">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e374-231">清除寫入目前記錄檔的基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-231">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-232">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>方法，將所有緩衝的資料寫入目前的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-232">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-233">取得目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-233">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="8e374-234"><see langword="String" />，這是目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-234"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-235"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>屬性可讓目前的完整記錄檔名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-235">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="8e374-236">它是根據記錄檔路徑、 的基底名稱、 日期和數字，以區分它與不同版本的記錄檔中產生。</span><span class="sxs-lookup"><span data-stu-id="8e374-236">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="8e374-237">為需要建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-237">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="8e374-238">完整的記錄檔名稱的明確形式`path` \\ `baseName`[-`dateStamp`] [-`iteration`].log，其中：</span><span class="sxs-lookup"><span data-stu-id="8e374-238">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="8e374-239">`path`組件由<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性，而如果該屬性值設定為<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>，則<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-239">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="8e374-240">`baseName`部分是基本的記錄檔名稱，由指定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-240">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="8e374-241">`dateStamp`組件有格式為 YYYY-MM-DD，，而且它會顯示何時<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>是<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>或<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>。</span><span class="sxs-lookup"><span data-stu-id="8e374-241">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="8e374-242">如果需要一個以上的記錄檔具有相同`baseName`並`dateStamp`，則`iteration`部分，正`Integer`，新增至檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-242">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e374-243">取得追蹤接聽項所支援的自訂 XML 組態屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-243">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="8e374-244"><see langword="String" /> 陣列，含有這個接聽程式可辨認的 XML 組態屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-244"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-245">自訂屬性<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可用來控制行為的執行個體的 XML 組態檔中<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別。</span><span class="sxs-lookup"><span data-stu-id="8e374-245">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="8e374-246">使用任何其他屬性，會造成組態例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8e374-246">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-247">指出記錄電腦的主機名稱是否應該包含在輸出中。</span><span class="sxs-lookup"><span data-stu-id="8e374-247">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="8e374-248"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-248"><see langword="Boolean" />.</span></span> <span data-ttu-id="8e374-249">如果應該包含主機識別項則使用 <see langword="True" />，否則使用 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-249">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="8e374-250">預設值為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-250">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-251">使用屬性來設定的行為<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>和<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8e374-251">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-252">取得或設定記錄檔的位置。</span><span class="sxs-lookup"><span data-stu-id="8e374-252">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="8e374-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />，這是記錄檔的位置。</span><span class="sxs-lookup"><span data-stu-id="8e374-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="8e374-254">預設值為 <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-254">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-255">使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>屬性設為其中一個預先定義的路徑，取決於設定的記錄檔路徑<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列舉值。</span><span class="sxs-lookup"><span data-stu-id="8e374-255">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="8e374-256">**位置值**</span><span class="sxs-lookup"><span data-stu-id="8e374-256">**Location value**</span></span>|<span data-ttu-id="8e374-257">**路徑**</span><span class="sxs-lookup"><span data-stu-id="8e374-257">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="8e374-258">使用格式的所有使用者之間共用的應用程式資料路徑：</span><span class="sxs-lookup"><span data-stu-id="8e374-258">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="8e374-259">一般值`BasePath`是：</span><span class="sxs-lookup"><span data-stu-id="8e374-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="8e374-260">C:\Documents and Settings\All Users\Application Data</span><span class="sxs-lookup"><span data-stu-id="8e374-260">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="8e374-261">值`CompanyName`， `ProductName`，和`ProductVersion`來自組件。</span><span class="sxs-lookup"><span data-stu-id="8e374-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="8e374-262">啟動應用程式的可執行檔路徑。</span><span class="sxs-lookup"><span data-stu-id="8e374-262">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="8e374-263">使用者 （格式） 的應用程式資料路徑：</span><span class="sxs-lookup"><span data-stu-id="8e374-263">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="8e374-264">一般值`BasePath`是：</span><span class="sxs-lookup"><span data-stu-id="8e374-264">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="8e374-265">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="8e374-265">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="8e374-266">值`CompanyName`， `ProductName`，和`ProductVersion`會形成組件。</span><span class="sxs-lookup"><span data-stu-id="8e374-266">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="8e374-267">目前的系統暫存資料夾的路徑。</span><span class="sxs-lookup"><span data-stu-id="8e374-267">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="8e374-268">如果指定的字串<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>不清空，然後使用它做為路徑，否則採用使用者的應用程式資料路徑。</span><span class="sxs-lookup"><span data-stu-id="8e374-268">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-269">決定要包含在記錄檔名稱中的日期。</span><span class="sxs-lookup"><span data-stu-id="8e374-269">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="8e374-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="8e374-271">指出要包含在記錄檔名稱中的日期。</span><span class="sxs-lookup"><span data-stu-id="8e374-271">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="8e374-272">預設值為 <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />。</span><span class="sxs-lookup"><span data-stu-id="8e374-272">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-273">指派其中一個<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>列舉值來<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>屬性來指定要在記錄檔的名稱中包含日期。</span><span class="sxs-lookup"><span data-stu-id="8e374-273">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="8e374-274">日期的格式為 YYYY-MM-DD 的-</span><span class="sxs-lookup"><span data-stu-id="8e374-274">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="8e374-275">如需格式的記錄檔名稱的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-275">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="8e374-276">**LogFileCreationSchedule 值**</span><span class="sxs-lookup"><span data-stu-id="8e374-276">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="8e374-277">**日期的記錄檔名稱**</span><span class="sxs-lookup"><span data-stu-id="8e374-277">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="8e374-278">將目前的日期包含在記錄檔名稱中。</span><span class="sxs-lookup"><span data-stu-id="8e374-278">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="8e374-279">不要在記錄檔名稱中包含日期。</span><span class="sxs-lookup"><span data-stu-id="8e374-279">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="8e374-280">在記錄檔名稱中包含當週的第一天。</span><span class="sxs-lookup"><span data-stu-id="8e374-280">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="8e374-281">一週開始於星期六。</span><span class="sxs-lookup"><span data-stu-id="8e374-281">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-282">取得或設定允許的記錄檔大小最大值 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="8e374-282">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="8e374-283"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-283"><see langword="Long" />.</span></span> <span data-ttu-id="8e374-284">這是允許的記錄檔大小最大值 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="8e374-284">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="8e374-285">預設值是 5000000。</span><span class="sxs-lookup"><span data-stu-id="8e374-285">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-286">您可以使用這個屬性來確定該記錄檔不會變得太大。</span><span class="sxs-lookup"><span data-stu-id="8e374-286">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="8e374-287">如果記錄檔大小 （以位元組為單位） 大於此屬性的值然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別嘗試將訊息寫入記錄檔，會捨棄該訊息和失敗是無訊息或例外狀況會擲回的值而定<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-287">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="8e374-288">否則，訊息寫入記錄檔，（以位元組為單位） 的可用磁碟空間數量小於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-288">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e374-289">當這個屬性設定為小於 1000 的值時。</span><span class="sxs-lookup"><span data-stu-id="8e374-289">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e374-290">取得或設定將訊息寫入記錄檔前所需的可用磁碟空間總數 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="8e374-290">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="8e374-291"><see langword="Long" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-291"><see langword="Long" />.</span></span> <span data-ttu-id="8e374-292">這是所需的可用磁碟空間總數。</span><span class="sxs-lookup"><span data-stu-id="8e374-292">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="8e374-293">預設值為 10000000。</span><span class="sxs-lookup"><span data-stu-id="8e374-293">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-294">您可以使用這個屬性來確定該記錄檔不完全填滿磁碟。</span><span class="sxs-lookup"><span data-stu-id="8e374-294">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="8e374-295">如果數量的可用磁碟空間 （以位元組為單位） 小於此屬性的值然後當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>類別嘗試將訊息寫入記錄檔，會捨棄該訊息和失敗是無訊息或例外狀況會擲回的值而定 <c2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-295">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="8e374-296">否則，訊息會寫入記錄檔，如果記錄檔大小 （以位元組為單位） 大於<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-296">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e374-297">當這個屬性設定為小於 0 的值時。</span><span class="sxs-lookup"><span data-stu-id="8e374-297">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e374-298">將追蹤資料寫入輸出檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-298">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> 方法不適合由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="8e374-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="8e374-300">會呼叫這些方法的成員<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別將追蹤資料寫入至輸出。</span><span class="sxs-lookup"><span data-stu-id="8e374-300">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8e374-301"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-301">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8e374-302">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-302">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="8e374-303">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="8e374-303">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="8e374-304">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="8e374-304">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="8e374-305">要發出的追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="8e374-305">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="8e374-306">寫入追蹤資訊、資料物件，及事件資訊至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-306">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-307">這個方法：</span><span class="sxs-lookup"><span data-stu-id="8e374-307">This method:</span></span>  
  
1.  <span data-ttu-id="8e374-308">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-308">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="8e374-309">若有需要，請建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-309">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="8e374-310">將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-310">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="8e374-311">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-311">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="8e374-312">下表列出的輸出欄位中出現的順序。</span><span class="sxs-lookup"><span data-stu-id="8e374-312">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="8e374-313">分隔欄位的字串，<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="8e374-313">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="8e374-314">**欄位**</span><span class="sxs-lookup"><span data-stu-id="8e374-314">**Field**</span></span>|<span data-ttu-id="8e374-315">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="8e374-315">**Output condition**</span></span>|<span data-ttu-id="8e374-316">**描述**</span><span class="sxs-lookup"><span data-stu-id="8e374-316">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="8e374-317">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-317">Always</span></span>|<span data-ttu-id="8e374-318">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="8e374-318">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="8e374-319">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-319">Always</span></span>|<span data-ttu-id="8e374-320">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="8e374-320">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="8e374-321">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-321">Always</span></span>|<span data-ttu-id="8e374-322">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="8e374-322">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="8e374-323">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-323">Always</span></span>|<span data-ttu-id="8e374-324">`data` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="8e374-324">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="8e374-325">當<xref:System.Diagnostics.TraceOptions.Callstack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-325">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-326"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-326">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="8e374-327">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-327">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-328"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-328">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="8e374-329">當<xref:System.Diagnostics.TraceOptions.DateTime>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-329">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-330">字串表示法<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-331">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-331">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="8e374-332">當<xref:System.Diagnostics.TraceOptions.ProcessId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-332">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-333">字串表示法<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-334">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-334">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="8e374-335">當<xref:System.Diagnostics.TraceOptions.ThreadId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-335">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-336"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="8e374-337">當<xref:System.Diagnostics.TraceOptions.Timestamp>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-337">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-338">字串表示法<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-339">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-339">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="8e374-340">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="8e374-340">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="8e374-341">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-341">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8e374-342"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-342">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8e374-343">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-343">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="8e374-344">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="8e374-344">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="8e374-345">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="8e374-345">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="8e374-346">要發出做為資料的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="8e374-346">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="8e374-347">將追蹤資訊、資料物件的陣列及事件資訊寫入至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-347">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-348">這個方法：</span><span class="sxs-lookup"><span data-stu-id="8e374-348">This method:</span></span>  
  
1.  <span data-ttu-id="8e374-349">將格式化輸出的資料和內容資訊</span><span class="sxs-lookup"><span data-stu-id="8e374-349">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="8e374-350">如有必要，建立新的記錄檔</span><span class="sxs-lookup"><span data-stu-id="8e374-350">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="8e374-351">將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-351">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="8e374-352">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-352">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="8e374-353">下表列出在其出現的順序中的輸出欄位。</span><span class="sxs-lookup"><span data-stu-id="8e374-353">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="8e374-354">分隔欄位的字串，<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="8e374-354">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="8e374-355">**欄位**</span><span class="sxs-lookup"><span data-stu-id="8e374-355">**Field**</span></span>|<span data-ttu-id="8e374-356">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="8e374-356">**Output condition**</span></span>|<span data-ttu-id="8e374-357">**描述**</span><span class="sxs-lookup"><span data-stu-id="8e374-357">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="8e374-358">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-358">Always</span></span>|<span data-ttu-id="8e374-359">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="8e374-359">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="8e374-360">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-360">Always</span></span>|<span data-ttu-id="8e374-361">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="8e374-361">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="8e374-362">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-362">Always</span></span>|<span data-ttu-id="8e374-363">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="8e374-363">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="8e374-364">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-364">Always</span></span>|<span data-ttu-id="8e374-365">字串，其中包含每個項目中的字串表示法`data`，以每個分隔<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-365">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="8e374-366">當<xref:System.Diagnostics.TraceOptions.Callstack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-366">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-367"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-367">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="8e374-368">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-368">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-369"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-369">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="8e374-370">當<xref:System.Diagnostics.TraceOptions.DateTime>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-370">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-371">字串表示法<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-372">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-372">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="8e374-373">當<xref:System.Diagnostics.TraceOptions.ProcessId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-373">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-374">字串表示法<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-375">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-375">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="8e374-376">當<xref:System.Diagnostics.TraceOptions.ThreadId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-376">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-377"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="8e374-378">當<xref:System.Diagnostics.TraceOptions.Timestamp>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-378">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-379">字串表示法<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-380">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-380">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="8e374-381">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="8e374-381">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="8e374-382">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-382">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e374-383">將追蹤和事件資訊寫入輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-383">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> 方法不適合由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="8e374-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="8e374-385">會呼叫這些方法的成員<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>類別將追蹤資料寫入至輸出。</span><span class="sxs-lookup"><span data-stu-id="8e374-385">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8e374-386"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-386">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8e374-387">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-387">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="8e374-388">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="8e374-388">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="8e374-389">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="8e374-389">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="8e374-390">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="8e374-390">A message to write.</span></span></param>
        <summary><span data-ttu-id="8e374-391">將追蹤資訊、訊息和事件資訊寫入至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-391">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-392">這個方法：</span><span class="sxs-lookup"><span data-stu-id="8e374-392">This method:</span></span>  
  
1.  <span data-ttu-id="8e374-393">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-393">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="8e374-394">若有需要，請建立新的記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-394">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="8e374-395">將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-395">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="8e374-396">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-396">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="8e374-397">下表列出的輸出欄位，以其出現的順序。</span><span class="sxs-lookup"><span data-stu-id="8e374-397">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="8e374-398">分隔欄位的字串，<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="8e374-398">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="8e374-399">**欄位**</span><span class="sxs-lookup"><span data-stu-id="8e374-399">**Field**</span></span>|<span data-ttu-id="8e374-400">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="8e374-400">**Output condition**</span></span>|<span data-ttu-id="8e374-401">**描述**</span><span class="sxs-lookup"><span data-stu-id="8e374-401">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="8e374-402">永遠是。</span><span class="sxs-lookup"><span data-stu-id="8e374-402">Always.</span></span>|<span data-ttu-id="8e374-403">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="8e374-403">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="8e374-404">永遠是。</span><span class="sxs-lookup"><span data-stu-id="8e374-404">Always.</span></span>|<span data-ttu-id="8e374-405">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="8e374-405">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="8e374-406">永遠是。</span><span class="sxs-lookup"><span data-stu-id="8e374-406">Always.</span></span>|<span data-ttu-id="8e374-407">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="8e374-407">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="8e374-408">永遠是。</span><span class="sxs-lookup"><span data-stu-id="8e374-408">Always.</span></span>|<span data-ttu-id="8e374-409">`message` 的值。</span><span class="sxs-lookup"><span data-stu-id="8e374-409">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="8e374-410">當<xref:System.Diagnostics.TraceOptions.Callstack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-410">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-411"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-411">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="8e374-412">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-412">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-413"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-413">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="8e374-414">當<xref:System.Diagnostics.TraceOptions.DateTime>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-414">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-415">字串表示法<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-416">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-416">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="8e374-417">當<xref:System.Diagnostics.TraceOptions.ProcessId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-417">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-418">字串表示法<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-419">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-419">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="8e374-420">當<xref:System.Diagnostics.TraceOptions.ThreadId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-420">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-421"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="8e374-422">當<xref:System.Diagnostics.TraceOptions.Timestamp>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-422">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-423">字串表示法<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-424">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-424">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="8e374-425">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="8e374-425">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="8e374-426">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-426">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8e374-427"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-427">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8e374-428">叫用這個方法之追蹤來源的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-428">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="8e374-429">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 列舉值。</span><span class="sxs-lookup"><span data-stu-id="8e374-429">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="8e374-430">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="8e374-430">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="8e374-431">包含零或多個格式項目的格式字串，它與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="8e374-431">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="8e374-432"><see langword="Object" /> 陣列，含有零或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="8e374-432">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="8e374-433">寫入追蹤資訊、格式化的物件陣列，及事件資訊至輸出檔或資料流。</span><span class="sxs-lookup"><span data-stu-id="8e374-433">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-434">這個方法：</span><span class="sxs-lookup"><span data-stu-id="8e374-434">This method:</span></span>  
  
1.  <span data-ttu-id="8e374-435">格式化輸出的資料和內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-435">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="8e374-436">建立新新的記錄檔，如有必要。</span><span class="sxs-lookup"><span data-stu-id="8e374-436">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="8e374-437">將資訊寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="8e374-437">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="8e374-438">如需有關如何建立新的記錄檔的詳細資訊，請參閱<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e374-438">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="8e374-439">下表列出的輸出欄位，以其出現的順序。</span><span class="sxs-lookup"><span data-stu-id="8e374-439">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="8e374-440">分隔欄位的字串，<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>屬性指定，後面接著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="8e374-440">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="8e374-441">**欄位**</span><span class="sxs-lookup"><span data-stu-id="8e374-441">**Field**</span></span>|<span data-ttu-id="8e374-442">**輸出的條件**</span><span class="sxs-lookup"><span data-stu-id="8e374-442">**Output condition**</span></span>|<span data-ttu-id="8e374-443">**描述**</span><span class="sxs-lookup"><span data-stu-id="8e374-443">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="8e374-444">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-444">Always</span></span>|<span data-ttu-id="8e374-445">`name` 的值。</span><span class="sxs-lookup"><span data-stu-id="8e374-445">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="8e374-446">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-446">Always</span></span>|<span data-ttu-id="8e374-447">列舉值名稱`eventType`。</span><span class="sxs-lookup"><span data-stu-id="8e374-447">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="8e374-448">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-448">Always</span></span>|<span data-ttu-id="8e374-449">`id` 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="8e374-449">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="8e374-450">永遠</span><span class="sxs-lookup"><span data-stu-id="8e374-450">Always</span></span>|<span data-ttu-id="8e374-451">中的資料`args`格式化`format`字串和使用的字串轉換的文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="8e374-451">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="8e374-452">當<xref:System.Diagnostics.TraceOptions.Callstack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-452">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-453"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-453">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="8e374-454">當<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-454">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-455"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-455">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="8e374-456">當<xref:System.Diagnostics.TraceOptions.DateTime>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-456">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-457">字串表示法<xref:System.Diagnostics.TraceEventCache.DateTime%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-458">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-458">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="8e374-459">當<xref:System.Diagnostics.TraceOptions.ProcessId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-459">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-460">字串表示法<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-461">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-461">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="8e374-462">當<xref:System.Diagnostics.TraceOptions.ThreadId>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-462">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-463"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="8e374-464">當<xref:System.Diagnostics.TraceOptions.Timestamp>旗標設定<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8e374-464">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="8e374-465">字串表示法<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>屬性`eventCache`。</span><span class="sxs-lookup"><span data-stu-id="8e374-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="8e374-466">而異的文化特性用於字串轉換。</span><span class="sxs-lookup"><span data-stu-id="8e374-466">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="8e374-467">當<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>屬性是`True`。</span><span class="sxs-lookup"><span data-stu-id="8e374-467">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="8e374-468">電腦的名稱。</span><span class="sxs-lookup"><span data-stu-id="8e374-468">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8e374-469"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-469"><see langword="String" />.</span></span> <span data-ttu-id="8e374-470">要寫入的自訂訊息。</span><span class="sxs-lookup"><span data-stu-id="8e374-470">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="8e374-471">將訊息逐字寫入磁碟，但不含任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-471">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-472"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>方法會將特定訊息寫入記錄檔，而不需要任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="8e374-473">使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>記錄輸出中包含的內容資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="8e374-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8e374-474"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8e374-474"><see langword="String" />.</span></span> <span data-ttu-id="8e374-475">要寫入的自訂訊息。</span><span class="sxs-lookup"><span data-stu-id="8e374-475">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="8e374-476">將訊息逐字寫入磁碟，後面接著目前的行結束字元，但不含任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-476">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e374-477"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>方法會將特定訊息寫入記錄檔，而不需要任何其他內容資訊。</span><span class="sxs-lookup"><span data-stu-id="8e374-477">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="8e374-478">使用其中一個<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>記錄輸出中包含的內容資訊的方法。</span><span class="sxs-lookup"><span data-stu-id="8e374-478">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>