<Type Name="ExceptionDispatchInfo" FullName="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
  <TypeSignature Language="C#" Value="public sealed class ExceptionDispatchInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionDispatchInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionDispatchInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionDispatchInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a4523-101">代表在程式碼中某一點擷取其狀態的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a4523-101">Represents an exception whose state is captured at a certain point in code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4523-102"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo>物件會儲存在點擷取其中包含的例外狀況的 Watson 資訊與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="a4523-102">The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</span></span> <span data-ttu-id="a4523-103">可以被擲回例外狀況在其他時候，甚至是另一個執行緒上呼叫<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a4523-103">The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a4523-104">如果為具有來自何處擷取點的點，會擲回例外狀況所在<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="a4523-104">The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.</span></span>  
  
 <span data-ttu-id="a4523-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> 無法序列化，而不是跨應用程式定義域界限。</span><span class="sxs-lookup"><span data-stu-id="a4523-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (source As Exception) As ExceptionDispatchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ Capture(Exception ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ExceptionServices.ExceptionDispatchInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a4523-106">例外狀況的狀態已擷取，並用傳回的物件表示。</span><span class="sxs-lookup"><span data-stu-id="a4523-106">The exception whose state is captured, and which is represented by the returned object.</span></span></param>
        <summary><span data-ttu-id="a4523-107">建立表示在程式碼目前作業點上指定之例外狀況的 <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a4523-107">Creates an <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object that represents the specified exception at the current point in code.</span></span></summary>
        <returns><span data-ttu-id="a4523-108">表示在程式碼中目前作業點上指定之例外狀況的物件。</span><span class="sxs-lookup"><span data-stu-id="a4523-108">An object that represents the specified exception at the current point in code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4523-109">您可以使用<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo>由這個方法在其他時候，甚至是在指定的例外狀況重新擲回的另一個執行緒上如同例外狀況必須來自其中擷取點，它重新擲回此點的物件。</span><span class="sxs-lookup"><span data-stu-id="a4523-109">You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</span></span>  
  
 <span data-ttu-id="a4523-110">如果例外狀況時擷取的作用中、 目前的堆疊追蹤資訊和 Watson 資訊中包含的例外狀況會儲存。</span><span class="sxs-lookup"><span data-stu-id="a4523-110">If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</span></span>  <span data-ttu-id="a4523-111">如果非使用中，也就是說，如果它不被擲回，它不會有任何堆疊追蹤資訊或 Watson 資訊。</span><span class="sxs-lookup"><span data-stu-id="a4523-111">If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a4523-112"><paramref name="source" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a4523-112"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SourceException">
      <MemberSignature Language="C#" Value="public Exception SourceException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception SourceException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ SourceException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4523-113">取得目前執行個體所表示的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a4523-113">Gets the exception that is represented by the current instance.</span></span></summary>
        <value><span data-ttu-id="a4523-114">目前執行個體所表示的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a4523-114">The exception that is represented by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4523-115">這個屬性可由工作平行程式庫，例如，來結合多個例外狀況中的<xref:System.AggregateException>物件。</span><span class="sxs-lookup"><span data-stu-id="a4523-115">This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object.</span></span> <span data-ttu-id="a4523-116">它不是由應用程式程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="a4523-116">It is not intended to be used by application code.</span></span> <span data-ttu-id="a4523-117">使用<xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A>還原所擷取的例外狀況的狀態，並擲回它的方法。</span><span class="sxs-lookup"><span data-stu-id="a4523-117">Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public void Throw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Throw() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw" />
      <MemberSignature Language="VB.NET" Value="Public Sub Throw ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Throw();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4523-118">在還原擷取例外狀況時所儲存的狀態之後，擲回目前<see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />物件表示的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a4523-118">Throws the exception that is represented by the current <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object, after restoring the state that was saved when the exception was captured.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4523-119">堆疊追蹤以指出還原點還原例外狀況時，插入下列字串: 「 從先前的位置已在擲回例外狀況的堆疊追蹤結束 」。</span><span class="sxs-lookup"><span data-stu-id="a4523-119">When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</span></span> <span data-ttu-id="a4523-120">這是內部的例外狀況或封送處理的例外狀況，會以堆疊追蹤的方式類似。</span><span class="sxs-lookup"><span data-stu-id="a4523-120">This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static void Throw (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Throw(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Throw (source As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Throw(Exception ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>