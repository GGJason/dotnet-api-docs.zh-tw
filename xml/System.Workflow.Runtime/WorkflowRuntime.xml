<Type Name="WorkflowRuntime" FullName="System.Workflow.Runtime.WorkflowRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62912a088109489fa3be1e9eac166682f7501112" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391141" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WorkflowRuntime extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowRuntime&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type WorkflowRuntime = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="04f7c-101">代表工作流程的工作流程執行階段引擎提供的可設定執行環境。</span><span class="sxs-lookup"><span data-stu-id="04f7c-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="04f7c-102"><xref:System.Workflow.Runtime.WorkflowRuntime> 會公開主應用程式和服務需要的功能以設定和控制工作流程執行階段引擎，以及收到變更工作流程執行階段引擎與其任何工作流程執行個體的通知。</span><span class="sxs-lookup"><span data-stu-id="04f7c-102"><xref:System.Workflow.Runtime.WorkflowRuntime> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-103">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-103">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-104">它提供如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 建構函式 (Constructor)、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 方法的範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-104">It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods.</span></span> <span data-ttu-id="04f7c-105">程式碼也會顯示在工作流程主機中使用 <xref:System.Workflow.Runtime.WorkflowInstance> 方法建立 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 物件的建議方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-105">The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span> <span data-ttu-id="04f7c-106">同時也會顯示如何設定 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 事件的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="04f7c-106">It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.</span></span>  
  
 <span data-ttu-id="04f7c-107">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-107">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="04f7c-108">此型別具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="04f7c-108">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f7c-109">初始化 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f7c-110">初始化 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-111"><xref:System.Workflow.Runtime.WorkflowRuntime> 是以預設的屬性值初始化，而且包含預設的核心服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-111">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized with the default property values and contains the default core services.</span></span> <span data-ttu-id="04f7c-112">若要額外設定工作流程執行階段引擎，您可以使用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 和 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> 來加入或移除服務，而且您可以設定 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-112">To additionally configure the workflow run-time engine, you can add and remove services by using <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> and <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, and you can set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span></span> <span data-ttu-id="04f7c-113">設定 <xref:System.Workflow.Runtime.WorkflowRuntime> 後，呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 以啟動工作流程執行階段引擎及其服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-113">After the <xref:System.Workflow.Runtime.WorkflowRuntime> is configured, call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> to start the workflow run-time engine and its services.</span></span>  
  
 <span data-ttu-id="04f7c-114">下表顯示 <xref:System.Workflow.Runtime.WorkflowRuntime> 類別執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="04f7c-114">The following table shows initial property values for an instance of <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
|<span data-ttu-id="04f7c-115">屬性</span><span class="sxs-lookup"><span data-stu-id="04f7c-115">Property</span></span>|<span data-ttu-id="04f7c-116">初始值</span><span class="sxs-lookup"><span data-stu-id="04f7c-116">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|<span data-ttu-id="04f7c-117">"WorkflowRuntime"</span><span class="sxs-lookup"><span data-stu-id="04f7c-117">"WorkflowRuntime"</span></span>|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>|`false`|  
  
 <span data-ttu-id="04f7c-118">預設的核心服務有：<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 和 <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-118">The default core services are <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-119">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-119">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-120">它提供如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 建構函式建立 <xref:System.Workflow.Runtime.WorkflowRuntime> 的執行個體，以及存取它的方法和事件的範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-120">It provides an example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.</span></span>  
  
 <span data-ttu-id="04f7c-121">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-121">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (string configSectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configSectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configSectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::String ^ configSectionName);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : string -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime configSectionName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configSectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSectionName"><span data-ttu-id="04f7c-122">應用程式組態檔中有效 <see langword="workflowSettings" /> 區段的名稱。</span><span class="sxs-lookup"><span data-stu-id="04f7c-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span></span></param>
        <summary><span data-ttu-id="04f7c-123">使用指定的應用程式組態檔區段，初始化 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-124">根據 <xref:System.Workflow.Runtime.WorkflowRuntime> 在應用程式組態檔中指定之區段中的設定初始化 `configSectionName`。</span><span class="sxs-lookup"><span data-stu-id="04f7c-124">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized according to the settings in the section specified by `configSectionName` in the application configuration file.</span></span> <span data-ttu-id="04f7c-125">`configSectionName` 必須對應至有效`workflowSettings`組態檔區段。</span><span class="sxs-lookup"><span data-stu-id="04f7c-125">`configSectionName` must correspond to a valid `workflowSettings` section of a configuration file.</span></span>  
  
 <span data-ttu-id="04f7c-126">當工作流程執行階段引擎設定使用應用程式組態檔時，它會載入並具現化中所列之類型的類別`Services`組態檔區段。</span><span class="sxs-lookup"><span data-stu-id="04f7c-126">When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the `Services` section of the configuration file.</span></span> <span data-ttu-id="04f7c-127">工作流程執行階段引擎建構這些類別時，會依序使用下列特徵標記尋找類別建構函式：</span><span class="sxs-lookup"><span data-stu-id="04f7c-127">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="04f7c-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="04f7c-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="04f7c-129">Service(WorkflowRuntime runtime)</span><span class="sxs-lookup"><span data-stu-id="04f7c-129">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="04f7c-130">Service(NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="04f7c-130">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="04f7c-131">Service()</span><span class="sxs-lookup"><span data-stu-id="04f7c-131">Service()</span></span>  
  
 <span data-ttu-id="04f7c-132">所有自組態檔載入的服務類別必須至少實作這些建構函式簽章中的其中一個。</span><span class="sxs-lookup"><span data-stu-id="04f7c-132">All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</span></span>  
  
 <span data-ttu-id="04f7c-133">如需詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-133">For more information, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-134"><paramref name="configSectionName" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-134"><paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04f7c-135">在應用程式組態檔中找不到有效的 <see langword="workflowSettings" /> 區段。</span><span class="sxs-lookup"><span data-stu-id="04f7c-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-136">已存在此應用程式定義域的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As WorkflowRuntimeSection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::Workflow::Runtime::Configuration::WorkflowRuntimeSection ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : System.Workflow.Runtime.Configuration.WorkflowRuntimeSection -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="04f7c-137"><see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></param>
        <summary><span data-ttu-id="04f7c-138">使用指定的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 中的設定，初始化 <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-139">這個建構函式為不使用應用程式組態檔的主機提供了一個機制，可使用單一呼叫方法來設定工作流程執行階段引擎。</span><span class="sxs-lookup"><span data-stu-id="04f7c-139">This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</span></span> <span data-ttu-id="04f7c-140">不使用應用程式組態檔的原因很多。</span><span class="sxs-lookup"><span data-stu-id="04f7c-140">There are many reasons for not using the application configuration file.</span></span> <span data-ttu-id="04f7c-141">主機可能在不允許使用組態檔的環境中執行，例如，基於安全因素而不允許從應用程式組態檔中讀取的受信任環境。</span><span class="sxs-lookup"><span data-stu-id="04f7c-141">A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</span></span> <span data-ttu-id="04f7c-142">此外，主機可能想要使用專屬的組態機制，例如，主機可能將工作流程執行階段引擎組態設定儲存在 SQL 資料庫中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-142">Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</span></span>  
  
 <span data-ttu-id="04f7c-143">工作流程執行階段引擎會載入 <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType> 包含型別的類別，並將這些類別個體化。</span><span class="sxs-lookup"><span data-stu-id="04f7c-143">The workflow run-time engine loads and instantiates classes of the types contained in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f7c-144">工作流程執行階段引擎建構這些類別時，會依序使用下列特徵標記尋找類別建構函式：</span><span class="sxs-lookup"><span data-stu-id="04f7c-144">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="04f7c-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="04f7c-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="04f7c-146">Service(WorkflowRuntime runtime)</span><span class="sxs-lookup"><span data-stu-id="04f7c-146">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="04f7c-147">Service(NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="04f7c-147">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="04f7c-148">Service()</span><span class="sxs-lookup"><span data-stu-id="04f7c-148">Service()</span></span>  
  
 <span data-ttu-id="04f7c-149">所有在 `settings` 中指定的服務類別必須至少實作這些建構函式簽章中的其中一個。</span><span class="sxs-lookup"><span data-stu-id="04f7c-149">All service classes that are specified in `settings` must implement at least one of these constructor signatures.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-150"><paramref name="settings" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-150"><paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-151">已存在此應用程式定義域的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : obj -&gt; unit" Usage="workflowRuntime.AddService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="04f7c-152">物件，表示要新增的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-152">An object that represents the service to add.</span></span></param>
        <summary><span data-ttu-id="04f7c-153">加入指定的服務至工作流程執行階段引擎。</span><span class="sxs-lookup"><span data-stu-id="04f7c-153">Adds the specified service to the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-154">您可以透過加入核心服務來設定工作流程執行階段引擎。</span><span class="sxs-lookup"><span data-stu-id="04f7c-154">You can configure the workflow run-time engine by adding core services.</span></span> <span data-ttu-id="04f7c-155">核心服務是衍生自下列任一服務基底類別 (Base Class) 的服務：<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 類別。</span><span class="sxs-lookup"><span data-stu-id="04f7c-155">Core services are those that derive from any of the following service base classes: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="04f7c-156">核心服務只能加入，當工作流程執行階段引擎未在執行中;也就是說，當<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="04f7c-156">Core services can only be added when the workflow run-time engine is not running; that is, when <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false`.</span></span> <span data-ttu-id="04f7c-157"><xref:System.Workflow.Runtime.WorkflowRuntime> 也可以當做其他服務的儲存容器使用，其他工作流程或主機上執行的應用程式也可以使用。</span><span class="sxs-lookup"><span data-stu-id="04f7c-157">The <xref:System.Workflow.Runtime.WorkflowRuntime> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</span></span> <span data-ttu-id="04f7c-158">如果您在工作流程執行階段引擎啟動後，加入衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的非核心服務，則 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 會呼叫該服務實作的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-158">If you add a non-core service that derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class after the workflow run-time engine has been started, <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by that service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f7c-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 會強制限制不能有兩個屬於相同 <xref:System.Type> 的服務加入至 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> enforces the restriction that no two services of the same <xref:System.Type> can be added to the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="04f7c-160">然而，您可以加入衍生自相同基底類別的多個服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-160">However, you can add multiple services that derive from the same base class.</span></span>  <span data-ttu-id="04f7c-161"><xref:System.Workflow.Runtime.WorkflowRuntime> 中，只能加入各一個衍生自下列服務基底類別的服務：<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 類別和 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別。</span><span class="sxs-lookup"><span data-stu-id="04f7c-161">There can be only one service derived from each of the following service base classes in the <xref:System.Workflow.Runtime.WorkflowRuntime>: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, and the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="04f7c-162">如果加入多個衍生自這些類別其中之一的服務 (例如兩個持續性服務)，<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-162">If you add multiple services derived from one of these classes, for example two persistence services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-163">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-163">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-164">提供如何使用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 方法，將 <xref:System.Workflow.Activities.ExternalDataExchangeService> 與 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 加入工作流程執行階段引擎的範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-164">It provides example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.</span></span>  
  
 <span data-ttu-id="04f7c-165">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkId=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-165">This code example is part of the [Cancelling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-166"><paramref name="service" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-166"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-167"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-168"><paramref name="service" /> 已向工作流程執行階段引擎註冊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-168"><paramref name="service" /> is already registered with the workflow run-time engine.</span></span>  
  
<span data-ttu-id="04f7c-169">-或-</span><span class="sxs-lookup"><span data-stu-id="04f7c-169">-or-</span></span> 
 <span data-ttu-id="04f7c-170"><paramref name="service" /> 是核心服務，而且工作流程執行階段引擎已經在執行中 (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> 是 <see langword="true" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-170"><paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateWorkflow">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04f7c-171">使用指定的參數建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-171">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-172">如果工作流程執行階段引擎尚未啟動，<xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 方法會呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-172">If the workflow run-time engine has not been started, the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> methods call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="04f7c-173">如需可能的例外狀況清單，請參閱 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-173">See <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> for a list of possible exceptions.</span></span> <span data-ttu-id="04f7c-174">建立工作流程執行個體後，呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> 方法傳回之 <xref:System.Workflow.Runtime.WorkflowInstance> 物件上的 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 以開始其執行。</span><span class="sxs-lookup"><span data-stu-id="04f7c-174">After you create the workflow instance, call <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> on the <xref:System.Workflow.Runtime.WorkflowInstance> object returned by the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method to begin its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="04f7c-175">要建立之工作流程的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-175">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <summary><span data-ttu-id="04f7c-176">使用指定的工作流程 <see cref="T:System.Type" /> 建立新的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-176">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-177">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-177">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-178">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-178">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-179">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-179">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-180">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-180">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-181">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-181">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-182">下列程式碼範例將示範如何在使用 <xref:System.Workflow.Runtime.WorkflowInstance> 方法的工作流程主機中，以建議的方法建立 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 物件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-182">The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span>  
  
 <span data-ttu-id="04f7c-183">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-183">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-184"><paramref name="workflowType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-184"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowDefinitionReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="04f7c-185">包含工作流程定義的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-185">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <summary><span data-ttu-id="04f7c-186">使用指定的 <see cref="T:System.Xml.XmlReader" /> 建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-186">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-187">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-187">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-188">工作流程執行個體是從 <xref:System.Xml.XmlReader> 參考的 XAML 工作流程定義檔建立。</span><span class="sxs-lookup"><span data-stu-id="04f7c-188">The workflow instance is created from a XAML workflow definition file referenced by the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="04f7c-189">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-189">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-190">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-190">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-191">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-191">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-192">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-192">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-193">下列程式碼範例將示範如何使用指定的 XAML 工作流程定義來建立工作流程。</span><span class="sxs-lookup"><span data-stu-id="04f7c-193">The following example demonstrates how to create a workflow given a XAML-based workflow definition.</span></span>  
  
```  
static void Main(string[] args)  
{  
    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  
    {  
        AutoResetEvent waitHandle = new AutoResetEvent(false);  
        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  
        {  
            waitHandle.Set();  
        };  
        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  
        {  
            Console.WriteLine(e.Exception.Message);  
            waitHandle.Set();  
        };  
  
        TypeProvider typeProvider = new TypeProvider(null);  
        // Add referenced assemblies, if needed  
        // typeProvider.AddAssembly(...);  
        workflowRuntime.AddService(typeProvider);  
  
        using (XmlReader reader = XmlReader.Create("Workflow1.xoml"))  
        {  
            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  
            instance.Start();  
        }  
  
        waitHandle.WaitOne();  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-194"><paramref name="workflowDefinitionReader" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-194"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-195"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-195">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="04f7c-196">要建立之工作流程的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-196">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="04f7c-197">由字串建立索引鍵之物件的 <see cref="T:System.Collections.Generic.Dictionary`2" />，代表工作流程的引數。</span><span class="sxs-lookup"><span data-stu-id="04f7c-197">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="04f7c-198">使用指定的工作流程 <see cref="T:System.Type" /> 和指定之 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的工作流程之引數來建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-198">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-199">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-199">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-200">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-200">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-201">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-201">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-202">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-202">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-203">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-203">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="04f7c-204">如需範例的參數傳入`CreateWorkflow`，請參閱 <<c2> [ 搭配工作流程參數範例](https://go.microsoft.com/fwlink/?LinkId=157403)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-204">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkId=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-205"><paramref name="workflowType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-205"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="04f7c-206">要建立之工作流程的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-206">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="04f7c-207">由字串建立索引鍵之物件的 <see cref="T:System.Collections.Generic.Dictionary`2" />，代表工作流程的引數。</span><span class="sxs-lookup"><span data-stu-id="04f7c-207">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="04f7c-208">要建立之特定 <see cref="T:System.Guid" /> 的 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-208">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="04f7c-209">使用指定的參數建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-209">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="04f7c-210">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-210">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-211">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-211">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-212">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-212">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-213">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-213">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-214">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-214">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="04f7c-215">`instanceId` 載入的任何執行中工作流程的工作流程 <xref:System.Workflow.Runtime.WorkflowRuntime> 必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="04f7c-215">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="04f7c-216">如果傳遞 `instanceId` 以建立工作流程，而且某個執行中的工作流程已在使用該 `instanceId`，則會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-216">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="04f7c-217">如需範例的參數傳入`CreateWorkflow`，請參閱 <<c2> [ 搭配工作流程參數範例](https://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-217">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-218"><paramref name="workflowType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-218"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="04f7c-219">包含工作流程定義的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-219">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="04f7c-220"><see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-220">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="04f7c-221">由字串建立索引鍵之物件的 <see cref="T:System.Collections.Generic.Dictionary`2" />，代表工作流程的引數。</span><span class="sxs-lookup"><span data-stu-id="04f7c-221">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="04f7c-222">使用指定的 <see cref="T:System.Xml.XmlReader" /> 物件和包含在指定之 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的引數建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-222">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-223">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-223">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-224">工作流程執行個體是從 <xref:System.Xml.XmlReader> 參考的工作流程定義和 `namedArgumentValues` 提供的引數來建立。</span><span class="sxs-lookup"><span data-stu-id="04f7c-224">The workflow instance is created from the workflow definition referenced by the <xref:System.Xml.XmlReader> and the arguments supplied by `namedArgumentValues`.</span></span>  
  
 <span data-ttu-id="04f7c-225">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-225">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-226">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-226">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-227">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-227">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-228">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-228">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="04f7c-229">如需範例的參數傳入`CreateWorkflow`，請參閱 <<c2> [ 搭配工作流程參數範例](https://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-229">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="04f7c-230">如需使用在 XML 中定義的規則的範例，請參閱 < [IfElse 規則範例](https://go.microsoft.com/fwlink/?LinkId=157404)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-230">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkId=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-231"><paramref name="workflowDefinitionReader" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-231"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-232"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-232">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="04f7c-233">包含工作流程定義的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-233">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="04f7c-234"><see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-234">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="04f7c-235">由字串建立索引鍵之物件的 <see cref="T:System.Collections.Generic.Dictionary`2" />，代表工作流程的引數。</span><span class="sxs-lookup"><span data-stu-id="04f7c-235">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="04f7c-236">要建立之特定 <see cref="T:System.Guid" /> 的 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-236">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="04f7c-237">使用指定的參數建立工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-237">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="04f7c-238">建立的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-238">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-239">建立 <xref:System.Workflow.Runtime.WorkflowInstance> 之前，系統會針對它執行驗證。</span><span class="sxs-lookup"><span data-stu-id="04f7c-239">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="04f7c-240">如果發生任何驗證錯誤，就會擲回 <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-240">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="04f7c-241">這對於簡單案例很有用，但是在伺服器環境中，針對每一個啟動過程重新驗證工作流程可能是不必要的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="04f7c-241">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="04f7c-242">如需有關如何停用驗證的詳細資訊，請參閱<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-242">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="04f7c-243">`instanceId` 載入的任何執行中工作流程的工作流程 <xref:System.Workflow.Runtime.WorkflowRuntime> 必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="04f7c-243">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="04f7c-244">如果傳遞 `instanceId` 以建立工作流程，而且某個執行中的工作流程已在使用該 `instanceId`，則會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-244">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="04f7c-245">如需範例的參數傳入`CreateWorkflow`，請參閱 <<c2> [ 搭配工作流程參數範例](https://go.microsoft.com/fwlink/?LinkID=157403)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-245">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="04f7c-246">如需使用在 XML 中定義的規則的範例，請參閱 < [IfElse 規則範例](https://go.microsoft.com/fwlink/?LinkID=157404)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-246">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkID=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-247"><paramref name="workflowType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-247"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="workflowRuntime.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f7c-248">釋放 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 使用的資源。</span><span class="sxs-lookup"><span data-stu-id="04f7c-248">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-249">若要正常關閉 <xref:System.Workflow.Runtime.WorkflowRuntime>，您應該在呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 之後呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-249">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, you should only call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> after you have called <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span> <span data-ttu-id="04f7c-250">這是因為，單獨呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法，會使 <xref:System.Workflow.Runtime.WorkflowRuntime> 變成無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="04f7c-250">This is because calling the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method alone leaves the <xref:System.Workflow.Runtime.WorkflowRuntime> in an unusable state.</span></span> <span data-ttu-id="04f7c-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 會透過關閉開啟的檔案控制代碼、資料庫連接等方法釋放執行階段使用的資源，但不會卸載工作流程執行個體、停止服務，或執行 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 所做的任何其他動作。</span><span class="sxs-lookup"><span data-stu-id="04f7c-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> does.</span></span>  
  
 <span data-ttu-id="04f7c-252">只有當主應用程式必須在記憶體回收行程自動釋放 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 使用的資源之前進行釋放時，才應該呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-252"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> should be called only when the host application must free the resources used by the <xref:System.Workflow.Runtime.WorkflowRuntime> before they are automatically freed by the garbage collector.</span></span> <span data-ttu-id="04f7c-253">如需一般資訊<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>，請參閱 <<c2> [ 清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-253">For general information about <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-254">下列範例示範如何呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 物件上的 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-254">The following example demonstrates how to call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> on a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="04f7c-255">在這個範例中，會從應用程式主要表單的 FormClosing 事件處理常式呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法。這樣可確保應用程式關閉時，會適當地清理執行階段建立的物件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-255">In this sample, the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</span></span> <span data-ttu-id="04f7c-256">這個範例是來自[語音應用程式範例](https://go.microsoft.com/fwlink/?LinkId=157405)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-256">This sample is from the [Speech Application Sample](https://go.microsoft.com/fwlink/?LinkId=157405).</span></span>  
  
 [!code-csharp[WF_Samples#108](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#108)]
 [!code-vb[WF_Samples#108](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; GetAllServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; GetAllServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices (serviceType As Type) As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ GetAllServices(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : Type -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;obj&gt;" Usage="workflowRuntime.GetAllServices serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="04f7c-257">服務必須實作才能傳回的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-257">The <see cref="T:System.Type" /> that services must implement to be returned.</span></span></param>
        <summary><span data-ttu-id="04f7c-258">擷取已加入工作流程執行階段引擎的所有服務，這些服務實作或衍生自指定的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-258">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-259">實作或衍生自指定 <see cref="T:System.Type" /> 的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-259">Services that implement or derive from the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-260">空的 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 表示沒有任何實作或衍生自指定之 <xref:System.Type> 的服務加入工作流程執行階段引擎中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-260">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services that implement or derive from the specified <xref:System.Type> have been added to the workflow run-time engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-261">下列範例示範如何從 <xref:System.Workflow.Runtime.WorkflowRuntime> 物件擷取指定類型的所有服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-261">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#19](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#19)]
 [!code-vb[WF_Samples#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-262"><paramref name="serviceType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-262"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-263"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-263">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetAllServices&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetAllServices&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices(Of T) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetAllServices();" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="workflowRuntime.GetAllServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="04f7c-264">服務類型。</span><span class="sxs-lookup"><span data-stu-id="04f7c-264">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="04f7c-265">擷取已加入工作流程執行階段引擎的所有服務，這些服務實作或衍生自指定的泛型型別。</span><span class="sxs-lookup"><span data-stu-id="04f7c-265">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="04f7c-266">實作或衍生自指定泛型型別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-266">Services that implement or derive from the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-267">空的 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 表示沒有任何實作或衍生自指定之泛型型別的服務加入工作流程執行階段引擎中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-267">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-268">下列範例示範如何從 <xref:System.Workflow.Runtime.WorkflowRuntime> 物件擷取指定類型的所有服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-268">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#6](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#6)]
 [!code-vb[WF_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-269"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-269">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedWorkflows () As ReadOnlyCollection(Of WorkflowInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowInstance ^&gt; ^ GetLoadedWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetLoadedWorkflows : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;" Usage="workflowRuntime.GetLoadedWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f7c-270">取得集合，其中包含目前載入記憶體內的所有工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-270">Gets a collection that contains all the workflow instances currently loaded in memory.</span></span></summary>
        <returns><span data-ttu-id="04f7c-271">目前載入記憶體中之每個工作流程執行個體的 <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-271">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-272">請注意，與 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 不同的是，如果執行階段未啟動，這個方法不會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-272">Note that, unlike <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, this method does not throw a <xref:System.InvalidOperationException> if the runtime is not started.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-273">下列範例示範如何從 <xref:System.Workflow.Runtime.WorkflowRuntime> 物件擷取已載入之工作流程的集合。</span><span class="sxs-lookup"><span data-stu-id="04f7c-273">The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#18](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#18)]
 [!code-vb[WF_Samples#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-274"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-274">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowRuntime.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="04f7c-275">要擷取之服務的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-275">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="04f7c-276">從工作流程執行階段引擎中擷取屬於指定 <see cref="T:System.Type" /> 的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-276">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="04f7c-277">屬於指定 <see cref="T:System.Type" /> 的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-277">The service of the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-278">如果存在一個以上屬於指定之 <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> 的服務，<xref:System.InvalidOperationException> 會擲回 <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-278"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified <xref:System.Type>.</span></span> <span data-ttu-id="04f7c-279">因此，如果 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> 有多個屬於指定型別的服務，您應該使用其中一個 <xref:System.Workflow.Runtime.WorkflowRuntime> 的多載方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-279">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the specified type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="04f7c-280">例如，工作流程執行階段引擎可能有多個追蹤服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-280">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="04f7c-281">如果利用指定 <xref:System.Workflow.Runtime.Tracking.TrackingService> 基底類別的方式要求追蹤服務，可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="04f7c-281">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-282"><paramref name="serviceType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-282"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-283">已經處置 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-283">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-284">找到一個以上的 <paramref name="serviceType" /> 類型的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-284">More than one service of type <paramref name="serviceType" /> was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetService&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetService&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetService();" />
      <MemberSignature Language="F#" Value="member this.GetService : unit -&gt; 'T" Usage="workflowRuntime.GetService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="04f7c-285">服務類型。</span><span class="sxs-lookup"><span data-stu-id="04f7c-285">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="04f7c-286">從工作流程執行階段引擎中擷取指定之泛型型別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-286">Retrieves a service of the specified generic type from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="04f7c-287">屬於指定泛型型別的單一服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-287">A single service of the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-288">如果存在一個以上屬於指定之泛型型別的服務，<xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> 會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-288"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified generic type.</span></span> <span data-ttu-id="04f7c-289">因此，如果 <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> 中有多個屬於泛型型別的服務，您應該使用其中一個 <xref:System.Workflow.Runtime.WorkflowRuntime> 的多載方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-289">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the generic type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="04f7c-290">例如，工作流程執行階段引擎可能有多個追蹤服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-290">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="04f7c-291">如果利用指定 <xref:System.Workflow.Runtime.Tracking.TrackingService> 基底類別的方式要求追蹤服務，可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="04f7c-291">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-292">下列範例示範如何從 <xref:System.Workflow.Runtime.WorkflowRuntime> 物件擷取單一服務 (在這個案例中是 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> 類型的服務)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-292">The following example demonstrates how to retrieve a single service from a <xref:System.Workflow.Runtime.WorkflowRuntime> object; in this case, a service of type <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span> <span data-ttu-id="04f7c-293">這個範例取自[工作流程執行緒範例](https://go.microsoft.com/fwlink/?LinkId=157350)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-293">This example is from the [Workflow Threading Sample](https://go.microsoft.com/fwlink/?LinkId=157350).</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-294"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已經過處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-294">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-295">找到一個以上泛型型別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-295">More than one service of the generic type was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance GetWorkflow(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflow (instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ GetWorkflow(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflow : Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.GetWorkflow instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="04f7c-296">工作流程執行個體的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-296">The <see cref="T:System.Guid" /> of a workflow instance.</span></span></param>
        <summary><span data-ttu-id="04f7c-297">擷取有指定之 <see cref="T:System.Guid" /> 的工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-297">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="04f7c-298">有指定之 <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> 的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-298">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-299">如果 `instanceId` 指定目前不在記憶體中的工作流程執行個體，工作流程執行個體會載入記憶體中並排程執行。</span><span class="sxs-lookup"><span data-stu-id="04f7c-299">If `instanceId` specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</span></span> <span data-ttu-id="04f7c-300">例如，在中止工作流程執行個體後，您可以呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>，將工作流程執行個體載回記憶體中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-300">For example, after a workflow instance is aborted, you can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to load the workflow instance back into memory.</span></span> <span data-ttu-id="04f7c-301">在此情況中，持續性服務會將工作流程執行個體的上次保存狀態載入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-301">In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-302">下列程式碼範例會示範呼叫 `ReloadWorkflow` 方法的 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-302">The following code example demonstrates a `ReloadWorkflow` method that calls the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> method.</span></span> <span data-ttu-id="04f7c-303">`ReloadWorkflow` 方法屬於一個較大的類別，該類別的 `Runtime` 屬性可以存取 <xref:System.Workflow.Runtime.WorkflowRuntime> 類別的所有方法、屬性和事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-303">The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
 <span data-ttu-id="04f7c-304">此程式碼範例是一部分[自訂持續性服務範例](https://go.microsoft.com/fwlink/?LinkId=157351)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-304">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkId=157351) sample.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f7c-305">在範例中，呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 是多餘的，因為 <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> 和 <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> 方法使用相同的內部 Helper 方法將工作流程執行個體載入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-305">In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.</span></span>  
  
 [!code-csharp[WF_Samples#265](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#265)]
 [!code-vb[WF_Samples#265](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#265)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-306">未啟動工作流程執行階段。</span><span class="sxs-lookup"><span data-stu-id="04f7c-306">The workflow runtime is not started.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStarted : bool" Usage="System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-307">取得指出工作流程執行階段引擎是否已啟動的值。</span><span class="sxs-lookup"><span data-stu-id="04f7c-307">Gets a value that indicates whether the workflow run-time engine has been started.</span></span></summary>
        <value><span data-ttu-id="04f7c-308">如果工作流程執行階段引擎已啟動則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-308"><see langword="true" /> if the workflow run-time engine has been started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="04f7c-309">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-309">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 表示工作流程執行階段引擎服務正在執行中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> indicates that the workflow run-time engine services are running.</span></span> <span data-ttu-id="04f7c-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 已`false`直到主機呼叫<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="04f7c-312">在主機呼叫 `true` 之前，它都會保持為 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-312">It remains `true` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04f7c-313">工作流程執行階段引擎正在執行時，無法將核心服務加入到引擎中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-313">You cannot add core services to the workflow run-time engine while it is running.</span></span> <span data-ttu-id="04f7c-314">核心服務是衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 類別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-314">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-315">下列範例示範如何存取 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 物件的 <xref:System.Workflow.Runtime.WorkflowRuntime> 屬性。</span><span class="sxs-lookup"><span data-stu-id="04f7c-315">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="04f7c-316">在這個範例中，如果執行階段已啟動，則訊息會列印到主控台中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-316">In this example, if the runtime is started, a message is printed to the console.</span></span>  
  
 [!code-csharp[WF_Samples#21](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#21)]
 [!code-vb[WF_Samples#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-317">取得或設定與 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 關聯的名稱。</span><span class="sxs-lookup"><span data-stu-id="04f7c-317">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <value><span data-ttu-id="04f7c-318">與此 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 關聯的名稱。</span><span class="sxs-lookup"><span data-stu-id="04f7c-318">The name associated with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-319">您無法設定<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>工作流程執行階段引擎正在執行 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`true`)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-319">You cannot set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-320">下列範例示範如何存取 <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> 物件的 <xref:System.Workflow.Runtime.WorkflowRuntime> 屬性。</span><span class="sxs-lookup"><span data-stu-id="04f7c-320">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="04f7c-321">在此範例中，執行階段的名稱設定為 "Main Runtime"。</span><span class="sxs-lookup"><span data-stu-id="04f7c-321">In this example, the name of the runtime is set to "Main Runtime".</span></span>  
  
 [!code-csharp[WF_Samples#20](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#20)]
 [!code-vb[WF_Samples#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-322">嘗試在已處置 (Dispose) 的 <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> 上設定 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-323">在工作流程執行階段引擎執行時，嘗試設定 <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-323">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.RemoveService : obj -&gt; unit" Usage="workflowRuntime.RemoveService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="04f7c-324">物件，表示要移除的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-324">An object that represents the service to remove.</span></span></param>
        <summary><span data-ttu-id="04f7c-325">從工作流程執行階段引擎中移除指定的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-325">Removes the specified service from the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-326">工作流程執行階段引擎執行時，不能移除核心服務 (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>是`true`)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-326">You cannot remove a core service while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span> <span data-ttu-id="04f7c-327">核心服務是衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 類別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-327">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="04f7c-328">如果 `service` 衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別，<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> 會呼叫由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 實作的 `service` 方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-328">If `service` derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by `service`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-329">在下列範例中，將在 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 中加入並移除 <xref:System.Workflow.Runtime.WorkflowRuntime>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-329">In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span>  
  
 [!code-csharp[WF_Samples#16](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#16)]
 [!code-vb[WF_Samples#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04f7c-330"><paramref name="service" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-330"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-331">已經處置 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-331">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-332">工作流程執行階段引擎已啟動 (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> 為<see langword="true" /> )，而且 <paramref name="service" /> 是核心服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-332">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span></span>  
  
<span data-ttu-id="04f7c-333">-或-</span><span class="sxs-lookup"><span data-stu-id="04f7c-333">-or-</span></span> 
 <span data-ttu-id="04f7c-334"><paramref name="service" /> 尚未向工作流程執行階段引擎註冊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-334"><paramref name="service" /> is not registered with the workflow run-time engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesExceptionNotHandled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" />
      <MemberSignature Language="VB.NET" Value="Public Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::ServicesExceptionNotHandledEventArgs ^&gt; ^ ServicesExceptionNotHandled;" />
      <MemberSignature Language="F#" Value="member this.ServicesExceptionNotHandled : EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " Usage="member this.ServicesExceptionNotHandled : System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-335">在衍生自 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 類別的服務呼叫 <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /> 時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-335">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-336">衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務可以呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 方法，以便通知 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 事件的訂閱者，在服務的執行期間發生了無法處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="04f7c-336">A service that is derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can call the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method to inform subscribers to the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event that an exception that it was unable to handle occurred during its execution.</span></span> <span data-ttu-id="04f7c-337">您可以訂閱此事件以實作復原機制。</span><span class="sxs-lookup"><span data-stu-id="04f7c-337">You can subscribe to this event to implement a recovery mechanism.</span></span>  
  
 <span data-ttu-id="04f7c-338">在工作流程執行階段引擎尚未建立工作流程執行個體且發生例外狀況時，會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-338">This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</span></span> <span data-ttu-id="04f7c-339">在此案例中，通知主應用程式發生例外狀況的唯一方法就是引發此事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-339">In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</span></span> <span data-ttu-id="04f7c-340">然而，工作流程執行階段引擎不會直接加以呼叫。</span><span class="sxs-lookup"><span data-stu-id="04f7c-340">However, the workflow run-time engine does not call this directly.</span></span> <span data-ttu-id="04f7c-341">相反的，工作流程執行階段引擎會傳遞例外狀況到工作流程執行個體，如果沒有執行個體則擲回給呼叫者，在這種情況中，呼叫者實際上是引發此事件的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-341">Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</span></span> <span data-ttu-id="04f7c-342">如果建立自己的持續性服務或排程器服務，您必須透過基底 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-342">If you create your own persistence or scheduler service, you must implement this event yourself through the base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method.</span></span>  
  
 <span data-ttu-id="04f7c-343">若為 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 事件，寄件者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則會包含使用服務的工作流程執行個體 <xref:System.Guid> 和無法處理的 <xref:System.Exception>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-343">For the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Guid> of the workflow instance that was using the service and the <xref:System.Exception> that could not be handled.</span></span>  
  
 <span data-ttu-id="04f7c-344">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-344">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-345">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-345">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-346">程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> 與事件處理常式 (名稱為 `OnExceptionNotHandled` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-346">The code associates <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> with an event handler, a method named `OnExceptionNotHandled`.</span></span>  
  
 <span data-ttu-id="04f7c-347">此程式碼範例是一部分[自訂持續性服務範例](https://go.microsoft.com/fwlink/?LinkID=157351)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-347">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-348">在工作流程執行階段引擎啟動時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-348">Occurs when the workflow run-time engine is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-349"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>方法會引發<xref:System.Workflow.Runtime.WorkflowRuntime.Started>叫用事件驗證的工作流程執行階段引擎的核心服務組態之後<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>衍生自其服務的每個實作的方法<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>類別而且已設定<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="04f7c-349">The <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, and has set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `true`.</span></span> <span data-ttu-id="04f7c-350">工作流程執行階段引擎啟動衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務時，無法保證其順序。而且這些工作流程執行階段引擎服務的其中一些服務，可能需要依賴其中的其他服務所提供的功能，來完成各自的啟動工作。</span><span class="sxs-lookup"><span data-stu-id="04f7c-350">There is no guarantee about the order in which the services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</span></span> <span data-ttu-id="04f7c-351">工作流程執行階段引擎服務可以覆寫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> 方法，以便在 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件引發時，執行需要其他工作流程執行階段引擎服務支援的任何最後啟動工作。</span><span class="sxs-lookup"><span data-stu-id="04f7c-351">Workflow run-time engine services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event is raised.</span></span>  
  
 <span data-ttu-id="04f7c-352">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-352">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-353">在下列範例中，會將事件處理常式加入至 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 的 <xref:System.Workflow.Runtime.WorkflowRuntime> 事件中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-353">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="04f7c-354">在這個範例中，處理常式是列印簡易訊息至主控台的匿名方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-354">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#15](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#15)]
 [!code-vb[WF_Samples#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRuntime">
      <MemberSignature Language="C#" Value="public void StartRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRuntime();" />
      <MemberSignature Language="F#" Value="member this.StartRuntime : unit -&gt; unit" Usage="workflowRuntime.StartRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f7c-355">啟動工作流程執行階段引擎和工作流程執行階段引擎服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-355">Starts the workflow run-time engine and the workflow run-time engine services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-356">這個方法會確認有一組有效的核心服務存在，然後啟動任何衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-356">This method verifies that a valid set of core services exists and then starts any services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="04f7c-357">必須是其中之一的每個下列的核心服務： 工作流程`CommitWorkBatch`服務衍生自<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>基底類別和排程器服務衍生自<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>基底類別。</span><span class="sxs-lookup"><span data-stu-id="04f7c-357">There must be one and only one of each of the following core services: a workflow `CommitWorkBatch` service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> base class and a scheduler service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> base class.</span></span>  <span data-ttu-id="04f7c-358">如果遺漏一個或兩個這些核心服務，工作流程執行階段引擎會提供適當的預設服務：<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>工作流程`CommitWorkBatch`服務和<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>排程器服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-358">If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> for the workflow `CommitWorkBatch` service and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> for the scheduler service.</span></span> <span data-ttu-id="04f7c-359">持續性服務是選用的服務，而且最多只能有一個持續性服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-359">A persistence service is optional, but there can be at most only one persistence service present.</span></span> <span data-ttu-id="04f7c-360">驗證服務組態後，<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 會呼叫所有衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 類別之服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-360">After it has validated the service configuration, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on all of the services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="04f7c-361">最後，工作流程執行階段引擎會設定 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 並引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-361">Finally, the workflow run-time engine sets <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> and raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span>  
  
 <span data-ttu-id="04f7c-362">工作流程執行階段引擎啟動後，無法加入或移除核心服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-362">You cannot add or remove core services after the workflow run-time engine is started.</span></span> <span data-ttu-id="04f7c-363">核心服務是衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 類別的服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-363">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="04f7c-364">如果您在工作流程執行階段引擎執行時呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>，則不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="04f7c-364">If you call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> while the workflow run-time engine is running, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-365">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-365">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-366">程式碼在 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 建立 <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> 執行個體，並且在它呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime> 以加入服務到執行階段中後呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-366">The code calls the <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime.</span></span> <span data-ttu-id="04f7c-367">它也會在發生任何其他處理之前呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-367">It also calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> before any other processing occurs.</span></span>  
  
 <span data-ttu-id="04f7c-368">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkId=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-368">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-369"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 已處置。</span><span class="sxs-lookup"><span data-stu-id="04f7c-369">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="04f7c-370">有一個以上的服務工作流程 <see langword="CommitWorkBatch" /> 服務已向此 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 註冊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-370">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="04f7c-371">-或-</span><span class="sxs-lookup"><span data-stu-id="04f7c-371">-or-</span></span> 
<span data-ttu-id="04f7c-372">有一個以上的排程器服務已向此 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 註冊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-372">There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="04f7c-373">-或-</span><span class="sxs-lookup"><span data-stu-id="04f7c-373">-or-</span></span> 
<span data-ttu-id="04f7c-374">有一個以上的持續性服務已向此 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 註冊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-374">There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Stopped : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-375">在工作流程執行階段引擎停止時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-375">Occurs when the workflow run-time engine is stopped.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-376"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 方法會在叫用以其衍生自 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 類別的每個服務實作的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法後，引發 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-376">The <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event after it has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="04f7c-377">這些工作流程執行階段引擎服務的停止順序不一定，而且這些服務的其中一些服務可能需要保留一些其他服務所依賴的功能，直到其他服務停止為止。</span><span class="sxs-lookup"><span data-stu-id="04f7c-377">There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</span></span> <span data-ttu-id="04f7c-378">這類服務可以覆寫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> 方法，以在引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 事件時執行任何剩餘的關閉邏輯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-378">Such services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> method to perform any residual shutdown logic when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event is raised.</span></span>  
  
 <span data-ttu-id="04f7c-379">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-379">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-380">在下列範例中，會將事件處理常式加入至 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 的 <xref:System.Workflow.Runtime.WorkflowRuntime> 事件中。</span><span class="sxs-lookup"><span data-stu-id="04f7c-380">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="04f7c-381">在這個範例中，處理常式是列印簡易訊息至主控台的匿名方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-381">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#14](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#14)]
 [!code-vb[WF_Samples#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRuntime">
      <MemberSignature Language="C#" Value="public void StopRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopRuntime();" />
      <MemberSignature Language="F#" Value="member this.StopRuntime : unit -&gt; unit" Usage="workflowRuntime.StopRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04f7c-382">停止工作流程執行階段引擎和執行階段服務。</span><span class="sxs-lookup"><span data-stu-id="04f7c-382">Stops the workflow run-time engine and the run-time services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-383">這個方法會導致工作流程執行階段引擎卸載其工作流程執行個體的每個、 停止其所有的服務是衍生自<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>類別中，將<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>要`false`，並引發<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-383">This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `false`, and raise the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span>  
  
 <span data-ttu-id="04f7c-384">若要正常關閉 <xref:System.Workflow.Runtime.WorkflowRuntime>，請先呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>，再呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-384">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, call <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before you call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="04f7c-385">如需詳細資訊，請參閱 <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="04f7c-385">For more information, see the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-386">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-386">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-387">在主機完成所有與執行階段相關聯的其他處理後，會呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called after the host has completed all other processing associated with the runtime.</span></span>  
  
 <span data-ttu-id="04f7c-388">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkId=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-388">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#259](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#259)]
 [!code-vb[WF_Samples#259](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#259)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04f7c-389">已經處置 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="04f7c-389">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowAborted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowAborted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowAborted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowAborted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-390">在中止工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-390">Occurs when a workflow instance is aborted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> 會發生在工作流程執行個體的所有暫止工作都已清除之後，但在工作流程執行個體於記憶體中失效之前。</span><span class="sxs-lookup"><span data-stu-id="04f7c-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</span></span> <span data-ttu-id="04f7c-392">您可以透過呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType> 來中止工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-392">You can abort a workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="04f7c-393">對於這個事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-393">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-394">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-394">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-395">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-395">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-396">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> 與事件處理常式 (名稱為 `OnWorkflowAborted` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-396">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> with an event handler, a method named `OnWorkflowAborted`.</span></span>  
  
 <span data-ttu-id="04f7c-397">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-397">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#141](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#141)]
 [!code-vb[WF_Samples#141](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#141)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowCompletedEventArgs ^&gt; ^ WorkflowCompleted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCompleted : EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " Usage="member this.WorkflowCompleted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-398">在完成工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-398">Occurs when a workflow instance has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 會在工作流程執行個體完成後，但在執行個體失效之前引發。</span><span class="sxs-lookup"><span data-stu-id="04f7c-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> is raised after the workflow instance has completed but before the instance is invalidated in memory.</span></span>  
  
 <span data-ttu-id="04f7c-400">針對 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> 則包含 <xref:System.Workflow.Runtime.WorkflowInstance> 及其輸出參數。</span><span class="sxs-lookup"><span data-stu-id="04f7c-400">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and its output parameters.</span></span>  
  
 <span data-ttu-id="04f7c-401">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-401">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-402">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-402">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-403">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 與事件處理常式 (名稱為 `OnWorkflowCompleted` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-403">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="04f7c-404">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkId=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-404">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowCreated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCreated : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowCreated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-405">在建立工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-405">Occurs when a workflow instance is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-406">工作流程執行階段引擎會在工作流程執行個體完成建構後，但在處理活動之前引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-406">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> event after the workflow instance is completely constructed but before activities are processed.</span></span> <span data-ttu-id="04f7c-407">對於這個事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-407">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-408">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkId=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-408">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkId=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-409">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-409">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-410">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> 與事件處理常式 (名稱為 `OnWorkflowCreated` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-410">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> with an event handler, a method named `OnWorkflowCreated`.</span></span>  
  
 <span data-ttu-id="04f7c-411">此程式碼範例是一部分[自訂持續性服務範例](https://go.microsoft.com/fwlink/?LinkID=15735)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-411">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowIdled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowIdled;" />
      <MemberSignature Language="F#" Value="member this.WorkflowIdled : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowIdled : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-412">在工作流程執行個體進入閒置 (Idle) 狀態時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-412">Occurs when a workflow instance enters the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-413">工作流程執行階段引擎會在工作流程執行個體進入閒置狀態時引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 事件。例如，在工作流程等待 <xref:System.Workflow.Activities.DelayActivity> 活動完成時。</span><span class="sxs-lookup"><span data-stu-id="04f7c-413">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <xref:System.Workflow.Activities.DelayActivity> activity to complete.</span></span>  
  
 <span data-ttu-id="04f7c-414">對於這個事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-414">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-415">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="04f7c-415">For more information about handling events, see [Consuming Events](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-416">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-416">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-417">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 與事件處理常式 (名稱為 `OnWorkflowIdled` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-417">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> with an event handler, a method named `OnWorkflowIdled`.</span></span>  
  
 <span data-ttu-id="04f7c-418">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-418">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowLoaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowLoaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowLoaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowLoaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-419">在工作流程執行個體載入記憶體中時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-419">Occurs when the workflow instance is loaded into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 會發生在持續性服務已還原工作流程執行個體之後，但在工作流程執行階段引擎開始執行任何活動之前。</span><span class="sxs-lookup"><span data-stu-id="04f7c-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</span></span>  
  
 <span data-ttu-id="04f7c-421">對於 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-421">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-422">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-422">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-423">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-423">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-424">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> 與事件處理常式 (名稱為 `OnWorkflowLoad` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-424">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> with an event handler, a method named `OnWorkflowLoad`.</span></span>  
  
 <span data-ttu-id="04f7c-425">此程式碼範例是一部分[自訂持續性服務](https://go.microsoft.com/fwlink/?LinkID=157351)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-425">This code example is part of the [Custom Persistence Service](https://go.microsoft.com/fwlink/?LinkID=157351) sample.</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowPersisted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowPersisted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowPersisted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowPersisted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-426">在工作流程執行個體的狀態被保存時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-426">Occurs when the state of a workflow instance is persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-427">工作流程執行個體可能基於多個原因而保存。</span><span class="sxs-lookup"><span data-stu-id="04f7c-427">The workflow instance can be persisted for many reasons.</span></span> <span data-ttu-id="04f7c-428">例如，主機可能呼叫工作流程執行個體上的 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType>。或者已完成不可部分完成的範圍，或執行個體已成為閒置狀態時，工作流程執行階段引擎可能會保存工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-428">For example, the host can call <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</span></span> <span data-ttu-id="04f7c-429">如果 <xref:System.Workflow.Runtime.WorkflowRuntime> 中有持續性服務，則在工作流程執行個體的狀態儲存到記憶體之後，執行階段會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-429">If a persistence service is present in the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> is raised by the runtime after the state of the workflow instance is saved to memory.</span></span> <span data-ttu-id="04f7c-430">如果沒有持續性服務存在，仍然會引發事件，但不會儲存執行個體狀態。</span><span class="sxs-lookup"><span data-stu-id="04f7c-430">If a persistence service is not present, the event is still raised but the instance state is not saved.</span></span> <span data-ttu-id="04f7c-431">如果因為正在卸載工作流程執行個體而發生 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，接著會發生 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-431">If the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event occurs because the workflow instance is being unloaded, it is followed by a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="04f7c-432">對於 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-432">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-433">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-433">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-434">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-434">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-435">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 與事件處理常式 (名稱為 `OnWorkflowPersisted` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-435">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> with an event handler, a method named `OnWorkflowPersisted`.</span></span>  
  
 <span data-ttu-id="04f7c-436">此程式碼範例是一部分[自訂持續性服務範例](https://go.microsoft.com/fwlink/?LinkID=15735)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-436">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#279](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#279)]
 [!code-vb[WF_Samples#279](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#279)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowResumed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowResumed;" />
      <MemberSignature Language="F#" Value="member this.WorkflowResumed : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowResumed : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-437">在暫止後繼續執行工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-437">Occurs when execution of a workflow instance is resumed following a suspension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-438">工作流程執行階段引擎會在正要排程工作流程執行個體之前引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-438">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before the workflow instance is scheduled.</span></span> <span data-ttu-id="04f7c-439"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件常因明確呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> 而引發。</span><span class="sxs-lookup"><span data-stu-id="04f7c-439">The <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is usually raised because of an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="04f7c-440">然而，工作流程執行階段引擎可能暫時停止執行個體，以便執行作業，例如套用工作流程變更。</span><span class="sxs-lookup"><span data-stu-id="04f7c-440">However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</span></span> <span data-ttu-id="04f7c-441">若是如此，在作業完成後，作業階段繼續執行工作流程執行個體時，就會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-441">In this case, the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is raised when the runtime resumes execution of the workflow instance following the operation.</span></span>  
  
 <span data-ttu-id="04f7c-442">對於 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-442">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-443">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-443">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-444">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-444">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-445">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> 與事件處理常式 (名稱為 `OnWorkflowResume` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-445">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> with an event handler, a method named `OnWorkflowResume`.</span></span>  
  
 <span data-ttu-id="04f7c-446">此程式碼範例是一部分[暫止與終止範例](https://go.microsoft.com/fwlink/?LinkId=157402)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-446">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkId=157402).</span></span>  
  
 [!code-csharp[WF_Samples#171](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#171)]
 [!code-vb[WF_Samples#171](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowStarted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowStarted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowStarted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-447">在啟動工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-447">Occurs when a workflow instance has been started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-448">藉由排程執行的根活動啟動工作流程執行個體後，工作流程執行階段引擎會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-448">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> event after the workflow instance is started by scheduling the root activity for execution.</span></span> <span data-ttu-id="04f7c-449">對於這個事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-449">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-450">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-450">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-451">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-451">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-452">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> 與事件處理常式 (名稱為 `OnWorkflowStarted` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-452">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> with an event handler, a method named `OnWorkflowStarted`.</span></span>  
  
 <span data-ttu-id="04f7c-453">此程式碼範例是一部分[主機通訊範例](https://go.microsoft.com/fwlink/?LinkId=157406)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-453">This code example is part of the [Host Communication Sample](https://go.microsoft.com/fwlink/?LinkId=157406).</span></span>  
  
 [!code-csharp[WF_Samples#297](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#297)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowSuspended">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowSuspendedEventArgs ^&gt; ^ WorkflowSuspended;" />
      <MemberSignature Language="F#" Value="member this.WorkflowSuspended : EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " Usage="member this.WorkflowSuspended : System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-454">在暫止工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-454">Occurs when a workflow instance is suspended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-455">工作流程執行個體可以由主機呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> 方法、藉由 <xref:System.Workflow.ComponentModel.SuspendActivity> 活動，或由工作流程執行階段引擎隱含地暫止。</span><span class="sxs-lookup"><span data-stu-id="04f7c-455">The workflow instance can be suspended by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> method, by a <xref:System.Workflow.ComponentModel.SuspendActivity> activity, or implicitly by the workflow run-time engine.</span></span> <span data-ttu-id="04f7c-456">例如，當工作流程執行階段引擎要套用動態變更至執行個體時，它會暫時停止執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-456">For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</span></span>  
  
 <span data-ttu-id="04f7c-457">若為 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> 事件，寄件人會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而且 <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> 會包含 <xref:System.Workflow.Runtime.WorkflowInstance> 與說明暫止執行個體之原因的字串。</span><span class="sxs-lookup"><span data-stu-id="04f7c-457">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and a string that describes the reason the instance was suspended.</span></span>  
  
 <span data-ttu-id="04f7c-458">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-458">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-459">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-459">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-460">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> 與事件處理常式 (名稱為 `OnWorkflowSuspended` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-460">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> with an event handler, a method named `OnWorkflowSuspended`.</span></span>  
  
 <span data-ttu-id="04f7c-461">此程式碼範例是一部分[暫止與終止範例](https://go.microsoft.com/fwlink/?LinkID=157402)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-461">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkID=157402).</span></span>  
  
 [!code-csharp[WF_Samples#170](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#170)]
 [!code-vb[WF_Samples#170](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowTerminated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowTerminatedEventArgs ^&gt; ^ WorkflowTerminated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowTerminated : EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " Usage="member this.WorkflowTerminated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-462">在結束工作流程執行個體時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-462">Occurs when a workflow instance is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-463">發生未處理的例外狀況時，工作流程可以由主機呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> 方法、藉由 <xref:System.Workflow.ComponentModel.TerminateActivity> 活動，或由工作流程執行階段引擎加以結束。</span><span class="sxs-lookup"><span data-stu-id="04f7c-463">The workflow can be terminated by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> method, by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity, or by the workflow run-time engine when an unhandled exception occurs.</span></span> <span data-ttu-id="04f7c-464">工作流程執行階段會在工作流程執行個體結束後，但是在它於記憶體中失效之前引發 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-464">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event after the workflow instance is terminated, but before it is invalidated in memory.</span></span>  
  
 <span data-ttu-id="04f7c-465">若為 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件，寄件者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而且 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> 會包含 <xref:System.Workflow.Runtime.WorkflowInstance> 和 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> 屬性中執行個體結束原因的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="04f7c-465">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and information about the reason the instance was terminated in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="04f7c-466">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-466">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-467">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-467">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-468">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 與事件處理常式 (名稱為 `OnWorkflowCompleted` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-468">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="04f7c-469">此程式碼範例是一部分[取消工作流程](https://go.microsoft.com/fwlink/?LinkID=157346)範例。</span><span class="sxs-lookup"><span data-stu-id="04f7c-469">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowUnloaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowUnloaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowUnloaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowUnloaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04f7c-470">在工作流程執行個體從記憶體中卸載時發生。</span><span class="sxs-lookup"><span data-stu-id="04f7c-470">Occurs when the workflow instance is unloaded from memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04f7c-471">透過明確呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> 或工作流程執行階段引擎根據本身語意的隱含呼叫，可從記憶體中卸載工作流程執行個體。</span><span class="sxs-lookup"><span data-stu-id="04f7c-471">A workflow instance can be unloaded from memory by an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, or implicitly by the workflow run-time engine according to its own semantics.</span></span> <span data-ttu-id="04f7c-472">例如，工作流程執行階段引擎卸載工作流程執行個體時如果執行個體變成閒置，而且此執行階段具有<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>新增為其<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="04f7c-472">For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> added for which <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> is `true`.</span></span>  
  
 <span data-ttu-id="04f7c-473">在成功保存工作流程執行個體的狀態後，但在執行個體於記憶體中失效之前，工作流程執行階段引擎會引發 </span><span class="sxs-lookup"><span data-stu-id="04f7c-473">The workflow run-time engine raises the</span></span>  
  
 <span data-ttu-id="04f7c-474"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件。</span><span class="sxs-lookup"><span data-stu-id="04f7c-474"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</span></span> <span data-ttu-id="04f7c-475">因此，<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> 事件會發生在 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件之前。</span><span class="sxs-lookup"><span data-stu-id="04f7c-475">Therefore, a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event precedes the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="04f7c-476">對於 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 事件，傳送者會包含 <xref:System.Workflow.Runtime.WorkflowRuntime>，而 <xref:System.Workflow.Runtime.WorkflowEventArgs> 則包含事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。</span><span class="sxs-lookup"><span data-stu-id="04f7c-476">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="04f7c-477">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 耗用事件](https://go.microsoft.com/fwlink/?LinkID=157352)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-477">For more information about handling events, see [Consuming Events](https://go.microsoft.com/fwlink/?LinkID=157352).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04f7c-478">下列程式碼範例示範如何從工作流程主機使用 <xref:System.Workflow.Runtime.WorkflowRuntime> 功能。</span><span class="sxs-lookup"><span data-stu-id="04f7c-478">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="04f7c-479">此程式碼會使 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> 與事件處理常式 (名稱為 `OnWorkflowUnload` 的方法) 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="04f7c-479">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> with an event handler, a method named `OnWorkflowUnload`.</span></span>  
  
 <span data-ttu-id="04f7c-480">此程式碼範例是一部分[自訂持續性服務範例](https://go.microsoft.com/fwlink/?LinkID=157351)。</span><span class="sxs-lookup"><span data-stu-id="04f7c-480">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>