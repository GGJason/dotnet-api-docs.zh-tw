<Type Name="WorkflowEventArgs" FullName="System.Workflow.Runtime.WorkflowEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf79cd35fc3a013bac32760a680f5b5beafcc5fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30685242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供工作流程事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 與工作流程執行個體關聯的工作流程事件。 <xref:System.Workflow.Runtime.WorkflowEventArgs> 會包含與工作流程事件關聯的 <xref:System.Workflow.Runtime.WorkflowInstance>。 衍生自 <xref:System.Workflow.Runtime.WorkflowEventArgs> 類別的 <xref:System.Workflow.Runtime.WorkflowEventArgs> 或物件在 <xref:System.Workflow.Runtime.WorkflowRuntime> 類別中提供所有工作流程事件的資料。 <xref:System.Workflow.Runtime.WorkflowEventArgs> 是 <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>、<xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> 和 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> 的基底類別。  
  
   
  
## Examples  
 下列程式碼範例將示範呼叫事件處理常式方法時，如何使用 <xref:System.Workflow.Runtime.WorkflowInstance> 屬性取得 <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> 物件。 當 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 事件發生時，會呼叫此範例中定義的 `OnWorkflowIdled` 方法。 它會使用 <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> 屬性判斷閒置的工作流程，然後呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> 方法取得工作流程執行個體之佇列項目的集合。 此程式碼會在集合上反覆查看，以判斷是哪個活動正在等候閒置工作流程的事件。 然後，它會使用 <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> 方法以及事件佇列項目的名稱，將例外狀況傳送到工作流程佇列中。  
  
 這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。 如需詳細資訊，請參閱[取消工作流程](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)。  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="WorkflowInstance">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance WorkflowInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowInstance WorkflowInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowInstance As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowInstance ^ WorkflowInstance { System::Workflow::Runtime::WorkflowInstance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與工作流程事件關聯的工作流程執行個體。</summary>
        <value>與工作流程事件關聯的 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範呼叫事件處理常式方法時，如何使用 <xref:System.Workflow.Runtime.WorkflowInstance> 屬性取得 <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> 物件。 當 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> 事件發生時，會呼叫此範例中定義的 `OnWorkflowIdled` 方法。 它會使用 <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> 屬性判斷閒置的工作流程，然後呼叫 <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> 方法取得工作流程執行個體之佇列項目的集合。 此程式碼會在集合上反覆查看，以判斷是哪個活動正在等候閒置工作流程的事件。 然後，它會使用 <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> 方法以及事件佇列項目的名稱，將例外狀況傳送到工作流程佇列中。  
  
 這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。 如需詳細資訊，請參閱[取消工作流程](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)。  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>