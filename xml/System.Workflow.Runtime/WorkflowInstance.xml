<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5181673212b57e524c54cc9851648ca01d7c1e21c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">181673212b57e524c54cc9851648ca01d7c1e21c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>Represents a workflow instance.</source>
          <target state="translated">代表工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 類別會公開可用於控制工作流程執行個體之執行的方法和屬性，它基本上是工作流程執行階段引擎使用的實際工作流程執行個體的 Proxy。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class.</source>
          <target state="translated">主機或服務可以呼叫包含在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 類別中的適當方法，來指示工作流程執行階段引擎在工作流程執行個體上執行動作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If the requested action is not valid, for example, if the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">如果要求的動作無效，例如，如果主機呼叫已完成的工作流程執行個體上的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph>，則工作流程執行階段引擎會引發適當的例外狀況。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">如果工作流程執行個體因為主應用程式 (Host Application) 上的呼叫沒有傳回而變得沒有回應，復原執行個體的唯一方法就是重新啟動執行階段。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">不過，如果已強制卸載、中止或暫停執行個體，則透過呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> 方法可以繼續該執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The following code example demonstrates how you can create and start a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">下列程式碼範例將示範如何在工作流程主機中建立和啟動 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼會建立 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的執行個體、加入服務至執行階段，然後示範建立 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件的建議方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">程式碼藉由呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法和傳遞之前建立的類型給它來初始化 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 由 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 方法呼叫啟動。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>取消工作流程<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This type is thread safe.</source>
          <target state="translated">此型別具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>Aborts the workflow instance.</source>
          <target state="translated">中止工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">工作流程執行個體是以同步方式中止，也就是這個方法會在中止工作流程執行個體後返回。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">工作流程執行階段引擎會使記憶體中的工作流程執行個體失效，並且清除 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">如果您的工作流程執行個體使用持續性 (Persistence) 服務，自上次保存點開始執行的所有工作都會被丟棄。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> event.</source>
          <target state="translated">中止工作流程執行個體後，工作流程執行階段引擎會引發 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated">您可以呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> 以重新載入工作流程執行個體，然後從它的上一個保存點啟動。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source><ph id="ph1">`Abort`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> in that while <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph> 與 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 不同，因為 <ph id="ph3">`Abort`</ph> 僅清除記憶體內的工作流程執行個體，而且可以從上次保存點重新啟動，終止 (Terminate) 會清除記憶體內的工作流程執行個體，並通知持續性服務該執行個體已自記憶體中清除。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">對 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> 而言，這表示發生終止時，所有該工作流程執行個體的狀態資訊都會從資料庫中刪除。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">您將無法從之前儲存的保存點重新載入工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The following example demonstrates calling Abort on a workflow instance of type Workflow1.</source>
          <target state="translated">下列程式碼範例將示範呼叫 Workflow1 類型之工作流程執行個體上的 Abort。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">指定工作流程執行個體之動態更新的 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>Applies changes to the workflow instance specified by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> object.</source>
          <target state="translated">將變更套用到 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> 物件指定的工作流程執行個體中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">如果工作流程執行個體尚未暫止，在套用變更之前，工作流程執行階段引擎會暫時停止執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The following example demonstrates calling ApplyWorkflowChanges to a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列範例將示範如何呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件的 ApplyWorkflowChanges。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">這個範例是 Mainform.cs 的檔案中＜訂購狀態機器 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>訂購狀態機器範例<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">要加入佇列的物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>，可讓寄件者在傳遞 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> 時收到通知。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">要傳遞給 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> 方法的物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">同步公佈訊息至指定的工作流程佇列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">`item`</ph> 傳送至指定的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">如果想要在傳遞訊息時得到通知，您可以在您的服務中實作 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph>，並且傳遞 <ph id="ph2">`workItem`</ph> 和 <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 物件至 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">如果不想要這類通知，您可以傳遞 <ph id="ph1">`Nothing`</ph> 和 <ph id="ph2">`pendingWork`</ph> 的 null 參考 (在 Visual Basic 中為 <ph id="ph3">`workItem`</ph>)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">使用此方法搭配狀態機器工作流程時，您可能會取得帶有「未啟用佇列 '{0}'」訊息的例外狀況。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">這種情況發生在狀態機器的目前狀態不知道如何處理特定事件時。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">例如，當目前狀態以外的某種狀態包含 <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>，而且其中包含由佇列 '{0}' 所代表的 <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> 時。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">工作流程執行個體接收訊息的順序，不一定會與訊息的傳送順序相同。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">例如，如果在現有佇列 (佇列 A) 中接收訊息導致工作流程建立另一個佇列 (佇列 B)，後者接著接聽在第一個訊息後傳送的另一個訊息，第二個訊息可能會先到達，而且因為它的佇列尚未建立而無法被接收。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>.)</source>
          <target state="translated">若要避免這個問題，應該先確認 (使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>) 第二個佇列存在後，再傳送第二個訊息。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">下列程式碼範例將示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件發生時，會呼叫此範例中定義的 <ph id="ph2">`OnWorkflowIdled`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">它會使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> 屬性判斷閒置的工作流程，然後呼叫 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法取得工作流程執行個體之佇列項目的集合。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">此程式碼會在集合上反覆查看，以判斷是哪個活動正在等候閒置工作流程的事件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">然後，它會使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> 方法以及事件佇列項目的名稱，將例外狀況傳送到工作流程佇列中。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>取消工作流程<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> 為 null 參考 (在 Visual Basic 中為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 並不存在。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 未啟用。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">要加入佇列的物件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>，可讓寄件者在傳遞 <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> 時收到通知。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">要傳遞給 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> 方法的物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">工作流程閒置時，將訊息張貼至指定的工作流程佇列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> 會等到工作流程到達閒置點，並在確認工作流程排程器閒置後 (也就是沒有任何正在執行的作用中操作時) 加入佇列中。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">等待工作流程執行個體變成閒置，然後將 <ph id="ph1">`item`</ph> 傳送到指定的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> while the workflow instance is suspended, the workflow runtime engine will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果您在工作流程執行個體暫止時呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph>，工作流程執行階段引擎將擲回 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">如果想要在傳遞訊息時得到通知，您可以在您的服務中實作 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph>，並且傳遞 <ph id="ph2">`workItem`</ph> 和 <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 物件至 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">如果不想要這類通知，您可以傳遞 <ph id="ph1">`Nothing`</ph> 和 <ph id="ph2">`pendingWork`</ph> 的 null 參考 (在 Visual Basic 中為 <ph id="ph3">`workItem`</ph>)。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">使用此方法搭配狀態機器工作流程時，您可能會取得帶有「未啟用佇列 '{0}'」訊息的例外狀況。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">這種情況發生在狀態機器的目前狀態不知道如何處理特定事件時。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">例如，當目前狀態以外的某種狀態包含 <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>，而且其中包含由佇列 '{0}' 所代表的 <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> 時。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following example demonstrates sending information to a workflow instance using the <ph id="ph1">`EnqueueItemOnIdle`</ph> method.</source>
          <target state="translated">下列程式碼範例將示範使用 <ph id="ph1">`EnqueueItemOnIdle`</ph> 方法，將資訊傳送到工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>First, a WorkflowInstance object is created and started; next, an object that implements the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface is created.</source>
          <target state="translated">首先會建立並啟動 WorkflowInstance 物件，接下來則會建立實作 <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> 介面的物件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">`EnqueueItemOnIdle`</ph> is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</source>
          <target state="translated"><ph id="ph1">`EnqueueItemOnIdle`</ph> 然後，呼叫傳入佇列名稱、 加入佇列項目和工作項目，要傳遞給 pendingWork 物件之方法的字串值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> 為 null 參考 (在 Visual Basic 中為 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow instance is suspended.</source>
          <target state="translated">工作流程執行個體已暫停。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 並不存在。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> 指定的 <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> 未啟用。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>Returns a value that indicates whether the specified object is equal to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">傳回指出指定的物件是否和 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 相等的值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的物件和這個 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 相等，則為 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object must be an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class and have the same <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> as this <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>.</source>
          <target state="translated">物件必須是 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 類別的執行個體，而且擁有和此 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 相同的 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">傳回這個工作流程執行個體的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 的雜湊碼。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> returns a hash code based on the value of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph><ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>會傳回以  的值為基礎的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">擷取此工作流程執行個體的根活動。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">您可以使用根活動巡覽工作流程的活動階層。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">這個方法不具備執行緒安全，因此主機應該同步其對此方法的呼叫。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>The following example demonstrates retrieving the workflow definition from a workflow instance.</source>
          <target state="translated">下列程式碼範例將示範如何從工作流程執行個體中擷取工作流程定義。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">這個範例是 Mainform.cs 的檔案中＜訂購狀態機器 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>訂購狀態機器範例<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>Returns the next point in time that this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> is scheduled to be delivered a timer message.</source>
          <target state="translated">傳回計時器訊息將會傳遞至此 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> 的下一個時間點。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>A DateTime value that represents the next <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> time this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> will be delivered a timer message.</source>
          <target state="translated">DateTime 值，表示在下一個 <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> 時間，將傳遞計時器訊息至此 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>The following example demonstrates using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> method to determine if more workflow timer messages are enqueued.</source>
          <target state="translated">下列範例示範使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> 方法，判斷是否有更多工作流程計時器訊息加入佇列中。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>This example is from the WorkflowThreading SDK sample, from the Program.cs file.</source>
          <target state="translated">這個範例是 Program.cs 檔案中＜工作流程執行緒 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>For more information, see <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>工作流程執行緒範例<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> 物件的集合，其中包含此工作流程執行個體關聯的工作流程佇列之暫止項目 (Pending Item) 與訂閱的活動。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> returns a collection of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 會傳回 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> 物件的集合，每一個物件都包含與此工作流程執行個體關聯的其中一個工作流程佇列狀態的資訊。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> contains the pending items for a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> contains a list of the activities that are subscribed for item delivery on a <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> 包含 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> 的暫止項目，而 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> 則包含在 <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> 上傳遞項目的訂閱活動清單。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method to obtain information about the state of all workflow queues associated with a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例將示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法，以取得與 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件關聯的所有工作流程佇列的狀態資訊。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件發生時，會呼叫此範例中定義的 <ph id="ph2">`OnWorkflowIdled`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">它會使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> 屬性判斷閒置的工作流程，然後呼叫 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> 方法取得工作流程執行個體之佇列項目的集合。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">此程式碼會在集合上反覆查看，以判斷是哪個活動正在等候閒置工作流程的事件。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">然後，它會使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> 方法以及事件佇列項目的名稱，將例外狀況傳送到工作流程佇列中。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>取消工作流程<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">取得工作流程執行個體的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance.</source>
          <target state="translated">工作流程執行個體的 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> to reference the workflow instance.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 參考工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property to obtain information about a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例將示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 屬性取得關於 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件的資訊。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The first code snippet creates a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> variable named <ph id="ph2">`instanceId`</ph>.</source>
          <target state="translated">第一個程式碼片段會建立名為 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 的 <ph id="ph2">`instanceId`</ph> 變數。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The second snippet uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property as the first object in an <ph id="ph2">`OrderEventArgs`</ph> constructor call when the <ph id="ph3">`CallBackForApproval`</ph> method is called.</source>
          <target state="translated">第二個片段使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> 屬性做為呼叫 <ph id="ph2">`OrderEventArgs`</ph> 方法時，在 <ph id="ph3">`CallBackForApproval`</ph> 建構函式 (Constructor) 呼叫中的第一個物件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</source>
          <target state="translated">這個程式碼範例是 OrderServiceImple.cs 檔案中＜接聽 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>For more information, see <bpt id="p1">[</bpt>Listen Sample<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>接聽範例<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">載入之前卸載的工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is synchronous; if the workflow instance can be loaded, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 是同步的，如果可以載入工作流程執行個體，<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> 將在工作流程執行個體載入記憶體並由工作流程執行階段引擎排程後傳回。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">執行階段會在持續性服務還原記憶體中的工作流程執行個體後，但是在工作流程執行階段引擎排程執行個體之前引發 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The following example demonstrates how to load a previously unloaded <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例將示範如何載入之前卸載的 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">重新載入此工作流程執行個體的追蹤設定檔。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The runtime tracking infrastructure will reload each <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> for this workflow instance associated with its tracking channels.</source>
          <target state="translated">執行階段追蹤基礎結構將為這個與其追蹤通道關聯的工作流程執行個體，重新載入每個 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">如果尚未在暫止狀態中，工作流程會在追蹤設定檔重新載入時由執行階段追蹤基礎結構暫時停止。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">繼續執行之前暫止的工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">主機可以呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> 以繼續執行之前暫止的工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">如果工作流程執行個體不在暫停狀態中，則不採取任何行動。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before execution of the workflow instance is resumed.</source>
          <target state="translated">執行階段會在正要繼續執行工作流程執行個體之前引發 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The following example demonstrates calling Resume on a previously suspended workflow instance.</source>
          <target state="translated">下列程式碼範例將示範如何呼叫之前暫止的工作流程執行個體上的 Resume。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>This example is from the Suspend and Terminate SDK sample.</source>
          <target state="translated">這個範例來自＜暫止與結束 SDK＞範例。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>For more information, see <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>暫止與終止範例<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">開始執行工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> on the root activity of this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 會呼叫此工作流程執行個體根活動上的 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> encounters an exception, it terminates the workflow instance by calling <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the exception passed as the reason for the termination.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 遇到例外狀況，它會呼叫 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 並傳遞例外狀況的 <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> 屬性當做結束原因，以結束工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method to start a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">下列程式碼範例將示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 方法在工作流程主機中啟動 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼會建立 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 的執行個體、加入服務至執行階段，然後示範建立 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件的建議方式。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>It creates a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object and casts it to one of the workflow objects with which the host is associated.</source>
          <target state="translated">它會建立 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 物件，並將它轉換成其中一個與主機關聯的工作流程物件。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code next initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">程式碼接著藉由呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 方法和傳遞之前建立的類型給它來初始化 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 由 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> 方法呼叫啟動。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">這個程式碼範例是 Program.cs 檔案中＜取消工作流程 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>取消工作流程<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow instance has already been started.</source>
          <target state="translated">工作流程執行個體已啟動。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">暫止工作流程執行個體的原因描述。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>Suspends the workflow instance.</source>
          <target state="translated">暫止工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">工作流程執行個體是以同步方式暫止。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event and passes <ph id="ph2">`reason`</ph> in a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>.</source>
          <target state="translated">如果工作流程執行個體已經暫停，則不採取任何行動，否則工作流程執行階段引擎會暫止工作流程執行個體、引發 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> 事件，並在 <ph id="ph2">`reason`</ph> 中傳遞 <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> does not unload the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> 不會卸載工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The following code example demonstrates calling Suspend on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例將示範如何呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件上的 Suspend。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">結束工作流程執行個體的原因描述。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">以同步方式結束工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">工作流程執行個體是以同步方式結束。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> to terminate the workflow instance.</source>
          <target state="translated">主機會呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> 以結束工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">工作流程執行階段引擎會清除記憶體中的工作流程執行個體，並通知持續性服務已清除記憶體中的執行個體。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">對 <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> 而言，這表示發生終止時，所有該工作流程執行個體的狀態資訊都會從資料庫中刪除。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">您將無法從之前儲存的保存點重新載入工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event and passes <ph id="ph3">`reason`</ph> in the <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> property of a <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> contained in the <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>.</source>
          <target state="translated">清除記憶體內的工作流程執行個體，而且通知持續性服務已終止執行個體後，<ph id="ph1">`Terminate`</ph> 方法會引發 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> 事件，並且在包含於 <ph id="ph3">`reason`</ph> 中的 <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> 之 <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> 屬性中傳遞 <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source><ph id="ph1">`Terminate`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph> 與 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> 不同，因為 Terminate 會清除記憶體內的工作流程執行個體並通知持續性服務時，<ph id="ph3">`Abort`</ph> 僅清除可以從上次保存點重新啟動之記憶體內的工作流程執行個體。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The following code example demonstrates calling Terminate on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例將示範如何呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> 物件上的 Terminate。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">工作流程執行階段引擎不在執行中。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">執行個體暫止或閒置時，將工作流程執行個體從記憶體卸載到持續性存放區中。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance was unloaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果工作流程執行個體已卸載則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is idle or suspended, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">如果工作流程執行個體閒置或暫停，<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 會使用持續性服務移除記憶體中的工作流程執行個體，然後將它保存在資料存放區中。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果沒有已向 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 註冊的持續性服務，<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 會擲回 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, and returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果成功保存工作流程執行個體，就會引發執行階段<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>事件，並傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 傳回<ph id="ph2">`false`</ph>工作流程執行個體已卸載，如果已終止，已中止，或已完成。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">主機可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> 從閒置的工作流程中回收系統資源。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The following example demonstrates using the TryUnload method to unload a workflow when the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event fires.</source>
          <target state="translated">下列程式碼範例將示範如何使用 TryUnload 方法在 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> 事件引發時卸載工作流程。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>This example is from the Using Persistence Services SDK sample, from the Program.cs file.</source>
          <target state="translated">這個範例是 Program.cs 檔案中＜使用持續性服務 SDK＞範例的一部分。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>For more information, see <bpt id="p1">[</bpt>Using Persistence Services Sample<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>使用持續性服務範例<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">沒有已經向工作流程執行階段引擎註冊的持續性服務。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">將工作流程執行個體從記憶體卸載到持續性存放區中。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">此呼叫會封鎖到完成目前排程的工作後，或到異動範圍結束為止。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 是同步的，也就是說，它會在完成其執行的任何動作後傳回。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">如果工作流程執行個體未閒置，則執行階段會等到執行個體可以被中斷為止。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> method.</source>
          <target state="translated">只有在目前排程的工作項目完成後，才能中斷執行個體。這通常發生在目前執行的 Activity 從執行個體的 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> 方法傳回時。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>However, if the instance is executing a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">但如果執行個體正在執行 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>，則執行個體必須等到交易範圍完成執行後才能被中斷。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">請先卸載，然後使用持續性服務移除記憶體中的工作流程執行個體，然後將它保存在資料存放區中。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果沒有已向 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 註冊的持續性服務，<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 會擲回 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">如果成功保存工作流程執行個體，執行階段會引發 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">主機可以使用 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 從閒置的工作流程中回收系統資源。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The following example demonstrates calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列範例示範呼叫 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> 物件上的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">沒有已經向工作流程執行階段引擎註冊的持續性服務。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this workflow instance.</source>
          <target state="translated">取得此工作流程執行個體的 <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>，表示此工作流程執行個體執行時所在的執行環境。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>The following example demonstrates accessing the executing <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">下列範例將示範如何存取 <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> 物件之執行中的 <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>