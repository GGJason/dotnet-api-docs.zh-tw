<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ecf66b19a3ff319ee7547a7fd2dd580b3c592eb4" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39808830" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <TypeSignature Language="F#" Value="type WorkflowQueuingService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供管理 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 物件的服務。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.WorkflowQueuingService> 提供的方法，可以讓您用於管理與工作流程執行個體關聯的工作流程佇列。  
  
   
  
## Examples  
 下列程式碼範例將示範名為 `CreateQueue` 的方法，此方法透過呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService> 方法來初始化 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> 物件。 然後，此程式碼會使用 <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> 方法來判斷具有指定名稱的 <xref:System.Workflow.Runtime.WorkflowQueue> 是否存在。 如果不存在，程式碼會呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> 方法，否則呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> 方法。  
  
 這個程式碼範例是 FileSystemEvent.cs 檔案中＜檔案監看員活動 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 檔案系統監看員活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)。  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowQueue : IComparable * bool -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.CreateWorkflowQueue (queueName, transactional)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">佇列的名稱。</param>
        <param name="transactional">指定 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 在目前交易範圍外是否可見的值。</param>
        <summary>使用指定的名稱和交易範圍建立 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用指定的 <xref:System.Workflow.Runtime.WorkflowQueue> 建立 `queueName`。 如果可交易為 `true`，只有在目前交易內才可以看見 <xref:System.Workflow.Runtime.WorkflowQueue>。  
  
   
  
## Examples  
 下列程式碼範例將示範名為 `CreateQueue` 的方法，此方法透過呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService> 方法來初始化 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> 物件。 然後，此程式碼會使用 <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> 方法來判斷具有指定名稱的 <xref:System.Workflow.Runtime.WorkflowQueue> 是否存在。 如果不存在，程式碼會呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> 方法，否則呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> 方法。  
  
 這個程式碼範例是 FileSystemEvent.cs 檔案中＜檔案監看員活動 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 檔案系統監看員活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)。  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.InvalidOperationException">具有 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 指定之名稱的 <paramref name="queueName" /> 已經存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowQueue : IComparable -&gt; unit" Usage="workflowQueuingService.DeleteWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">要刪除之 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名稱。</param>
        <summary>刪除指定的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範將字串寫入主控台的方法，透過呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService> 方法建立 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> 的執行個體。 最後，程式碼會呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A> 方法，以刪除目前工作流程上與 `QueueName` 屬性關聯的佇列。  
  
 這個程式碼範例是 FileSystemEvent.cs 檔案中＜檔案監看員活動 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 檔案系統監看員活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)。  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.Exists : IComparable -&gt; bool" Usage="workflowQueuingService.Exists queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">
          <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名稱。</param>
        <summary>測試指定的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 是否存在。</summary>
        <returns>如果 <see langword="true" /> 存在則為 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範名為 `CreateQueue` 的方法，此方法透過呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService> 方法來初始化 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> 物件。 然後，此程式碼會使用 <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> 方法來判斷具有指定名稱的 <xref:System.Workflow.Runtime.WorkflowQueue> 是否存在。 如果不存在，程式碼會呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> 方法，否則呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> 方法。  
  
 這個程式碼範例是 FileSystemEvent.cs 檔案中＜檔案監看員活動 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 檔案系統監看員活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)。  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueue : IComparable -&gt; System.Workflow.Runtime.WorkflowQueue" Usage="workflowQueuingService.GetWorkflowQueue queueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">要擷取之 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名稱。</param>
        <summary>擷取指定的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。</summary>
        <returns>
          <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範名為 `CreateQueue` 的方法，此方法透過呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService> 方法來初始化 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType> 物件。 然後，此程式碼會使用 <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A> 方法來判斷具有指定名稱的 <xref:System.Workflow.Runtime.WorkflowQueue> 是否存在。 如果不存在，程式碼會呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> 方法，否則呼叫 <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A> 方法。  
  
 這個程式碼範例是 FileSystemEvent.cs 檔案中＜檔案監看員活動 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 檔案系統監看員活動](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99)。  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.InvalidOperationException">找不到指定的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PendingMessagesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含與此 <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> 關聯之工作流程佇列中的未使用項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工作流程執行個體完成或終止時，在其與此 <xref:System.Workflow.Runtime.WorkflowQueuingService> 關聯的工作流程佇列中的所有未使用項目會移至 <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>