<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d074397b6e73e9390192ca3db33fa95f08a0c408" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48728379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type SoapHttpClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7ac1-101">指定使用 SOAP 時做為衍生 Proxy 來源的類別用戶端。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7ac1-101">Specifies the class client that proxies derive from when using SOAP.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-102">如果您要建置 XML Web service 用戶端，則 proxy 類別，間接或衍生直接從<xref:System.Web.Services.Protocols.WebClientProtocol>必須建立 XML Web 服務。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-102">If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> must be created for the XML Web service.</span></span> <span data-ttu-id="a7ac1-103">當使用 SOAP 呼叫 XML Web service 用戶端時，proxy 類別必須衍生自<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>，其衍生自<xref:System.Web.Services.Protocols.HttpWebClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-103">When the XML Web service client calls using SOAP, the proxy class must derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from <xref:System.Web.Services.Protocols.HttpWebClientProtocol>.</span></span> <span data-ttu-id="a7ac1-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>反而是衍生自<xref:System.Web.Services.Protocols.WebClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>, in turn, derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="a7ac1-105">與 XML Web service 通訊，請建立 proxy 類別，間接或直接衍生自<xref:System.Web.Services.Protocols.WebClientProtocol>對您想要呼叫 XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-105">To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="a7ac1-106">而不是以手動方式建立 proxy 類別，使用 Web 服務描述語言工具 (Wsdl.exe) 來建立 proxy 類別，針對指定的 XML Web 服務的服務描述。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-106">Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="a7ac1-107">同步呼叫 XML Web service 方法的 SOAP 通訊協定產生 proxy 類別時，會透過<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>方法，而使用進行非同步呼叫<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>方法和<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-107">When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method, whereas asynchronous calls are made using the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method and the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-108">下列程式碼範例是由如 Wsdl.exe 產生 proxy 類別`Math`XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-108">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="a7ac1-109">Proxy 類別衍生自<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>，後者衍生自抽象<xref:System.Web.Services.Protocols.WebClientProtocol>類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-109">The proxy class derives from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a7ac1-110">下列程式碼範例是`Math`XML Web service，從中產生上述的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-110">The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7ac1-111">這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-111">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="a7ac1-112">根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-112">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="a7ac1-113">如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-113">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a7ac1-114">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7ac1-114">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="a7ac1-115">當您覆寫這個類別時，您可以導入衍生類別中，這專屬於特定類型的 XML Web service 的方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7ac1-115">When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</span>
        </span>
        <span data-ttu-id="a7ac1-116">方法會擷取參數，並呼叫基底類別，來執行與 XML Web service 通訊的工作。</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7ac1-116">The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</span>
        </span>
        <span data-ttu-id="a7ac1-117">如果導入的方法是非同步的呼叫<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />方法和<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7ac1-117">If the introduced methods are asynchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method and the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method.</span>
        </span>
        <span data-ttu-id="a7ac1-118">導入的方法是同步的如果呼叫<see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" />方法。</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7ac1-118">If the introduced methods are synchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> method.</span>
        </span>
        <span data-ttu-id="a7ac1-119">覆寫建構函式通常會設定<see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />屬性的 XML Web service 方法的 url。</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7ac1-119">The overridden constructor typically sets the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> property to the URL of the XML Web service method.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7ac1-120">初始化 <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="soapHttpClientProtocol.BeginInvoke (methodName, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="a7ac1-121">衍生類別中 XML Web Service 方法的名稱，該類別正在叫用 (Invoke) <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-121">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="a7ac1-122">物件陣列，包含要傳遞至 XML Web Service 的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-122">An array of objects containing the parameters to pass to the XML Web service.</span>
          </span>
          <span data-ttu-id="a7ac1-123">陣列中值的順序會對應至衍生類別之呼叫方法中參數的順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-123">The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a7ac1-124">非同步叫用完成後，要呼叫的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-124">The delegate to call when the asynchronous invoke is complete.</span>
          </span>
          <span data-ttu-id="a7ac1-125">如果 <c>callback</c> 為 <see langword="null" />，則不呼叫委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-125">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="a7ac1-126">呼叫端提供的額外資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-126">Extra information supplied by the caller.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-127">使用 SOAP 啟動 XML Web Service 方法的非同步引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-127">Starts an asynchronous invocation of an XML Web service method using SOAP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-128">
            <see cref="T:System.IAsyncResult" />，會傳遞至 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> 方法，以便自遠端方法呼叫取得傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-128">An <see cref="T:System.IAsyncResult" /> that is passed to the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-129">一般而言，您不會呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>方法直接，除非您正在建置自己的 XML Web service 的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-129">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="a7ac1-130">從服務描述 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別會公開 XML Web service 方法為衍生自 proxy 類別以同步方式呼叫 XML Web service 方法的名稱。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-130">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</span></span> <span data-ttu-id="a7ac1-131">若要以非同步方式呼叫 XML Web service 方法，兩個額外的方法加入至每個 XML Web service 方法，一個使用的 proxy 類別`Begin`加入至 XML Web service 方法，一個具有名稱的前置詞`End`加入前置詞。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-131">To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>  
  
 <span data-ttu-id="a7ac1-132">Proxy 類別呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>啟動 XML Web service 方法的非同步引動過程呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-132">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method to start an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="a7ac1-133">例如，如果 XML Web service 會公開名為 XML Web service 方法`Add`，proxy 類別包含一個名為方法`BeginAdd`，用於啟動的引動過程，XML web service 方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-133">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `BeginAdd`, for starting an invocation to the XML Web service method.</span></span> <span data-ttu-id="a7ac1-134">中的程式碼`BeginAdd`，進行呼叫，以<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>方法，並將結果放入預期的傳回類型，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-134">Within the code for the `BeginAdd`, a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method and the results are placed into the expected return type for `Add`.</span></span>  
  
 <span data-ttu-id="a7ac1-135">`methodName`用來尋找自訂屬性的可能已新增至方法，例如<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-135">The `methodName` is used to find the custom attributes which may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="a7ac1-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 提供衍生的方法所需的 SOAP 通訊協定的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information about the derived method that is required for the SOAP protocol.</span></span>  
  
 <span data-ttu-id="a7ac1-137">`asyncState` 傳遞至`callback`納入<xref:System.IAsyncResult>傳回<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-137">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="a7ac1-138">`asyncState`參數可以用來傳遞內容的非同步呼叫，在指定的資訊`callback`參數，以處理結果的委派。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-138">The `asyncState` parameter can be used to pass information about the context of the asynchronous call, specified in the `callback` parameter, to the delegate that handles the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-139">下列程式碼範例是 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別`Math`XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-139">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service.</span></span> <span data-ttu-id="a7ac1-140">內`BeginAdd`proxy 類別的方法<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A>方法正在啟動非同步引動過程`Add`XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-140">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method is starting an asynchronous invocation to the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a7ac1-141">下列程式碼範例是`Math`XML Web service，從中建立上述的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-141">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">
          <span data-ttu-id="a7ac1-142">要求已到達伺服器電腦，但是並未成功處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-142">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7ac1-143">要求對物件的目前狀態而言無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-143">The request was not valid for the object's current state.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="a7ac1-144">存取往路時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-144">An error occurred while accessing the network.</span>
          </span>
        </exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberSignature Language="F#" Value="member this.Discover : unit -&gt; unit" Usage="soapHttpClientProtocol.Discover " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7ac1-145">動態繫結至 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> 的探索文件中所述的 XML Web Service。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-145">Dynamically binds to an XML Web service described in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-146">將 XML Web service 用戶端可以動態地繫結至 XML Web service 不在 proxy 類別中使用參考一個<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-146">An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method.</span></span> <span data-ttu-id="a7ac1-147">一般而言，<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>屬性指的是 XML Web 服務的基底位址。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-147">Typically, the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property refers to the base address of the XML Web service.</span></span> <span data-ttu-id="a7ac1-148">不過，再叫用<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法，將<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>屬性，以探索文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-148">However, before invoking the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method, set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to a URL of a discovery document.</span></span> <span data-ttu-id="a7ac1-149"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法會嘗試在 proxy 類別中定義的繫結的探索文件中尋找相符項目，然後動態繫結到它。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-149">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</span></span> <span data-ttu-id="a7ac1-150">如果成功，後續的方法呼叫會導向至 XML Web service 的探索文件中所述。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-150">If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</span></span>  
  
 <span data-ttu-id="a7ac1-151">如果使用 Web 服務描述語言工具 (Wsdl.exe) 來建置 proxy 類別時，proxy 類別會定義實作 XML Web service 方法，它會叫用使用的繫結<xref:System.Web.Services.WebServiceBindingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-151">If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <xref:System.Web.Services.WebServiceBindingAttribute>.</span></span> <span data-ttu-id="a7ac1-152">當 XML Web service 實作多個繫結時，Wsdl.exe 就會建立 proxy 類別，每個繫結。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-152">When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</span></span> <span data-ttu-id="a7ac1-153">套用至每個 proxy 類別是<xref:System.Web.Services.WebServiceBindingAttribute>所定義的繫結和它的命名空間名稱。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-153">Applied to each proxy class is a <xref:System.Web.Services.WebServiceBindingAttribute> that defines the name of the binding and its namespace.</span></span> <span data-ttu-id="a7ac1-154">您所設定的探索文件<xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>屬性必須包含相同的繫結名稱和命名空間，會實作 XML Web 服務的參考，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-154">The discovery document you set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-155">下列程式碼範例是使用 Wsdl.exe 公用程式，用於產生的 proxy 類別`Math`XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-155">The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service.</span></span> <span data-ttu-id="a7ac1-156">A<xref:System.Web.Services.WebServiceBindingAttribute>套用至`Math`設為繫結名稱的 proxy 類別`MathSoap`及其命名空間來`http://tempuri.org/`。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-156">A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.</span></span>  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a7ac1-157">下列程式碼範例是使用上述的 proxy 類別的 Web 服務用戶端。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-157">The following code example is a Web Service client using the preceding proxy class.</span></span> <span data-ttu-id="a7ac1-158">內`EnterBtn_Click`Web 表單，XML Web service 用戶端呼叫的事件<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A>方法嘗試動態繫結的使用者所提供的 URL。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-158">Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempting to dynamically bind to the URL supplied by the user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a7ac1-159">這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-159">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="a7ac1-160">根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-160">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="a7ac1-161">如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-161">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="a7ac1-162">Proxy 類別不會定義繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-162">The proxy class does not have a binding defined.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/fxx6cfx2(v=vs.100)">
          <span data-ttu-id="a7ac1-163">XML Web Service 探索</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-163">XML Web Service Discovery</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj[]" Usage="soapHttpClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="a7ac1-164">從 <see cref="T:System.IAsyncResult" /> 方法傳回的 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-164">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-165">使用 SOAP 結束 XML Web Service 方法的非同步引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-165">Ends an asynchronous invocation of an XML Web service method using SOAP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-166">物件陣列，包含衍生類別方法的傳回值以及任何傳址 (By Reference) 方式或 <see langword="out" /> 的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-166">An array of objects that contains the return value and any by-reference or <see langword="out" /> parameters of the derived class method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-167">一般而言，您不會呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>方法直接，除非您正在建置自己的 XML Web service 的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-167">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="a7ac1-168">XML Web service 的 Web 服務描述語言工具 (Wsdl.exe) 產生的 proxy 類別會公開 XML Web service 方法為從 proxy 類別以同步方式呼叫 XML Web service 方法的名稱。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-168">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</span></span> <span data-ttu-id="a7ac1-169">對於以非同步方式呼叫 XML Web service 方法，兩個額外的方法會加入至每個 XML Web service 方法，一個使用的 proxy 類別`Begin`加入至 XML Web service 方法，一個具有名稱的前置詞`End`加入前置詞。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-169">For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>  
  
 <span data-ttu-id="a7ac1-170">Proxy 類別呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>完成 XML Web service 方法的非同步引動過程呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-170">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method to complete an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="a7ac1-171">例如，如果 XML Web service 會公開名為 XML Web 服務方法`Add`，proxy 類別包含一個名為方法`EndAdd`，完成非同步引動過程的 XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-171">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `EndAdd`, for completing an asynchronous invocation of an XML Web service method.</span></span> <span data-ttu-id="a7ac1-172">中的程式碼`EndAdd`進行呼叫，以<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>方法，然後結果會放入預期的傳回類型，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-172">Within the code for the `EndAdd` a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-173">下列程式碼範例是由如 Wsdl.exe 產生 proxy 類別`Math`XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-173">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="a7ac1-174">內`EndAdd`proxy 類別的方法<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A>方法會完成非同步引動過程`Add`XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-174">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method completes the asynchronous invocation to the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a7ac1-175">下列程式碼範例是`Math`XML Web service，從中建立上述的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-175">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7ac1-176">
            <paramref name="asyncResult" /> 並非 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 方法的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-176">
              <paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException">
          <span data-ttu-id="a7ac1-177">要求已到達伺服器電腦，但是並未成功處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-177">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7ac1-178">要求對物件的目前狀態而言無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-178">The request was not valid for the object's current state.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="a7ac1-179">存取往路時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-179">An error occurred while accessing the network.</span>
          </span>
        </exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader&#xA;override this.GetReaderForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlReader" Usage="soapHttpClientProtocol.GetReaderForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a7ac1-180">
            <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />，提供 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />，以初始化 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-180">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="a7ac1-181">
            <see cref="T:System.IO.StreamReader" /> 所使用之 <see cref="T:System.Xml.XmlReader" /> 的初始緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-181">The initial buffer size of the <see cref="T:System.IO.StreamReader" /> used by the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-182">傳回 <see cref="T:System.Xml.XmlReader" />，它是使用 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 參數的 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> 屬性初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-182">Returns an <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-183">
            <see cref="T:System.Xml.XmlReader" />，使用 <paramref name="message" /> 參數的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 屬性初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-183">A <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="soapHttpClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="a7ac1-184">建立 <see cref="T:System.Uri" /> 時要使用的 <see cref="T:System.Net.WebRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-184">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-185">建立指定之 <see cref="T:System.Net.WebRequest" /> 的 <paramref name="uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-185">Creates a <see cref="T:System.Net.WebRequest" /> for the specified <paramref name="uri" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-186">所指定之 URI 的 <see cref="T:System.Net.WebRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-186">The <see cref="T:System.Net.WebRequest" /> for the specified URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-187">可以覆寫這個方法，以自訂<xref:System.Net.WebRequest>之前 XML Web service 要求。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-187">This method can be overridden to customize the <xref:System.Net.WebRequest> before the XML Web service request is made.</span></span> <span data-ttu-id="a7ac1-188">比方說，您可以將自訂標頭加入要求。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-188">For example, you could add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7ac1-189">
            <paramref name="uri" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-189">The <paramref name="uri" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberSignature Language="F#" Value="abstract member GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter&#xA;override this.GetWriterForMessage : System.Web.Services.Protocols.SoapClientMessage * int -&gt; System.Xml.XmlWriter" Usage="soapHttpClientProtocol.GetWriterForMessage (message, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a7ac1-190">
            <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />，提供 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />，以初始化 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-190">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="a7ac1-191">
            <see cref="T:System.IO.StreamWriter" /> 所使用之 <see cref="T:System.Xml.XmlWriter" /> 的初始緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-191">The initial buffer size of the <see cref="T:System.IO.StreamWriter" /> used by the <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-192">傳回 <see cref="T:System.Xml.XmlWriter" />，它是使用 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 參數的 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> 屬性初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-192">Returns a <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-193">
            <see cref="T:System.Xml.XmlWriter" />，使用 <paramref name="message" /> 參數的 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 屬性初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-193">A <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * obj[] -&gt; obj[]" Usage="soapHttpClientProtocol.Invoke (method_name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="a7ac1-194">XML Web Service 方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-194">The name of the XML Web service method.</span>
          </span>
        </param>
        <param name="method_name">
          <span data-ttu-id="a7ac1-195">XML Web Service 方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-195">The name of the XML Web service method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="a7ac1-196">物件陣列，包含要傳遞至 XML Web Service 的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-196">An array of objects that contains the parameters to pass to the XML Web service.</span>
          </span>
          <span data-ttu-id="a7ac1-197">陣列中值的順序會對應至衍生類別之呼叫方法中參數的順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-197">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-198">使用 SOAP 同步叫用 XML Web Service 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-198">Invokes an XML Web service method synchronously using SOAP.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7ac1-199">物件陣列，包含衍生類別方法的傳回值和任何 <see langword="reference" /> 或 <see langword="out" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-199">An array of objects that contains the return value and any <see langword="reference" /> or <see langword="out" /> parameters of the derived class method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-200">一般而言，您不能呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>方法直接，除非您正在建置自己的 XML Web service 的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-200">Typically, you do not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method directly, unless you are building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="a7ac1-201">XML Web service 的 Web 服務描述語言工具 (Wsdl.exe) 產生的 proxy 類別會公開 XML Web service 方法為從 proxy 類別的名稱。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-201">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</span></span> <span data-ttu-id="a7ac1-202">Proxy 類別呼叫<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>叫用 XML Web 服務方法呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-202">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method to invoke an XML Web service method call.</span></span> <span data-ttu-id="a7ac1-203">例如，如果 XML Web service 會公開名為 XML Web 服務方法`Add`，proxy 類別也包含一個名為方法`Add`。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-203">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class also contains a method named `Add`.</span></span> <span data-ttu-id="a7ac1-204">中的程式碼`Add`proxy 類別中的方法，同步呼叫 XML Web service 方法，透過<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>方法，然後結果會放入預期的傳回類型，如`Add`。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-204">Within the code for the `Add` method in the proxy class, a synchronous call is made to the XML Web service method through the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>  
  
 <span data-ttu-id="a7ac1-205">`methodName`參數用來尋找自訂屬性，可能已新增至方法，例如<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-205">The `methodName` parameter is used to find the custom attributes that may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="a7ac1-206"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 在衍生的方法所需的 SOAP 通訊協定提供其他資訊。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-206"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information on the derived method which is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-207">下列程式碼範例是由如 Wsdl.exe 產生 proxy 類別`Math`XML Web service。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-207">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="a7ac1-208">內`Add`proxy 類別的方法<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A>方法呼叫`Add`XML Web service 方法。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-208">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method is calling the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a7ac1-209">下列程式碼範例是`Math`XML Web service，從中建立上述的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-209">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException">
          <span data-ttu-id="a7ac1-210">要求已到達伺服器電腦，但是並未成功處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-210">The request reached the server computer, but was not processed successfully.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7ac1-211">要求對物件的目前狀態而言無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-211">The request was not valid for the object's current state.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="a7ac1-212">存取往路時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-212">An error occurred while accessing the network.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7ac1-213">非同步叫用指定的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-213">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="a7ac1-214">所要叫用之方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-214">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="a7ac1-215">要傳遞至該方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-215">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a7ac1-216">方法引動過程完成時呼叫的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-216">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-217">非同步叫用指定的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-217">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="soapHttpClientProtocol.InvokeAsync (methodName, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="a7ac1-218">所要叫用之方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-218">The name of the method to invoke.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="a7ac1-219">要傳遞至該方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-219">The parameters to pass to the method.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a7ac1-220">方法引動過程完成時呼叫的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-220">The delegate called when the method invocation has completed.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="a7ac1-221">用來將狀態資訊傳遞至 <c>callback</c> 委派的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-221">An object used to pass state information into the <c>callback</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7ac1-222">非同步叫用指定的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-222">Invokes the specified method asynchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion with get, set" Usage="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7ac1-223">取得或設定 SOAP 通訊協定的版本，用於對 XML Web Service 發出 SOAP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-223">Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7ac1-224">其中一個 <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-224">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span>
          </span>
          <span data-ttu-id="a7ac1-225">預設值為 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ac1-225">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ac1-226"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>屬性會設定以 Web 服務描述語言工具 (Wsdl.exe) 所產生的 proxy 類別<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11>依預設，當 WSDL 文件的 XML Web service 支援 SOAP 1.1 版。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-226">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</span></span> <span data-ttu-id="a7ac1-227">不過，當 XML Web 服務只支援 SOAP 1.2，Wsdl.exe 集<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>屬性設<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-227">However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>.</span></span> <span data-ttu-id="a7ac1-228">若要產生 proxy 類別，使用 Wsdl.exe 時，請選擇的 SOAP 通訊協定版本，請使用`/protocol`參數搭配`SOAP`或`SOAP12`設定，才能<xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A>屬性設<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11>和<xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>分別.</span><span class="sxs-lookup"><span data-stu-id="a7ac1-228">To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the `/protocol` switch with the `SOAP` or `SOAP12` settings to set the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> and <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7ac1-229">下列程式碼範例會設定用來與 SOAP 1.2 的 XML Web service 通訊的通訊協定版本。</span><span class="sxs-lookup"><span data-stu-id="a7ac1-229">The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</span></span>  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>