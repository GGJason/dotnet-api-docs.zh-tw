<Type Name="LogicalMethodInfo" FullName="System.Web.Services.Protocols.LogicalMethodInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db6881eeb759e493c4078f557833e3e432f622da" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LogicalMethodInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogicalMethodInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogicalMethodInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalMethodInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f2194-101">表示 XML Web Service 方法的屬性 (Attribute) 和中繼資料 (Metadata)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2194-101">Represents the attributes and metadata for an XML Web service method.</span>
      </span>
      <span data-ttu-id="f2194-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2194-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo> 主要由使用 SOAP 延伸模組來詢問與 SOAP 延伸模組設定為執行 XML Web 服務方法的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="f2194-103"><xref:System.Web.Services.Protocols.LogicalMethodInfo> is used primarily by a SOAP extension to interrogate the details of the XML Web service method with which the SOAP extension is configured to run.</span></span> <span data-ttu-id="f2194-104">根據 SOAP 延伸模組的設定方式，它可以了解詳細資料中的 XML Web 服務方法<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>方法<xref:System.Web.Services.Protocols.SoapExtension>採用<xref:System.Web.Services.Protocols.LogicalMethodInfo>。</span><span class="sxs-lookup"><span data-stu-id="f2194-104">Depending on how the SOAP extension is configured, it can find out details about the XML Web service method in the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method of <xref:System.Web.Services.Protocols.SoapExtension> that takes a <xref:System.Web.Services.Protocols.LogicalMethodInfo>.</span></span> <span data-ttu-id="f2194-105"><xref:System.Web.Services.Protocols.LogicalMethodInfo>提供詳細資料，例如 XML Web 服務方法的參數，藉由存取<xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A>屬性和任何自訂屬性套用至 XML Web 服務方法使用<xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f2194-105">The <xref:System.Web.Services.Protocols.LogicalMethodInfo> provides details such as the XML Web service method's parameters by accessing the <xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> property and any custom attributes applied to the XML Web service method using the <xref:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes%2A> property.</span></span>  
  
 <span data-ttu-id="f2194-106">如需 SOAP 延伸模組的詳細資訊，請參閱<xref:System.Web.Services.Protocols.SoapExtension>類別或[ &#91; \<topic://cpconAlteringSOAPMessageUsingSOAPExtensions >&#93;](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)。</span><span class="sxs-lookup"><span data-stu-id="f2194-106">For more details on SOAP extensions see the <xref:System.Web.Services.Protocols.SoapExtension> class or [&#91;\<topic://cpconAlteringSOAPMessageUsingSOAPExtensions>&#93;](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
    <altmember cref="T:System.Reflection.MethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public LogicalMethodInfo (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method_info As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LogicalMethodInfo(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="methodInfo">To be added.</param>
        <summary>
          <span data-ttu-id="f2194-107">使用傳入的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，初始化 <see cref="T:System.Reflection.MethodInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-107">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class with the <see cref="T:System.Reflection.MethodInfo" /> passed in.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2194-108">
            <paramref name="methodInfo" /> 參數的 <see cref="P:System.Reflection.MethodBase.IsStatic" /> 屬性為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-108">The <see cref="P:System.Reflection.MethodBase.IsStatic" /> property of the <paramref name="methodInfo" /> parameter is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f2194-109">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-109">-or-</span>
          </span>
          <span data-ttu-id="f2194-110">
            <paramref name="methodInfo" /> 參數的 <see cref="M:System.Reflection.MethodBase.GetParameters" /> 方法沒有包含以 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 執行個體所表示方法所需要的所有參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-110">The <see cref="M:System.Reflection.MethodBase.GetParameters" /> method of the <paramref name="methodInfo" /> parameter does not contain all the parameters required by the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncCallbackParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncCallbackParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncCallbackParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncCallbackParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncCallbackParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-111">取得非同步 (Asynchronous) 引動過程中 Begin 方法之 <paramref name="AsyncCallback" /> 參數的參數資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-111">Gets the parameter information for the <paramref name="AsyncCallback" /> parameter of a Begin method in an asynchronous invocation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-112">
            <see cref="T:System.Reflection.ParameterInfo" />，表示 <see langword="Begin" /> 非同步方法引動過程的 <paramref name="AsyncCallback" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-112">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncCallback" /> parameter of a <see langword="Begin" /> asynchronous method invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-113">Common language runtime 中的非同步設計模式包括呼叫`Begin`方法啟動的非同步方法引動過程和`End`方法來完成引動過程。</span><span class="sxs-lookup"><span data-stu-id="f2194-113">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="f2194-114">`Begin`方法會採用兩個額外的參數，除了同步版本的方法所定義的參數： 一個用來儲存委派，其中儲存要傳遞給委派的任何狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="f2194-114">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="f2194-115">這個屬性是指委派的參數名稱的參數`AsyncCallback`。</span><span class="sxs-lookup"><span data-stu-id="f2194-115">This property represents the parameter for the delegate with a parameter name of `AsyncCallback`.</span></span>  
  
 <span data-ttu-id="f2194-116">如需有關如何以非同步方式叫用 XML Web 服務的詳細資訊，請參閱[ &#91; \<topic://cpconInvokingWebServicesAsynchronously >&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)。</span><span class="sxs-lookup"><span data-stu-id="f2194-116">For more information on invoking XML Web services asynchronously, see [&#91;\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
      </Docs>
    </Member>
    <Member MemberName="AsyncResultParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncResultParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncResultParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncResultParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncResultParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-117">取得 <see langword="Begin" /> 非同步方法引動過程的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-117">Gets the return value of a <see langword="Begin" /> asynchronous method invocation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-118">
            <see cref="T:System.Reflection.ParameterInfo" />，表示從 <see langword="Begin" /> 非同步方法引動過程傳回的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-118">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <see cref="T:System.IAsyncResult" /> returned from a <see langword="Begin" /> asynchronous method invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-119">Common language runtime 中的非同步設計模式包括呼叫`Begin`方法啟動的非同步方法引動過程和`End`方法來完成引動過程。</span><span class="sxs-lookup"><span data-stu-id="f2194-119">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="f2194-120">`Begin`方法通常會立即傳回並實作<xref:System.IAsyncResult>介面，然後傳遞至`End`於稍後完成的非同步方法引動過程的方法。</span><span class="sxs-lookup"><span data-stu-id="f2194-120">The `Begin` method typically returns immediately with an object implementing the <xref:System.IAsyncResult> interface, which can then be passed to the `End` method at a later time to complete the asynchronous method invocation.</span></span> <span data-ttu-id="f2194-121">傳回的物件實作<xref:System.IAsyncResult>介面由這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2194-121">The returned object implementing the <xref:System.IAsyncResult> interface is represented by this property.</span></span>  
  
 <span data-ttu-id="f2194-122">如需有關如何以非同步方式叫用 XML Web 服務的詳細資訊，請參閱[ &#91; \<topic://cpconInvokingWebServicesAsynchronously >&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)。</span><span class="sxs-lookup"><span data-stu-id="f2194-122">For more information on invoking XML Web services asynchronously, see [&#91;\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
      </Docs>
    </Member>
    <Member MemberName="AsyncStateParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo AsyncStateParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo AsyncStateParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncStateParameter As ParameterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ParameterInfo ^ AsyncStateParameter { System::Reflection::ParameterInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-123">取得非同步引動過程中 <see langword="Begin" /> 方法之 <paramref name="AsyncState" /> 參數的參數資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-123">Gets the parameter information for the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-124">
            <see cref="T:System.Reflection.ParameterInfo" />，表示非同步引動過程中 <see langword="Begin" /> 方法的 <paramref name="AsyncState" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-124">A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncState" /> parameter of a <see langword="Begin" /> method in an asynchronous invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-125">Common language runtime 中的非同步設計模式包括呼叫`Begin`方法啟動的非同步方法引動過程和`End`方法來完成引動過程。</span><span class="sxs-lookup"><span data-stu-id="f2194-125">The asynchronous design pattern in the common language runtime involves calling a `Begin` method to start the asynchronous method invocation and an `End` method to complete the invocation.</span></span> <span data-ttu-id="f2194-126">`Begin`方法會採用兩個額外的參數，除了同步版本的方法所定義的參數： 一個用來儲存委派，其中儲存要傳遞給委派的任何狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="f2194-126">The `Begin` method takes two additional parameters besides the parameters defined by the synchronous version of the method: one to store a delegate and one to store any state information that needs to be passed on to the delegate.</span></span> <span data-ttu-id="f2194-127">這個屬性代表所要傳遞至委派所需的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="f2194-127">This property represents the state information that needs to be passed into the delegate.</span></span>  
  
 <span data-ttu-id="f2194-128">如需有關如何以非同步方式叫用 XML Web 服務的詳細資訊，請參閱[ &#91; \<topic://cpconInvokingWebServicesAsynchronously >&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0)。</span><span class="sxs-lookup"><span data-stu-id="f2194-128">For more information on invoking XML Web services asynchronously, see [&#91;\<topic://cpconInvokingWebServicesAsynchronously>&#93;](http://msdn.microsoft.com/library/f9e26a43-063a-440a-8c73-a02f2ccf3ea0).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter" />
        <altmember cref="T:System.Reflection.ParameterInfo" />
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (object target, object[] values, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(object target, object[] values, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (target As Object, values As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f2194-129">要在其上叫用方法的 <see cref="T:System.Object" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-129">The instance of the <see cref="T:System.Object" /> on which to invoke the method on.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="f2194-130">叫用方法或的引數清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-130">An argument list for the invoked method.</span>
          </span>
          <span data-ttu-id="f2194-131">這是與方法的參數具有相同數目、順序和型別的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-131">This is an array of objects with the same number, order, and type as the parameters of the method.</span>
          </span>
          <span data-ttu-id="f2194-132">如果方法不需要任何參數，<c>values</c> 應該為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-132">If the method does not require any parameters, <c>values</c> should be <see langword="null" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f2194-133">非同步叫用完成後，要呼叫的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-133">The delegate to call when the asynchronous invoke is complete.</span>
          </span>
          <span data-ttu-id="f2194-134">如果 <c>callback</c> 為 <see langword="null" />，則不呼叫委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-134">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="f2194-135">傳入委派的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-135">State information that is passed on to the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-136">開始這個 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示之方法的非同步引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-136">Begins an asynchronous invocation of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-137">
            <see cref="T:System.IAsyncResult" />，傳遞至 <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> 以自遠端方法呼叫取得傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-137">An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> to obtain the return values from the remote method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#1)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#1)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="f2194-138">
            <paramref name="target" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-138">The <paramref name="target" /> parameteris <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2194-139">
            <paramref name="values" /> 中參數的數目、型別和順序與叫用方法的簽章不符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-139">The number, type, and order of parameters in <paramref name="values" /> do not match the signature of the invoked method.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="f2194-140">呼叫端沒有叫用方法的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-140">The caller does not have permission to invoke the method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo BeginMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo BeginMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ BeginMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-141">取得非同步引動過程中之 <see langword="Begin" /> 方法的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-141">Gets the attributes and metadata for a <see langword="Begin" /> method in an asynchronous invocation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-142">
            <see cref="T:System.Reflection.MethodInfo" />，表示 <see langword="Begin" /> 非同步方法引動過程的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-142">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a <see langword="Begin" /> asynchronous method invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-143">指定 <see cref="T:System.Reflection.MethodInfo" /> 的陣列，建立 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-143">Given an array of <see cref="T:System.Reflection.MethodInfo" />, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo()) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="methodInfos">To be added.</param>
        <summary>
          <span data-ttu-id="f2194-144">指定可以包含非同步和同步方法資訊之 <see cref="T:System.Reflection.MethodInfo" /> 的陣列，建立 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-144">Given an array of <see cref="T:System.Reflection.MethodInfo" /> that can contain information about both asynchronous and synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-145">
            <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的陣列，表示 <paramref name="methodInfos" /> 中的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-145">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2194-146">
            <see langword="Begin" /> 非同步方法包含在沒有對應 <see langword="End" /> 方法的 <paramref name="methodInfos" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-146">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] methodInfos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] methodInfos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (methodInfos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ methodInfos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.LogicalMethodInfo[] Create (System.Reflection.MethodInfo[] method_infos, System.Web.Services.Protocols.LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.LogicalMethodInfo[] Create(class System.Reflection.MethodInfo[] method_infos, valuetype System.Web.Services.Protocols.LogicalMethodTypes types) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (method_infos As MethodInfo(), types As LogicalMethodTypes) As LogicalMethodInfo()" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ Create(cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ method_infos, System::Web::Services::Protocols::LogicalMethodTypes types);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="method_infos" Type="System.Reflection.MethodInfo[]" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
        <Parameter Name="types" Type="System.Web.Services.Protocols.LogicalMethodTypes" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodInfos">To be added.</param>
        <param name="method_infos">To be added.</param>
        <param name="types">
          <span data-ttu-id="f2194-147">
            <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-147">A bitwise combination of the <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> values.</span>
          </span>
          <span data-ttu-id="f2194-148">判斷是否只有非同步或同步方法，或者在傳回的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 陣列中兩者皆有。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-148">Determines whether just asynchronous or synchronous methods or both are included in the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-149">指定 <see cref="T:System.Reflection.MethodInfo" /> 的陣列 (其中傳回的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 陣列可以只限定於非同步或同步方法) 建立 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-149">Given an array of <see cref="T:System.Reflection.MethodInfo" />, where the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> can be restricted to only asynchronous or synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-150">
            <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的陣列，表示 <paramref name="methodInfos" /> 中以 <paramref name="types" /> 值所篩選的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-150">An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />, filtered by the value of <paramref name="types" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f2194-151">
            <see langword="Begin" /> 非同步方法包含在沒有對應 <see langword="End" /> 方法的 <paramref name="methodInfos" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-151">A <see langword="Begin" /> asynchronous method is included in <paramref name="methodInfos" /> without a corresponding <see langword="End" /> method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider CustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider CustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ CustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-152">取得套用至方法的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-152">Gets the custom attributes applied to the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-153">
            <see cref="T:System.Reflection.ICustomAttributeProvider" />，表示方法的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-153">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-154">取得宣告方法的類別 (由目前的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-154">Gets the class that declares the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-155">
            <see cref="T:System.Type" />，用於宣告 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示之方法的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-155">The <see cref="T:System.Type" /> for the class declaring the method represented by the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-156"><xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A>屬性擷取參考<xref:System.Type>宣告這個成員的類型。</span><span class="sxs-lookup"><span data-stu-id="f2194-156">The <xref:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType%2A> property retrieves a reference to a <xref:System.Type> for the type that declares this member.</span></span> <span data-ttu-id="f2194-157">類別 （或介面） 的成員宣告或繼承自基底類別 （或介面）。</span><span class="sxs-lookup"><span data-stu-id="f2194-157">A member of a class (or interface) is either declared or inherited from a base class (or interface).</span></span> <span data-ttu-id="f2194-158">傳回<xref:System.Type>可能無法與相同<xref:System.Type>實作 XML Web 服務之類別 (如果該類別衍生自基底類別，而該基底類別中宣告這個類別所表示的方法則<xref:System.Type>傳回基底類別）。</span><span class="sxs-lookup"><span data-stu-id="f2194-158">The returned <xref:System.Type> might not be the same as the <xref:System.Type> of the class implementing the XML Web service (if that class derives from a base class and the method represented by this class is declared in that base class then the <xref:System.Type> returned is the base class).</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object[] EndInvoke (object target, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] EndInvoke(object target, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (target As Object, asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(System::Object ^ target, IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f2194-159">要在其上叫用方法的 <see cref="T:System.Object" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-159">The instance of the <see cref="T:System.Object" /> on which to invoke the method.</span>
          </span>
        </param>
        <param name="asyncResult">
          <span data-ttu-id="f2194-160">
            <see cref="T:System.IAsyncResult" />，傳回自 <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-160">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-161">結束目前 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示之方法的非同步引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-161">Ends an asynchronous invocation of the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-162">物件的陣列，包含衍生類別方法的傳回值，和任何傳址方式的或 out 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-162">An array of objects containing the return value and any by-reference or out parameters of the derived class method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CPP/logicalmethodinfo_begininvoke.cpp#2)]
 [!code-csharp[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/CS/logicalmethodinfo_begininvoke.cs#2)]
 [!code-vb[LogicalMethodInfo_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_BeginInvoke/VB/logicalmethodinfo_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="f2194-163">
            <paramref name="target" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-163">The <paramref name="target" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="f2194-164">呼叫端沒有叫用方法的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-164">The caller does not have permission to invoke the method.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="f2194-165">叫用的方法會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-165">The invoked method throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndMethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EndMethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EndMethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndMethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EndMethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-166">取得方法之非同步引動過程的 <see langword="End" /> 方法的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-166">Gets the attributes and metadata for an <see langword="End" /> method of an asynchronous invocation to a method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-167">
            <see cref="T:System.Reflection.MethodInfo" />，表示 <see langword="End" /> 非同步方法引動過程的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-167">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for an <see langword="End" /> asynchronous method invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public object GetCustomAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCustomAttribute(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomAttribute(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f2194-168">套用自訂屬性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-168">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-169">如果已套用任何自訂屬性至型別，則傳回第一個套用至型別的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-169">Returns the first custom attribute applied to the type, if any custom attributes are applied to the type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-170">
            <see cref="T:System.Object" />，包含套用至 <paramref name="type" /> 參數的第一個自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-170">An <see cref="T:System.Object" /> containing the first custom attribute applied to the <paramref name="type" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f2194-171">無法載入自訂屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-171">The custom attribute type can not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] GetCustomAttributes(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f2194-172">套用自訂屬性的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-172">The <see cref="T:System.Type" /> to which the custom attributes are applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-173">傳回套用至指定型別的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-173">Returns the custom attributes applied to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-174">
            <see cref="T:System.Object" /> 的陣列，包含套用至 <paramref name="type" /> 的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-174">An array of <see cref="T:System.Object" /> containing the custom attributes applied to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="f2194-175">無法載入自訂屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-175">The custom attribute type can not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] InParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] InParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ InParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-176">取得傳入 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 執行個體所表示之方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-176">Gets the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-177">型別 <see cref="T:System.Reflection.ParameterInfo" /> 的陣列，包含傳入 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的執行個體所表示之方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-177">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-178">使用的執行個體<xref:System.Reflection.ParameterInfo>若要取得參數的資料類型的相關資訊，預設值，依此類推。</span><span class="sxs-lookup"><span data-stu-id="f2194-178">Use an instance of <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="f2194-179"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> 傳回的陣列<xref:System.Reflection.ParameterInfo>物件代表的參數傳遞給方法，在順序中。</span><span class="sxs-lookup"><span data-stu-id="f2194-179"><xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object[] Invoke (object target, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object[] Invoke(object target, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (target As Object, values As Object()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="f2194-180">要叫用方法的 <see cref="T:System.Object" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-180">The instance of the <see cref="T:System.Object" /> to invoke the method.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="f2194-181">叫用方法或的引數清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-181">An argument list for the invoked method.</span>
          </span>
          <span data-ttu-id="f2194-182">這是與方法的參數具有相同數目、順序和型別的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-182">This is an array of objects with the same number, order, and type as the parameters of the method.</span>
          </span>
          <span data-ttu-id="f2194-183">如果方法不需要任何參數，<c>values</c> 參數應該為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-183">If the method does not require any parameters, the <c>values</c> parameter should be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2194-184">叫用目前 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-184">Invokes the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-185">型別 <see cref="T:System.Object" /> 的陣列，表示叫用方法的傳回值和 out 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-185">An array of type <see cref="T:System.Object" /> representing the return value and out parameters of the invoked method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="f2194-186">
            <paramref name="target" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-186">The <paramref name="target" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f2194-187">
            <paramref name="values" /> 參數中參數的數目、型別和順序與叫用方法的簽章不符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-187">The number, type, and order of parameters in the <paramref name="values" /> parameter do not match the signature of the invoked method.</span>
          </span>
        </exception>
        <exception cref="T:System.MemberAccessException">
          <span data-ttu-id="f2194-188">呼叫端沒有叫用方法的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-188">The caller does not have permission to invoke the method.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <span data-ttu-id="f2194-189">叫用的方法會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-189">The invoked method throws an exception.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-190">取得值，指出是否非同步叫用 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的執行個體所表示的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-190">Gets a value indicating whether the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is invoked asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-191">如果非同步叫用方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-191">
              <see langword="true" /> if the method is invoked asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CPP/logicalmethodinfo_create2.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create2/CS/logicalmethodinfo_create2.cs#1)]
 [!code-vb[LogicalMethodInfo_Create2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create2/VB/logicalmethodinfo_create2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBeginMethod">
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public static bool IsBeginMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBeginMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBeginMethod (method_info As MethodInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBeginMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="methodInfo">To be added.</param>
        <summary>
          <span data-ttu-id="f2194-192">傳回值，指出傳入的方法是否表示非同步引動過程的 <see langword="Begin" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-192">Returns a value indicating whether the method passed in represents a <see langword="Begin" /> method of an asynchronous invocation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-193">如果 <paramref name="methodInfo" /> 參數是非同步引動過程的 <see langword="true" /> 方法，則為 <see langword="Begin" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-193">
              <see langword="true" /> if the <paramref name="methodInfo" /> parameter is a <see langword="Begin" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#1)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#1)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndMethod">
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo methodInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ methodInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public static bool IsEndMethod (System.Reflection.MethodInfo method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEndMethod(class System.Reflection.MethodInfo method_info) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndMethod (method_info As MethodInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndMethod(System::Reflection::MethodInfo ^ method_info);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="method_info" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="methodInfo">To be added.</param>
        <summary>
          <span data-ttu-id="f2194-194">傳回值，指出傳入的方法是否表示非同步引動過程的 <see langword="End" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-194">Returns a value indicating whether the method passed in represents an <see langword="End" /> method of an asynchronous invocation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-195">如果 <paramref name="methodInfo" /> 參數是非同步引動過程的 <see langword="true" /> 方法，則為 <see langword="End" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-195">
              <see langword="true" /> if the <paramref name="methodInfo" /> parameter is an <see langword="End" /> method of an asynchronous invocation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CPP/logicalmethodinfo_isbeginmethod.cpp#2)]
 [!code-csharp[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/CS/logicalmethodinfo_isbeginmethod.cs#2)]
 [!code-vb[LogicalMethodInfo_IsBeginMethod#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_IsBeginMethod/VB/logicalmethodinfo_isbeginmethod.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVoid">
      <MemberSignature Language="C#" Value="public bool IsVoid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVoid" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.IsVoid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVoid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVoid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-196">取得值，指出 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的執行個體所表示方法的傳回型別 (Return Type) 是否為 <see langword="void" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-196">Gets a value indicating whether the return type for the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is <see langword="void" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-197">如果傳回型別為虛值 (Void)，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-197">
              <see langword="true" /> if the return type is void; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodInfo As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ MethodInfo { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-198">取得同步方法的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-198">Gets the attributes and metadata for a synchronous method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-199">
            <see cref="T:System.Reflection.MethodInfo" />，表示方法的屬性和中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-199">A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a method.</span>
          </span>
          <span data-ttu-id="f2194-200">如果 <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> 為 <see langword="true" />，則這個屬性的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-200">If <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> is <see langword="true" />, then the value of this property is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#3)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#3)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-201">取得這個 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 所表示之方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-201">Gets the name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-202">方法的名稱，以這個 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 來表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-202">The name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] OutParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] OutParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutParameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ OutParameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-203">取得方法的 out 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-203">Gets the out parameters for the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-204">
            <see cref="T:System.Reflection.ParameterInfo" /> 的陣列，依序表示方法的 out 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-204">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the out parameters for the method, in order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-205">使用<xref:System.Reflection.ParameterInfo>若要取得參數的資料類型的相關資訊，預設值，依此類推。</span><span class="sxs-lookup"><span data-stu-id="f2194-205">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Create1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CPP/logicalmethodinfo_create1.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Create1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Create1/CS/logicalmethodinfo_create1.cs#1)]
 [!code-vb[LogicalMethodInfo_Create1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Create1/VB/logicalmethodinfo_create1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ParameterInfo[] Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ Parameters { cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-206">取得方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-206">Gets the parameters for the method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-207">
            <see cref="T:System.Reflection.ParameterInfo" /> 的陣列，表示方法的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-207">An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the parameters for the method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2194-208">使用<xref:System.Reflection.ParameterInfo>若要取得參數的資料類型的相關資訊，預設值，依此類推。</span><span class="sxs-lookup"><span data-stu-id="f2194-208">Use a <xref:System.Reflection.ParameterInfo> to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="f2194-209"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> 傳回的陣列<xref:System.Reflection.ParameterInfo>物件代表的參數傳遞給方法，在順序中。</span><span class="sxs-lookup"><span data-stu-id="f2194-209"><xref:System.Web.Services.Protocols.LogicalMethodInfo.Parameters%2A> returns an array of <xref:System.Reflection.ParameterInfo> objects representing the parameters passed into a method, in order.</span></span>  
  
   
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" />
        <altmember cref="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-210">取得這個方法的傳回型別 (Return Type)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-210">Gets the return type of this method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-211">這個方法所傳回的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-211">The <see cref="T:System.Type" /> returned by this method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTypeCustomAttributeProvider">
      <MemberSignature Language="C#" Value="public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnTypeCustomAttributeProvider As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ICustomAttributeProvider ^ ReturnTypeCustomAttributeProvider { System::Reflection::ICustomAttributeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2194-212">取得傳回型別的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-212">Gets the custom attributes for the return type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2194-213">
            <see cref="T:System.Reflection.ICustomAttributeProvider" />，表示傳回型別的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-213">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the return type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CPP/logicalmethodinfo_getcustomattribute.cpp#4)]
 [!code-csharp[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/CS/logicalmethodinfo_getcustomattribute.cs#4)]
 [!code-vb[LogicalMethodInfo_GetCustomAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_GetCustomAttribute/VB/logicalmethodinfo_getcustomattribute.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.LogicalMethodInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2194-214">傳回表示目前 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-214">Returns a string that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2194-215">
            <see cref="T:System.String" /> ，代表目前的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2194-215">A <see cref="T:System.String" /> that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[LogicalMethodInfo_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CPP/logicalmethodinfo_constructor.cpp#1)]
 [!code-csharp[LogicalMethodInfo_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/CS/logicalmethodinfo_constructor.cs#1)]
 [!code-vb[LogicalMethodInfo_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/LogicalMethodInfo_Constructor/VB/logicalmethodinfo_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>