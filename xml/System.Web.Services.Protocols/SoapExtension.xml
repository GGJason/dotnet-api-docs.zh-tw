<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f886133ae0bd56f4789626211255dc6a51779a29" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37603267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML Web Service 的 SOAP 擴充的基底類別，使用 ASP.NET 所建立的。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 可讓 SOAP 相關的基礎結構，以建置透過擴充性機制。 ASP.NET SOAP 延伸模組架構為中心的擴充功能，來檢查或修改用戶端或伺服器上處理的訊息中的特定階段的訊息。  
  
 ASP.NET SOAP 擴充功能衍生自<xref:System.Web.Services.Protocols.SoapExtension>類別。 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>和<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法提供替代的機制，來初始化 SOAP 擴充功能來增強效能。 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 在定義中每個階段會呼叫的方法為大部分的 SOAP 擴充功能的核心<xref:System.Web.Services.Protocols.SoapMessageStage>，允許 SOAP 擴充功能來執行該特定的 SOAP 擴充功能所需的行為。 針對需要的 SOAP 擴充功能修改 SOAP 要求或 SOAP 回應<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>讓您有機會接收建議的資料，以透過網路傳送。  
  
   
  
## Examples  
 下列`TraceExtension`SOAP 擴充功能輸出 SOAP 要求和 SOAP 回應至指定的檔案時套用至 XML Web service 方法。 如果下列 SOAP 擴充功能安裝到使用 XML Web service 來執行，ASPNET 使用者帳戶必須具有寫入記錄檔寫入所在目錄的權限。  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapExtension" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">記憶體緩衝區，包含 SOAP 要求或回應。</param>
        <summary>當在衍生類別中覆寫時，允許對包含 SOAP 要求或回應之記憶體緩衝區的 SOAP 擴充存取。</summary>
        <returns>
          <see cref="T:System.IO.Stream" />，表示這個 SOAP 擴充可以修改的新記憶體緩衝區。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 可確保具有最高優先順序的 SOAP 擴充功能可以修改 SOAP 訊息傳送，或透過網路傳回最接近的實際資料。  
  
 SOAP 擴充功能應該將儲存的參考<xref:System.IO.Stream>傳入<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>並<xref:System.IO.Stream>傳回<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>。 如果 SOAP 擴充功能設定為與 XML Web 服務方法，執行<xref:System.IO.Stream>傳入<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>包含在已序列化的 SOAP 要求<xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。 同樣地，<xref:System.IO.Stream>所傳回的參考<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>序列化，就會發生，因此會包含序列化的 SOAP 回應中時，寫入至<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>。  
  
   
  
## Examples  
 下列範例會儲存兩<xref:System.IO.Stream>傳入<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>並<xref:System.IO.Stream>從傳回<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>成員變數中`oldStream`和`newStream`分別。  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>當在衍生類別中覆寫時，允許 SOAP 擴充耗用一次效能來初始化 XML Web Service 方法所特有的資料。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">類別的型別，此類別實作 SOAP 擴充所套用到的 XML Web Service。</param>
        <summary>當在衍生類別中覆寫時，允許 SOAP 擴充耗用一次效能來初始化實作 XML Web Service 之類別所特有的資料。</summary>
        <returns>SOAP 擴充為快取所初始化的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多載<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>程式取得呼叫 ASP.NET 取決於如何指定 SOAP 擴充功能。 有兩種方法來指定 SOAP 擴充功能：  
  
-   套用自訂屬性，衍生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，個別的 XML Web service 方法。  
  
-   在 web.config 或 app.config 組態檔中加入的參考。  
  
 如果您新增了組態檔的其中一個的參考，該組態檔範圍內的所有 XML Web service 的 SOAP 擴充功能將會都執行。 當指定時，SOAP 擴充功能參考組態檔中，ASP.NET 會叫用<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>傳入的多載<xref:System.Type>。 當藉由套用自訂屬性中指定延伸模組，ASP.NET 會叫用<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>中通過<xref:System.Web.Services.Protocols.LogicalMethodInfo>和<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。  
  
 如需將 SOAP 擴充功能新增至組態檔的詳細資訊，請參閱[ &#91; \<topic://cpconconfigurationoptionsforaspnetwebservices >&#93;](http://msdn.microsoft.com/library/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b)。  
  
   
  
## Examples  
 下列程式碼示範如何一個可以將 SOAP 擴充功能特定的資料儲存上每一個 XML Web 服務。 如果 SOAP 擴充功能已使用組態檔，而不屬性，SOAP 擴充功能可以儲存每個類別的 SOAP 擴充所套用的資料。 此範例會將儲存用來登入快取實作 XML Web service 的類別名稱為基礎的 XML Web service 方法來回傳送的 SOAP 訊息的檔案名稱。 此程式碼範例是可在 TraceExtension SOAP 擴充功能的完整的程式碼範例的一部分<xref:System.Web.Services.Protocols.SoapExtension>類別概觀。  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，表示 SOAP 擴充所套用到的 XML Web Service 方法的特定函式原型。</param>
        <param name="attribute">
          <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />，被套用於 XML Web Service 方法。</param>
        <summary>當在衍生類別中覆寫時，允許 SOAP 擴充耗用一次效能，使用套用至 XML Web Service 方法的屬性來初始化 XML Web Service 方法所特有的資料。</summary>
        <returns>SOAP 擴充為快取所初始化的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 SOAP 擴充功能已使用組態檔，請參閱<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>多載，接受<xref:System.Type>。  
  
 SOAP 擴充功能有三個的商機，來初始化資料，它們都有不同的用途：  
  
-   類別建構函式每次的 SOAP 擴充功能會具現化，以及通常用來初始化成員變數，會呼叫類別建構函式。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>不過，會呼叫一次，第一次提出 SOAP 要求 XML web 服務方法。 如果自訂屬性套用至 XML Web service 方法中，<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>叫用方法。 這可讓 SOAP 擴充功能，來詢問<xref:System.Web.Services.Protocols.LogicalMethodInfo>原型資訊或要存取類別，衍生自所傳遞的延伸模組的特定資料的 XML Web service 方法的<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。 傳回值是由 ASP.NET 快取及傳遞至後續<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法。 因此，在完成初始設定<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>基本上一次性的效能衝擊到封裝。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 每次的 SOAP 要求對 XML Web service 方法，但優點是能夠透過類別建構函式中，就會呼叫<xref:System.Object>初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>傳遞給它。  
  
   
  
## Examples  
 下列程式碼示範如何取得 SOAP 擴充功能特定的資料使用衍生自的類別來傳遞<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，然後快取中的資料和<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>。 此程式碼範例是完整的程式碼範例的一部分`TraceExtension`SOAP 擴充功能，可在<xref:System.Web.Services.Protocols.SoapExtension>類別概觀。 此程式碼範例依賴`TraceExtensionAttribute`傳入`attribute`參數。 在完整的程式碼範例中，`TraceExtensionAttribute`衍生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>，並將`Filename`屬性，也就是<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>儲存在快取。  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <see cref="T:System.Object" />，自 ASP.NET 所快取的 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 傳回。</param>
        <summary>當在衍生類別中覆寫時，允許 SOAP 擴充使用 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 方法中快取的資料來初始化其本身。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 擴充功能有三個的商機，來初始化資料，它們都有不同的用途：  
  
-   類別建構函式每次的 SOAP 擴充功能會具現化，以及通常用來初始化成員變數，會呼叫類別建構函式。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>不過，會呼叫一次，第一次提出 SOAP 要求 XML web 服務方法。 如果自訂屬性套用至 XML Web service 方法中，<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>叫用方法。 這可讓 SOAP 擴充功能，來詢問<xref:System.Web.Services.Protocols.LogicalMethodInfo>原型資訊或要存取類別，衍生自所傳遞的延伸模組的特定資料的 XML Web service 方法的<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。 傳回值是由 ASP.NET 快取及傳遞至後續<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>方法。 因此，在完成初始設定<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>基本上一次性的效能衝擊到封裝。  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 每次的 SOAP 要求對 XML Web service 方法，但優點是能夠透過類別建構函式中，就會呼叫<xref:System.Object>初始化<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>傳遞給它。  
  
-  
  
> [!NOTE]
>  您也可以新增 SOAP 擴充功能，而衍生自<xref:System.Web.Services.Protocols.SoapExtensionAttribute>利用[ \<p > 項目](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)組態檔中。 如需詳細資訊，請參閱 < [ \<p > 項目](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)並[SOAP 訊息使用 SOAP 擴充修改](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)。  
  
-  
  
   
  
## Examples  
 下列範例示範如何使用快取期間資料<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>方法。  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">要處理的 <see cref="T:System.Web.Services.Protocols.SoapMessage" />。</param>
        <summary>當在衍生類別中覆寫時，允許 SOAP 擴充接收要在每個 <see cref="T:System.Web.Services.Protocols.SoapMessage" /> 處理的 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 所有呼叫<xref:System.Web.Services.Protocols.SoapMessageStage>階段套用至使用 ASP.NET 和其用戶端建立這兩個 XML Web service 的 SOAP 擴充功能。 在每個<xref:System.Web.Services.Protocols.SoapMessageStage>，從衍生類別的執行個體<xref:System.Web.Services.Protocols.SoapMessage>傳遞至<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>。 如果 XML Web service 用戶端上執行 SOAP 擴充功能則有<xref:System.Web.Services.Protocols.SoapClientMessage>物件會傳遞至<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>; 否則為<xref:System.Web.Services.Protocols.SoapServerMessage>傳入的物件。  
  
   
  
## Examples  
 下列範例是<xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>記錄 SOAP 要求和 SOAP 回應的 SOAP 擴充功能的一部分。 藉由登<xref:System.Web.Services.Protocols.SoapMessage>位於<xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>，SOAP 擴充功能存取<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>透過網路傳送。 如果 SOAP 擴充功能會套用至使用 ASP.NET 建立 XML Web service 方法則<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>包含 XML Web service 方法之 SOAP 回應。 如果 SOAP 擴充功能會套用至 XML Web service 用戶端，<xref:System.Web.Services.Protocols.SoapMessage.Stream%2A>包含對 XML Web service 方法的 SOAP 要求。  
  
 傳統 SoapExtension.ProcessMessage 範例 #1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>