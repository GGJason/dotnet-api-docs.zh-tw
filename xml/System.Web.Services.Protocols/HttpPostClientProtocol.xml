<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e0a6112b037abe5b77e888b4b506d104ffd1d46" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1d471-101">XML Web Service 用戶端 Proxy 的基底類別，使用 HTTP-POST 通訊協定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d471-101">The base class for XML Web service client proxies that use the HTTP-POST protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d471-102">當 XML Web 服務用戶端使用 HTTP POST 通訊協定的預設參數，會編碼在 HTTP 主體內使用 URL 編碼規則和回應會使用純文字 XML。</span><span class="sxs-lookup"><span data-stu-id="1d471-102">When an XML Web service client uses the HTTP-POST protocol, by default parameters are encoded within the HTTP body using URL encoding rules and uses plain XML for the response.</span></span> <span data-ttu-id="1d471-103">此通訊協定會使用衍生自的<xref:System.Web.Services.Protocols.MimeFormatter>編碼參數和傳回值至標準的 MIME 格式。</span><span class="sxs-lookup"><span data-stu-id="1d471-103">This protocol uses classes that derive from <xref:System.Web.Services.Protocols.MimeFormatter> to encode parameters and return values into standard MIME formats.</span></span> <span data-ttu-id="1d471-104">服務描述中指定要使用的編碼器。</span><span class="sxs-lookup"><span data-stu-id="1d471-104">The encoders to use are specified in the service description.</span></span>  
  
 <span data-ttu-id="1d471-105">如果您要建置使用 ASP.NET，則 XML Web 服務用戶端 proxy 類別，間接衍生，或直接從<xref:System.Web.Services.Protocols.WebClientProtocol>必須先建立您想要呼叫 XML Web 服務。</span><span class="sxs-lookup"><span data-stu-id="1d471-105">If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call.</span></span> <span data-ttu-id="1d471-106">當 XML Web 服務呼叫的用戶端會使用 HTTP 時，衍生的 proxy 類別<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，而後者又衍生自<xref:System.Web.Services.Protocols.WebClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="1d471-106">When the XML Web service client is calling using HTTP, derive the proxy class <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="1d471-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> 和<xref:System.Web.Services.Protocols.HttpPostClientProtocol>衍生自<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，提供函式呼叫 XML Web 服務方法分別使用 HTTP GET 與 HTTP POST 的支援。</span><span class="sxs-lookup"><span data-stu-id="1d471-107"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using HTTP-GET and HTTP-POST respectively.</span></span> <span data-ttu-id="1d471-108">呼叫 XML Web service 使用 SOAP 用戶端應衍生自<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="1d471-108">Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span></span>  
  
 <span data-ttu-id="1d471-109">如需建立 proxy 類別的詳細資訊，請參閱[ &#91; \<topic://cpconcreatingwebserviceproxy >&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756)。</span><span class="sxs-lookup"><span data-stu-id="1d471-109">For details on building a proxy class, see [&#91;\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d471-110">下列範例是由 Wsdl.exe 公用程式所產生的 proxy 類別`Math`以下的 XML Web 服務。</span><span class="sxs-lookup"><span data-stu-id="1d471-110">The following example is a proxy class generated by the Wsdl.exe utility for the `Math` XML Web service below.</span></span> <span data-ttu-id="1d471-111">Proxy 類別衍生自<xref:System.Web.Services.Protocols.HttpPostClientProtocol>，其衍生自抽象<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>類別。</span><span class="sxs-lookup"><span data-stu-id="1d471-111">The proxy class derives from <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1d471-112">下列範例是`Math`XML Web service，從中建立先前的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="1d471-112">The following example is the `Math` XML Web service, from which the previous proxy class was created.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d471-113">初始化 <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d471-113">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="1d471-114">建立 <see cref="T:System.Uri" /> 時要使用的 <see cref="T:System.Net.WebRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d471-114">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d471-115">為指定的 URI 建立 <see cref="T:System.Net.WebRequest" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d471-115">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d471-116">
            <see cref="T:System.Net.WebRequest" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d471-116">The <see cref="T:System.Net.WebRequest" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d471-117">這個方法會覆寫基底版本<xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A>來指定使用 HTTP POST 建立 XML Web 服務的 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="1d471-117">This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-POST.</span></span> <span data-ttu-id="1d471-118">藉由覆寫這個方法，您可以自訂<xref:System.Net.WebRequest>物件進行 XML Web 服務要求的作業之前。</span><span class="sxs-lookup"><span data-stu-id="1d471-118">By overriding this method, you can customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="1d471-119">例如，您可以將自訂標頭加入要求。</span><span class="sxs-lookup"><span data-stu-id="1d471-119">For example, you can add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1d471-120">
            <paramref name="uri" /> 參數為 null 或長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d471-120">The <paramref name="uri" /> parameter is null or has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>