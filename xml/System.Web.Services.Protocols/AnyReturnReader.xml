<Type Name="AnyReturnReader" FullName="System.Web.Services.Protocols.AnyReturnReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60b996fc12a7fded21f71629de866c60dc53f838" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnyReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.AnyReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class AnyReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnyReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為使用 HTTP 實作但不具有 SOAP 的 Web 服務用戶端，提供連入回應傳回值的最小讀取器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader> 類別和其他類別<xref:System.Web.Services.Protocols>命名空間支援.NET Framework 實作 Web 服務透過 HTTP GET 和 HTTP POST 作業。 Web 服務寫入器和讀取序列化和還原序列化，分別參數或 Web 方法的傳回物件之間的 HTTP 要求或回應資料流。 Web 服務寫入器和讀取器使用 HTTP 傳輸，但不會交換使用 SOAP 標準的訊息。  
  
 <xref:System.Web.Services.Protocols.AnyReturnReader>類別會提供最簡單的實作之介面的抽象父類別<xref:System.Web.Services.Protocols.MimeReturnReader>。您通常會不需要使用<xref:System.Web.Services.Protocols.AnyReturnReader>直接。 當 Wsdl.exe 工具產生用戶端 proxy 程式碼，根據 HTTP GET 或 HTTP POST 的實作時，它會套用<xref:System.Web.Services.Protocols.HttpMethodAttribute>每個 Web 方法和預設設定的屬性<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>屬性<xref:System.Web.Services.Protocols.XmlReturnReader>，另一個類別衍生自<xref:System.Web.Services.Protocols.MimeReturnReader>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnyReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnyReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，表示為其取得初始設定式的 Web 方法。</param>
        <summary>傳回傳遞至 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" /> 方法的參數。</summary>
        <returns>傳遞至 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" /> 方法的參數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始設定式會當做參數傳遞的物件<xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>方法。 如<xref:System.Web.Services.Protocols.AnyReturnReader>類別初始設定式是關鍵字所參考的執行個體`this`，除非<xref:System.Web.Services.Protocols.LogicalMethodInfo>參數值有 void 的傳回類型，在初始設定式的情況下設定為`null`。  
  
 <xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer%2A>服務初始化期間叫用方法。 更新版本中，同時處理回應時，初始設定式<xref:System.Web.Services.Protocols.AnyReturnReader>物件傳遞至<xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>另一個方法<xref:System.Web.Services.Protocols.AnyReturnReader>執行個體。 另一個執行個體採用的呼叫<xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 類別的另一個執行個體，先前曾在其上呼叫 <see cref="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> 方法。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> 類別的執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>方法不會執行任何動作。  
  
 在處理回應的時間叫用這個方法。 輸入的參數、 `initializer`，另一個執行個體的<xref:System.Web.Services.Protocols.AnyReturnReader>、 用戶端初始化期間取得。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">Web 服務所傳送的 HTTP 回應的表示，包含作業的輸出訊息。</param>
        <param name="responseStream">輸出資料流，其內容為 <c>response</c> 參數所表示的 HTTP 回應主體。</param>
        <summary>傳回輸入 HTTP 回應資料流。</summary>
        <returns>輸入 HTTP 回應資料流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.AnyReturnReader>類別的實作<xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>方法不會沒有讀取。 而是它只會傳回<xref:System.IO.Stream>做為參數傳遞的物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>