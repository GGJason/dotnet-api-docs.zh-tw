<Type Name="SoapHeader" FullName="System.Web.Services.Protocols.SoapHeader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="732daa2487ec9d473ef56917139f1ca0370354e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549282" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapHeader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapHeader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapHeader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeader abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.SoapType(IncludeInSchema=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(IncludeInSchema=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在衍生類別中覆寫時，表示 SOAP 標頭的內容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 標頭提供傳遞資料以及從 XML Web service 方法，如果 XML Web 服務方法的主要功能不直接相關資料的方法。 例如，XML Web 服務可能包含數個 XML Web service 方法，每個需要自訂驗證配置。 而不是將參數加入至每個 XML Web 服務方法的自訂驗證配置， <xref:System.Web.Services.Protocols.SoapHeaderAttribute>、 參考至類別，衍生自<xref:System.Web.Services.Protocols.SoapHeader>，可以套用至每個 XML Web service 方法。 從衍生類別實作<xref:System.Web.Services.Protocols.SoapHeader>處理自訂驗證配置。 這種方式，XML Web service 方法實作僅它特有的功能，並加入其他功能使用 SOAP 標頭。  
  
 下列清單會列出接收和處理 SOAP 標頭的基本步驟：  
  
1.  建立衍生自類別<xref:System.Web.Services.Protocols.SoapHeader>表示資料傳入的 SOAP 標頭。  
  
2.  將成員加入至類別實作 XML Web 服務或 XML Web 服務用戶端 proxy 類別，第一個步驟中建立的類型。  
  
3.  套用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>XML Web service 方法或在 proxy 類別中對應的方法，指定成員中建立第二個步驟<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。  
  
4.  在 XML Web 服務方法或 XML Web 服務用戶端程式碼，存取<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性來處理 SOAP 標頭中傳送的資料。  
  
   
  
## Examples  
 下列`MyWebService`XML Web 服務定義`MyHeader`SOAP 標頭，並需要將它與任何呼叫一起傳送`MyWebMethod`XML Web service 方法。 此外，`MyWebMethod`接收任何 SOAP 標頭以外`MyHeader`SOAP 標頭。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapUnknownHeader" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderDirection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapHeader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapHeader" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 標頭的收件者。</summary>
        <value>SOAP 標頭的收件者。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定 SOAP 標頭的收件者，設定<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。 不論用來與 XML Web 服務通訊的 SOAP 通訊協定版本，.NET Framework 會自動產生的 SOAP 通訊協定版本特有的 SOAP 訊息。 具體而言，XML 項目與 XML 命名空間代表收件者與不同的兩個版本中。  
  
 XML Web 服務接收的 SOAP 標頭可以藉由取得其中取得預定的收件者<xref:System.Web.Services.Protocols.SoapHeader.Role%2A>或<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。  
  
 為收件者`Body`項目和每個 SOAP 標頭內`Header`SOAP 訊息的項目不需要相同。 如果`Header`SOAP 訊息中的項目存在，它代表 XML Web service 方法或媒介可以傳送的其他資料。 收件者的資料，又稱為 SOAP`Actor`在 1.1 版中，可以是不同的 URI，比 XML Web service 方法的 URI。  
  
 如需有關 SOAP`actor`屬性，請參閱在 SOAP 規格http://www.w3.org/TR/SOAP/。  
  
   
  
## Examples  
 下列的 XML Web 服務用戶端呼叫`MyWebMethod`XML Web service 方法，在建立類型的自訂 SOAP 標頭之後`MyHeader`和設定<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性`http://www.contoso.com/MySoapHeaderHandler`。  
  
 [!code-cpp[Classic SoapHeader.Actor Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.Actor Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.Actor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUnderstand">
      <MemberSignature Language="C#" Value="public bool DidUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property DidUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 XML Web Service 方法是否已適當地處理 SOAP 標頭。</summary>
        <value>
          如果 SOAP 標頭已適當地處理，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服務所定義的 SOAP 標頭，ASP.NET 會假設 XML Web 服務方法才能正確處理 SOAP 標頭設定的初始值<xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A>至`true`。 初始值會是未定義的 XML Web 服務的 SOAP 標頭， `false`。 如果 ASP.NET 偵測到的 SOAP 標頭會傳遞至 XML Web 服務方法使用<xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A>設`false`方法傳回之後，<xref:System.Web.Services.Protocols.SoapHeaderException>擲回給 XML Web 服務用戶端，而結果不是從 XML Web 服務方法。  
  
   
  
## Examples  
 下列`MyWebService`XML Web 服務定義`MyHeader`SOAP 標頭，並需要將它與任何呼叫一起傳送`MyWebMethod`XML Web service 方法。 此外，`MyWebMethod`接收任何 SOAP 標頭以外`MyHeader`SOAP 標頭。 SOAP 標頭，`MyWebMethod`可以處理<xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A>設`true`。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>與 SOAP 通訊協定 1.1 版通訊時，取得或設定 SOAP 標頭的 <see langword="mustUnderstand" /> XML 屬性值。</summary>
        <value>
          <see langword="mustUnderstand" /> 屬性的值。 預設值是「0」。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請勿使用這個屬性。 改用<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性。  
  
   
  
## Examples  
 [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CPP/soapheader_encodedmustunderstand.cpp#1)]
 [!code-csharp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CS/soapheader_encodedmustunderstand.cs#1)]
 [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/VB/soapheader_encodedmustunderstand.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">屬性值會設為 "0"、"1"、"true" 或 "false" 以外的值。</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand12">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand12" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand12 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand12 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>與 SOAP 通訊協定 1.2 版通訊時，取得或設定 SOAP 標頭的 <see langword="mustUnderstand" /> XML 屬性值。</summary>
        <value>SOAP 標頭之 <see langword="mustUnderstand" /> XML 屬性的值。 預設值是「0」。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請勿使用這個屬性。 改用<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">屬性值會設為 "0"、"1"、"true" 或 "false" 以外的值。</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedRelay">
      <MemberSignature Language="C#" Value="public string EncodedRelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedRelay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedRelay" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedRelay As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedRelay { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 1.2 標頭的轉送屬性。</summary>
        <value>"0"、"false"、"1" 或 "true"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapHeader.EncodedRelay%2A>屬性僅適用於 SOAP 1.2，表示訊息的收件者將此標頭轉送時它是否轉寄訊息到下游的下一個節點。 因為.NET Framework 不支援 SOAP 媒介，這個屬性會序列化和還原序列化，但忽略。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否必須辨認 <see cref="T:System.Web.Services.Protocols.SoapHeader" />。</summary>
        <value>
          如果 XML Web Service 必須適當地解譯和處理 <see cref="T:System.Web.Services.Protocols.SoapHeader" />，則為 <see langword="true" />，否則，即為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 XML Web 服務用戶端將 SOAP 標頭加入至具有的 XML Web 服務方法呼叫<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性設定為`true`，XML Web 服務方法必須設定<xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A>屬性`true`，否則<xref:System.Web.Services.Protocols.SoapHeaderException>擲回由 ASP.NET XML Web 服務用戶端。  
  
 雖然同時<xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A>和<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性可以用來設定的值`mustUnderstand`中 SOAP 標頭屬性<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性可讓您將使用布林值屬性設定。  
  
 如需將 SOAP 標頭加入至用戶端的詳細資訊，請參閱[ &#91; \<topic://cpconusingsoapheaders >&#93;](http://msdn.microsoft.com/library/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)。  
  
   
  
## Examples  
 下列 XML Web 服務用戶端定義類型的自訂 SOAP 標頭`MyHeader`，設定<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>屬性`true`，並叫用`MyWebMethod`XML Web service 方法。 如果 XML Web 服務方法並不會設定<xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A>屬性`MyHeader`SOAP 標頭來`true`、<xref:System.Web.Services.Protocols.SoapHeaderException>就會擲回。  
  
 [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出如果目前節點無法辨認標頭，是否會將 SOAP 標頭轉送至下一個 SOAP 節點。</summary>
        <value>
          如果 SOAP 標頭的 "relay" 屬性設為 "true" 則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的 SOAP 1.2 處理規則需要 SOAP 節點移除不了解 SOAP 處理節點，然後將傳遞訊息的下一個節點的標頭。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 標頭的收件者。</summary>
        <value>URI，表示 SOAP 標頭的收件者。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定 SOAP 標頭的收件者，設定<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。 不論用來與 XML Web 服務通訊的 SOAP 通訊協定版本，.NET Framework 會自動產生的 SOAP 通訊協定版本特有的 SOAP 訊息。 具體而言，XML 項目與 XML 命名空間代表收件者與不同的兩個版本中。  
  
 XML Web 服務接收的 SOAP 標頭可以藉由取得其中取得預定的收件者<xref:System.Web.Services.Protocols.SoapHeader.Role%2A>或<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>屬性。  
  
 為收件者`Body`項目和每個 SOAP 標頭內`Header`SOAP 訊息的項目不需要相同。 如果`Header`SOAP 訊息中的項目存在，它代表 XML Web service 方法或媒介可以傳送的其他資料。 收件者的資料，又稱為 SOAP `Role` SOAP 規格和 SOAP 1.2 版中`Actor`在 1.1 版中，可以是不同的 URI，比 XML Web service 方法的 URI。  
  
 如需有關 SOAP`actor`屬性，請參閱在 SOAP 規格http://www.w3.org/TR/SOAP/。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>