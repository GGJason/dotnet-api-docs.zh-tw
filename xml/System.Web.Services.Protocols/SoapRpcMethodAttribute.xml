<Type Name="SoapRpcMethodAttribute" FullName="System.Web.Services.Protocols.SoapRpcMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe1beaf6ae6bd2d0567c79b149d2e73235e61bbe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36395097" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapRpcMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapRpcMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapRpcMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapRpcMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapRpcMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定此方法往返傳送的 SOAP 訊息使用 <see langword="RPC" /> 格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言 (WSDL) 會定義如何在 SOAP 訊息中格式化的 XML Web service 方法或作業中，兩個樣式：`RPC`和`Document`。 `RPC` 格式設定是指將根據 SOAP 規格 rpc; 使用 SOAP 的作業否則會以 SOAP 規格第 7 節。 `RPC` 格式化的狀態，所有參數都封裝於單一的 XML 項目，名為 XML Web 服務方法之後，該 XML 項目內的每個 XML 項目表示它，其代表此參數命名的參數。  
  
 SOAP 訊息中格式化`RPC`和`Document`樣式可以用來與遠端程序呼叫 (RPC) 的方式; XML Web 服務通訊但是`Document`樣式也很容易可用來在鬆散偶合的通訊方式。 因此，`Document`建議樣式 XML Web 服務。 如需詳細資訊，請參閱`Customizing SOAP Messages`主題。  
  
 如需詳細資訊，請參閱[ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)。  
  
 這個屬性可以套用在伺服器上的 XML Web 服務方法並在用戶端上的 proxy 類別。 XML Web service 方法具有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>屬性設定為`true`確實可以存取其<xref:System.Web.HttpContext>。 因此，存取任何內容的<xref:System.Web.Services.WebService>類別傳回`null`。  
  
   
  
## Examples  
 下列程式碼範例會將訊息樣式設定為`Rpc`如`GetUserName`XML Web service 方法。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 類別的新執行個體，將所有屬性設定為它們的預設值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapRpcMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapRpcMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapRpcMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapRpcMethodAttribute" Usage="new System.Web.Services.Protocols.SoapRpcMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">SOAP 要求的意圖。 設定 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 屬性。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> 類別的新執行個體，將 <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> 屬性設定為 <paramref name="action" /> 參數的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 要求的 <see langword="SOAPAction" /> HTTP 標頭欄位。</summary>
        <value>SOAP 要求的 <see langword="SOAPAction" /> HTTP 標頭欄位。 預設值是http://tempuri.org/MethodNameMethodName 其中是 XML Web 服務方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>屬性是指出的 SOAP 要求的目的 URI。 然而，SOAP 規格會造成不受限制的格式和 URI 是否參考現有的文件。 存在和內容<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>屬性可以用由 Web 伺服器，例如防火牆來適當地篩選 SOAP 要求訊息中 HTTP。  
  
 根據預設，.NET Framework 1.1 版發行<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>屬性`soapAction`屬性`soap:operation`為 XML Web 服務產生 WSDL 文件中支援 SOAP 繫結的每個項目。 支援的 SOAP 繫結為 SOAP 1.1。  
  
 如需有關 SOAP 規格的詳細資訊，請參閱 W3C 網站 (http://www.w3.org/TR/SOAP)。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action%2A>屬性`http://www.contoso.com/Sample`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML Web Service 方法實作作業的繫結。</summary>
        <value>XML Web Service 方法實作作業的繫結。 預設為附有 SOAP 的 XML Web Service 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結所定義的 「 Web 服務描述語言 」 (WSDL) 是類似於介面，它會定義一組具象的作業。 相對於 ASP.NET 中，每個 XML Web service 方法是繫結中的作業。 XML Web 服務方法都是 XML Web service 的預設繫結或繫結中指定的成員<xref:System.Web.Services.WebServiceBindingAttribute>套用至 XML Web 服務。 若為多個 XML Web 服務可以實作多個繫結，<xref:System.Web.Services.WebServiceBindingAttribute>屬性會套用至 XML Web 服務。  
  
 一次一個或多個<xref:System.Web.Services.WebServiceBindingAttribute>屬性會套用至 XML Web service，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可以套用至個別的 XML Web 服務方法，以指出特定的 XML Web 服務方法所實作之繫結作業。 設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>屬性<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>指定之繫結 XML Web 服務方法實作的作業。 只有一個<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可以套用至 XML Web 服務方法。 因此，XML Web 服務方法只實作一個繫結的作業。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作 XML Web 服務中的多個繫結。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML Web Service 用戶端是否等候 Web 伺服器完成處理 XML Web Service 方法。</summary>
        <value>如果 XML Web Service 用戶端不會等候 Web 伺服器完整地處理 XML Web Service 方法，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 XML Web 服務方法具有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>屬性設定為`true`，XML Web 服務用戶端不需要等候 Web 伺服器來完成處理 XML Web service 方法。 Web 伺服器已還原序列化之後儘速<xref:System.Web.Services.Protocols.SoapServerMessage>，但是它會叫用 XML Web 服務方法之前，伺服器會傳回 HTTP 202 狀態碼。 HTTP 202 狀態碼表示用戶端的 Web 伺服器已開始處理訊息。 因此，XML Web 服務用戶端會收到任何 Web 伺服器已成功處理訊息的通知。  
  
 單向方法不能有傳回值或任何`out`參數。  
  
 如果您使用.NET Framework 1.0 版 XML Web 服務方法所<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>屬性套用至它們與<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>屬性設定為`true`，不允許存取其<xref:System.Web.HttpContext>使用靜態<xref:System.Web.HttpContext.Current%2A>屬性。 若要存取<xref:System.Web.HttpContext>，衍生類別實作 XML Web service 方法，從<xref:System.Web.Services.WebService>及存取<xref:System.Web.Services.WebService.Context%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>屬性`true`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 要求關聯的 XML 項目。</summary>
        <value>與 XML Web Service 方法之 SOAP 要求關聯的 XML 項目。 預設值為 XML Web Service 方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性已經過時。 它不會影響任何行為。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName%2A>屬性`MyCustomRequestElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 要求關聯的 XML 命名空間。</summary>
        <value>與 XML Web Service 方法之 SOAP 要求關聯的 XML 命名空間。 預設值為 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace%2A>屬性`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 回應關聯的 XML 項目。</summary>
        <value>與 XML Web Service 方法之 SOAP 要求關聯的 XML 項目。 預設值是<c>WebServiceNameResult</c>，其中<c>WebServiceName</c>是 XML Web 服務方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A>屬性會定義用來封裝內的參數的 XML 項目`Body`SOAP 回應的項目。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName%2A>屬性`MyCustomResponseElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 回應關聯的 XML 命名空間。</summary>
        <value>與 XML Web Service 方法之 SOAP 回應關聯的 XML 命名空間。 預設值為 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A>屬性在 XSD 結構描述用於 XML Web service 方法，在其服務描述中。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace%2A>屬性`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapRpcMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定叫用方法時使用的繫結。</summary>
        <value>
          <see cref="T:System.Web.Services.Description.SoapBindingUse" /> 列舉型別的成員，指定叫用方法時使用的繫結。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性的預設值為 <xref:System.Web.Services.Description.SoapBindingUse.Default>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>