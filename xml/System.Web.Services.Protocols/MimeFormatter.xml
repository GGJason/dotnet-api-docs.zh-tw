<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MimeFormatter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5543984d441712e59cbc38c02dc486c49a04def76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">543984d441712e59cbc38c02dc486c49a04def76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</source>
          <target state="translated">為使用 HTTP 但不使用 SOAP 實作之 Web 服務和用戶端的所有讀取器和寫入器，提供抽象基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</source>
          <target state="translated">Web 服務寫入器和讀取序列化和還原序列化，分別為 Web 方法的參數或傳回物件之間的 HTTP 要求或回應資料流。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>類別中，建立通用介面和功能，以便讀取器和寫入器類別，用戶端與服務端。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>類別支援.NET Framework 實作 Web 服務透過 HTTP GET 和 HTTP POST 作業。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</source>
          <target state="translated">在 HTTP GET 作業要求參數進行編碼的 HTTP 要求的統一資源定位器 (URL)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</source>
          <target state="translated">在 HTTP POST 作業中，會以 HTTP 要求主體中，如同 HTML 表單編碼要求參數。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</source>
          <target state="translated">與這兩個實作中，傳回值會出現在 HTTP 回應主體為非 SOAP XML 文件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>A developer typically does not need to directly use <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> or its descendant classes.</source>
          <target state="translated">開發人員通常不需要直接使用<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>或其下階的類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> to each Web method and sets the attribute's <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A&gt;</ph> properties to the appropriate type derived from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class.</source>
          <target state="translated">相反地，當 Wsdl.exe 工具產生用戶端 proxy 程式碼，根據 HTTP GET 或 HTTP POST 的實作，它會套用<ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph>每個 Web 方法，並設定屬性的<ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A&gt;</ph>適當類型的屬性衍生自<ph id="ph4">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</source>
          <target state="translated">在伺服器上，適當的衍生型別會使用根據 ASP.NET 組態檔 (Web.config) 中的設定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>On the client the appropriate derived types are determined from the WSDL.</source>
          <target state="translated">在用戶端會從 WSDL 決定適當的衍生型別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>The Type, derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>, of which to create an instance.</source>
          <target state="translated">要建立執行個體的型別 (Type)，衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>An object used to initialize the instance obtained earlier through the derived class's implementation of the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /&gt;</ph> method.</source>
          <target state="translated">物件，用於初始化先前透過 <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /&gt;</ph> 方法衍生類別之實作取得的執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>Creates and initializes an instance of a concrete class derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>.</source>
          <target state="translated">建立並初始化衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> 之具體類別的執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph>方法會建立衍生類別的執行個體，並叫用抽象的衍生的類別的實作<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph> method is invoked at the time a request or response is processed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph>在處理要求或回應的時間叫用方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>An initializer is an object passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">初始設定式會當做參數傳遞的物件<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
          <source>The initializer passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph> method is obtained from another instance of the derived class, by invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> method during client or service initialization.</source>
          <target state="translated">當做參數傳遞的初始設定式<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph>方法透過另一個執行個體的衍生類別中叫用<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>用戶端或服務的初始化期間的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>When overridden in a derived class, returns an initializer for the specified method.</source>
          <target state="translated">在衍生類別中覆寫時，會傳回指定之方法的初始設定式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph> that specifies the Web method for which the initializer is obtained.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph>，可指定要取得初始設定式的 Web 方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>When overridden in a derived class, returns an initializer for the specified method.</source>
          <target state="translated">在衍生類別中覆寫時，會傳回指定之方法的初始設定式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the initializer for the specified method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，其中包含指定之方法的初始設定式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>An initializer is an object passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">初始設定式會當做參數傳遞的物件<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>A derived class's implementation of the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> instance method is invoked during client or service initialization.</source>
          <target state="translated">在衍生的類別實作<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>用戶端或服務的初始化期間叫用執行個體方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>Later, at the time a request or response is processed, the initializer object is passed to the static <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph> method, which creates an instance of another object of the derived class, and then to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method to initialize it.</source>
          <target state="translated">稍後，在處理要求或回應的時間，初始設定式物件傳遞給靜態<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</ph>方法，建立衍生的類別，然後設為另一個物件的執行個體<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法將它初始化。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>The other object performs the actual reading or writing.</source>
          <target state="translated">另一個物件會執行實際的讀取或寫入。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>The Type, derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>,- for which an initializer is obtained.</source>
          <target state="translated">為其取得初始設定式的型別 (Type)，衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph> that specifies the Web method for which the initializer is obtained.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph>，可指定要取得初始設定式的 Web 方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>Returns an initializer for the specified method.</source>
          <target state="translated">傳回指定方法的初始設定式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> object that contains the initializer for the specified method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 物件，包含指定之方法的初始設定式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>An initializer is an object passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">初始設定式會當做參數傳遞的物件<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>The static <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> method invokes the derived class's <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> method, implicitly creating an instance of the derived class.</source>
          <target state="translated">靜態<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>方法會叫用在衍生的類別的<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>方法，以隱含方式建立衍生類別的執行個體。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>At the time a request or response is processed, the initializer object is passed to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method of another instance of the derived class.</source>
          <target state="translated">在處理要求或回應的時間，初始設定式物件傳遞至<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>衍生類別的另一個執行個體方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
          <source>The latter object performs the actual reading or writing.</source>
          <target state="translated">第二個物件會執行實際的讀取或寫入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.MimeFormatter">
          <source>When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</source>
          <target state="translated">在衍生類別中覆寫時，會傳回初始設定式物件的陣列，該陣列對應方法定義的輸入陣列。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</source>
          <target state="translated">Web 方法的陣列，對於其中的每一個方法，都會取得傳回初始設定式陣列中對應索引的物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</source>
          <target state="translated">在衍生類別中覆寫時，會傳回初始設定式物件的陣列，該陣列對應方法定義的輸入陣列。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An array of initializer objects corresponding to the input array of method definitions.</source>
          <target state="translated">初始設定式物件的陣列，對應方法定義的輸入陣列。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An initializer is an object passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">初始設定式會當做參數傳遞的物件<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A&gt;</ph> instance method invokes the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> instance method for each input Web method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A&gt;</ph>執行個體方法會叫用<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>每個執行個體方法中輸入 Web 方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>This means an instance of a class derived from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> has already been created.</source>
          <target state="translated">這表示衍生自類別的執行個體<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph>已經建立。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>At the time a request or response is processed, the initializer is passed to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method of another instance of the derived class.</source>
          <target state="translated">在處理要求或回應的時間，在初始設定式傳遞至<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>衍生類別的另一個執行個體方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>The latter object performs the actual reading or writing.</source>
          <target state="translated">第二個物件會執行實際的讀取或寫入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>The Type, derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>, for which initializers are obtained.</source>
          <target state="translated">為其取得初始設定式的型別 (Type)，衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph> that specifies the Web methods for which the initializers are obtained.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph> 型別的陣列，可指定為其取得初始設定式的 Web 方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>.</source>
          <target state="translated">傳回初始設定式物件的陣列，該陣列對應衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> 之指定類別之方法定義的輸入陣列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph>.</source>
          <target state="translated">初始設定式物件的陣列，對應衍生自 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.MimeFormatter" /&gt;</ph> 之指定類別之方法定義的輸入陣列。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>An initializer is an object passed as a parameter to the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">初始設定式會當做參數傳遞的物件<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
          <source>The static <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A&gt;</ph> method causes the invocation of the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> method belonging to the derived class specified by the <ph id="ph3">`type`</ph> parameter.</source>
          <target state="translated">靜態<ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A&gt;</ph>方法會導致叫用<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>屬於所指定的衍生類別方法<ph id="ph3">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)">
          <source>An object of a type appropriate to the particular class that is implementing the method.</source>
          <target state="translated">適合於實作方法之特定類別型別的物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)">
          <source>When overridden in a derived class, initializes an instance.</source>
          <target state="translated">在衍生類別中覆寫時，會初始化執行個體。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph> method on another instance during client or service initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;</ph>方法會叫用在處理要求或回應的時間，不過，初始設定式透過呼叫<ph id="ph2">&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</ph>用戶端或服務的初始化期間的另一個執行個體上的方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>