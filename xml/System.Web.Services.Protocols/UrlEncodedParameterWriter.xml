<Type Name="UrlEncodedParameterWriter" FullName="System.Web.Services.Protocols.UrlEncodedParameterWriter">
  <TypeSignature Language="C#" Value="public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlEncodedParameterWriter extends System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlEncodedParameterWriter&#xA;Inherits MimeParameterWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlEncodedParameterWriter abstract : System::Web::Services::Protocols::MimeParameterWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="33768-101">針對外送要求參數的寫入器提供 URL 編碼功能，這些參數用於透過 HTTP (但不使用 SOAP) 實作之 Web 服務用戶端。</span><span class="sxs-lookup"><span data-stu-id="33768-101">Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-102"><xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> 類別和其他類別<xref:System.Web.Services.Protocols>命名空間支援.NET Framework 實作 Web 服務透過 HTTP GET 和 HTTP POST 作業。</span><span class="sxs-lookup"><span data-stu-id="33768-102"><xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> and other classes in the <xref:System.Web.Services.Protocols> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="33768-103">Web 服務寫入器和讀取序列化和還原序列化，分別參數或 Web 方法的傳回物件之間的 HTTP 要求或回應資料流。</span><span class="sxs-lookup"><span data-stu-id="33768-103">Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="33768-104">Web 服務寫入器和讀取器使用 HTTP 傳輸，但不會交換使用 SOAP 標準的訊息。</span><span class="sxs-lookup"><span data-stu-id="33768-104">Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</span></span>  
  
 <span data-ttu-id="33768-105">抽象<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>類別繼承自抽象<xref:System.Web.Services.Protocols.MimeParameterWriter>類別，加入 URL 編碼成 HTTP 要求資料流的用戶端撰寫的 Web 方法參數的功能。</span><span class="sxs-lookup"><span data-stu-id="33768-105">The abstract <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class inherits from the abstract <xref:System.Web.Services.Protocols.MimeParameterWriter> class, adding URL encoding functionality for client-side writing of Web method parameters into HTTP request streams.</span></span>  
  
 <span data-ttu-id="33768-106">您通常會不需要使用<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>或其直接下階的類別。</span><span class="sxs-lookup"><span data-stu-id="33768-106">You typically will not need to use <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> or its descendant classes directly.</span></span> <span data-ttu-id="33768-107">相反地，當 Wsdl.exe 工具產生用戶端 proxy 程式碼，根據 HTTP GET 或 HTTP POST 的實作，它會套用<xref:System.Web.Services.Protocols.HttpMethodAttribute>每個 Web 方法，並設定屬性的<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>適當類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="33768-107">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> property to the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33768-108">超文字傳輸通訊協定-HTTP/1.1 會指定使用的多用途網際網路郵件延伸標準 (MIME) 訊息格式變化，而其本身可讓電子郵件訊息，若要指定不同的內容類型、 文字和二進位檔。</span><span class="sxs-lookup"><span data-stu-id="33768-108">The Hypertext Transfer Protocol--HTTP/1.1 specifies the use of a variation on Multipurpose Internet Mail Extensions (MIME) message format, which itself allows email messages to specify different content types, both text and binary.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlEncodedParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlEncodedParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33768-109">初始化 <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="33768-109">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encode">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33768-110">編碼 Web 方法的所有參數值，並將它們寫入指定的寫入器。</span><span class="sxs-lookup"><span data-stu-id="33768-110">Encodes all the parameter values for a Web method and writes them to the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="33768-111"><see cref="T:System.IO.TextWriter" /> 物件，用於寫入 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="33768-111">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</span></span></param>
        <param name="values"><span data-ttu-id="33768-112">Web 方法參數值。</span><span class="sxs-lookup"><span data-stu-id="33768-112">The Web method parameter values.</span></span></param>
        <summary><span data-ttu-id="33768-113">編碼 Web 方法的所有參數值，並將它們寫入指定的寫入器。</span><span class="sxs-lookup"><span data-stu-id="33768-113">Encodes all the parameter values for a Web method and writes them to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-114">這個多載<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>方法會呼叫其他多載， <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>，針對每個參數值，包括個別項目在陣列中。</span><span class="sxs-lookup"><span data-stu-id="33768-114">This overload of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method calls the other overload, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, for each of the parameter values, including individual items in arrays.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="protected void Encode (System.IO.TextWriter writer, string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Encode(class System.IO.TextWriter writer, string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Encode (writer As TextWriter, name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Encode(System::IO::TextWriter ^ writer, System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="33768-115"><see cref="T:System.IO.TextWriter" /> 物件，用於寫入 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="33768-115">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</span></span></param>
        <param name="name"><span data-ttu-id="33768-116">將要編碼之參數的名稱。</span><span class="sxs-lookup"><span data-stu-id="33768-116">The name of the parameter that will be encoded.</span></span></param>
        <param name="value"><span data-ttu-id="33768-117">將要編碼之參數的值。</span><span class="sxs-lookup"><span data-stu-id="33768-117">The value of the parameter that will be encoded.</span></span></param>
        <summary><span data-ttu-id="33768-118">編碼指定的參數值，並將其寫入指定的寫入器。</span><span class="sxs-lookup"><span data-stu-id="33768-118">Encodes a specified parameter value and writes it to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-119">另一個簽章的<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>方法， <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>，稱為每個 Web 方法呼叫的這個簽章<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>方法，每個參數值，包括在陣列中的個別項目。</span><span class="sxs-lookup"><span data-stu-id="33768-119">The other signature of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method, <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>, which is called for each Web method, calls this signature of the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A> method for each of the parameter values, including individual items in arrays.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="33768-120"><see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，可指定要取得初始設定式的 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="33768-120">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="33768-121">傳回指定方法的初始設定式。</span><span class="sxs-lookup"><span data-stu-id="33768-121">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="33768-122"><see cref="T:System.Object" />，其中包含指定之方法的初始設定式。</span><span class="sxs-lookup"><span data-stu-id="33768-122">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-123">初始設定式會當做參數傳遞的物件<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33768-123">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method.</span></span> <span data-ttu-id="33768-124">如<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>類別初始設定式是值<xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A>屬性輸入的<xref:System.Web.Services.Protocols.LogicalMethodInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="33768-124">For the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> class, the initializer is the value of the <xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A> property of the input <xref:System.Web.Services.Protocols.LogicalMethodInfo> object.</span></span> <span data-ttu-id="33768-125">屬性是<xref:System.Reflection.ParameterInfo>陣列。<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>服務初始化期間叫用方法。</span><span class="sxs-lookup"><span data-stu-id="33768-125">The property is a <xref:System.Reflection.ParameterInfo> array.The <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method is invoked during service initialization.</span></span> <span data-ttu-id="33768-126">更新版本中，填入要求的時間，在初始設定式物件會傳遞至<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>另一個方法<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>執行個體。</span><span class="sxs-lookup"><span data-stu-id="33768-126">Later, at the time a request is populated, the initializer object is passed to the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method of another <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter> instance.</span></span> <span data-ttu-id="33768-127">另一個物件會執行實際的寫入作業。</span><span class="sxs-lookup"><span data-stu-id="33768-127">The other object performs the actual writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="33768-128"><see cref="T:System.Reflection.ParameterInfo" /> 陣列，可透過 <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> 類別的 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 屬性取得。</span><span class="sxs-lookup"><span data-stu-id="33768-128">A <see cref="T:System.Reflection.ParameterInfo" /> array obtained through the <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> property of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class.</span></span></param>
        <summary><span data-ttu-id="33768-129">初始化執行個體。</span><span class="sxs-lookup"><span data-stu-id="33768-129">Initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-130"><xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>擴展要求時叫用方法。</span><span class="sxs-lookup"><span data-stu-id="33768-130">The <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A> method is invoked at the time a request is populated.</span></span>  
  
 <span data-ttu-id="33768-131">輸入的參數、 `initializer`，透過呼叫<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>用戶端初始化期間的另一個執行個體上的方法。</span><span class="sxs-lookup"><span data-stu-id="33768-131">The input parameter, `initializer`, is obtained by calling the <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A> method on another instance during client initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33768-132">取得或設定將參數寫入 HTTP 要求所使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="33768-132">Gets or sets the encoding used to write parameters to the HTTP request.</span></span></summary>
        <value><span data-ttu-id="33768-133">將參數寫入 HTTP 要求所使用的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="33768-133">The encoding used to write parameters to the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33768-134">編碼方式，所表示的<xref:System.Text.Encoding>類別，定義如何將字元轉換成位元組序列。</span><span class="sxs-lookup"><span data-stu-id="33768-134">An encoding, as represented by the <xref:System.Text.Encoding> class, defines how to transform characters into a sequence of bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>