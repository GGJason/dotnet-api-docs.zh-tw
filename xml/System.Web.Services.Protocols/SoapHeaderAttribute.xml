<Type Name="SoapHeaderAttribute" FullName="System.Web.Services.Protocols.SoapHeaderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1607d50779d886ce567f0b31bfc5a511fba44f6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594462" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapHeaderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapHeaderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapHeaderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeaderAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapHeaderAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>這個屬性 (Attribute) 會套用至 XML Web Service 方法或 XML Web Service 用戶端，以指定 Web 服務方法或 XML Web Service 用戶端可以處理的 SOAP 標頭。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基本步驟來接收和處理 SOAP 標頭會：  
  
1.  建立衍生自<xref:System.Web.Services.Protocols.SoapHeader>表示資料傳入的 SOAP 標頭。  
  
2.  將成員加入至在步驟 1 中建立之類型的 XML Web 服務用戶端 proxy 類別的 XML Web 服務類別。  
  
3.  套用<xref:System.Web.Services.Protocols.SoapHeaderAttribute>，XML Web service 方法或在 proxy 類別中對應的方法，並指定在步驟 2 中建立的成員<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。  
  
4.  在 XML Web 服務方法或 XML Web 服務用戶端程式碼，存取<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性來處理 SOAP 標頭中傳送的資料。  
  
 如需詳細資訊，請參閱<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。  
  
   
  
## Examples  
 下列`MyWebService`XML Web service 會定義一個<xref:System.Web.Services.Protocols.SoapHeader>型別的`MyHeader`。 `Hello` XML Web service 方法需要用戶端叫用 XML Web service 方法，與此<xref:System.Web.Services.Protocols.SoapHeader>。 `Hello` XML Web 服務也會攔截任何 SOAP 標頭以外`MyHeader`。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHeaderAttribute (string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHeaderAttribute(System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapHeaderAttribute : string -&gt; System.Web.Services.Protocols.SoapHeaderAttribute" Usage="new System.Web.Services.Protocols.SoapHeaderAttribute memberName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">XML Web Service 類別的成員，表示 SOAP 標頭內容。 <see cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" /> 屬性將設為這個參數的值。</param>
        <summary>設定表示 SOAP 標頭內容的 XML Web Service 類別的成員，初始化 <see cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服務用戶端或 XML Web service，則可以指定想要處理的特定 XML Web 服務方法所套用的 SOAP 標頭<xref:System.Web.Services.Protocols.SoapHeaderAttribute>XML Web 服務方法之 XML Web 服務類別或 proxy 類別中的對應方法中。 為了讓 XML Web service 方法，以接收 SOAP 標頭的內容，成員加入至 XML Web 服務類別的<xref:System.Type>衍生自<xref:System.Web.Services.Protocols.SoapHeader>。 同樣地，XML Web 服務用戶端會將成員加入衍生自的 proxy 類別<xref:System.Web.Services.Protocols.SoapHeader>。 <xref:System.Type>衍生自<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 標頭的內容和 XML Web 服務或想要接收的 SOAP 標頭的 XML Web 服務用戶端的開發人員所建立。 建立類別之後，一旦<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以套用至 XML Web service 方法或成員，才能接收 SOAP 標頭的內容與 XML Web 服務用戶端 proxy 類別指定在對應的方法`memberName`這個建構函式參數或<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。  
  
 XML Web 服務方法可以接收多個 SOAP 標頭之 XML Web 服務類別或 XML Web 服務 proxy 類別加入多個成員並接著將套用多個<xref:System.Web.Services.Protocols.SoapHeaderAttribute>屬性，將 XML Web service 方法。  
  
 若要接收和處理未知的 SOAP 標頭寫入 XML Web service 時，指定<xref:System.Type>的成員可以是<xref:System.Web.Services.Protocols.SoapUnknownHeader>，<xref:System.Web.Services.Protocols.SoapHeader>或其中一個類別的陣列。  
  
   
  
## Examples  
 下列`MyWebService`XML Web service 會定義一個<xref:System.Web.Services.Protocols.SoapHeader>型別的`MyHeader`。 `Hello` XML Web service 方法指定`myHeader`成員<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>接收的內容屬性`MyHeader`傳入 XML Web service 方法的 SOAP 標頭。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapHeaderDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SoapHeaderDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderDirection Direction { System::Web::Services::Protocols::SoapHeaderDirection get(); void set(System::Web::Services::Protocols::SoapHeaderDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.Services.Protocols.SoapHeaderDirection with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 標頭，是否要用於 XML Web Service、XML Web Service 用戶端或兩者都是。</summary>
        <value>SOAP 標頭所適用的收件者。 預設值為 <see cref="F:System.Web.Services.Protocols.SoapHeaderDirection.In" />，表示所要的收件者即是 XML Web Service。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列`MyWebService`XML Web service 會定義一個<xref:System.Web.Services.Protocols.SoapHeader>型別的`MyHeader`。 `Hello` XML Web service 方法指定`MyHeader`XML Web 服務方法和用戶端必須傳送至 invocate XML Web service 方法。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML Web Service 類別的成員，表示 SOAP 標頭內容。</summary>
        <value>XML Web Service 類別的成員，表示 SOAP 標頭內容。 沒有預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服務或 XML Web 服務用戶端可以指定想要藉由套用所處理的 SOAP 標頭<xref:System.Web.Services.Protocols.SoapHeaderAttribute>XML Web 服務方法之 XML Web 服務類別或 proxy 類別中的對應方法中。 為了讓 XML Web service 方法，以接收 SOAP 標頭的內容，成員加入至衍生類型的 XML Web 服務類別<xref:System.Web.Services.Protocols.SoapHeader>。 同樣地，XML Web 服務用戶端會將成員加入衍生自的 proxy 類別<xref:System.Web.Services.Protocols.SoapHeader>。 <xref:System.Type>衍生自<xref:System.Web.Services.Protocols.SoapHeader>表示 SOAP 標頭的內容和 XML Web 服務或想要接收的 SOAP 標頭的 XML Web 服務用戶端的開發人員所建立。 建立類別之後，一旦<xref:System.Web.Services.Protocols.SoapHeaderAttribute>可以套用至 XML Web service 方法或 XML Web 服務用戶端 proxy 類別中指定要接收 SOAP 標頭內容，成員的對應方法<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性。  
  
 XML Web 服務方法可以接收多個 SOAP 標頭之 XML Web 服務類別或 XML Web 服務 proxy 類別加入多個成員並接著將套用多個<xref:System.Web.Services.Protocols.SoapHeaderAttribute>屬性，將 XML Web service 方法。  
  
 接收和處理未知的 SOAP 標頭寫入 XML Web service 時，指定為成員的型別<xref:System.Web.Services.Protocols.SoapUnknownHeader>，<xref:System.Web.Services.Protocols.SoapHeader>或其中一個類別的陣列。  
  
   
  
## Examples  
 下列`MyWebService`XML Web service 會定義一個<xref:System.Web.Services.Protocols.SoapHeader>型別的`MyHeader`。 `Hello` XML Web service 方法指定`myHeader`成員<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>接收的內容屬性`MyHeader`傳入 XML Web service 方法的 SOAP 標頭。  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="public bool Required { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Required" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberSignature Language="VB.NET" Value="Public Property Required As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Required { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Required : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property will be removed from a future version. The presence of a particular header in a SOAP message is no longer enforced", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個成員已經過時，而且不具功能。</summary>
        <value>
          <see cref="T:System.Boolean" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要確認，SOAP 標頭傳送給 XML Web 服務，確認中指定成員<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>屬性是`null`。 如果是`null`，未傳送的 SOAP 標頭。  
  
 在 1.0 版的.NET Framework SDK，<xref:System.Web.Services.Protocols.SoapHeaderAttribute.Required%2A>屬性會指出必須了解並處理的收件者的 XML Web 服務或 XML Web 服務用戶端的 SOAP 標頭。 如果收件者未處理的 SOAP 標頭已擲回例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>