<Type Name="SoapDocumentMethodAttribute" FullName="System.Web.Services.Protocols.SoapDocumentMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcb6179a87a003b0a48626a364158913b7d46715" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39969439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapDocumentMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapDocumentMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapDocumentMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapDocumentMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapDocumentMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>將 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 套用於方法，指定往返於方法的 SOAP 訊息使用 <see langword="Document" /> 格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言 (WSDL) 定義的 SOAP 訊息中如何可以格式化 XML Web service 方法，它會呼叫作業，這兩種樣式：`RPC`和`Document`。 `Document` 是指設定格式化的 XML Web service 方法，根據 XSD 結構描述。 `Document`樣式是指格式化`Body`項目，以遵循的一或多個訊息部分的一系列`Body`項目。 確切方式個別的訊息部分取決於<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A>和<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>屬性。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use%2A>屬性會決定參數是否格式化`Encoded`或`Literal`。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>判斷參數是否封裝於單一訊息部分下列`Body`項目，或每個參數是否個別訊息部分。  
  
 如需詳細資訊，請參閱 < [ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)  
  
 這個屬性可以套用至 XML Web service 方法，在伺服器上的和用戶端上的 proxy 類別的方法。  
  
   
  
## Examples  
 下列程式碼範例會將訊息樣式設定為`Document`針對`GetUserName`XML Web service 方法。 此外，具有的 XML 項目`Body`SOAP 要求和 SOAP 回應的項目會設定為`GetUserNameRequest`和`GetUserNameResponse`分別。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" />
    <altmember cref="T:System.Web.Services.Description.SoapBindingUse" />
    <altmember cref="T:System.Web.Services.Protocols.SoapParameterStyle" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapDocumentMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapDocumentMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapDocumentMethodAttribute (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapDocumentMethodAttribute(System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapDocumentMethodAttribute : string -&gt; System.Web.Services.Protocols.SoapDocumentMethodAttribute" Usage="new System.Web.Services.Protocols.SoapDocumentMethodAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">SOAP 要求的 <see langword="SOAPAction" /> HTTP 標頭欄位。 設定 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> 屬性。</param>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> 類別的新執行個體，將 <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> 屬性設定為 <paramref name="action" /> 參數的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 要求的 <see langword="SOAPAction" /> HTTP 標頭欄位。</summary>
        <value>SOAP 要求的 <see langword="SOAPAction" /> HTTP 標頭欄位。 預設值是http://tempuri.org/MethodName，而 MethodName 是 XML Web service 方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>屬性會指出要求的目的 URI。 不過，SOAP 規格格式的 URI，將沒有限制，或任何規則的 URI 是可解析。 目前狀態和內容<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>屬性可以由 Web 伺服器，例如防火牆、 用來適當地篩選 http SOAP 要求訊息。  
  
 根據預設，.NET Framework 1.1 版發行<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>中的屬性`soapAction`屬性`soap:operation`為 XML Web service 產生的 WSDL 文件中支援 SOAP 繫結的每個項目。 如需有關 SOAP 規格的詳細資訊，請參閱 W3C 網站 (http://www.w3.org/TR/SOAP)。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action%2A>屬性設`http://www.contoso.com/GetUserName`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public string Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Binding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Binding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定繫結，XML Web Service 方法為其實作作業。</summary>
        <value>繫結，XML Web Service 方法為其實作作業。 預設為附有 SOAP 的 XML Web Service 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結所定義的 「 Web 服務描述語言 」 (WSDL) 是類似於介面，因為它會定義一組具體的作業。 對於使用 ASP.NET 建立 XML Web 服務，每個 XML Web service 方法會是繫結內的作業。 XML Web 服務方法都是 XML Web service 的預設繫結或繫結中指定的成員<xref:System.Web.Services.WebServiceBindingAttribute>套用至 XML Web service。 XML Web service 可以實作多個繫結時多個<xref:System.Web.Services.WebServiceBindingAttribute>屬性套用至 XML Web service。  
  
 一次一或多個<xref:System.Web.Services.WebServiceBindingAttribute>屬性套用至 XML Web service，<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可以套用至個別的 XML Web 服務方法，以指出特定的 XML Web service 方法所實作的繫結作業。 設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding%2A>的屬性<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>來指定繫結，XML Web service 方法實作的作業。 只有一個<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>或<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>可以套用至 XML Web service 方法。 因此，對 XML Web service 方法只能實作一種繫結的作業。  
  
 如需有關 WSDL 規格的詳細資訊，請參閱 W3C 網站 (http://www.w3.org/TR/wsdl)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public bool OneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML Web Service 用戶端是否等候 Web 伺服器完成處理 XML Web Service 方法。</summary>
        <value>如果 XML Web Service 用戶端不等候 Web 伺服器以完成處理 XML Web Service 方法，則為 <see langword="true" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 XML Web service 方法具有<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>屬性設定為`true`，XML Web service 用戶端不需要等候 Web 伺服器完成處理 XML Web service 方法。 只要 Web 伺服器已還原序列化<xref:System.Web.Services.Protocols.SoapServerMessage>，但是叫用 XML Web 服務方法之前，伺服器會傳回 HTTP 202 狀態碼。 HTTP 202 狀態碼會向用戶端指出 Web 伺服器已開始處理訊息。 因此，將 XML Web service 用戶端會收到任何 Web 伺服器已成功處理訊息的通知。  
  
 單向方法不能有傳回值，或任何 out 參數。  
  
 如果您使用的.NET Framework 1.0 版 XML Web 服務方法有<xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>或<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>屬性套用至它們<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>屬性設為`true`，並沒有存取其<xref:System.Web.HttpContext>使用靜態<xref:System.Web.HttpContext.Current%2A>屬性。 若要存取<xref:System.Web.HttpContext>，衍生類別實作 XML Web service 方法，從<xref:System.Web.Services.WebService>並存取<xref:System.Web.Services.WebService.Context%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例是不需要等候完成 XML Web service 方法的用戶端對 XML Web service 方法。 因此，範例會設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>屬性設`true`。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapServerMessage" />
      </Docs>
    </Member>
    <Member MemberName="ParameterStyle">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapParameterStyle ParameterStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapParameterStyle ParameterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterStyle As SoapParameterStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapParameterStyle ParameterStyle { System::Web::Services::Protocols::SoapParameterStyle get(); void set(System::Web::Services::Protocols::SoapParameterStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterStyle : System.Web.Services.Protocols.SoapParameterStyle with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapParameterStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數是否封裝於 SOAP 訊息之 XML 部分中 <see langword="Body" /> 項目之下的單一 XML 項目。</summary>
        <value>SOAP 訊息的 <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> 傳送往返於 XML Web Service 方法。 預設值是 <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例可讓您指定傳送 SOAP 訊息中的參數傳送進出`PlaceOrder`XML Web service 方法不會封裝在一個 XML 項目。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapParameterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RequestElementName">
      <MemberSignature Language="C#" Value="public string RequestElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML Web Service 方法與 SOAP 要求關聯的 XML 項目，這是定義於服務描述來當做一個作業。</summary>
        <value>XML Web Service 方法與 SOAP 要求關聯的 XML 項目，這是定義於服務描述來當做一個作業。 預設值為 XML Web Service 方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName%2A>會定義用來包裝下方參數的 XML 項目`Body`元素的 soap 要求時<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>是<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>。 這會反映在 XSD 結構描述中表示 XML Web service 的服務描述中的 XML Web service 方法的 SOAP 要求。  
  
   
  
## Examples  
 下列程式碼範例設定的 SOAP 要求中的 XML Web service 方法相關聯的 XML 項目名稱`MyCustomElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestNamespace">
      <MemberSignature Language="C#" Value="public string RequestNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法的 SOAP 要求關聯的命名空間。</summary>
        <value>與 XML Web Service 方法之 SOAP 要求關聯的 XML 命名空間。 預設值為 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A> 可在 XSD 結構描述的 XML Web service 方法，其服務描述內。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace%2A>屬性設`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseElementName">
      <MemberSignature Language="C#" Value="public string ResponseElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseElementName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseElementName : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 回應關聯的 XML 項目。</summary>
        <value>與 XML Web Service 方法之 SOAP 要求關聯的 XML 項目。 預設值為 WebServiceNameResult，其中 WebServiceName 是 XML Web Service 方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName%2A>會定義用來包裝下方參數的 XML 項目`Body`SOAP 回應的項目時<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle%2A>是<xref:System.Web.Services.Protocols.SoapParameterStyle.Wrapped>。 這會反映在 XSD 結構描述代表內 XML Web service 的服務描述 XML Web service 方法的 SOAP 回應中。  
  
   
  
## Examples  
 下列程式碼範例設定的 SOAP 回應中的 XML Web service 方法相關聯的 XML 項目名稱`MyCustomResponseElement`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseNamespace">
      <MemberSignature Language="C#" Value="public string ResponseNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseNamespace : string with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 XML Web Service 方法之 SOAP 回應關聯的 XML 命名空間。</summary>
        <value>與 XML Web Service 方法之 SOAP 回應關聯的 XML 命名空間。 預設值為 http://tempuri.org/。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A>屬性在 XSD 結構描述用於 XML Web service 方法，其服務描述中。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace%2A>屬性設`http://www.contoso.com`。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.SoapBindingUse Use { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Description.SoapBindingUse Use" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use" />
      <MemberSignature Language="VB.NET" Value="Public Property Use As SoapBindingUse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::SoapBindingUse Use { System::Web::Services::Description::SoapBindingUse get(); void set(System::Web::Services::Description::SoapBindingUse value); };" />
      <MemberSignature Language="F#" Value="member this.Use : System.Web.Services.Description.SoapBindingUse with get, set" Usage="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.SoapBindingUse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SOAP 訊息的 XML 部分內 XML Web Service 方法的參數格式。</summary>
        <value>XML Web Service 方法的 <see cref="T:System.Web.Services.Description.SoapBindingUse" />。 預設值為 <see cref="F:System.Web.Services.Description.SoapBindingUse.Literal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言 (WSDL) 定義格式化參數的兩個方法：<xref:System.Web.Services.Description.SoapBindingUse.Encoded>和<xref:System.Web.Services.Description.SoapBindingUse.Literal>。 <xref:System.Web.Services.Description.SoapBindingUse.Encoded> 是指 SOAP 規格第 5 節所述的格式使用 SOAP 編碼的參數。 <xref:System.Web.Services.Description.SoapBindingUse.Literal> 是指格式使用預先定義的 XSD 結構描述每個參數的參數。  
  
 如需詳細資訊，請參閱 < [ &#91; \<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients >&#93;](http://msdn.microsoft.com/library/1d777288-c0d9-4e6a-b638-f010da031952)。  
  
   
  
## Examples  
 下列程式碼範例會指定`Document`  /  `Encoded` SOAP 訊息必須傳送至`PlaceOrder`XML Web service 方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Description.SoapBindingUse" />
      </Docs>
    </Member>
  </Members>
</Type>