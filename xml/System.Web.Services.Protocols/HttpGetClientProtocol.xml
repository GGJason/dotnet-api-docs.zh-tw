<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpGetClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpGetClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da80e-101">XML Web Service 用戶端 Proxy 的基底類別，使用 HTTP-GET 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="da80e-101">The base class for XML Web service client proxies that use the HTTP-GET protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da80e-102">當 XML Web 服務用戶端使用 HTTP GET 通訊協定時，參數會在 URL 內進行編碼，並將回應傳回以純文字 XML。</span><span class="sxs-lookup"><span data-stu-id="da80e-102">When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.</span></span>  
  
 <span data-ttu-id="da80e-103">如果您要建置使用 ASP.NET，則 XML Web 服務用戶端 proxy 類別，間接衍生，或直接從<xref:System.Web.Services.Protocols.WebClientProtocol>必須先建立您想要呼叫 XML Web 服務。</span><span class="sxs-lookup"><span data-stu-id="da80e-103">If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call.</span></span> <span data-ttu-id="da80e-104">當 XML Web 服務用戶端呼叫 XML Web service 使用 HTTP 時，衍生的 proxy 類別，從<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，而後者又衍生自<xref:System.Web.Services.Protocols.WebClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="da80e-104">When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="da80e-105"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> 和<xref:System.Web.Services.Protocols.HttpPostClientProtocol>衍生自<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>，呼叫 XML Web 服務方法分別使用 HTTP GET 和 HTTP POST 通訊協定提供的支援。</span><span class="sxs-lookup"><span data-stu-id="da80e-105"><xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively.</span></span> <span data-ttu-id="da80e-106">呼叫 XML Web service 使用 SOAP 用戶端應衍生自<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>。</span><span class="sxs-lookup"><span data-stu-id="da80e-106">Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.</span></span>  
  
 <span data-ttu-id="da80e-107">如需建立 proxy 類別的詳細資訊，請參閱[ &#91; \<topic://cpconcreatingwebserviceproxy >&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756)。</span><span class="sxs-lookup"><span data-stu-id="da80e-107">For details on building a proxy class, see [&#91;\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/library/142d91f5-3249-4cfc-a431-1f3acb76d756).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da80e-108">下列範例是針對 Wsdl.exe 所產生 proxy 類別`Math`以下的 XML Web 服務。</span><span class="sxs-lookup"><span data-stu-id="da80e-108">The following example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="da80e-109">Proxy 類別衍生自<xref:System.Web.Services.Protocols.HttpGetClientProtocol>，其衍生自抽象<xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>類別。</span><span class="sxs-lookup"><span data-stu-id="da80e-109">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="da80e-110">下列範例是`Math`XML Web service，從中建立上述的 proxy 類別。</span><span class="sxs-lookup"><span data-stu-id="da80e-110">The following example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpGetClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da80e-111">初始化 <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="da80e-111">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="da80e-112">建立 <see cref="T:System.Uri" /> 時要使用的 <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="da80e-112">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="da80e-113">為指定的 URI 建立 <see cref="T:System.Net.WebRequest" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="da80e-113">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</span></span></summary>
        <returns><span data-ttu-id="da80e-114"><see cref="T:System.Net.WebRequest" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="da80e-114">The <see cref="T:System.Net.WebRequest" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da80e-115">這個方法會覆寫基底版本<xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A>來指定 XML Web 服務的 HTTP 要求，進行 HTTP get。</span><span class="sxs-lookup"><span data-stu-id="da80e-115">This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET.</span></span> <span data-ttu-id="da80e-116">藉由覆寫這個方法，其他自訂，可以藉由<xref:System.Net.WebRequest>物件進行 XML Web 服務要求的作業之前。</span><span class="sxs-lookup"><span data-stu-id="da80e-116">By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="da80e-117">例如，您可以要求加入自訂標頭。</span><span class="sxs-lookup"><span data-stu-id="da80e-117">For example you could add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="da80e-118"><paramref name="uri" /> 參數為 null 或長度為零。</span><span class="sxs-lookup"><span data-stu-id="da80e-118">The <paramref name="uri" /> parameter is null or has a length of zero.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>