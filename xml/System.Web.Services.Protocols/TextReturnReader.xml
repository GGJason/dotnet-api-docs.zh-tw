<Type Name="TextReturnReader" FullName="System.Web.Services.Protocols.TextReturnReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="169d2abb35f9815b000d0b5e2c939d9c78161ae5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30547882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextReturnReader : System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextReturnReader extends System.Web.Services.Protocols.MimeReturnReader" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.TextReturnReader" />
  <TypeSignature Language="VB.NET" Value="Public Class TextReturnReader&#xA;Inherits MimeReturnReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReturnReader : System::Web::Services::Protocols::MimeReturnReader" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeReturnReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>針對使用 HTTP 但不使用 SOAP 實作的 Web 服務用戶端，從 HTTP 回應文字讀取傳回值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.TextReturnReader> 類別和其他類別<xref:System.Web.Services.Protocols>命名空間支援.NET Framework 實作 Web 服務透過 HTTP GET 和 HTTP POST 作業。 Web 服務寫入器和讀取序列化和還原序列化，分別參數或 Web 方法的傳回物件之間的 HTTP 要求或回應資料流。 Web 服務寫入器和讀取器使用 HTTP 傳輸，但不會交換使用 SOAP 標準的訊息。  
  
 <xref:System.Web.Services.Protocols.TextReturnReader>類別會實作非 XML 文字的用戶端讀取資料到 Web 方法的傳回值。 若要取得傳回值，編碼的 HTTP 回應主體中，文字會剖析使用規則運算式模式比對屬性所指定<xref:System.Web.Services.Protocols.MatchAttribute>，可以套用至用戶端 proxy 類別中的 Web 方法。 <xref:System.Web.Services.Protocols.TextReturnReader>類別會呼叫<xref:System.Web.Services.Protocols.PatternMatcher>類別實際執行模式比對。  
  
 文字模式比對可讓 Web 服務擷取的 HTML 內容，而不會轉換成必須繫結至 XML 結構描述定義的 XML 文件。 透過 Web 服務描述語言 (WSDL) 文件中指定的規則運算式搜尋目標`match`內 XML 項目`text`項目。 這兩個項目屬於命名空間http://microsoft.com/wsdl/mime/textMatching/。  
  
 當**符合**元素來指定 WSDL 文件中的 Wsdl.exe 工具適用於<xref:System.Web.Services.Protocols.MatchAttribute>屬性，將會產生用戶端 proxy 類別中的對應 Web 方法。 此外，<xref:System.Web.Services.Protocols.TextReturnReader>用來取代<xref:System.Web.Services.Protocols.XmlReturnReader>，進行還原序列化的 Web 方法的預設類別透過 HTTP GET 和 HTTP POST 作業傳回的 Web 服務的.NET Framework 實作根據的值。  
  
 您通常會不需要使用<xref:System.Web.Services.Protocols.TextReturnReader>直接類別。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.MimeReturnReader" />
    <altmember cref="T:System.Web.Services.Protocols.PatternMatcher" />
    <altmember cref="T:System.Web.Services.Protocols.MatchAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextReturnReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextReturnReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.Protocols.TextReturnReader" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />，可指定要取得初始設定式的 Web 方法。</param>
        <summary>傳回指定方法的初始設定式。</summary>
        <returns>指定方法的初始設定式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始設定式會當做參數傳遞的物件<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>方法。 如<xref:System.Web.Services.Protocols.TextReturnReader>類別初始設定式是<xref:System.Web.Services.Protocols.PatternMatcher>物件根據 Web 方法的傳回型別。  
  
 <xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>服務初始化期間叫用方法。 稍後，在處理回應的時間，在初始設定式物件會傳遞至<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>另一個方法<xref:System.Web.Services.Protocols.TextReturnReader>執行個體。 另一個執行個體執行實際的讀取。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Web.Services.Protocols.PatternMatcher" /> 物件，用於正在叫用之 Web 方法的傳回型別。</param>
        <summary>初始化執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>方法提供<xref:System.Web.Services.Protocols.PatternMatcher>所使用物件<xref:System.Web.Services.Protocols.TextReturnReader.Read%2A>方法來剖析 HTTP 回應中包含的文字。 <xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>處理要求時叫用方法。 輸入的參數、 `o`，透過呼叫<xref:System.Web.Services.Protocols.TextReturnReader.GetInitializer%2A>另一個執行個體在用戶端初始化期間取得類別的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Read(class System.Net.WebResponse response, class System.IO.Stream responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (response As WebResponse, responseStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Read(System::Net::WebResponse ^ response, System::IO::Stream ^ responseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Net.WebResponse" />
        <Parameter Name="responseStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="response">
          <see cref="T:System.Net.WebResponse" /> 物件，包含作業的輸出訊息。</param>
        <param name="responseStream">
          <see cref="T:System.IO.Stream" />，其內容為 <c>response</c> 參數代表的 HTTP 回應主體。</param>
        <summary>剖析 HTTP 回應中包含的文字。</summary>
        <returns>物件，包含已還原序列化的 Web 方法傳回值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要剖析文字內容的 HTTP 回應，<xref:System.Web.Services.Protocols.TextReturnReader>類別的實作<xref:System.Web.Services.Protocols.TextReturnReader.Read%2A>方法會使用<xref:System.Web.Services.Protocols.PatternMatcher>物件做為引數傳遞<xref:System.Web.Services.Protocols.TextReturnReader.Initialize%2A>方法。 它會傳回已還原序列化的 Web 方法傳回值之前關閉回應資料流。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>