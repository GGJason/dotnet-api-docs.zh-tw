<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Queue.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac535a21c57df8f37e412b63620230c911fe166fb4d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35a21c57df8f37e412b63620230c911fe166fb4d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Queue">
          <source>Represents a first-in, first-out collection of objects.</source>
          <target state="translated">表示物件的先進先出 (FIFO) 集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>This class implements a queue as a circular array.</source>
          <target state="translated">這個類別會實作佇列以循環的陣列。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Objects stored in a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> are inserted at one end and removed from the other.</source>
          <target state="translated">物件儲存在<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>其中一端插入和移除不同的方式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</source>
          <target state="translated">佇列和堆疊有用您需要進行暫存儲存位置的資訊。也就是說，您可能想要擷取其值後捨棄項目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> if you need to access the information in the same order that it is stored in the collection.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>如果您需要存取相同的順序儲存在集合中的資訊。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> if you need to access the information in reverse order.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>如果您需要以相反順序存取的資訊。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> if you need to access the collection from multiple threads concurrently.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>如果您需要從多個執行緒同時存取集合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Three main operations can be performed on a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> and its elements:</source>
          <target state="translated">可以對三個主要作業<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>和其項目：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Enqueue%2A&gt;</ph> adds an element to the end of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Enqueue%2A&gt;</ph> 將元素加入結尾<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> removes the oldest element from the start of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> 從開始移除最舊的項目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> returns the oldest element that is at the start of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> but does not remove it from the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> 傳回的最舊的項目開頭，<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>但不會移除從<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The default growth factor is 2.0.</source>
          <target state="translated">預設成長因數為 2.0。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by at least a minimum of four, regardless of the growth factor.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>一定會增加不論成長係數的四個至少有最小值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>For example, a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>以 1.0 的成長因數會永遠增加容量由四個需要更大的容量時。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> 接受<ph id="ph2">`null`</ph>有效的值，並允許重複的項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">這個集合的泛型版本，請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>The following example shows how to create and add values to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> and how to print out its values.</source>
          <target state="translated">下列範例示範如何建立並新增值到<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>以及如何列印其值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公用靜態 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">不保證任何執行個體成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /&gt;</ph> method.</source>
          <target state="translated">若要保證的執行緒安全<ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>，所有作業都必須都透過包裝函式所傳回<ph id="ph2">&lt;see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Queue">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Collections.Queue">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default growth factor.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 類別的新執行個體，其為空白、具有預設初始容量且使用預設的等比級數因數。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to copy elements from.</source>
          <target state="translated">要複製元素來源的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 類別的新執行個體，其中含有從指定之集合複製過來的項目、具有與複製的項目數一樣的初始容量且使用預設的等比級數因數。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> of the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">將元素複製到<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>所讀取的順序相同<ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph>的<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`col`</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 可包含的初始項目數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default growth factor.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 類別的新執行個體，其為空白、具有初始容量且使用預設的等比級數因數。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 可包含的初始項目數。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The factor by which the capacity of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is expanded.</source>
          <target state="translated">擴充 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 之容量的因數。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified growth factor.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 類別的新執行個體，其為空白、具有初始容量且使用指定的等比級數因數。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>一定會增加的最小值，不論成長係數; 不會防止 1.0 成長因數<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>從增加大小。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="growFactor" /&gt;</ph> is less than 1.0 or greater than 10.0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="growFactor" /&gt;</ph> 小於 1.0 或大於 10.0。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 移除所有物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> 已設為零，並從項目集合的其他物件的參考也會釋放。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>The capacity remains unchanged.</source>
          <target state="translated">容量會維持不變。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">若要重設的容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，呼叫<ph id="ph2">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> to the default capacity.</source>
          <target state="translated">修剪空白<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>設定的容量<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>預設容量。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clear">
          <source>The following example shows how to clear the values of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何清除的值<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的淺層複本。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的淺層複本。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">集合的淺層複本只會複製元素的集合，不論它們是參考類型或實值類型，但是不會複製參考所參考的物件。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新的集合中的參考都指向相同原始集合中的參考所指向的物件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">相反地，項目複製集合的深層複本，並直接或間接參考之項目，所有項目。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中尋找的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">判斷某項目是否在 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中找到 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>，則為 <ph id="ph3">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法會判斷是否相等，藉由呼叫<ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`obj`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`obj`</ph>來判斷是否<ph id="ph4">`item`</ph>存在。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`obj`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`obj`</ph>參數集合中的物件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">從指定的陣列索引處開始，複製 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 項目至現有一維 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">將元素複製到<ph id="ph1">&lt;xref:System.Array&gt;</ph>以相同的順序，以列舉值逐一<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">下列範例示範如何複製<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>到一維陣列。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中的項目數大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can store.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目，<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以儲存。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> 是實際的項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>永遠是大於或等於<ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>超過容量加入項目時，複製的舊項目並加入新項目之前，重新配置內部的陣列，就會自動增加容量。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">新的容量取決於目前的容量乘以成長係數，也就是決定何時<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>一定會增加的最小值，不論成長係數; 不會防止 1.0 成長因數<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>從增加大小。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>Removes and returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">移除並傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 開頭的物件。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>The object that is removed from the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的開頭移除的物件。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">這個方法與 <ph id="ph1">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> 方法類似，但是 <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> 不會修改 <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source><ph id="ph1">`null`</ph> can be added to the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 可以加入至<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>做為值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>To distinguish between a null value and the end of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> property or catch the <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> is empty.</source>
          <target state="translated">Null 值和結束之間區別<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，檢查<ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>屬性或 catch <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>，這就會擲回時<ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph>是空的。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Dequeue">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何加入項目來<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，移除項目的<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>，或檢視之項目的開頭<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Dequeue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">將物件加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的末端。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</source>
          <target state="translated">成長係數是需要更大的容量時，目前的容量乘的乘數目。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The growth factor is determined when the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is constructed.</source>
          <target state="translated">成長因數會決定當<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>建構。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The capacity of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> from increasing in size.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>一定會增加的最小值，不論成長係數; 不會防止 1.0 成長因數<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>從增加大小。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> is less than the capacity of the internal array, this method is an O(1) operation.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>小於比內部陣列的容量，這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">如果需要重新配置以容納新項目內部的陣列，這個方法會變成 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Enqueue(System.Object)">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何加入項目來<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，移除項目的<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>，或檢視之項目的開頭<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">若要保證的執行緒安全<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，所有作業都必須都透過包裝函式所傳回<ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph>在整個列舉過程。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.IsSynchronized">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何同步處理<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，判斷<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>同步處理，並使用同步處理<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>Returns the object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> without removing it.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 開頭的物件而不移除它。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>The object at the beginning of the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 前端的物件。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">這個方法與 <ph id="ph1">&lt;xref:System.Collections.Queue.Dequeue%2A&gt;</ph> 方法類似，但是 <ph id="ph2">&lt;xref:System.Collections.Queue.Peek%2A&gt;</ph> 不會修改 <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source><ph id="ph1">`null`</ph> can be added to the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> as a value.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 可以加入至<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>做為值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>To distinguish between a null value and the end of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph> property or catch the <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph> is empty.</source>
          <target state="translated">Null 值和結束之間區別<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，檢查<ph id="ph2">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>屬性或 catch <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>，這就會擲回時<ph id="ph4">&lt;xref:System.Collections.Queue&gt;</ph>是空的。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Peek">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, or view the element at the beginning of the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何加入項目來<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，移除項目的<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>，或檢視之項目的開頭<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> to synchronize.</source>
          <target state="translated">要同步處理的 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> that wraps the original queue, and is thread safe.</source>
          <target state="translated">傳回包裝原始佇列並且為安全執行緒的新 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> wrapper that is synchronized (thread safe).</source>
          <target state="translated">同步 (安全執行緒) 的 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 包裝函式。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</source>
          <target state="translated">這個方法所傳回的包裝函式會鎖定佇列之前，讓它安全執行緒的方式執行，執行作業。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, all operations must be done through this wrapper only.</source>
          <target state="translated">若要保證的執行緒安全<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，所有作業必須透過這個包裝函式只來都完成。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph>在整個列舉過程。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> is synchronized and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">下列範例示範如何同步處理<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，判斷<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>已同步處理，使用同步處理<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
          <source><ph id="ph1">&lt;paramref name="queue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queue" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Collections.Queue.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">若要建立的同步化的版本<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Collections.Queue.Synchronized%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">不過，在衍生的類別可以提供自己的同步處理的版本<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>.</source>
          <target state="translated">同步處理的程式碼必須在上執行作業<ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>、 直接依據<ph id="ph3">&lt;xref:System.Collections.Queue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">如此可確保衍生自其他物件的集合可以正常運作，</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> object.</source>
          <target state="translated">具體而言，保持正常的同步處理與其他可能同時修改的執行緒<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.Queue.SyncRoot%2A&gt;</ph>在整個列舉過程。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Queue.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> elements to a new array.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 項目複製到新的陣列。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.ToArray">
          <source>A new array containing elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">新的陣列，包含複製自 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 的元素。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> is not modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>則不會修改。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The order of the elements in the new array is the same as the order of the elements from the beginning of the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> to its end.</source>
          <target state="translated">新陣列中項目的順序是從開頭項目的順序相同<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>至它的結尾。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.ToArray">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">下列範例示範如何複製<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>到一維陣列。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.TrimToSize">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>.</source>
          <target state="translated">將容量設為 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 中的實際項目數目。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</source>
          <target state="translated">這個方法可用記憶體降到最低佇列的額外負荷如果沒有新的項目會加入至佇列。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Queue.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">若要重設<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>設為初始狀態，請呼叫<ph id="ph2">&lt;xref:System.Collections.Queue.Clear%2A&gt;</ph>方法之前先呼叫<ph id="ph3">&lt;xref:System.Collections.Queue.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph> to the default capacity.</source>
          <target state="translated">修剪空白<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>設定的容量<ph id="ph2">&lt;xref:System.Collections.Queue&gt;</ph>預設容量。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Queue.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Queue.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Queue.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>