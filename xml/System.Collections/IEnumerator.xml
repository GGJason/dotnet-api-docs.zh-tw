<Type Name="IEnumerator" FullName="System.Collections.IEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bf1410f2ceae549ee1213766e55fdc503f5554b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36711774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerator" />
  <TypeSignature Language="F#" Value="type IEnumerator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABF-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b95c0-101">支援非泛型集合上的簡單反覆運算。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b95c0-101">Supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b95c0-102"><xref:System.Collections.IEnumerator> 是針對所有非泛型列舉值的基底介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-102"><xref:System.Collections.IEnumerator> is the base interface for all non-generic enumerators.</span></span>  
  
 <span data-ttu-id="b95c0-103">這個介面的泛型版本，請參閱<xref:System.Collections.Generic.IEnumerator%601>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 <span data-ttu-id="b95c0-104">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="b95c0-104">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="b95c0-105">因此，使用`foreach`建議而不是直接管理 列舉值。</span><span class="sxs-lookup"><span data-stu-id="b95c0-105">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b95c0-106">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="b95c0-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b95c0-107"><xref:System.Collections.IEnumerator.Reset%2A>方法提供取得 COM 互通性，並不需要完全實作; 相反地，實作者可能會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-107">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="b95c0-108">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="b95c0-108">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b95c0-109">您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IEnumerator.Current%2A>，否則<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="b95c0-109">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="b95c0-110"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="b95c0-111"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="b95c0-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b95c0-112">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="b95c0-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b95c0-113">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="b95c0-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b95c0-114">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="b95c0-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="b95c0-115">若要設定<xref:System.Collections.IEnumerator.Current%2A>集合一次的第一個元素，您可以呼叫<xref:System.Collections.IEnumerator.Reset%2A>，如果它實作，後面接著<xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A>, if it’s implemented, followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="b95c0-116">如果<xref:System.Collections.IEnumerator.Reset%2A>是未實作，您必須建立新的列舉值執行個體傳回的第一個元素的集合。</span><span class="sxs-lookup"><span data-stu-id="b95c0-116">If <xref:System.Collections.IEnumerator.Reset%2A> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</span></span>  
  
 <span data-ttu-id="b95c0-117">如果變更集合，例如加入、 修改或刪除元素，列舉值的行為未定義。</span><span class="sxs-lookup"><span data-stu-id="b95c0-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="b95c0-118">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="b95c0-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b95c0-119">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b95c0-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b95c0-120">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b95c0-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b95c0-121">下列程式碼範例示範實作<xref:System.Collections.IEnumerable>和<xref:System.Collections.IEnumerator>介面為自訂的集合。</span><span class="sxs-lookup"><span data-stu-id="b95c0-121">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="b95c0-122">在此範例中，這些介面的成員不會明確呼叫，但都實作，以支援使用`foreach`(`for each`在 Visual Basic 中) 來逐一查看集合。</span><span class="sxs-lookup"><span data-stu-id="b95c0-122">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`for each` in Visual Basic) to iterate through the collection.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b95c0-123">取得集合中位於列舉值目前位置的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-123">Gets the element in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b95c0-124">位於列舉值中目前位置的集合中的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-124">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b95c0-125"><xref:System.Collections.IEnumerator.Current%2A> 未定義任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="b95c0-125"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="b95c0-126">列舉值位於集合中的第一個項目之前，在建立列舉值之後。</span><span class="sxs-lookup"><span data-stu-id="b95c0-126">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="b95c0-127"><xref:System.Collections.IEnumerator.MoveNext%2A> 將列舉值前進至再讀取的值集合的第一個項目必須先呼叫<xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-127"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="b95c0-128">在上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="b95c0-128">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="b95c0-129">列舉值會因為在集合中，例如加入、 修改或刪除的項目所做的變更而失效。</span><span class="sxs-lookup"><span data-stu-id="b95c0-129">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="b95c0-130"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-130"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b95c0-131"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="b95c0-131"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b95c0-132">下列程式碼範例示範實作<xref:System.Collections.IEnumerator>自訂集合的介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-132">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="b95c0-133">在此範例中，<xref:System.Collections.IEnumerator.Current%2A>未明確呼叫，但它會實作以支援使用`foreach`(`for each`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="b95c0-133">In this example, <xref:System.Collections.IEnumerator.Current%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="b95c0-134">這個程式碼範例是一個較大範例的一部分<xref:System.Collections.IEnumerator>介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-134">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b95c0-135">將列舉值往前推至下集合中的下一個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-135">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b95c0-136">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-136">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b95c0-137">建立列舉值之後或在之後<xref:System.Collections.IEnumerator.Reset%2A>方法呼叫，列舉程式位在集合中，且第一個呼叫的第一個元素之前<xref:System.Collections.IEnumerator.MoveNext%2A>方法集合的第一個項目上方移動列舉值。</span><span class="sxs-lookup"><span data-stu-id="b95c0-137">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <xref:System.Collections.IEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="b95c0-138">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="b95c0-138">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b95c0-139">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`直到<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="b95c0-139">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="b95c0-140">如果對集合中，例如加入、 修改或刪除元素的行為變更<xref:System.Collections.IEnumerator.MoveNext%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="b95c0-140">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.MoveNext%2A> is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b95c0-141">下列程式碼範例示範實作<xref:System.Collections.IEnumerator>自訂集合的介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-141">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="b95c0-142">在此範例中，<xref:System.Collections.IEnumerator.MoveNext%2A>未明確呼叫，但它會實作以支援使用`foreach`(`for each`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="b95c0-142">In this example, <xref:System.Collections.IEnumerator.MoveNext%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="b95c0-143">這個程式碼範例是一個較大範例的一部分<xref:System.Collections.IEnumerator>介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-143">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b95c0-144">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-144">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b95c0-145">如果對集合中，例如加入、 修改或刪除元素的行為變更<xref:System.Collections.IEnumerator.Reset%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="b95c0-145">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.Reset%2A> is undefined.</span></span>  
  
 <span data-ttu-id="b95c0-146"><xref:System.Collections.IEnumerator.Reset%2A>方法會提供給 COM 互通性。</span><span class="sxs-lookup"><span data-stu-id="b95c0-146">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="b95c0-147">它不一定需要實作。相反地，實作者可以只擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="b95c0-147">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b95c0-148">下列程式碼範例示範實作<xref:System.Collections.IEnumerator>自訂集合的介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-148">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="b95c0-149">在此範例中，<xref:System.Collections.IEnumerator.Reset%2A>未明確呼叫，但它會實作以支援使用`foreach`(`for each`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="b95c0-149">In this example, <xref:System.Collections.IEnumerator.Reset%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="b95c0-150">這個程式碼範例是一個較大範例的一部分<xref:System.Collections.IEnumerator>介面。</span><span class="sxs-lookup"><span data-stu-id="b95c0-150">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b95c0-151">
            <para>所有呼叫<see cref="M:System.Collections.IEnumerator.Reset" />列舉值時必須產生相同的狀態。將列舉值移至集合中，第一個項目之前，開頭為慣用的實作。這會使列舉值，如果集合已經過修改，因為建立列舉值，也就是與一致<see cref="M:System.Collections.IEnumerator.MoveNext" />和<see cref="P:System.Collections.IEnumerator.Current" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b95c0-151">
              <para>All calls to <see cref="M:System.Collections.IEnumerator.Reset" /> must result in the same state for the enumerator. The preferred implementation is to move the enumerator to the beginning of the collection, before the first element. This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="P:System.Collections.IEnumerator.Current" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>