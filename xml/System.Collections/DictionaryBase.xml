<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DictionaryBase.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565985fb884fc3e9f8ea0e99a2fb18bb6607c9a63.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65985fb884fc3e9f8ea0e99a2fb18bb6607c9a63</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.DictionaryBase">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for a strongly typed collection of key/value pairs.</source>
          <target state="translated">為索引鍵/值組的強類型集合提供 <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> 基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated">Foreach 陳述式的 C# 語言 （適用於每一個 Visual Basic 中） 會傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因為每個項目<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">相反地，項目型別是<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>陳述式是包裝函式，只允許讀取，不寫入至集合的列舉值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">因為索引鍵可以被繼承，變更其行為，其絕對唯一性無法保證使用比較<ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公用靜態 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">不保證任何執行個體成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>This implementation does not provide a synchronized (thread-safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">此實作中不提供的同步處理 （安全執行緒） 包裝函式<ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>，但在衍生的類別可以建立自己的同步的版本<ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>使用<ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>This base class is provided to make it easier for implementers to create a strongly typed custom collection.</source>
          <target state="translated">這個基底類別可讓實作器建立自訂的強類型的集合更容易。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">實作者都來擴充這個而不是建立自己的基底類別。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.DictionaryBase">
          <source>Members of this base class are protected and are intended to be used through a derived class only.</source>
          <target state="translated">這個基底類別的成員會受到保護，適用於透過衍生類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.Clear">
          <source>Clears the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">清除 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體的內容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph> 已設為零，並從項目集合的其他物件的參考也會釋放。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from the <ph id="ph3">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 執行個體複製過來的 <ph id="ph3">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件之目的端。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> at the specified index.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 元素複製到指定索引的一維 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>.</source>
          <target state="translated">將元素複製到<ph id="ph1">&lt;xref:System.Array&gt;</ph>以相同的順序，以列舉值逐一<ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.DictionaryBase.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 中的項目數大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">取得包含在 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中的項目數目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">包含在 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中的項目數目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.Dictionary">
          <source>Gets the list of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">取得包含於 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中的元素清單。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Dictionary">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance itself.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 表示 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體本身。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Dictionary">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Dictionary">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.Dictionary">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">傳回能夠逐一查看 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 執行個體的 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體的 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.GetEnumerator">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.InnerHashtable">
          <source>Gets the list of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">取得包含於 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中的元素清單。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.InnerHashtable">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance itself.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> 執行個體本身的 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.InnerHashtable">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.InnerHashtable">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>Performs additional custom processes before clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在清除 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體的內容前，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</source>
          <target state="translated">這個方法的預設實作是由衍生類別先執行某些動作，才能清除集合覆寫。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須刪除所有項目從基礎之前執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnClear" /&gt;</ph> 為之前叫用標準的清除行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnClearComplete" /&gt;</ph>清除的標準行為之後叫用。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClear">
          <source>For example, implementers can exempt certain elements from deletion by a global Clear.</source>
          <target state="translated">比方說，實作者可以排除特定項目從全域清除被刪除。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>Performs additional custom processes after clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在清除 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體的內容後，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</source>
          <target state="translated">這個方法的預設實作是由之後清除集合執行某些動作的衍生類別覆寫。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須刪除所有項目從基礎之後執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnClearComplete">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnClear" /&gt;</ph> 為之前叫用標準的清除行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnClearComplete" /&gt;</ph>清除的標準行為之後叫用。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>The key of the element to get.</source>
          <target state="translated">要取得的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>The current value of the element associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 建立關聯之項目的目前值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>Gets the element with the specified key and value in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中具有指定索引鍵和值的元素。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the element with the specified key and value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 包含的元素具有指定的索引鍵和值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>The default implementation of this method returns <ph id="ph1">`currentValue`</ph>.</source>
          <target state="translated">這個方法的預設實作會傳回<ph id="ph1">`currentValue`</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</source>
          <target state="translated">它會覆寫由衍生類別中，擷取指定的項目時執行其他動作。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed when executing the standard Get behavior of the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須在執行基礎的標準 Get 行為時執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /&gt;</ph> can be used to specify processes to perform before returning the value retrieved from the underlying <ph id="ph2">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /&gt;</ph> 可以用來指定傳回值從基礎擷取之前執行的處理序<ph id="ph2">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
          <source>For example, implementers can cast the value into another type before returning it.</source>
          <target state="translated">例如，實作者可以將值轉換為另一個類型再加以傳回。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The key of the element to insert.</source>
          <target state="translated">要插入的元素索引鍵。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The value of the element to insert.</source>
          <target state="translated">要插入的元素值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>Performs additional custom processes before inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在將新的元素插入至 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體前，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</source>
          <target state="translated">這個方法的預設實作是由以插入指定的項目之前，執行某些動作的衍生類別覆寫。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed before inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作者定義的基礎時，插入項目之前必須先執行處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /&gt;</ph> 為之前叫用標準的插入行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /&gt;</ph>標準插入行為之後叫用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
          <source>For example, implementers can restrict which types of objects can be inserted into the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">比方說，實作者可以限制哪些類型的物件可以插入到<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>The key of the element to insert.</source>
          <target state="translated">要插入的元素索引鍵。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>The value of the element to insert.</source>
          <target state="translated">要插入的元素值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>Performs additional custom processes after inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在將新的元素插入至 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體後，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</source>
          <target state="translated">這個方法的預設實作是由指定的項目插入後執行某些動作的衍生類別覆寫。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed after inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作者定義的基本項目插入後必須執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /&gt;</ph> 為之前叫用標準的插入行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /&gt;</ph>標準插入行為之後叫用。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The value of the element to remove.</source>
          <target state="translated">要移除的元素值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>Performs additional custom processes before removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在從 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體移除元素前，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</source>
          <target state="translated">這個方法的預設實作是由衍生類別以執行某些動作，然後才移除指定的項目覆寫。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed before removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作者定義的基礎移除項目之前必須先執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph> 為之前叫用標準的移除行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /&gt;</ph>標準移除行為之後叫用。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
          <source>For example, implementers can prevent removal of elements by always throwing an exception in <ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">例如，實作者可以避免移除項目中，一律擲回例外狀況<ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>The value of the element to remove.</source>
          <target state="translated">要移除的元素值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>Performs additional custom processes after removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在從 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體移除元素後，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</source>
          <target state="translated">這個方法的預設實作是由衍生類別中移除指定的項目後執行某些動作覆寫。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed after removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作者定義的基礎移除項目後必須執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /&gt;</ph> 為之前叫用標準的移除行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /&gt;</ph>標準移除行為之後叫用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The key of the element to locate.</source>
          <target state="translated">要尋找的元素索引鍵。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The old value of the element associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 建立關聯之項目的舊值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The new value of the element associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 建立關聯之項目的新值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>Performs additional custom processes before setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中設定數值前，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</source>
          <target state="translated">這個方法的預設實作是由衍生類別以執行某些動作，就會設定指定的項目覆寫。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須在基礎設定指定的項目之前執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph> 會叫用之前設定的標準行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /&gt;</ph>設定的標準行為之後叫用。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
          <source>For example, implementers can restrict which values can be overwritten by performing a check inside <ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">比方說，實作者可以限制哪些值會覆寫執行內檢查<ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The key of the element to locate.</source>
          <target state="translated">要尋找的元素索引鍵。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The old value of the element associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 建立關聯之項目的舊值。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The new value of the element associated with <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">與 <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> 建立關聯之項目的新值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>Performs additional custom processes after setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> instance.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 執行個體中設定數值後，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</source>
          <target state="translated">這個方法的預設實作是由以指定的項目設定後執行某些動作的衍生類別覆寫。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須在基礎設定指定的項目之後執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /&gt;</ph> 會叫用之前設定的標準行為，而<ph id="ph2">&lt;see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /&gt;</ph>設定的標準行為之後叫用。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The key of the element to validate.</source>
          <target state="translated">要驗證的元素索引鍵。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The value of the element to validate.</source>
          <target state="translated">要驗證的元素值。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>Performs additional custom processes when validating the element with the specified key and value.</source>
          <target state="translated">在使用指定的索引鍵及值驗證元素時，執行額外的自訂處理序。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</source>
          <target state="translated">這個方法的預設實作是由以驗證指定的項目時執行某些動作的衍生類別覆寫。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph> property.</source>
          <target state="translated">只有在所傳回的執行個體上叫用 On * 方法<ph id="ph1">&lt;xref:System.Collections.DictionaryBase.Dictionary%2A&gt;</ph>屬性，但不是能在所傳回的執行個體<ph id="ph2">&lt;xref:System.Collections.DictionaryBase.InnerHashtable%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">這個方法的預設實作是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">這個方法可讓實作器定義必須在執行基礎的標準行為時執行的處理序<ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /&gt;</ph> can be used to impose restrictions on the type of objects that are accepted into the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /&gt;</ph> 可用來強制限制會接受放入集合的物件類型。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
          <source>The default implementation prevents <ph id="ph1">&lt;see langword="null" /&gt;</ph> from being added to or removed from the underlying <ph id="ph2">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>.</source>
          <target state="translated">預設實作會避免<ph id="ph1">&lt;see langword="null" /&gt;</ph>無法加入或移除從基礎<ph id="ph2">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">取得值，指出對 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件的存取是否為同步的 (執行緒安全)。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要同步處理 (執行緒安全) 對 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件的存取，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>A <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object is not synchronized.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件未同步處理。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">在衍生的類別可以提供的同步化的版本<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別使用<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程的屬性。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated">取得可用來同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件的物件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated">可用來同步處理對 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件之存取的物件。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">在衍生的類別可以提供自己的同步處理的版本<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別使用<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object, not directly on the <ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object.</source>
          <target state="translated">同步處理的程式碼必須在上執行作業<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件，直接依據<ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">如此可確保衍生自其他物件的集合可以正常運作，</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object.</source>
          <target state="translated">具體而言，保持正常的同步處理與其他可能同時修改的執行緒<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程的屬性。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The key of the element to add.</source>
          <target state="translated">要加入的項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The value of the element to add.</source>
          <target state="translated">要加入的項目的值。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵和數值的項目加入 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">具有其狀態和其雜湊碼值之間沒有關聯的物件通常不應做為索引鍵。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>For example, <ph id="ph1">&lt;xref:System.String&gt;</ph> objects are better than <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> objects for use as keys.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.String&gt;</ph>物件是優於<ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>用於做為索引鍵的物件。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>加入新項目，藉由設定機碼值的屬性不存在於<ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>，設定<ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 中已存在具有相同索引鍵的元素。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> contains a specific key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 是否包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有指定索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`key`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`key`</ph>來判斷是否<ph id="ph4">`item`</ph>存在。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`key`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`key`</ph>參數集合中的物件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件是否具有固定的大小。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件有固定大小，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object is read-only.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件是否為唯讀。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件是唯讀，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>The key whose value to get or set.</source>
          <target state="translated">索引鍵，要讀取或設定其值。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">取得或設定與指定之索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>The value associated with the specified key.</source>
          <target state="translated">與指定之索引鍵關聯的值。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>If the specified key is not found, attempting to get it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>, and attempting to set it creates a new element using the specified key.</source>
          <target state="translated">如果找不到指定的索引鍵，嘗試取得將傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，並且嘗試設定會使用指定的索引鍵建立新的元素。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性可以使用下列語法提供存取集合中特定元素的能力：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>加入新項目，藉由設定機碼值的屬性不存在於<ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>，設定<ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是 o （1） 運算。設定屬性，也是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> is read-only.</source>
          <target state="translated">屬性已設定，而且 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">屬性已設定，<ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不存在於集合中，而且 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 具有固定大小。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件中的索引鍵。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件中的索引鍵。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">中的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>物件並未指定，而是中關聯值的順序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>所傳回物件<ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>中原始的索引鍵是指回<ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> continue to be reflected in the returned <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>繼續才會反映在傳回<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> property of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>5 個字元或更少的屬性。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 移除。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph> remains unchanged.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>不包含具有指定之索引鍵項目<ph id="ph2">&lt;xref:System.Collections.DictionaryBase&gt;</ph>維持不變。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">不會有例外狀況擲回。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>或較少的 5 個字元。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中含有 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件中的值。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中含有 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph> 物件中的值。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">中的值順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>物件並未指定，而是在關聯的索引鍵的順序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>所傳回物件<ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph> object.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>中原始的值是指回<ph id="ph3">&lt;xref:System.Collections.DictionaryBase&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> continue to be reflected in the returned <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>繼續才會反映在傳回<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph> class and uses that implementation to create a dictionary of <ph id="ph2">&lt;xref:System.String&gt;</ph> keys and values that have a <ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph> property of 5 characters or less.</source>
          <target state="translated">下列程式碼範例會實作<ph id="ph1">&lt;xref:System.Collections.DictionaryBase&gt;</ph>類別，並會使用該實作來建立的字典<ph id="ph2">&lt;xref:System.String&gt;</ph>索引鍵和值具有<ph id="ph3">&lt;xref:System.String.Length%2A&gt;</ph>5 個字元或更少的屬性。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated">傳回透過 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 重複的 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">在這個位置上，呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，則呼叫<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>傳回項目所設定，即使列舉值已經無效。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>