<Type Name="DictionaryBase" FullName="System.Collections.DictionaryBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65985fb884fc3e9f8ea0e99a2fb18bb6607c9a63" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DictionaryBase : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit DictionaryBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.DictionaryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DictionaryBase&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictionaryBase abstract : System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="52fa8-101">為索引鍵/值組的強類型集合提供 <see langword="abstract" /> 基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-101">Provides the <see langword="abstract" /> base class for a strongly typed collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-102">Foreach 陳述式的 C# 語言 （適用於每一個 Visual Basic 中） 會傳回集合中的項目類型的物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-102">The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="52fa8-103">因為每個項目<xref:System.Collections.DictionaryBase>是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</span><span class="sxs-lookup"><span data-stu-id="52fa8-103">Since each element of the <xref:System.Collections.DictionaryBase> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="52fa8-104">相反地，項目型別是<xref:System.Collections.DictionaryEntry>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-104">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span>  
  
 <span data-ttu-id="52fa8-105">`foreach`陳述式是包裝函式，只允許讀取，不寫入至集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="52fa8-105">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52fa8-106">因為索引鍵可以被繼承，變更其行為，其絕對唯一性無法保證使用比較<xref:System.Type.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="52fa8-106">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-107">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-107">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="52fa8-108">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="52fa8-109">不保證任何執行個體成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-109">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="52fa8-110">此實作中不提供的同步處理 （安全執行緒） 包裝函式<see cref="T:System.Collections.DictionaryBase" />，但在衍生的類別可以建立自己的同步的版本<see cref="T:System.Collections.DictionaryBase" />使用<see cref="P:System.Collections.ICollection.SyncRoot" />屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-110">This implementation does not provide a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.DictionaryBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.DictionaryBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="52fa8-111">透過集合進行列舉在本質上並非安全執行緒程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-111">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="52fa8-112">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="52fa8-113">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="52fa8-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="52fa8-114">這個基底類別可讓實作器建立自訂的強類型的集合更容易。</span>
        <span class="sxs-lookup">
          <span data-stu-id="52fa8-114">This base class is provided to make it easier for implementers to create a strongly typed custom collection.</span>
        </span>
        <span data-ttu-id="52fa8-115">實作者都來擴充這個而不是建立自己的基底類別。</span>
        <span class="sxs-lookup">
          <span data-stu-id="52fa8-115">Implementers are encouraged to extend this base class instead of creating their own.</span>
        </span>
        <span data-ttu-id="52fa8-116">這個基底類別的成員會受到保護，適用於透過衍生類別。</span>
        <span class="sxs-lookup">
          <span data-stu-id="52fa8-116">Members of this base class are protected and are intended to be used through a derived class only.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DictionaryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DictionaryBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-117">初始化 <see cref="T:System.Collections.DictionaryBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-117">Initializes a new instance of the <see cref="T:System.Collections.DictionaryBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-118">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-118">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-119">清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-119">Clears the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-120"><xref:System.Collections.DictionaryBase.Count%2A> 已設為零，並從項目集合的其他物件的參考也會釋放。</span><span class="sxs-lookup"><span data-stu-id="52fa8-120"><xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="52fa8-121">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.DictionaryBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-121">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="52fa8-122">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.DictionaryEntry" /> 執行個體複製過來的 <see cref="T:System.Collections.DictionaryBase" /> 物件之目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-122">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
          <span data-ttu-id="52fa8-123">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-123">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="52fa8-124">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-124">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-125">將 <see cref="T:System.Collections.DictionaryBase" /> 元素複製到指定索引的一維 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-125">Copies the <see cref="T:System.Collections.DictionaryBase" /> elements to a one-dimensional <see cref="T:System.Array" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-126">將元素複製到<xref:System.Array>以相同的順序，以列舉值逐一<xref:System.Collections.DictionaryBase>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-126">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.</span></span>  
  
 <span data-ttu-id="52fa8-127">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.DictionaryBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-127">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52fa8-128">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-128">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="52fa8-129">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-129">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52fa8-130">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-130">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="52fa8-131">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-131">-or-</span>
          </span>
          <span data-ttu-id="52fa8-132">來源 <see cref="T:System.Collections.DictionaryBase" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-132">The number of elements in the source <see cref="T:System.Collections.DictionaryBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="52fa8-133">來源 <see cref="T:System.Collections.DictionaryBase" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-133">The type of the source <see cref="T:System.Collections.DictionaryBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.DictionaryBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-134">取得包含在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-134">Gets the number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-135">包含在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-135">The number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-136">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-136">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Dictionary { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-137">取得包含於 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的元素清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-137">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-138">
            <see cref="T:System.Collections.IDictionary" /> 表示 <see cref="T:System.Collections.DictionaryBase" /> 執行個體本身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-138">An <see cref="T:System.Collections.IDictionary" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-139">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-139">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-140">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-140">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-141">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-141">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-142">傳回能夠逐一查看 <see cref="T:System.Collections.IDictionaryEnumerator" /> 執行個體的 <see cref="T:System.Collections.DictionaryBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-142">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52fa8-143">
            <see cref="T:System.Collections.DictionaryBase" /> 執行個體的 <see cref="T:System.Collections.IDictionaryEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-143">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-144">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="52fa8-144">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="52fa8-145">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="52fa8-145">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="52fa8-146">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="52fa8-146">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="52fa8-147">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="52fa8-147">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="52fa8-148"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="52fa8-148"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="52fa8-149">在這個位置上，<xref:System.Collections.IEnumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="52fa8-149">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="52fa8-150">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-150">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="52fa8-151"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-151"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="52fa8-152"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-152"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="52fa8-153">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-153">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="52fa8-154">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-154">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="52fa8-155">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="52fa8-155">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="52fa8-156">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-156">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="52fa8-157">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="52fa8-157">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="52fa8-158">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="52fa8-158">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="52fa8-159">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="52fa8-159">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="52fa8-160">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="52fa8-160">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="52fa8-161">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="52fa8-161">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="52fa8-162">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-162">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-163">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-163">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerHashtable">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable InnerHashtable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable InnerHashtable" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.InnerHashtable" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerHashtable As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ InnerHashtable { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-164">取得包含於 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中的元素清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-164">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-165">表示 <see cref="T:System.Collections.Hashtable" /> 執行個體本身的 <see cref="T:System.Collections.DictionaryBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-165">A <see cref="T:System.Collections.Hashtable" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-166">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-166">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-167">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-167">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-168">在清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容前，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-168">Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-169">這個方法的預設實作是由衍生類別先執行某些動作，才能清除集合覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-169">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="52fa8-170">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-170">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-171">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-171">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-172">這個方法可讓實作器定義必須刪除所有項目從基礎之前執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-172">This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-173">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-173">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-174">
              <see cref="M:System.Collections.DictionaryBase.OnClear" /> 為之前叫用標準的清除行為，而<see cref="M:System.Collections.DictionaryBase.OnClearComplete" />清除的標準行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-174">
                <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
            <span data-ttu-id="52fa8-175">比方說，實作者可以排除特定項目從全域清除被刪除。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-175">For example, implementers can exempt certain elements from deletion by a global Clear.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-176">在清除 <see cref="T:System.Collections.DictionaryBase" /> 執行個體的內容後，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-176">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-177">這個方法的預設實作是由之後清除集合執行某些動作的衍生類別覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-177">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="52fa8-178">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-178">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-179">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-179">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-180">這個方法可讓實作器定義必須刪除所有項目從基礎之後執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-180">This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-181">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-181">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-182">
              <see cref="M:System.Collections.DictionaryBase.OnClear" /> 為之前叫用標準的清除行為，而<see cref="M:System.Collections.DictionaryBase.OnClearComplete" />清除的標準行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-182">
                <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnGet">
      <MemberSignature Language="C#" Value="protected virtual object OnGet (object key, object currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnGet(object key, object currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGet (key As Object, currentValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnGet(System::Object ^ key, System::Object ^ currentValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="currentValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-183">要取得的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-183">The key of the element to get.</span>
          </span>
        </param>
        <param name="currentValue">
          <span data-ttu-id="52fa8-184">與 <c>key</c> 建立關聯之項目的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-184">The current value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-185">取得 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中具有指定索引鍵和值的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-185">Gets the element with the specified key and value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52fa8-186">
            <see cref="T:System.Object" /> 包含的元素具有指定的索引鍵和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-186">An <see cref="T:System.Object" /> containing the element with the specified key and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-187">這個方法的預設實作會傳回`currentValue`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-187">The default implementation of this method returns `currentValue`.</span></span> <span data-ttu-id="52fa8-188">它會覆寫由衍生類別中，擷取指定的項目時執行其他動作。</span><span class="sxs-lookup"><span data-stu-id="52fa8-188">It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</span></span>  
  
 <span data-ttu-id="52fa8-189">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-189">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-190">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-190">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-191">這個方法可讓實作器定義必須在執行基礎的標準 Get 行為時執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-191">This method allows implementers to define processes that must be performed when executing the standard Get behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-192">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-192">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-193">
              <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> 可以用來指定傳回值從基礎擷取之前執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-193">
                <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> can be used to specify processes to perform before returning the value retrieved from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-194">例如，實作者可以將值轉換為另一個類型再加以傳回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-194">For example, implementers can cast the value into another type before returning it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-195">要插入的元素索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-195">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-196">要插入的元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-196">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-197">在將新的元素插入至 <see cref="T:System.Collections.DictionaryBase" /> 執行個體前，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-197">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-198">這個方法的預設實作是由以插入指定的項目之前，執行某些動作的衍生類別覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-198">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="52fa8-199">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-199">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-200">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-200">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-201">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-201">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-202">這個方法可讓實作者定義的基礎時，插入項目之前必須先執行處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-202">This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-203">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-203">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-204">
              <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> 為之前叫用標準的插入行為，而<see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />標準插入行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-204">
                <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
            <span data-ttu-id="52fa8-205">比方說，實作者可以限制哪些類型的物件可以插入到<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-205">For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-206">要插入的元素索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-206">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-207">要插入的元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-207">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-208">在將新的元素插入至 <see cref="T:System.Collections.DictionaryBase" /> 執行個體後，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-208">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-209">這個方法的預設實作是由指定的項目插入後執行某些動作的衍生類別覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-209">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="52fa8-210">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-210">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-211">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-211">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-212">這個方法可讓實作者定義的基本項目插入後必須執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-212">This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-213">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-213">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-214">
              <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> 為之前叫用標準的插入行為，而<see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />標準插入行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-214">
                <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-215">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-215">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-216">要移除的元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-216">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-217">在從 <see cref="T:System.Collections.DictionaryBase" /> 執行個體移除元素前，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-217">Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-218">這個方法的預設實作是由衍生類別以執行某些動作，然後才移除指定的項目覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-218">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="52fa8-219">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-219">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-220">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-220">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-221">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-221">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-222">這個方法可讓實作者定義的基礎移除項目之前必須先執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-222">This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-223">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-223">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-224">
              <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> 為之前叫用標準的移除行為，而<see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />標準移除行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-224">
                <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
            <span data-ttu-id="52fa8-225">例如，實作者可以避免移除項目中，一律擲回例外狀況<see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-225">For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-226">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-226">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-227">要移除的元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-227">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-228">在從 <see cref="T:System.Collections.DictionaryBase" /> 執行個體移除元素後，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-228">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-229">這個方法的預設實作是由衍生類別中移除指定的項目後執行某些動作覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-229">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="52fa8-230">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-230">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-231">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-231">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-232">這個方法可讓實作者定義的基礎移除項目後必須執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-232">This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-233">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-233">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-234">
              <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> 為之前叫用標準的移除行為，而<see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />標準移除行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-234">
                <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-235">要尋找的元素索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-235">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="52fa8-236">與 <c>key</c> 建立關聯之項目的舊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-236">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="52fa8-237">與 <c>key</c> 建立關聯之項目的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-237">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-238">在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中設定數值前，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-238">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-239">這個方法的預設實作是由衍生類別以執行某些動作，就會設定指定的項目覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-239">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="52fa8-240">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-240">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-241">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-241">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-242">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-242">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-243">這個方法可讓實作器定義必須在基礎設定指定的項目之前執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-243">This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-244">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-244">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-245">
              <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> 會叫用之前設定的標準行為，而<see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />設定的標準行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-245">
                <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
            <span data-ttu-id="52fa8-246">比方說，實作者可以限制哪些值會覆寫執行內檢查<see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-246">For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-247">要尋找的元素索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-247">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="52fa8-248">與 <c>key</c> 建立關聯之項目的舊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-248">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="52fa8-249">與 <c>key</c> 建立關聯之項目的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-249">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-250">在 <see cref="T:System.Collections.DictionaryBase" /> 執行個體中設定數值後，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-250">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-251">這個方法的預設實作是由以指定的項目設定後執行某些動作的衍生類別覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-251">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="52fa8-252">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-252">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-253">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-253">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-254">這個方法可讓實作器定義必須在基礎設定指定的項目之後執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-254">This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-255">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-255">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-256">
              <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> 會叫用之前設定的標準行為，而<see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />設定的標準行為之後叫用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-256">
                <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-257">要驗證的元素索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-257">The key of the element to validate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-258">要驗證的元素值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-258">The value of the element to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-259">在使用指定的索引鍵及值驗證元素時，執行額外的自訂處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-259">Performs additional custom processes when validating the element with the specified key and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-260">這個方法的預設實作是由以驗證指定的項目時執行某些動作的衍生類別覆寫。</span><span class="sxs-lookup"><span data-stu-id="52fa8-260">The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="52fa8-261">只有在所傳回的執行個體上叫用 On \* 方法<xref:System.Collections.DictionaryBase.Dictionary%2A>屬性，但不是能在所傳回的執行個體<xref:System.Collections.DictionaryBase.InnerHashtable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-261">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-262">這個方法的預設實作是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-262">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-263">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-263">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="52fa8-264">這個方法可讓實作器定義必須在執行基礎的標準行為時執行的處理序<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-264">This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="52fa8-265">藉由定義這個方法，實作者可以將功能加入繼承的方法而不需要覆寫所有其他方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-265">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="52fa8-266">
              <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> 可用來強制限制會接受放入集合的物件類型。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-266">
                <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection.</span>
            </span>
            <span data-ttu-id="52fa8-267">預設實作會避免<see langword="null" />無法加入或移除從基礎<see cref="T:System.Collections.Hashtable" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="52fa8-267">The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-268">取得值，指出對 <see cref="T:System.Collections.DictionaryBase" /> 物件的存取是否為同步的 (執行緒安全)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-268">Gets a value indicating whether access to a <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-269">如果要同步處理 (執行緒安全) 對 <see cref="T:System.Collections.DictionaryBase" /> 物件的存取，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-269">
              <see langword="true" /> if access to the <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="52fa8-270">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-270">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-271">A<xref:System.Collections.DictionaryBase>物件未同步處理。</span><span class="sxs-lookup"><span data-stu-id="52fa8-271">A <xref:System.Collections.DictionaryBase> object is not synchronized.</span></span> <span data-ttu-id="52fa8-272">在衍生的類別可以提供的同步化的版本<xref:System.Collections.DictionaryBase>類別使用<xref:System.Collections.ICollection.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-272">Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-273">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="52fa8-273">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="52fa8-274">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-274">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="52fa8-275">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-275">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-276">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程的屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-276">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="52fa8-277">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-277">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-278">取得可用來同步存取 <see cref="T:System.Collections.DictionaryBase" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-278">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-279">可用來同步處理對 <see cref="T:System.Collections.DictionaryBase" /> 物件之存取的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-279">An object that can be used to synchronize access to the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-280">在衍生的類別可以提供自己的同步處理的版本<xref:System.Collections.DictionaryBase>類別使用<xref:System.Collections.ICollection.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-280">Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="52fa8-281">同步處理的程式碼必須在上執行作業<xref:System.Collections.ICollection.SyncRoot%2A>屬性<xref:System.Collections.DictionaryBase>物件，直接依據<xref:System.Collections.DictionaryBase>物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-281">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="52fa8-282">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="52fa8-282">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="52fa8-283">具體而言，保持正常的同步處理與其他可能同時修改的執行緒<xref:System.Collections.DictionaryBase>物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-283">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.</span></span>  
  
 <span data-ttu-id="52fa8-284">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="52fa8-284">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="52fa8-285">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-285">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="52fa8-286">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-286">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-287">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程的屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-287">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="52fa8-288">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-288">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-289">要加入的項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-289">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="52fa8-290">要加入的項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-290">The value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-291">將有指定索引鍵和數值的項目加入 <see cref="T:System.Collections.DictionaryBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-291">Adds an element with the specified key and value into the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-292">具有其狀態和其雜湊碼值之間沒有關聯的物件通常不應做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="52fa8-292">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="52fa8-293">例如，<xref:System.String>物件是優於<xref:System.Text.StringBuilder>用於做為索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-293">For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.</span></span>  
  
 <span data-ttu-id="52fa8-294">您也可以使用<xref:System.Collections.IDictionary.Item%2A>加入新項目，藉由設定機碼值的屬性不存在於<xref:System.Collections.DictionaryBase>; 例如， `myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-294">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="52fa8-295">不過，如果指定的索引鍵已存在於<xref:System.Collections.DictionaryBase>，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="52fa8-295">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="52fa8-296">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-296">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="52fa8-297">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-297">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-298">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-298">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52fa8-299">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-299">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="52fa8-300">
            <see cref="T:System.Collections.DictionaryBase" /> 中已存在具有相同索引鍵的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-300">An element with the same key already exists in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52fa8-301">
            <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-301">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="52fa8-302">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-302">-or-</span>
          </span>
          <span data-ttu-id="52fa8-303">
            <see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-303">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-304">要在 <see cref="T:System.Collections.DictionaryBase" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-304">The key to locate in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-305">判斷 <see cref="T:System.Collections.DictionaryBase" /> 是否包含特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-305">Determines whether the <see cref="T:System.Collections.DictionaryBase" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52fa8-306">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.DictionaryBase" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-306">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-307">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-307">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="52fa8-308">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`key`來判斷是否`item`存在。</span><span class="sxs-lookup"><span data-stu-id="52fa8-308">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="52fa8-309">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`key`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-309">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-310">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-310">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52fa8-311">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-311">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-312">取得值，指出 <see cref="T:System.Collections.DictionaryBase" /> 物件是否具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-312">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-313">如果 <see cref="T:System.Collections.DictionaryBase" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-313">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="52fa8-314">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-314">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-315">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-315">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="52fa8-316">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="52fa8-316">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="52fa8-317">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-317">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-318">取得值，指出 <see cref="T:System.Collections.DictionaryBase" /> 物件是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-318">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-319">如果 <see cref="T:System.Collections.DictionaryBase" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-319">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="52fa8-320">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-320">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-321">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-321">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="52fa8-322">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="52fa8-322">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="52fa8-323">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-323">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-324">索引鍵，要讀取或設定其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-324">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-325">取得或設定與指定之索引鍵相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-325">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-326">與指定之索引鍵關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-326">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="52fa8-327">如果找不到指定的索引鍵，嘗試取得將傳回 <see langword="null" />，並且嘗試設定會使用指定的索引鍵建立新的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-327">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-328">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="52fa8-329">您也可以使用<xref:System.Collections.IDictionary.Item%2A>加入新項目，藉由設定機碼值的屬性不存在於<xref:System.Collections.DictionaryBase>; 例如， `myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-329">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="52fa8-330">不過，如果指定的索引鍵已存在於<xref:System.Collections.DictionaryBase>，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="52fa8-330">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="52fa8-331">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-331">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="52fa8-332">擷取這個屬性的值是 o （1） 運算。設定屬性，也是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-332">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-333">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-333">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52fa8-334">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-334">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52fa8-335">屬性已設定，而且 <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-335">The property is set and the <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="52fa8-336">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-336">-or-</span>
          </span>
          <span data-ttu-id="52fa8-337">屬性已設定，<paramref name="key" /> 不存在於集合中，而且 <see cref="T:System.Collections.DictionaryBase" /> 具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-337">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-338">取得 <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.DictionaryBase" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-338">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-339">
            <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.DictionaryBase" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-339">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-340">中的索引鍵的順序<xref:System.Collections.ICollection>物件並未指定，而是中關聯值的順序相同<xref:System.Collections.ICollection>所傳回物件<xref:System.Collections.IDictionary.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-340">The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-341">傳回<xref:System.Collections.ICollection>不是靜態的複本; 相反地，<xref:System.Collections.ICollection>中原始的索引鍵是指回<xref:System.Collections.DictionaryBase>物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-341">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="52fa8-342">因此，變更為<xref:System.Collections.DictionaryBase>繼續才會反映在傳回<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-342">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="52fa8-343">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-343">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-344">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>5 個字元或更少的屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-344">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="52fa8-345">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-345">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="52fa8-346">將有指定索引鍵的項目從 <see cref="T:System.Collections.DictionaryBase" /> 移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-346">Removes the element with the specified key from the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-347">如果<xref:System.Collections.DictionaryBase>不包含具有指定之索引鍵項目<xref:System.Collections.DictionaryBase>維持不變。</span><span class="sxs-lookup"><span data-stu-id="52fa8-347">If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged.</span></span> <span data-ttu-id="52fa8-348">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="52fa8-348">No exception is thrown.</span></span>  
  
 <span data-ttu-id="52fa8-349">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-349">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-350">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>或較少的 5 個字元。</span><span class="sxs-lookup"><span data-stu-id="52fa8-350">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="52fa8-351">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-351">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="52fa8-352">
            <see cref="T:System.Collections.DictionaryBase" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-352">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="52fa8-353">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-353">-or-</span>
          </span>
          <span data-ttu-id="52fa8-354">
            <see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-354">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-355">取得 <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.DictionaryBase" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-355">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="52fa8-356">
            <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.DictionaryBase" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-356">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-357">中的值順序<xref:System.Collections.ICollection>物件並未指定，而是在關聯的索引鍵的順序相同<xref:System.Collections.ICollection>所傳回物件<xref:System.Collections.IDictionary.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-357">The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="52fa8-358">傳回<xref:System.Collections.ICollection>不是靜態的複本; 相反地，<xref:System.Collections.ICollection>中原始的值是指回<xref:System.Collections.DictionaryBase>物件。</span><span class="sxs-lookup"><span data-stu-id="52fa8-358">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="52fa8-359">因此，變更為<xref:System.Collections.DictionaryBase>繼續才會反映在傳回<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-359">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="52fa8-360">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-360">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fa8-361">下列程式碼範例會實作<xref:System.Collections.DictionaryBase>類別，並會使用該實作來建立的字典<xref:System.String>索引鍵和值具有<xref:System.String.Length%2A>5 個字元或更少的屬性。</span><span class="sxs-lookup"><span data-stu-id="52fa8-361">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Keys" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="52fa8-362">傳回透過 <see cref="T:System.Collections.IEnumerator" /> 重複的 <see cref="T:System.Collections.DictionaryBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-362">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="52fa8-363">
            <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.DictionaryBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="52fa8-363">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fa8-364">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="52fa8-364">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="52fa8-365">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="52fa8-365">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="52fa8-366">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="52fa8-366">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="52fa8-367">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="52fa8-367">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="52fa8-368"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="52fa8-368"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="52fa8-369">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-369">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="52fa8-370">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-370">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="52fa8-371"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-371"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="52fa8-372"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="52fa8-372"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="52fa8-373">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-373">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="52fa8-374">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="52fa8-374">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="52fa8-375">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-375">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="52fa8-376">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-376">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="52fa8-377">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="52fa8-377">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="52fa8-378">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="52fa8-378">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="52fa8-379">如果之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="52fa8-379">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="52fa8-380">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="52fa8-380">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="52fa8-381">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-381">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="52fa8-382">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="52fa8-382">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="52fa8-383">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="52fa8-383">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>