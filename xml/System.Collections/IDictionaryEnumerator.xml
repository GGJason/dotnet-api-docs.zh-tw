<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionaryEnumerator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b2d0fecde47c341daee391322afe4409d14433c5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2d0fecde47c341daee391322afe4409d14433c5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Enumerates the elements of a nongeneric dictionary.</source>
          <target state="translated">列舉非泛型字典的項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>方法也會列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">在這個位置上，呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，則呼叫<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>傳回項目所設定，即使列舉值已經無效。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>This code example shows how to define a dictionary enumerator that implements the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> interface.</source>
          <target state="translated">這個程式碼範例示範如何定義字典列舉值，可實作<ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionaryEnumerator">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph> property that is inherited from <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> returns an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> that is a boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>, similar to the return value of the <ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>屬性，都繼承自<ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>傳回<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>也就是 boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>，類似於的傳回值<ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>Gets both the key and the value of the current dictionary entry.</source>
          <target state="translated">取得目前字典項目的索引鍵和值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> containing both the key and the value of the current dictionary entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>，含有目前字典元素的索引鍵和值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">建立列舉值之後或在之後<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫方法時，<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>屬性，否則<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 也會發生例外狀況，如果最後一個呼叫<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>，表示集合的結尾。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 不會移動的列舉程式及連續呼叫位置<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>傳回相同的物件直到<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 位於字典的第一個元素之前，或最後一個元素之後。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Entry">
          <source>The <ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph> property that is inherited from <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> returns an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> that is a boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>, similar to the return value of the <ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.IEnumerator.Current" /&gt;</ph>屬性，都繼承自<ph id="ph2">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>傳回<ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>也就是 boxed <ph id="ph4">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph>，類似於的傳回值<ph id="ph5">&lt;see cref="P:System.Collections.IDictionaryEnumerator.Entry" /&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>Gets the key of the current dictionary entry.</source>
          <target state="translated">取得目前字典項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>The key of the current element of the enumeration.</source>
          <target state="translated">列舉型別目前元素的索引鍵。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> is undefined.</source>
          <target state="translated">建立列舉值之後或在之後<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫方法時，<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>屬性，否則<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> 也會發生例外狀況，如果最後一個呼叫<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>，表示集合的結尾。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> 不會移動的列舉程式及連續呼叫位置<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>傳回相同的物件直到<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Key">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 位於字典的第一個元素之前，或最後一個元素之後。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>Gets the value of the current dictionary entry.</source>
          <target state="translated">取得目前字典項目的值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>The value of the current element of the enumeration.</source>
          <target state="translated">列舉型別目前元素的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> property; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> is undefined.</source>
          <target state="translated">建立列舉值之後或在之後<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫方法時，<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>屬性，否則<ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> 也會發生例外狀況，如果最後一個呼叫<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>，表示集合的結尾。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> 不會移動的列舉程式及連續呼叫位置<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>傳回相同的物件直到<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionaryEnumerator.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> is positioned before the first entry of the dictionary or after the last entry.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 位於字典的第一個元素之前，或最後一個元素之後。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>