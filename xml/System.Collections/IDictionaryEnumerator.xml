<Type Name="IDictionaryEnumerator" FullName="System.Collections.IDictionaryEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2d0fecde47c341daee391322afe4409d14433c5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDictionaryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionaryEnumerator implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionaryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionaryEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ba12e-101">列舉非泛型字典的項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba12e-101">Enumerates the elements of a nongeneric dictionary.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba12e-102">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="ba12e-102">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ba12e-103">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="ba12e-103">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ba12e-104">因此，使用`foreach`建議而不是直接管理 列舉值。</span><span class="sxs-lookup"><span data-stu-id="ba12e-104">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ba12e-105">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="ba12e-105">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ba12e-106">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ba12e-106">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ba12e-107"><xref:System.Collections.IEnumerator.Reset%2A>方法也會列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="ba12e-107">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="ba12e-108">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>屬性會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ba12e-108">At this position, calling the <xref:System.Collections.IEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="ba12e-109">因此，您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="ba12e-109">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ba12e-110"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="ba12e-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ba12e-111"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="ba12e-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ba12e-112">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ba12e-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ba12e-113">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ba12e-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ba12e-114">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ba12e-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="ba12e-115">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="ba12e-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ba12e-116">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="ba12e-116">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ba12e-117">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ba12e-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ba12e-118">如果之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="ba12e-118">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="ba12e-119">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="ba12e-119">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ba12e-120">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ba12e-120">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ba12e-121">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ba12e-121">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba12e-122">這個程式碼範例示範如何定義字典列舉值，可實作<xref:System.Collections.IDictionaryEnumerator>介面。</span><span class="sxs-lookup"><span data-stu-id="ba12e-122">This code example shows how to define a dictionary enumerator that implements the <xref:System.Collections.IDictionaryEnumerator> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ba12e-123">
          <see cref="P:System.Collections.IEnumerator.Current" />屬性，都繼承自<see cref="T:System.Collections.IEnumerator" />傳回<see cref="T:System.Object" />也就是 boxed <see cref="T:System.Collections.DictionaryEntry" />，類似於的傳回值<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />屬性。</span>
        <span class="sxs-lookup">
          <span data-stu-id="ba12e-123">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DictionaryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::DictionaryEntry Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba12e-124">取得目前字典項目的索引鍵和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-124">Gets both the key and the value of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba12e-125">
            <see cref="T:System.Collections.DictionaryEntry" />，含有目前字典元素的索引鍵和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-125">A <see cref="T:System.Collections.DictionaryEntry" /> containing both the key and the value of the current dictionary entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba12e-126">建立列舉值之後或在之後<xref:System.Collections.IEnumerator.Reset%2A>呼叫方法時，<xref:System.Collections.IEnumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IDictionaryEnumerator.Entry%2A>屬性，否則<xref:System.Collections.IDictionaryEnumerator.Entry%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="ba12e-126">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span>  
  
 <span data-ttu-id="ba12e-127"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> 也會發生例外狀況，如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="ba12e-127"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="ba12e-128"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.IDictionaryEnumerator.Entry%2A>傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ba12e-128"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Entry%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba12e-129">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 位於字典的第一個元素之前，或最後一個元素之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-129">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ba12e-130">
              <see cref="P:System.Collections.IEnumerator.Current" />屬性，都繼承自<see cref="T:System.Collections.IEnumerator" />傳回<see cref="T:System.Object" />也就是 boxed <see cref="T:System.Collections.DictionaryEntry" />，類似於的傳回值<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />屬性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ba12e-130">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba12e-131">取得目前字典項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-131">Gets the key of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba12e-132">列舉型別目前元素的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-132">The key of the current element of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba12e-133">建立列舉值之後或在之後<xref:System.Collections.IEnumerator.Reset%2A>呼叫方法時，<xref:System.Collections.IEnumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IDictionaryEnumerator.Key%2A>屬性，否則<xref:System.Collections.IDictionaryEnumerator.Key%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="ba12e-133">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Key%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Key%2A> is undefined.</span></span>  
  
 <span data-ttu-id="ba12e-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> 也會發生例外狀況，如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="ba12e-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="ba12e-135"><xref:System.Collections.IDictionaryEnumerator.Key%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.IDictionaryEnumerator.Key%2A>傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ba12e-135"><xref:System.Collections.IDictionaryEnumerator.Key%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Key%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba12e-136">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 位於字典的第一個元素之前，或最後一個元素之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-136">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba12e-137">取得目前字典項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-137">Gets the value of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba12e-138">列舉型別目前元素的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-138">The value of the current element of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba12e-139">建立列舉值之後或在之後<xref:System.Collections.IEnumerator.Reset%2A>呼叫方法時，<xref:System.Collections.IEnumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IDictionaryEnumerator.Value%2A>屬性，否則<xref:System.Collections.IDictionaryEnumerator.Value%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="ba12e-139">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Value%2A> is undefined.</span></span>  
  
 <span data-ttu-id="ba12e-140"><xref:System.Collections.IDictionaryEnumerator.Value%2A> 也會發生例外狀況，如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="ba12e-140"><xref:System.Collections.IDictionaryEnumerator.Value%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="ba12e-141"><xref:System.Collections.IDictionaryEnumerator.Value%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.IDictionaryEnumerator.Value%2A>傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ba12e-141"><xref:System.Collections.IDictionaryEnumerator.Value%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Value%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba12e-142">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 位於字典的第一個元素之前，或最後一個元素之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba12e-142">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
  </Members>
</Type>