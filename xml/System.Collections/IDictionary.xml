<Type Name="IDictionary" FullName="System.Collections.IDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02a6ca46bce48fbdc7b1800f28efc534929e28df" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52600783" /></Metadata><TypeSignature Language="C#" Value="public interface IDictionary : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionary implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionary&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionary : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IDictionary = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="35e2f-101">表示索引鍵/值組的非泛型集合。</span><span class="sxs-lookup"><span data-stu-id="35e2f-101">Represents a nongeneric collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-102"><xref:System.Collections.IDictionary>介面是基底的索引鍵/值組的非泛型集合介面。</span><span class="sxs-lookup"><span data-stu-id="35e2f-102">The <xref:System.Collections.IDictionary> interface is the base interface for nongeneric collections of key/value pairs.</span></span> <span data-ttu-id="35e2f-103">這個介面的泛型版本，請參閱<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35e2f-103">For the generic version of this interface, see <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35e2f-104">每個項目是儲存在索引鍵/值組<xref:System.Collections.DictionaryEntry>物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-104">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="35e2f-105">每一組必須有唯一的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-105">Each pair must have a unique key.</span></span> <span data-ttu-id="35e2f-106">實作是否允許為 null 的索引鍵而有所不同。</span><span class="sxs-lookup"><span data-stu-id="35e2f-106">Implementations can vary in whether they allow the key to be null.</span></span>  <span data-ttu-id="35e2f-107">值可以是 null，而且不需要是唯一的。</span><span class="sxs-lookup"><span data-stu-id="35e2f-107">The value can be null and does not have to be unique.</span></span> <span data-ttu-id="35e2f-108"><xref:System.Collections.IDictionary>介面可讓所包含的金鑰和要列舉的值，但它並不代表任何特定的排序次序。</span><span class="sxs-lookup"><span data-stu-id="35e2f-108">The <xref:System.Collections.IDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="35e2f-109"><xref:System.Collections.IDictionary> 實作可分成三個類別： 唯讀、 固定大小的可變大小。</span><span class="sxs-lookup"><span data-stu-id="35e2f-109"><xref:System.Collections.IDictionary> implementations fall into three categories: read-only, fixed-size, variable-size.</span></span> <span data-ttu-id="35e2f-110">唯讀<xref:System.Collections.IDictionary>無法修改物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-110">A read-only <xref:System.Collections.IDictionary> object cannot be modified.</span></span> <span data-ttu-id="35e2f-111">固定大小<xref:System.Collections.IDictionary>物件不允許新增或移除的項目，但不允許修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-111">A fixed-size <xref:System.Collections.IDictionary> object does not allow the addition or removal of elements, but does allow the modification of existing elements.</span></span> <span data-ttu-id="35e2f-112">可變大小<xref:System.Collections.IDictionary>物件可用來新增、 移除及修改項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-112">A variable-size <xref:System.Collections.IDictionary> object allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="35e2f-113">`foreach` C# 語言的陳述式 (`For Each` Visual Basic 中) 傳回集合中的項目類型的物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-113">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="35e2f-114">因為每個項目的<xref:System.Collections.IDictionary>物件是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</span><span class="sxs-lookup"><span data-stu-id="35e2f-114">Since each element of the <xref:System.Collections.IDictionary> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="35e2f-115">相反地，項目型別是<xref:System.Collections.DictionaryEntry>。</span><span class="sxs-lookup"><span data-stu-id="35e2f-115">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="35e2f-116">例如: </span><span class="sxs-lookup"><span data-stu-id="35e2f-116">For example:</span></span>  
  
 [!code-cpp[Dictionary#14](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/remarks.cpp#14)]
 [!code-csharp[Dictionary#14](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/remarks.cs#14)]
 [!code-vb[Dictionary#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/remarks.vb#14)]  
  
 <span data-ttu-id="35e2f-117">`foreach`陳述式是一個包裝函式允許僅從讀取，但不是會寫入至集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-117">The `foreach` statement is a wrapper around the enumerator, which allows only reading from but not writing to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-118">下列程式碼範例示範如何定義簡單的字典類別可實作<xref:System.Collections.IDictionary>介面。</span><span class="sxs-lookup"><span data-stu-id="35e2f-118">The following code example demonstrates how to define a simple dictionary class that implements the <xref:System.Collections.IDictionary> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="35e2f-119">實作類別必須提供方法來比較索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-119">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.ICollection" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit" Usage="iDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="35e2f-120"><see cref="T:System.Object" />，用做要加入之項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-120">The <see cref="T:System.Object" /> to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="35e2f-121"><see cref="T:System.Object" />，用做要加入之項目的值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-121">The <see cref="T:System.Object" /> to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="35e2f-122">將隨附有索引鍵和值的項目加入至 <see cref="T:System.Collections.IDictionary" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-122">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-123">您也可以使用<xref:System.Collections.IDictionary.Item%2A>屬性來設定索引鍵的值加入新項目不存在於字典 (比方說， `myCollection["myNonexistentKey"] = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="35e2f-123">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="35e2f-124">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-124">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="35e2f-125">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-125">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="35e2f-126">實作會有所不同是否允許索引鍵為`null`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-126">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-127">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35e2f-127">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Add%2A> method.</span></span> <span data-ttu-id="35e2f-128">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-128">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#9)]
 [!code-csharp[Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#9)]
 [!code-vb[Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35e2f-129"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-129"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35e2f-130">具有相同索引鍵的項目已經存在 <see cref="T:System.Collections.IDictionary" /> 物件中。</span><span class="sxs-lookup"><span data-stu-id="35e2f-130">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35e2f-131"><see cref="T:System.Collections.IDictionary" /> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="35e2f-131">The <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span>  
  
<span data-ttu-id="35e2f-132">-或-</span><span class="sxs-lookup"><span data-stu-id="35e2f-132">-or-</span></span> 
<span data-ttu-id="35e2f-133"><see cref="T:System.Collections.IDictionary" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="35e2f-133">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iDictionary.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35e2f-134">將所有項目從 <see cref="T:System.Collections.IDictionary" /> 物件移除。</span><span class="sxs-lookup"><span data-stu-id="35e2f-134">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="35e2f-135">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35e2f-135">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Clear%2A> method.</span></span> <span data-ttu-id="35e2f-136">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-136">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#8)]
 [!code-csharp[Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#8)]
 [!code-vb[Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35e2f-137"><see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="35e2f-137">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="35e2f-138">要在 <see cref="T:System.Collections.IDictionary" /> 物件中尋找的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-138">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></param>
        <summary><span data-ttu-id="35e2f-139">判斷 <see cref="T:System.Collections.IDictionary" /> 物件是否包含具有指定索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-139">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="35e2f-140">如果 <see langword="true" /> 包含具有該索引鍵的項目，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-140"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-141">實作會有所不同是否允許索引鍵為`null`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-141">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="35e2f-142">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>上的方法`item`來判斷是否`item`存在。</span><span class="sxs-lookup"><span data-stu-id="35e2f-142">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="35e2f-143">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-143">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-144">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Contains%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35e2f-144">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Contains%2A> method.</span></span> <span data-ttu-id="35e2f-145">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-145">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#5)]
 [!code-csharp[Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#5)]
 [!code-vb[Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35e2f-146"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-146"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35e2f-147">傳回 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-147">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <returns><span data-ttu-id="35e2f-148"><see cref="T:System.Collections.IDictionaryEnumerator" /> 物件的 <see cref="T:System.Collections.IDictionary" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="35e2f-148">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-149">[Visual Basic 中， C#]</span><span class="sxs-lookup"><span data-stu-id="35e2f-149">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="35e2f-150">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="35e2f-150">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="35e2f-151">因此，使用`foreach`建議而不要直接操作列舉值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-151">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="35e2f-152">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="35e2f-152">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="35e2f-153">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="35e2f-153">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="35e2f-154"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="35e2f-154"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="35e2f-155">在這個位置，<xref:System.Collections.IEnumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-155">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="35e2f-156">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-156">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="35e2f-157"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="35e2f-157"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="35e2f-158"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-158"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="35e2f-159">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-159">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="35e2f-160">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-160">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="35e2f-161">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="35e2f-161">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="35e2f-162">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="35e2f-162">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="35e2f-163">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="35e2f-163">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="35e2f-164">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="35e2f-164">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="35e2f-165">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="35e2f-165">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="35e2f-166">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="35e2f-166">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="35e2f-167">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="35e2f-167">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2f-168">取得值，指出 <see cref="T:System.Collections.IDictionary" /> 物件是否具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="35e2f-168">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="35e2f-169">如果 <see cref="T:System.Collections.IDictionary" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-169"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-170">具有固定大小的集合不允許新增或移除項目集合會建立，但不允許修改現有的項目之後。</span><span class="sxs-lookup"><span data-stu-id="35e2f-170">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="35e2f-171">具有固定大小集合是唯讀的集合只會防止新增和移除項目; 的包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="35e2f-171">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-172">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.IsFixedSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-172">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsFixedSize%2A> property.</span></span> <span data-ttu-id="35e2f-173">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-173">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#6)]
 [!code-csharp[Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#6)]
 [!code-vb[Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2f-174">取得值，這個值表示 <see cref="T:System.Collections.IDictionary" /> 物件是否唯讀。</span><span class="sxs-lookup"><span data-stu-id="35e2f-174">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="35e2f-175">如果 <see cref="T:System.Collections.IDictionary" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-175"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-176">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-176">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-177">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.IsReadOnly%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-177">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsReadOnly%2A> property.</span></span> <span data-ttu-id="35e2f-178">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-178">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#4)]
 [!code-csharp[Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#4)]
 [!code-vb[Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="35e2f-179">要取得或設定之項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-179">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="35e2f-180">取得或設定具有指定索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-180">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="35e2f-181">具有指定索引鍵的項目；如果索引鍵不存在，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-181">The element with the specified key, or <see langword="null" /> if the key does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-182">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-182">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="35e2f-183">您也可以使用<xref:System.Collections.IDictionary.Item%2A>屬性來設定索引鍵的值加入新項目不存在於字典 (比方說， `myCollection["myNonexistentKey"] = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="35e2f-183">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="35e2f-184">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-184">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="35e2f-185">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-185">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="35e2f-186">實作會有所不同是否允許索引鍵為`null`。</span><span class="sxs-lookup"><span data-stu-id="35e2f-186">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="35e2f-187">使用 C# 語言`this`[這](~/docs/csharp/language-reference/keywords/this.md)關鍵字來定義索引，而不必實作<xref:System.Collections.IDictionary.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-187">The C# language uses the `this`[this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="35e2f-188">Visual Basic 會將 <xref:System.Collections.IDictionary.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="35e2f-188">Visual Basic implements <xref:System.Collections.IDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-189">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-189">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="35e2f-190">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-190">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#13](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#13)]
 [!code-csharp[Dictionary#13](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#13)]
 [!code-vb[Dictionary#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35e2f-191"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-191"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35e2f-192">已設定該屬性，<see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="35e2f-192">The property is set and the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span>  
  
<span data-ttu-id="35e2f-193">-或-</span><span class="sxs-lookup"><span data-stu-id="35e2f-193">-or-</span></span> 
<span data-ttu-id="35e2f-194">屬性已設定、<paramref name="key" /> 不在於集合中，而且 <see cref="T:System.Collections.IDictionary" /> 的大小固定。</span><span class="sxs-lookup"><span data-stu-id="35e2f-194">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2f-195">取得 <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.IDictionary" /> 物件的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-195">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="35e2f-196"><see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.IDictionary" /> 物件的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-196">An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-197">在傳回的索引鍵的順序<xref:System.Collections.ICollection>物件是否未指定，但一定會依照中的對應值的相同順序<xref:System.Collections.ICollection>所傳回<xref:System.Collections.IDictionary.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-197">The order of the keys in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-198">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-198">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span> <span data-ttu-id="35e2f-199">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-199">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#10)]
 [!code-csharp[Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#10)]
 [!code-vb[Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="35e2f-200">要移除的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="35e2f-200">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="35e2f-201">從 <see cref="T:System.Collections.IDictionary" /> 物件中移除具有指定索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="35e2f-201">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-202">如果 <xref:System.Collections.IDictionary> 物件不包含具有指定索引鍵的項目，則 <xref:System.Collections.IDictionary> 會保持不變。</span><span class="sxs-lookup"><span data-stu-id="35e2f-202">If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged.</span></span> <span data-ttu-id="35e2f-203">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="35e2f-203">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-204">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35e2f-204">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Remove%2A> method.</span></span> <span data-ttu-id="35e2f-205">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-205">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#7)]
 [!code-csharp[Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#7)]
 [!code-vb[Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="35e2f-206"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="35e2f-206"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="35e2f-207"><see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="35e2f-207">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span>  
  
<span data-ttu-id="35e2f-208">-或-</span><span class="sxs-lookup"><span data-stu-id="35e2f-208">-or-</span></span> 
<span data-ttu-id="35e2f-209"><see cref="T:System.Collections.IDictionary" /> 具有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="35e2f-209">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2f-210">取得 <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.IDictionary" /> 物件中的值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-210">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="35e2f-211"><see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.IDictionary" /> 物件中的值。</span><span class="sxs-lookup"><span data-stu-id="35e2f-211">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2f-212">在傳回值的順序<xref:System.Collections.ICollection>物件是否未指定，但一定會做為對應的索引鍵中的相同順序<xref:System.Collections.ICollection>所傳回<xref:System.Collections.IDictionary.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-212">The order of the values in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e2f-213">下列程式碼範例示範如何實作<xref:System.Collections.IDictionary.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2f-213">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Values%2A> property.</span></span> <span data-ttu-id="35e2f-214">此程式碼範例是針對提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="35e2f-214">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#11)]
 [!code-csharp[Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#11)]
 [!code-vb[Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
  </Members>
</Type>