<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionary.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f8a8884f6a8528c2d85903a16fd7de0aba47df8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8a8884f6a8528c2d85903a16fd7de0aba47df8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IDictionary">
          <source>Represents a nongeneric collection of key/value pairs.</source>
          <target state="translated">表示索引鍵/值組的非泛型集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface is the base interface for nongeneric collections of key/value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>介面是基底的索引鍵/值組的非泛型集合介面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>For the generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個介面的泛型版本，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">每個項目是儲存在索引鍵/值組<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Each pair must have a unique key.</source>
          <target state="translated">每個組必須具有唯一索引鍵。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Implementations can vary in whether they allow the key to be null.</source>
          <target state="translated">實作是否允許為 null 的索引鍵會有所不同。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The value can be null and does not have to be unique.</source>
          <target state="translated">值可以是 null，而且不需要是唯一的。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>介面可讓包含的索引鍵和要列舉的值，但它並不代表任何特定排序順序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> implementations fall into three categories: read-only, fixed-size, variable-size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 實作可分成三個類別： 唯讀、 固定大小的大小。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A read-only <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object cannot be modified.</source>
          <target state="translated">唯讀<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>無法修改物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A fixed-size <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object does not allow the addition or removal of elements, but does allow the modification of existing elements.</source>
          <target state="translated">固定大小<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>物件不允許加入或移除項目，但允許修改現有的項目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>A variable-size <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object allows the addition, removal, and modification of elements.</source>
          <target state="translated">可變大小<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>物件可用來新增、 移除及修改項目。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因為每個項目<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>物件的索引鍵/值組，此項目類型不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">相反地，項目型別是<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from but not writing to the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>陳述式是可允許只讀取但無法寫入集合的列舉值的包裝函式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The following code example demonstrates how to define a simple dictionary class that implements the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何定義簡單的字典類別可實作<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">實作的類別必須要有方法來比較索引鍵。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the key of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the value of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將隨附有索引鍵和值的項目加入至 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">實作會有所不同是否允許索引鍵為<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">具有相同索引鍵的項目已經存在 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將所有項目從 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件移除。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Clear">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Clear">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object contains an element with the specified key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否包含具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有該索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">實作會有所不同是否允許索引鍵為<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>來判斷是否<ph id="ph4">`item`</ph>存在。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>參數集合中的物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否具有固定的大小。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件有固定大小，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsFixedSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">取得值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否唯讀。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The key of the element to get or set.</source>
          <target state="translated">要取得或設定之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">取得或設定具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The element with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the key does not exist.</source>
          <target state="translated">具有指定索引鍵的項目；如果索引鍵不存在，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性可以使用下列語法提供存取集合中特定元素的能力：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Implementations can vary in whether they allow the key to be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">實作會有所不同是否允許索引鍵為<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The C# language uses the <ph id="ph1">`this`</ph><bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 語言使用<ph id="ph1">`this`</ph><bpt id="p1">[</bpt>這<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept>關鍵字定義索引，而不必實作<ph id="ph2">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 會將 <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> 實作為預設屬性，這樣會提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">已設定該屬性，<ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">屬性已設定，<ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不存在於集合中，而且 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定大小。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件的索引鍵。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件的索引鍵。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">在傳回的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>物件並未指定，但保證是中的對應值的順序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Keys">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件移除。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 物件不包含具有指定索引鍵的項目，則 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 會保持不變。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">不會有例外狀況擲回。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.IDictionary.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.IDictionary.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中含有 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中的值。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中含有 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中的值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">在傳回值的順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>物件並未指定，但一定會在對應的索引鍵的順序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IDictionary.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>