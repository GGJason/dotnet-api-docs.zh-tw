<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICollection.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54f42e3fe1e4a092331e9d66ec69fb6411fda725d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f42e3fe1e4a092331e9d66ec69fb6411fda725d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.ICollection">
          <source>Defines size, enumerators, and synchronization methods for all nongeneric collections.</source>
          <target state="translated">定義所有非泛型集合的大小、列舉值和同步處理方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface is the base interface for classes in the <ph id="ph2">&lt;xref:System.Collections&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>介面是基底介面中的類別<ph id="ph2">&lt;xref:System.Collections&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> interface extends <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>; <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.IList&gt;</ph> are more specialized interfaces that extend <ph id="ph5">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>介面延伸<ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph>;<ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph>和<ph id="ph4">&lt;xref:System.Collections.IList&gt;</ph>是更具特製化的介面，擴充<ph id="ph5">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>An <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation is a collection of key/value pairs, like the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>實作是的索引鍵/值組集合，例如<ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>An <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> implementation is a collection of values and its members can be accessed by index, like the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>實作是值的集合，而且它的成員可以依照索引存取，例如<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>Some collections that limit access to their elements, such as the <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> class and the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> class, directly implement the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated">限制存取其項目，例如某些集合<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>類別和<ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>類別，直接實作<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>If neither the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> interface nor the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface meet the requirements of the required collection, derive the new collection class from the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> interface instead for more flexibility.</source>
          <target state="translated">如果沒有<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>介面和<ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>介面需求所需的集合，而衍生新的集合類別，從<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>改為介面，更有彈性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ICollection">
          <source>For the generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個介面的泛型版本，請參閱<ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">從特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引開始，將 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的項目複製至 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.ICollection.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 會傳回物件，該物件可用來同步處理對 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 的存取。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">大部分的集合中的類別<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程的屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">對於那些無法公開使用基礎存放區的集合而言，所預期的實作會傳回目前的執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">請注意目前的執行個體的指標可能無法完全包裝其他集合，集合這些集合應該傳回基礎集合<ph id="ph1">`SyncRoot`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a <ph id="ph2">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">在 <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> 命名空間中大部分的集合類別也實作 <ph id="ph2">`Synchronized`</ph> 方法，這會提供基礎集合周圍同步處理的包裝函式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">然而，衍生類別 (Derived Class) 可以使用 <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 屬性，提供它們自己集合的同步化版本。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property of the collection, not directly on the collection.</source>
          <target state="translated">必須在集合的 <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 屬性上執行同步處理程式碼的作業，而不是直接在集合上執行。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">如此可確保衍生自其他物件的集合可以正常運作，</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">特別是可以與其他可能同時修改集合執行個體的執行緒，保持正常的同步處理。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks as follows:</source>
          <target state="translated">如果沒有<ph id="ph1">`Synchronized`</ph>方法的集合，如的預期使用量<ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>看起來像這樣：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ICollection.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程的屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>