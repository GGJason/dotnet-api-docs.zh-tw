<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b076be1b16d28e1970639f6c9d747547a754fdba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36712622" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <TypeSignature Language="F#" Value="type IStructuralComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>支援集合物件的結構比較。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralComparable>介面可讓您實作自訂的比較的集合成員。 也就是說，您可以定義明確地說是什麼意思一個集合物件之前，依照，或發生在相同位置中的排序順序為第二個集合物件。 然後您可以指定與可接受集合型別會使用此定義<xref:System.Collections.IStructuralComparable>介面。  
  
 這個介面具有單一成員， <xref:System.Collections.IStructuralComparable.CompareTo%2A>，可判斷目前的集合物件的值是小於、 等於或大於第二個物件在排序次序。 成員或目前的執行個體中的項目，與第二個物件中的實際的比較由<xref:System.Collections.IComparer>介面實作，其中包含自訂比較的定義。  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralComparable>介面支援適用於排序或順序結構的比較。 <xref:System.Collections.IStructuralEquatable>介面支援自訂比較之結構相等。  
  
 .NET Framework 提供兩個預設比較子。 所傳回的其中一個<xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType>屬性則傳回另<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>屬性。  
  
 泛型的元組類別 (<xref:System.Tuple%601>， <xref:System.Tuple%602>，<xref:System.Tuple%603>等等) 和<xref:System.Array>類別提供的明確實作<xref:System.Collections.IStructuralComparable>介面。 轉型 （C# 中），或轉換 （在 Visual Basic)，因此目前的執行個體的陣列或 tuple<xref:System.Collections.IStructuralComparable>介面值，並提供您<xref:System.Collections.IComparer>做為引數的實作<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法，您可以定義的自訂排序次序陣列或集合。 不過，您無法呼叫<xref:System.Collections.IStructuralComparable.CompareTo%2A>在大部分情況下直接的方法。 相反地，<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法會呼叫這類排序方法<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>。 在此情況下，您定義您<xref:System.Collections.IComparer>實作並將它做為引數傳遞至排序方法或集合物件的類別建構函式。 <xref:System.Collections.IStructuralComparable.CompareTo%2A>與您的自訂比較子會再自動呼叫方法時排序集合。  
  
   
  
## Examples  
 下列範例會建立的陣列<xref:System.Tuple%606>包含三個美國城市 1960年從 2000 的母體擴展資料的物件。 6-tuple 的第一個元件是城市名稱。 其餘的五個元件從 1960年代表十年的間隔母體擴展，為 2000年。  
  
 `PopulationComparer`類別提供<xref:System.Collections.IComparer>實作，可讓 sextuples 排序任何一種及其元件的陣列。 兩個值提供給`PopulationComparer`其建構函式中的類別： 定義排序次序中，元件和布林值，指出是否應該以遞增或遞減順序排序的 tuple 物件的位置。  
  
 此範例會顯示未排序的順序陣列中的項目、 依第三個元件 （1970年中母體擴展） 和顯示它們，並再依第六個元件 （2000年中母體擴展） 並加以顯示。 請注意，此範例不會直接呼叫<xref:System.Collections.IStructuralComparable.CompareTo%2A>方法。 此方法會隱含地呼叫<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>陣列中每個 tuple 物件的方法。  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="iStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">要與目前執行個體比較的物件。</param>
        <param name="comparer">物件，此物件會比較目前集合物件的成員與對應的 <c>other</c> 成員。</param>
        <summary>判斷目前的集合物件在排序次序中位於另一個物件之前、相同位置或之後。</summary>
        <returns>整數，表示目前集合物件與 <paramref name="other" /> 的關聯性，如下表所示。  
  
 <list type="table"><listheader><term> 傳回值  </term><description> 描述  </description></listheader><item><term> -1  </term><description> 目前的執行個體在 <paramref name="other" /> 之前。</description></item><item><term> 0  </term><description> 目前的執行個體與 <paramref name="other" /> 相等。</description></item><item><term> 1  </term><description> 目前的執行個體在 <paramref name="other" /> 之後。</description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralComparable.CompareTo%2A>方法支援自訂的結構比較和排序陣列和 tuple 物件。 <xref:System.Collections.IStructuralComparable.CompareTo%2A>方法呼叫`comparer`物件的<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法來比較個別陣列項目或 tuple 元件，開始使用第一個項目或元件。 個別呼叫<xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>結束和<xref:System.Collections.IStructuralComparable.CompareTo%2A>發生下列情況之一時，方法會傳回值：  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法會傳回-1。  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法會傳回 1。  
  
-   <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType>方法呼叫的最後一個項目或集合物件中的元件。  
  
   
  
## Examples  
 下列範例會建立的陣列<xref:System.Tuple%606>包含三個美國城市 1960年從 2000 的母體擴展資料的物件。 6-tuple 的第一個元件是城市名稱。 其餘的五個元件從 1960年代表十年的間隔母體擴展，為 2000年。  
  
 `PopulationComparer`類別提供<xref:System.Collections.IComparer>實作，可讓 sextuples 排序任何一種及其元件的陣列。 兩個值提供給`PopulationComparer`其建構函式中的類別： 定義排序次序中，元件的位置和<xref:System.Boolean>值，指出是否應該以遞增或遞減順序排序的 tuple 物件。  
  
 此範例會顯示未排序的順序陣列中的項目、 依第三個元件 （1970年中母體擴展） 和顯示它們，並再依第六個元件 （2000年中母體擴展） 並加以顯示。 請注意，此範例不會直接呼叫<xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType>實作。 此方法會隱含地呼叫<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>陣列中每個 tuple 物件的方法。  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">這個執行個體和 <paramref name="other" /> 屬於不相同的型別。</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>