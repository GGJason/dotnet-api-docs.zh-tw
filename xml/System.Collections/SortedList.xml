<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3124b7bda8739a20a75d51b771ab675fd3a27c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="139b7-101">表示索引鍵/值組配對的集合，這個集合按索引鍵排序，而且可以按索引鍵和索引存取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-102">這個集合的泛型版本，請參閱<xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="139b7-102">For the generic version of this collection, see <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="139b7-103">A<xref:System.Collections.SortedList>項目可以存取它的金鑰，如在任何項目一般<xref:System.Collections.IDictionary>實作，或依據索引，如在任何項目一般<xref:System.Collections.IList>實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-103">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  
  
 <span data-ttu-id="139b7-104">A<xref:System.Collections.SortedList>物件在內部維護兩個陣列來儲存清單，也就是一個陣列的索引鍵的項目和相關聯的值的另一個陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-104">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="139b7-105">每個項目是無法做為存取的索引鍵/值組<xref:System.Collections.DictionaryEntry>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-105">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="139b7-106">金鑰不能`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="139b7-106">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="139b7-107">容量<xref:System.Collections.SortedList>物件則是項目數目<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-107">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-108">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量視需要透過重新配置。</span><span class="sxs-lookup"><span data-stu-id="139b7-108">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="139b7-109">藉由呼叫，您可以減少容量<xref:System.Collections.SortedList.TrimToSize%2A>或藉由設定<xref:System.Collections.SortedList.Capacity%2A>屬性明確。</span><span class="sxs-lookup"><span data-stu-id="139b7-109">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="139b7-110">針對大型<xref:System.Collections.SortedList>物件，您可以藉由設定增加到 64 位元系統上的 2 億元素的最大容量`enabled`屬性的組態項目`true`在執行階段環境中。</span><span class="sxs-lookup"><span data-stu-id="139b7-110">For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="139b7-111">項目<xref:System.Collections.SortedList>依索引鍵所排序的物件是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>是建立或根據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-111">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="139b7-112">在任一情況下，<xref:System.Collections.SortedList>不允許重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="139b7-112">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="139b7-113">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-113">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-114">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-114">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-115">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-115">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-116">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-116">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-117">上的作業<xref:System.Collections.SortedList>物件通常會將低於作業上<xref:System.Collections.Hashtable>因為排序的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-117">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="139b7-118">不過，<xref:System.Collections.SortedList>藉由允許存取的值，透過關聯的索引鍵或索引可提供更大的彈性。</span><span class="sxs-lookup"><span data-stu-id="139b7-118">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="139b7-119">可以使用整數索引來存取此集合中的項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-119">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="139b7-120">在此集合中的索引都以零為起始。</span><span class="sxs-lookup"><span data-stu-id="139b7-120">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="139b7-121">`foreach` C# 語言的陳述式 (`for each`在 Visual Basic 中) 傳回集合中的項目類型的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-121">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="139b7-122">因為每個項目<xref:System.Collections.SortedList>物件的索引鍵/值組，此項目類型不是索引鍵的類型或值的類型。</span><span class="sxs-lookup"><span data-stu-id="139b7-122">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="139b7-123">相對地，項目型別是<xref:System.Collections.DictionaryEntry>。</span><span class="sxs-lookup"><span data-stu-id="139b7-123">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="139b7-124">例如: </span><span class="sxs-lookup"><span data-stu-id="139b7-124">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="139b7-125">`foreach`陳述式是可讓只有讀取，不寫入至集合的列舉值的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="139b7-125">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-126">下列程式碼範例示範如何建立和初始化<xref:System.Collections.SortedList>物件，以及如何列印出其索引鍵和值。</span><span class="sxs-lookup"><span data-stu-id="139b7-126">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="139b7-127">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="139b7-128">不保證任何執行個體成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="139b7-129">A<see cref="T:System.Collections.SortedList" />物件可以同時支援多個讀取器，只要未修改集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-129">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="139b7-130">若要保證的執行緒安全<see cref="T:System.Collections.SortedList" />，所有作業都必須都透過包裝函式所傳回<see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-130">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span>
      </span>
      <span data-ttu-id="139b7-131">透過集合進行列舉在本質上並非安全執行緒程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-131">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="139b7-132">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-132">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="139b7-133">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="139b7-133">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-134">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-134">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-135">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白、具有預設的初始容量，而且其排序依據為已加入至 <see cref="T:System.IComparable" /> 之每個索引鍵所實作的 <see cref="T:System.Collections.SortedList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-135">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-136">每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-136">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-137">項目會根據排序<xref:System.IComparable>實作每個索引鍵加入至<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-137">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-138">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-138">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-139">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-139">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-140">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-141">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-141">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-142">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-142">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="139b7-143">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-143">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="139b7-144">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-144">-or-</span>
          </span>
          <span data-ttu-id="139b7-145">要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-145">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-146">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白且具有預設的初始容量，並根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-146">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-147">排序項目會根據指定<xref:System.Collections.IComparer>實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-147">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="139b7-148">如果`comparer`參數是`null`、<xref:System.IComparable>會使用每個索引鍵的實作; 因此，每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-148">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-149">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-149">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-150">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-150">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-151">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-151">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-152">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-153">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-153">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="139b7-154">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.SortedList" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-154">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-155">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其含有從指定的字典複製過來的元素、具有與複製的元素數一樣的初始容量且根據每一個索引鍵實作的 <see cref="T:System.IComparable" /> 介面排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-155">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-156">每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-156">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-157">項目會根據排序<xref:System.IComparable>實作每個索引鍵加入至<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-157">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-158">A<xref:System.Collections.Hashtable>物件是範例<xref:System.Collections.IDictionary>可以傳遞給這個建構函式的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-158">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="139b7-159">新<xref:System.Collections.SortedList>物件包含索引鍵和值儲存在一份<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="139b7-159">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="139b7-160">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-160">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-161">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-161">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-162">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-162">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-163">這個建構函式為 O (`n`) 作業，其中`n`是中的項目數`d`。</span><span class="sxs-lookup"><span data-stu-id="139b7-163">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-164">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-164">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-165">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-165">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="139b7-166">
            <paramref name="d" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-166">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">
          <span data-ttu-id="139b7-167">
            <see cref="T:System.Collections.SortedList" /> 物件可包含的初始元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-167">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-168">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其為空白、具有指定的初始容量，而且其排序依據為已加入至 <see cref="T:System.IComparable" /> 之每個索引鍵所實作的 <see cref="T:System.Collections.SortedList" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-168">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-169">每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-169">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-170">項目會根據排序<xref:System.IComparable>實作每個索引鍵加入至<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-170">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-171">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-171">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-172">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-172">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-173">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-174">這個建構函式為 O (`n`) 作業，其中`n`是`initialCapacity`。</span><span class="sxs-lookup"><span data-stu-id="139b7-174">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-175">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-175">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-176">
            <paramref name="initialCapacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-176">
              <paramref name="initialCapacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="139b7-177">沒有足夠的記憶體可用，無法建立具有所指定 <paramref name="initialCapacity" /> 的 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-177">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="139b7-178">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-178">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="139b7-179">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-179">-or-</span>
          </span>
          <span data-ttu-id="139b7-180">要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-180">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="139b7-181">
            <see cref="T:System.Collections.SortedList" /> 物件可包含的初始元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-181">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-182">初始化 <see cref="T:System.Collections.SortedList" /> 類別新執行個體，其為空白且具有指定的初始容量，並根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-182">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-183">排序項目會根據指定<xref:System.Collections.IComparer>實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-183">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="139b7-184">如果`comparer`參數是`null`、<xref:System.IComparable>會使用每個索引鍵的實作; 因此，每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-184">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-185">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-185">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-186">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-186">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-187">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-187">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-188">這個建構函式為 O (`n`) 作業，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="139b7-188">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-189">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-189">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-190">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-190">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="139b7-191">沒有足夠的記憶體可用，無法建立具有所指定 <paramref name="capacity" /> 的 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-191">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="139b7-192">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.SortedList" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-192">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="139b7-193">比較索引鍵時所要使用的 <see cref="T:System.Collections.IComparer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-193">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="139b7-194">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-194">-or-</span>
          </span>
          <span data-ttu-id="139b7-195">要使用每個索引鍵之 <see cref="T:System.IComparable" /> 實作的 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-195">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-196">初始化 <see cref="T:System.Collections.SortedList" /> 類別的新執行個體，其含有從指定的字典複製過來的元素、具有與複製的元素數一樣的初始容量且根據指定的 <see cref="T:System.Collections.IComparer" /> 介面排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-196">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-197">排序項目會根據指定<xref:System.Collections.IComparer>實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-197">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="139b7-198">如果`comparer`參數是`null`、<xref:System.IComparable>會使用每個索引鍵的實作; 因此，每個索引鍵必須實作<xref:System.IComparable>介面中的索引鍵的比較能夠<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-198">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-199">A<xref:System.Collections.Hashtable>物件是範例<xref:System.Collections.IDictionary>可以傳遞給這個建構函式的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-199">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="139b7-200">新<xref:System.Collections.SortedList>物件包含索引鍵和值儲存在一份<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="139b7-200">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="139b7-201">容量<xref:System.Collections.SortedList>物件則是項目數目，<xref:System.Collections.SortedList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="139b7-201">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="139b7-202">當項目加入至<xref:System.Collections.SortedList>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-202">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="139b7-203">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-203">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-204">這個建構函式為 O (`n`) 作業，其中`n`是中的項目數`d`。</span><span class="sxs-lookup"><span data-stu-id="139b7-204">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-205">下列程式碼範例會建立集合使用不同<xref:System.Collections.SortedList>建構函式，並示範在集合的行為差異。</span><span class="sxs-lookup"><span data-stu-id="139b7-205">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-206">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-206">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="139b7-207">
            <paramref name="comparer" /> 為 <see langword="null" />，而且 <paramref name="d" /> 中的一個或多個元素沒有實作 <see cref="T:System.IComparable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-207">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-208">要加入的項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-208">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="139b7-209">要加入的項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-209">The value of the element to add.</span>
          </span>
          <span data-ttu-id="139b7-210">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-210">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-211">將具有指定索引鍵和值的元素加入至 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-211">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-212">插入點取決於選取，以明確或預設的比較子時<xref:System.Collections.SortedList>建立物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-212">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="139b7-213">如果<xref:System.Collections.SortedList.Count%2A>已等於<xref:System.Collections.SortedList.Capacity%2A>、 容量的<xref:System.Collections.SortedList>增加物件會自動重新配置內部的陣列，並加入新項目之前現有的項目複製到新陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-213">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="139b7-214">您也可以使用<xref:System.Collections.SortedList.Item%2A>加入新項目，藉由設定機碼值的屬性不存在於<xref:System.Collections.SortedList>物件 (例如， `myCollection["myNonexistentKey"] = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="139b7-214">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="139b7-215">不過，如果指定的索引鍵已存在於<xref:System.Collections.SortedList>，設定<xref:System.Collections.SortedList.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="139b7-215">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="139b7-216">相反地，<xref:System.Collections.SortedList.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-216">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="139b7-217">項目<xref:System.Collections.SortedList>依索引鍵所排序的物件是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>是建立或根據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-217">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="139b7-218">金鑰不能`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="139b7-218">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="139b7-219">這個方法是 O (`n`) 作業的未排序的資料，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-219">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="139b7-220">是 O (記錄`n`) 作業時，如果在清單結尾處加入新項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-220">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="139b7-221">如果插入會導致調整大小，作業為 O (`n`)。</span><span class="sxs-lookup"><span data-stu-id="139b7-221">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-222">下列程式碼範例示範如何加入項目來<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-222">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-223">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-223">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="139b7-224">
            <see cref="T:System.Collections.SortedList" /> 物件中己經包含具有指定之 <paramref name="key" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-224">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="139b7-225">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-225">-or-</span>
          </span>
          <span data-ttu-id="139b7-226">
            <see cref="T:System.Collections.SortedList" /> 設定為使用 <see cref="T:System.IComparable" /> 介面，而且 <paramref name="key" /> 沒有實作 <see cref="T:System.IComparable" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-226">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-227">
            <see cref="T:System.Collections.SortedList" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-227">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="139b7-228">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-228">-or-</span>
          </span>
          <span data-ttu-id="139b7-229">
            <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-229">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="139b7-230">沒有足夠的記憶體可用，無法將元素加入至 <see cref="T:System.Collections.SortedList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-230">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="139b7-231">比較子會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-231">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-232">取得或設定 <see cref="T:System.Collections.SortedList" /> 物件的容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-232">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-233">
            <see cref="T:System.Collections.SortedList" /> 物件能夠包含的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-233">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-234"><xref:System.Collections.SortedList.Capacity%2A> 是的項目數，<xref:System.Collections.SortedList>可以儲存物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-234"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="139b7-235"><xref:System.Collections.SortedList.Count%2A> 是實際的項目數目<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-235"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-236"><xref:System.Collections.SortedList.Capacity%2A> 永遠是大於或等於<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-236"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="139b7-237">如果<xref:System.Collections.SortedList.Count%2A>超過<xref:System.Collections.SortedList.Capacity%2A>時加入項目，容量會自動增加之前複製的舊項目並加入新項目後，重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-237">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="139b7-238">藉由呼叫，您可以減少容量<xref:System.Collections.SortedList.TrimToSize%2A>或藉由設定<xref:System.Collections.SortedList.Capacity%2A>屬性明確。</span><span class="sxs-lookup"><span data-stu-id="139b7-238">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="139b7-239">當值<xref:System.Collections.SortedList.Capacity%2A>會設定明確地在內部陣列也重新配置到符合指定的容量。</span><span class="sxs-lookup"><span data-stu-id="139b7-239">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="139b7-240">擷取這個屬性的值是 o （1） 運算。將屬性設定為 O (`n`) 作業，其中`n`是新的容量。</span><span class="sxs-lookup"><span data-stu-id="139b7-240">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-241">指派的值小於 <see cref="T:System.Collections.SortedList" /> 物件中目前的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-241">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="139b7-242">系統上沒有足夠的記憶體可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-242">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-243">將所有項目從 <see cref="T:System.Collections.SortedList" /> 物件中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-243">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-244"><xref:System.Collections.SortedList.Count%2A> 設為零，且從項目集合的其他物件的參考也會釋放。</span><span class="sxs-lookup"><span data-stu-id="139b7-244"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="139b7-245"><xref:System.Collections.SortedList.Capacity%2A> 維持不變。</span><span class="sxs-lookup"><span data-stu-id="139b7-245"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="139b7-246">若要重設的容量<xref:System.Collections.SortedList>物件，呼叫<xref:System.Collections.SortedList.TrimToSize%2A>或設定<xref:System.Collections.SortedList.Capacity%2A>直接屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-246">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="139b7-247">修剪空白<xref:System.Collections.SortedList>設定的容量<xref:System.Collections.SortedList>預設容量。</span><span class="sxs-lookup"><span data-stu-id="139b7-247">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="139b7-248">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-249">下列程式碼範例示範如何修剪的未使用的部分<xref:System.Collections.SortedList>物件，以及如何清除的值<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-249">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-250">
            <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-250">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="139b7-251">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-251">-or-</span>
          </span>
          <span data-ttu-id="139b7-252">
            <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-252">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-253">建立 <see cref="T:System.Collections.SortedList" /> 物件的淺層複本 (Shallow Copy)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-253">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-254">
            <see cref="T:System.Collections.SortedList" /> 物件的淺層複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-254">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-255">集合的淺層複本只會複製元素的集合，它們都是參考類型或值類型，但不會複製參考所參考的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-255">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="139b7-256">新的集合中的參考都指向相同原始集合中的參考所指向的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-256">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="139b7-257">相反地，項目複製集合的深層複本，並直接或間接參考之項目，所有項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-257">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="139b7-258">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-259">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-259">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-260">判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-260">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-261">如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="key" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-261">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-262">項目<xref:System.Collections.SortedList>依索引鍵所排序的物件是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>是建立或根據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-262">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="139b7-263"><xref:System.Collections.SortedList.Contains%2A> 會實作 <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="139b7-263"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="139b7-264">它的行為就像<xref:System.Collections.SortedList.ContainsKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-264">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="139b7-265">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-265">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="139b7-266">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`來判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="139b7-266">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="139b7-267">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-268">下列程式碼範例示範如何判斷是否<xref:System.Collections.SortedList>物件包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-268">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-269">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-269">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="139b7-270">比較子會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-270">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-271">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-271">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-272">判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-272">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-273">如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="key" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-273">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-274">項目<xref:System.Collections.SortedList>依索引鍵所排序的物件是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>是建立或根據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-274">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="139b7-275">這個方法的行為就像<xref:System.Collections.SortedList.Contains%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="139b7-275">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="139b7-276">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-276">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="139b7-277">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`來判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="139b7-277">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="139b7-278">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-278">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-279">下列程式碼範例示範如何判斷是否<xref:System.Collections.SortedList>物件包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-279">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-280">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-280">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="139b7-281">比較子會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-281">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="139b7-282">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-282">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="139b7-283">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-283">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-284">判斷 <see cref="T:System.Collections.SortedList" /> 物件是否包含特定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-284">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-285">如果 <see cref="T:System.Collections.SortedList" /> 物件包含的元素有指定的 <paramref name="value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-285">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-286">項目的值<xref:System.Collections.SortedList>物件與指定的值使用<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="139b7-286">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="139b7-287">這個方法會執行線性搜尋;因此，平均執行時間是成比例<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="139b7-288">也就是說，這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="139b7-289">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`來判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="139b7-289">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="139b7-290">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-290">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-291">下列程式碼範例示範如何判斷是否<xref:System.Collections.SortedList>物件包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-291">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="139b7-292">一維 <see cref="T:System.Array" /> 物件，其為從 <see cref="T:System.Collections.DictionaryEntry" /> 複製之 <see cref="T:System.Collections.SortedList" /> 物件的目的地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-292">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span>
          </span>
          <span data-ttu-id="139b7-293">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-293">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="139b7-294">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-294">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-295">從陣列中指定的索引處開始，將 <see cref="T:System.Collections.SortedList" /> 元素複製到一維 <see cref="T:System.Array" /> 物件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-295">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-296">索引鍵/值組複製到<xref:System.Array>物件列舉值反覆執行的順序相同<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-296">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-297">若要複製中的索引鍵<xref:System.Collections.SortedList>，使用`SortedList.Keys.CopyTo`。</span><span class="sxs-lookup"><span data-stu-id="139b7-297">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="139b7-298">若要複製的值中<xref:System.Collections.SortedList>，使用`SortedList.Values.CopyTo`。</span><span class="sxs-lookup"><span data-stu-id="139b7-298">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="139b7-299">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-300">下列程式碼範例示範如何將複製的值<xref:System.Collections.SortedList>成為一維物件<xref:System.Array>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-300">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-301">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-302">
            <paramref name="arrayIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-302">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="139b7-303">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-303">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="139b7-304">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-304">-or-</span>
          </span>
          <span data-ttu-id="139b7-305">來源 <see cref="T:System.Collections.SortedList" /> 物件中的元素數目，大於從 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-305">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="139b7-306">來源 <see cref="T:System.Collections.SortedList" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-306">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-307">取得 <see cref="T:System.Collections.SortedList" /> 物件中所包含的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-307">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-308">
            <see cref="T:System.Collections.SortedList" /> 物件中所包含的元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-308">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-309">每個項目是無法做為存取的索引鍵/值組<xref:System.Collections.DictionaryEntry>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-309">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="139b7-310"><xref:System.Collections.SortedList.Capacity%2A> 是的項目數，<xref:System.Collections.SortedList>可以儲存物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-310"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="139b7-311"><xref:System.Collections.SortedList.Count%2A> 是實際的項目數目<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-311"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-312"><xref:System.Collections.SortedList.Capacity%2A> 永遠是大於或等於<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-312"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="139b7-313">如果<xref:System.Collections.SortedList.Count%2A>超過<xref:System.Collections.SortedList.Capacity%2A>時加入項目，容量會自動增加之前複製的舊項目並加入新項目後，重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="139b7-313">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="139b7-314">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-314">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="139b7-315">要取得的值的以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-315">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-316">取得 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-316">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-317">
            <see cref="T:System.Collections.SortedList" /> 中指定之索引處的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-317">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-318">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-318">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-319">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-319">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-320">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-320">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-321">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-321">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-322">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-322">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-323">下列程式碼範例示範如何取得一個或所有的索引鍵或值的<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-323">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-324">
            <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-324">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-325">傳回可在 <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件中逐一查看的 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-325">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-326">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 物件的 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-326">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-327">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="139b7-327">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="139b7-328">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="139b7-328">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="139b7-329">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="139b7-329">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="139b7-330">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="139b7-330">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="139b7-331"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="139b7-331"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="139b7-332">在這個位置上，<xref:System.Collections.IEnumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="139b7-332">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="139b7-333">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-333">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="139b7-334"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-334"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="139b7-335"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-335"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="139b7-336">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="139b7-336">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="139b7-337">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="139b7-337">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="139b7-338">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="139b7-338">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="139b7-339">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-339">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="139b7-340">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="139b7-340">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="139b7-341">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="139b7-341">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="139b7-342">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="139b7-342">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="139b7-343">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="139b7-343">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="139b7-344">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="139b7-344">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="139b7-345">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="139b7-346">要取得的索引鍵之以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-346">The zero-based index of the key to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-347">取得 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-347">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-348">
            <see cref="T:System.Collections.SortedList" /> 物件中指定之索引處的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-348">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-349">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-349">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-350">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-350">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-351">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-351">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-352">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-352">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-353">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-353">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-354">下列程式碼範例示範如何取得一個或所有的索引鍵或值的<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-354">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-355">
            <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-355">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-356">取得 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-356">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-357">
            <see cref="T:System.Collections.IList" /> 物件，其中包含 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-357">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-358">傳回<xref:System.Collections.IList>物件是索引鍵的唯讀檢視表<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-358">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-359">對基礎修改<xref:System.Collections.SortedList>會立即反映在<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-359">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="139b7-360">傳回的項目<xref:System.Collections.IList>排序索引鍵的順序相同<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-360">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-361">這個方法是類似於<xref:System.Collections.SortedList.Keys%2A>屬性，但是傳回<xref:System.Collections.IList>物件而非<xref:System.Collections.ICollection>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-361">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="139b7-362">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-362">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-363">下列程式碼範例示範如何取得一個或所有的索引鍵或值的<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-363">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-364">取得 <see cref="T:System.Collections.SortedList" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-364">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-365">
            <see cref="T:System.Collections.IList" /> 物件，其中含有 <see cref="T:System.Collections.SortedList" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-365">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-366">傳回<xref:System.Collections.IList>物件是唯讀值的檢視<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-366">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-367">對基礎修改<xref:System.Collections.SortedList>會立即反映在<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-367">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="139b7-368">傳回的項目<xref:System.Collections.IList>作為的值相同的順序排序<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-368">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-369">這個方法是類似於<xref:System.Collections.SortedList.Values%2A>屬性，但是傳回<xref:System.Collections.IList>物件而非<xref:System.Collections.ICollection>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-369">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="139b7-370">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-370">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-371">下列程式碼範例示範如何取得一個或所有的索引鍵或值的<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-371">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-372">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-372">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-373">傳回 <see cref="T:System.Collections.SortedList" /> 物件中指定之索引鍵的以零起始之索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-373">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-374">如果在 <see cref="T:System.Collections.SortedList" /> 物件中找到 <paramref name="key" />，則為 <paramref name="key" /> 參數之以零起始的索引，否則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-374">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-375">項目<xref:System.Collections.SortedList>依索引鍵所排序的物件是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>建立，或依據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-375">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="139b7-376">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-376">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-377">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-377">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-378">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-378">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-379">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-379">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-380">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-380">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="139b7-381">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`來判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="139b7-381">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="139b7-382">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-382">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-383">下列程式碼範例示範如何判斷索引的索引鍵或值<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-383">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-384">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-384">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="139b7-385">比較子會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-385">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="139b7-386">要在 <see cref="T:System.Collections.SortedList" /> 物件中尋找的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-386">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="139b7-387">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-387">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-388">傳回 <see cref="T:System.Collections.SortedList" /> 物件中指定之值的第一個符合項目的以零起始之索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-388">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-389">如果在 <see cref="T:System.Collections.SortedList" /> 物件中找到 <paramref name="value" />，則為 <paramref name="value" /> 參數第一個符合項目之以零起始的索引，否則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-389">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-390">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-390">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-391">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-391">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-392">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-392">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-393">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-393">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-394">項目的值<xref:System.Collections.SortedList>與指定的值使用<xref:System.Object.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="139b7-394">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="139b7-395">這個方法會使用線性搜尋;因此，這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-395">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="139b7-396">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`來判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="139b7-396">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="139b7-397">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-397">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-398">下列程式碼範例示範如何判斷索引的索引鍵或值<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-398">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-399">取得值，指出 <see cref="T:System.Collections.SortedList" /> 物件是否具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-399">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-400">如果 <see cref="T:System.Collections.SortedList" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-400">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="139b7-401">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-401">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-402">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-402">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="139b7-403">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="139b7-403">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="139b7-404">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-404">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-405">取得值，指出 <see cref="T:System.Collections.SortedList" /> 物件是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-405">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-406">如果 <see cref="T:System.Collections.SortedList" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-406">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="139b7-407">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-407">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-408">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-408">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="139b7-409">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="139b7-409">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="139b7-410">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-410">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-411">取得值，指出對 <see cref="T:System.Collections.SortedList" /> 物件的存取是否為同步的 (執行緒安全)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-411">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-412">如果要同步處理 (執行緒安全) 對 <see cref="T:System.Collections.SortedList" /> 物件的存取，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-412">
              <see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="139b7-413">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-413">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-414">若要保證的執行緒安全<xref:System.Collections.SortedList>物件時，所有作業都必須都透過包裝函式所傳回<xref:System.Collections.SortedList.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="139b7-414">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="139b7-415">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="139b7-415">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="139b7-416">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-416">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="139b7-417">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-417">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-418">下列程式碼範例示範如何鎖定集合，使用<xref:System.Collections.SortedList.SyncRoot%2A>在整個列舉過程的屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-418">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="139b7-419">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="139b7-420">下列程式碼範例示範如何同步處理<xref:System.Collections.SortedList>物件，決定是否<xref:System.Collections.SortedList>同步處理，並使用同步處理<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-420">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-421">與要取得或設定的值相關聯的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-421">The key associated with the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-422">取得並設定與 <see cref="T:System.Collections.SortedList" /> 物件中特定索引鍵相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-422">Gets and sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-423">如果找到 <paramref name="key" />，則為與 <see cref="T:System.Collections.SortedList" /> 物件中 <paramref name="key" /> 參數相關聯的值，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-423">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-424">您可以使用<xref:System.Collections.SortedList.Item%2A>屬性來存取集合中的特定元素，藉由指定下列語法： `myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="139b7-424">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="139b7-425">您也可以使用這個屬性來加入新項目中不存在的索引鍵的值設定<xref:System.Collections.SortedList>物件 (例如， `myCollection["myNonexistentKey"] = myValue)`。</span><span class="sxs-lookup"><span data-stu-id="139b7-425">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="139b7-426">不過，如果指定的索引鍵已存在於<xref:System.Collections.SortedList>，設定<xref:System.Collections.SortedList.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="139b7-426">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="139b7-427">相反地，<xref:System.Collections.SortedList.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-427">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="139b7-428">金鑰不能`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="139b7-428">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="139b7-429">若要在區別`null`傳回因為找不到指定的索引鍵和`null`傳回指定之索引鍵的值，所以`null`，使用<xref:System.Collections.SortedList.Contains%2A>方法或<xref:System.Collections.SortedList.ContainsKey%2A>方法來判斷索引鍵存在於清單中。</span><span class="sxs-lookup"><span data-stu-id="139b7-429">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="139b7-430">項目<xref:System.Collections.SortedList>依索引鍵所排序是根據特定<xref:System.Collections.IComparer>實作時指定<xref:System.Collections.SortedList>是建立或根據<xref:System.IComparable>金鑰本身所提供的實作。</span><span class="sxs-lookup"><span data-stu-id="139b7-430">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="139b7-431">C# 語言使用關鍵字來定義索引，而不必實作<xref:System.Collections.SortedList.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-431">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="139b7-432">Visual Basic 會將 <xref:System.Collections.SortedList.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="139b7-432">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="139b7-433">擷取這個屬性的值是 O (記錄`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-433">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="139b7-434">將屬性設定為 O (記錄`n`) 作業時，如果索引鍵已存在於<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-434">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="139b7-435">如果索引鍵不在清單中，將屬性設定為 O (`n`) 未排序的資料或 I/O 作業 (記錄`n`) 如果清單的結尾處加入新項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-435">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="139b7-436">如果插入會導致調整大小，作業為 O (`n`)。</span><span class="sxs-lookup"><span data-stu-id="139b7-436">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-437">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-437">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-438">已設定該屬性，<see cref="T:System.Collections.SortedList" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-438">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="139b7-439">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-439">-or-</span>
          </span>
          <span data-ttu-id="139b7-440">屬性已設定，<paramref name="key" /> 不存在於集合中，而且 <see cref="T:System.Collections.SortedList" /> 具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-440">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="139b7-441">沒有足夠的記憶體可用，無法將元素加入至 <see cref="T:System.Collections.SortedList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-441">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="139b7-442">比較子會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-442">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-443">取得 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-443">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-444">
            <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.SortedList" /> 物件中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-444">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-445"><xref:System.Collections.ICollection>物件是索引鍵的唯讀檢視表<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-445">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-446">對基礎修改<xref:System.Collections.SortedList>會立即反映在<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="139b7-446">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="139b7-447">項目<xref:System.Collections.ICollection>排序索引鍵的順序相同<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-447">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-448">這個屬性是類似於<xref:System.Collections.SortedList.GetKeyList%2A>方法，但傳回<xref:System.Collections.ICollection>物件而非<xref:System.Collections.IList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-448">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="139b7-449">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-449">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="139b7-450">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-450">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-451">從 <see cref="T:System.Collections.SortedList" /> 物件中移除具有指定之索引鍵的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-451">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-452">如果 <xref:System.Collections.SortedList> 物件不包含具有指定索引鍵的項目，則 <xref:System.Collections.SortedList> 會保持不變。</span><span class="sxs-lookup"><span data-stu-id="139b7-452">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="139b7-453">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="139b7-453">No exception is thrown.</span></span>  
  
 <span data-ttu-id="139b7-454">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="139b7-454">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="139b7-455">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="139b7-455">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="139b7-456">集合的項目若在概念上群組成 Bucket (例如雜湊資料表)，則不適用這項行為。</span><span class="sxs-lookup"><span data-stu-id="139b7-456">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="139b7-457">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-457">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-458">下列程式碼範例示範如何移除項目從<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-458">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-459">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-459">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-460">
            <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-460">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="139b7-461">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-461">-or-</span>
          </span>
          <span data-ttu-id="139b7-462">
            <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-462">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="139b7-463">移除項目之以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-463">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-464">移除 <see cref="T:System.Collections.SortedList" /> 物件中指定索引處的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-464">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-465">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-465">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-466">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-466">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-467">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-467">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-468">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-468">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-469">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="139b7-469">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="139b7-470">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="139b7-470">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="139b7-471">集合的項目若在概念上群組成 Bucket (例如雜湊資料表)，則不適用這項行為。</span><span class="sxs-lookup"><span data-stu-id="139b7-471">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="139b7-472">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-472">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-473">下列程式碼範例示範如何移除項目從<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-473">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-474">
            <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-474">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-475">
            <see cref="T:System.Collections.SortedList" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-475">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="139b7-476">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-476">-or-</span>
          </span>
          <span data-ttu-id="139b7-477">
            <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-477">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="139b7-478">以零起始的索引，即要儲存 <c>value</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-478">The zero-based index at which to save <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="139b7-479">要儲存到 <see cref="T:System.Object" /> 物件中的 <see cref="T:System.Collections.SortedList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-479">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="139b7-480">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-480">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-481">取代 <see cref="T:System.Collections.SortedList" /> 物件中特定索引處的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-481">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-482">索引的順序為基礎的排序順序。</span><span class="sxs-lookup"><span data-stu-id="139b7-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="139b7-483">當已新增的項目時，它會插入<xref:System.Collections.SortedList>中正確的排序順序和索引據此調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="139b7-484">移除項目時，索引也會據以的調整。</span><span class="sxs-lookup"><span data-stu-id="139b7-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="139b7-485">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-486">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-486">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-487">下列程式碼範例示範如何將現有項目中的值取代<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-487">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="139b7-488">
            <paramref name="index" /> 在 <see cref="T:System.Collections.SortedList" /> 物件的有效索引範圍之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-488">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="139b7-489">要同步處理的 <see cref="T:System.Collections.SortedList" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-489">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="139b7-490">傳回 <see cref="T:System.Collections.SortedList" /> 物件的同步處理 (安全執行緒) 包裝函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-490">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-491">
            <see cref="T:System.Collections.SortedList" /> 物件的同步處理 (安全執行緒) 包裝函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-491">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-492">若要保證的執行緒安全<xref:System.Collections.SortedList>物件時，所有作業必須都透過這個包裝函式只。</span><span class="sxs-lookup"><span data-stu-id="139b7-492">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="139b7-493">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="139b7-493">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="139b7-494">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-494">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="139b7-495">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-495">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-496">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.SortedList.SyncRoot%2A>在整個列舉過程的屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-496">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="139b7-497">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-497">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="139b7-498">下列程式碼範例示範如何同步處理<xref:System.Collections.SortedList>物件，決定是否<xref:System.Collections.SortedList>同步處理，並使用同步處理<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-498">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="139b7-499">
            <paramref name="list" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-499">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-500">取得可用來同步存取 <see cref="T:System.Collections.SortedList" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-500">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-501">可用來同步處理對 <see cref="T:System.Collections.SortedList" /> 物件之存取的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-501">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-502">若要建立的同步化的版本<xref:System.Collections.SortedList>物件，請使用<xref:System.Collections.SortedList.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="139b7-502">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="139b7-503">不過，在衍生的類別可以提供自己的同步處理的版本<xref:System.Collections.SortedList>使用<xref:System.Collections.SortedList.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-503">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="139b7-504">同步處理的程式碼必須在上執行作業<xref:System.Collections.SortedList.SyncRoot%2A>的<xref:System.Collections.SortedList>、 直接依據<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-504">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="139b7-505">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="139b7-505">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="139b7-506">具體而言，保持正常的同步處理與其他可能同時修改的執行緒<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-506">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="139b7-507">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="139b7-507">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="139b7-508">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-508">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="139b7-509">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-509">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-510">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.SortedList.SyncRoot%2A>在整個列舉過程的屬性。</span><span class="sxs-lookup"><span data-stu-id="139b7-510">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="139b7-511">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-512">傳回透過 <see cref="T:System.Collections.IEnumerator" /> 重複的 <see cref="T:System.Collections.SortedList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-512">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="139b7-513">
            <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.SortedList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-513">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-514">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="139b7-514">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="139b7-515">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="139b7-515">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="139b7-516">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="139b7-516">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="139b7-517">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="139b7-517">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="139b7-518">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="139b7-518">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="139b7-519"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="139b7-519"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="139b7-520">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-520">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="139b7-521">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-521">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="139b7-522"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-522"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="139b7-523"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="139b7-523"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="139b7-524">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="139b7-524">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="139b7-525">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="139b7-525">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="139b7-526">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-526">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="139b7-527">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-527">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="139b7-528">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="139b7-528">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="139b7-529">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="139b7-529">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="139b7-530">如果之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="139b7-530">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="139b7-531">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="139b7-531">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="139b7-532">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-532">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="139b7-533">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="139b7-533">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="139b7-534">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-534">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="139b7-535">將容量設為 <see cref="T:System.Collections.SortedList" /> 物件中的實際元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-535">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-536">這個方法可用記憶體降到最低集合的額外負荷如果沒有新的項目會加入至集合。</span><span class="sxs-lookup"><span data-stu-id="139b7-536">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="139b7-537">若要重設<xref:System.Collections.SortedList>物件設為初始狀態，呼叫<xref:System.Collections.SortedList.Clear%2A>方法之前先呼叫<xref:System.Collections.SortedList.TrimToSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-537">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="139b7-538">修剪空白<xref:System.Collections.SortedList>設定的容量<xref:System.Collections.SortedList>預設容量。</span><span class="sxs-lookup"><span data-stu-id="139b7-538">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="139b7-539">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.SortedList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="139b7-539">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="139b7-540">下列程式碼範例示範如何修剪的未使用的部分<xref:System.Collections.SortedList>物件，以及如何清除其值。</span><span class="sxs-lookup"><span data-stu-id="139b7-540">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="139b7-541">
            <see cref="T:System.Collections.SortedList" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-541">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="139b7-542">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-542">-or-</span>
          </span>
          <span data-ttu-id="139b7-543">
            <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-543">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="139b7-544">取得 <see cref="T:System.Collections.SortedList" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-544">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="139b7-545">
            <see cref="T:System.Collections.ICollection" /> 物件，其中含有 <see cref="T:System.Collections.SortedList" /> 物件中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="139b7-545">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="139b7-546"><xref:System.Collections.ICollection>物件是唯讀值的檢視<xref:System.Collections.SortedList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-546">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="139b7-547">對基礎修改<xref:System.Collections.SortedList>會立即反映在<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="139b7-547">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="139b7-548">項目<xref:System.Collections.ICollection>作為的值相同的順序排序<xref:System.Collections.SortedList>。</span><span class="sxs-lookup"><span data-stu-id="139b7-548">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="139b7-549">這個屬性是類似於<xref:System.Collections.SortedList.GetValueList%2A>方法，但傳回<xref:System.Collections.ICollection>物件而非<xref:System.Collections.IList>物件。</span><span class="sxs-lookup"><span data-stu-id="139b7-549">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="139b7-550">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="139b7-550">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
      </Docs>
    </Member>
  </Members>
</Type>