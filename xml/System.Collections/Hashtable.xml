<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d18dc244d03bb060da4688f17fe2f2eb8524ff0" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48687728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Hashtable = class&#xA;    interface IDictionary&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d093-101">代表根據索引鍵的雜湊程式碼，所整理的索引鍵/值組集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-102">每個項目是儲存在索引鍵/值組<xref:System.Collections.DictionaryEntry>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="3d093-103">金鑰不能是`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="3d093-103">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="3d093-104">做為索引鍵所使用的物件<xref:System.Collections.Hashtable>才能覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IHashCodeProvider>介面) 和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IComparer>介面)。</span><span class="sxs-lookup"><span data-stu-id="3d093-104">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="3d093-105">方法和介面的實作必須處理區分大小寫相同的方式;否則，<xref:System.Collections.Hashtable>可能不正確地運作。</span><span class="sxs-lookup"><span data-stu-id="3d093-105">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="3d093-106">例如，建立<xref:System.Collections.Hashtable>，您必須使用<xref:System.Collections.CaseInsensitiveHashCodeProvider>類別 (或任何不區分大小寫<xref:System.Collections.IHashCodeProvider>實作) 與<xref:System.Collections.CaseInsensitiveComparer>類別 (或任何不區分大小寫<xref:System.Collections.IComparer>實作)。</span><span class="sxs-lookup"><span data-stu-id="3d093-106">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="3d093-107">此外，這些方法必須產生相同的結果時的索引鍵存在於相同的參數呼叫時<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-107">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-108">替代方式是使用<xref:System.Collections.Hashtable>建構函式與<xref:System.Collections.IEqualityComparer>參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-108">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="3d093-109">只需參考相等的繼承實作是否包含索引鍵相等與否<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>即已足夠。</span><span class="sxs-lookup"><span data-stu-id="3d093-109">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="3d093-110">索引鍵物件必須是不可變，只要當做索引鍵中使用<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-110">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="3d093-111">若要新增的項目時<xref:System.Collections.Hashtable>，項目放入貯體根據索引鍵的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="3d093-111">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="3d093-112">後續的查閱索引鍵使用索引鍵的雜湊程式的碼搜尋中只有一個特定的貯體，因此可大幅減少要尋找的項目所需的索引鍵比較的數量。</span><span class="sxs-lookup"><span data-stu-id="3d093-112">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="3d093-113">負載因數<xref:System.Collections.Hashtable>判斷雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-113">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-114">較小的載入因數會更快的平均查閱次數，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-114">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-115">預設的載入因數，1.0 的通常會提供速度與大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-115">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="3d093-116">也可以是不同的負載因數時指定<xref:System.Collections.Hashtable>建立。</span><span class="sxs-lookup"><span data-stu-id="3d093-116">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="3d093-117">當項目加入至<xref:System.Collections.Hashtable>，實際的載入因數的<xref:System.Collections.Hashtable>會增加。</span><span class="sxs-lookup"><span data-stu-id="3d093-117">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="3d093-118">當實際的載入因數到達指定的載入因數，貯體數目<xref:System.Collections.Hashtable>會自動增加至超過兩次的目前數目最小質數<xref:System.Collections.Hashtable>貯體。</span><span class="sxs-lookup"><span data-stu-id="3d093-118">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="3d093-119">每個索引鍵的物件，在<xref:System.Collections.Hashtable>必須提供自己的雜湊函式，藉由呼叫可存取<xref:System.Collections.Hashtable.GetHash%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-119">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="3d093-120">不過，任何物件會實作<xref:System.Collections.IHashCodeProvider>可以傳遞至<xref:System.Collections.Hashtable>建構函式，和雜湊函式，用於資料表中的所有物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-120">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="3d093-121">營運<xref:System.Collections.Hashtable>是的項目數<xref:System.Collections.Hashtable>可以保存。</span><span class="sxs-lookup"><span data-stu-id="3d093-121">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="3d093-122">當項目新增至<xref:System.Collections.Hashtable>，自動增加容量視需要透過重新配置。</span><span class="sxs-lookup"><span data-stu-id="3d093-122">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="3d093-123">針對非常大型<xref:System.Collections.Hashtable>物件，您可以藉由設定增加到 64 位元系統上的 2 億個元素的最大容量`enabled`屬性的組態項目`true`在執行階段環境中。</span><span class="sxs-lookup"><span data-stu-id="3d093-123">For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="3d093-124">`foreach` C# 語言的陳述式 (`For Each` Visual Basic 中) 傳回集合中的項目類型的物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-124">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="3d093-125">因為每個項目的<xref:System.Collections.Hashtable>是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</span><span class="sxs-lookup"><span data-stu-id="3d093-125">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="3d093-126">相反地，項目型別是<xref:System.Collections.DictionaryEntry>。</span><span class="sxs-lookup"><span data-stu-id="3d093-126">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="3d093-127">例如: </span><span class="sxs-lookup"><span data-stu-id="3d093-127">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="3d093-128">`foreach`陳述式是一個包裝函式只允許讀取，不寫入至集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="3d093-128">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="3d093-129">因為序列化和還原序列化的列舉值<xref:System.Collections.Hashtable>可能會導致要成為重新排序的項目，就無法繼續列舉型別，而不需呼叫<xref:System.Collections.IEnumerator.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-129">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d093-130">因為可繼承索引鍵，並變更其行為，其絕對唯一性無法保證使用比較<xref:System.Type.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-130">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-131">下列範例示範如何建立、 初始化和執行各種功能至<xref:System.Collections.Hashtable>，以及如何列印出其索引鍵和值。</span><span class="sxs-lookup"><span data-stu-id="3d093-131">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="3d093-132">
        <see cref="T:System.Collections.Hashtable" /> 為使用多個讀取器執行緒和單一寫入執行緒安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-132">
          <see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span>
      </span>
      <span data-ttu-id="3d093-133">它是執行緒安全多執行緒使用時，只有其中一個執行緒執行寫入 （更新） 作業，以達到無鎖定的讀取，前提是寫入器序列化為<see cref="T:System.Collections.Hashtable" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-133">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span>
      </span>
      <span data-ttu-id="3d093-134">若要支援多個寫入器上的所有作業<see cref="T:System.Collections.Hashtable" />必須透過包裝函式所傳回<see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />方法，提供沒有執行緒讀取<see cref="T:System.Collections.Hashtable" />物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-134">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span>
      </span>
      <span data-ttu-id="3d093-135">透過集合列舉是本質上並非安全執行緒的程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-135">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="3d093-136">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-136">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="3d093-137">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d093-137">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-138">初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-138">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d093-139">使用預設初始容量、載入因數、雜湊程式碼提供者和比較子，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-139">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-140">雜湊資料表的容量用來計算最佳的載入因數為基礎的雜湊資料表貯體數目。</span><span class="sxs-lookup"><span data-stu-id="3d093-140">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="3d093-141">會自動增加容量，會視需要而定。</span><span class="sxs-lookup"><span data-stu-id="3d093-141">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="3d093-142">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-142">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-143">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-143">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-144">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-144">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-145">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-145">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-146">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-146">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-147">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-147">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-148">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-148">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-149">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-149">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-150">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-150">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-151">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-151">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-152">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-152">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-153">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-153">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-154">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用預設載入因數、雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-154">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-155">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-155">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-156">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-156">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-157">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-157">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-158">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-158">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-159">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-159">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-160">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-160">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-161">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-161">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-162">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-162">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-163">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-163">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-164">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-164">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-165">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-165">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-166">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-166">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-167">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-167">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-168">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-168">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer">
          <span data-ttu-id="3d093-169">
            <see cref="T:System.Collections.IEqualityComparer" /> 物件，它會定義與 <see cref="T:System.Collections.Hashtable" /> 物件並用的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-169">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-170">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-170">-or-</span>
          </span>
          <span data-ttu-id="3d093-171">
            <see langword="null" /> 表示使用預設雜湊程式碼提供者和預設比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-171">
              <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="3d093-172">預設雜湊程式碼提供者是各金鑰的 <see cref="M:System.Object.GetHashCode" /> 實作，而預設比較子是各金鑰的 <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-172">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-173">使用預設的初始容量和載入因數，以及指定的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.IEqualityComparer" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-173">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-174">雜湊資料表的容量用來計算最佳的載入因數為基礎的雜湊資料表貯體數目。</span><span class="sxs-lookup"><span data-stu-id="3d093-174">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="3d093-175">會自動增加容量，會視需要而定。</span><span class="sxs-lookup"><span data-stu-id="3d093-175">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="3d093-176">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-176">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-177">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-177">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-178">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-178">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-179"><xref:System.Collections.IEqualityComparer>物件包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-179">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="3d093-180">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>物件不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-180">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-181">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-181">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-182">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-182">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-183">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-183">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-184">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-184">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-185">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-185">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-186"><xref:System.Collections.IEqualityComparer>啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-186">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-187">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-187">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-188">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-188">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-189">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-189">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-190">使用指定的初始容量以及預設的載入因數、雜湊程式碼提供者和比較子，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-190">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-191">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-191">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-192">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-192">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-193">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-193">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-194">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-194">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-195">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-195">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-196">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-196">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-197">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-197">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-198">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-198">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-199">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-199">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-200">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-200">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-201">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="3d093-201">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-202">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-202">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-203">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-203">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-204">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-204">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="3d093-205">
            <see cref="T:System.Collections.IEqualityComparer" /> 物件，它會定義與 <see cref="T:System.Collections.Hashtable" /> 並用的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-205">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-206">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-206">-or-</span>
          </span>
          <span data-ttu-id="3d093-207">
            <see langword="null" /> 表示使用預設雜湊程式碼提供者和預設比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-207">
              <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="3d093-208">預設雜湊程式碼提供者是各金鑰的 <see cref="M:System.Object.GetHashCode" /> 實作，而預設比較子是各金鑰的 <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-208">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-209">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-209">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-210">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用預設的載入因數以及指定的 <see cref="T:System.Collections.IEqualityComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-210">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-211">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-211">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-212">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-212">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-213">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-213">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-214">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-214">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-215">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-215">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-216"><xref:System.Collections.IEqualityComparer>物件包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-216">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="3d093-217">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>物件不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-217">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-218">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-218">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-219">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-219">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-220">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-220">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-221">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-221">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-222">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-222">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-223"><xref:System.Collections.IEqualityComparer>啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-223">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-224">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-224">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-225">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-225">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-226">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-226">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-227">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-227">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-228">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-228">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-229">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-229">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-230">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-230">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-231">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-231">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-232">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用指定的載入因數，以及預設的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-232">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-233">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-233">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-234">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-234">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-235">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-235">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-236">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-236">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-237">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-237">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-238">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-238">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-239">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-239">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-240">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-240">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-241">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-241">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-242">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-242">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-243">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-243">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-244">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-244">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-245">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-245">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-246">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-246">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-247">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-247">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-248">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-248">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-249">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-249">-or-</span>
          </span>
          <span data-ttu-id="3d093-250">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-250">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hcp">
          <span data-ttu-id="3d093-251">
            <see cref="T:System.Collections.IHashCodeProvider" /> 物件，為 <see cref="T:System.Collections.Hashtable" /> 物件中的所有索引鍵提供雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-251">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-252">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-252">-or-</span>
          </span>
          <span data-ttu-id="3d093-253">要使用預設雜湊程式碼提供者的 <see langword="null" /> 是每個索引鍵的 <see cref="M:System.Object.GetHashCode" /> 之實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-253">
              <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3d093-254">要用來判斷兩個索引鍵是否相等的 <see cref="T:System.Collections.IComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-254">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="3d093-255">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-255">-or-</span>
          </span>
          <span data-ttu-id="3d093-256">表示使用預設比較子的 <see langword="null" />，預設比較子是每個索引鍵的  <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-256">
              <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-257">使用預設的初始容量和載入因數，以及指定的雜湊程式碼提供者和比較子，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-257">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-258">雜湊資料表的容量用來計算最佳的載入因數為基礎的雜湊資料表貯體數目。</span><span class="sxs-lookup"><span data-stu-id="3d093-258">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="3d093-259">會自動增加容量，會視需要而定。</span><span class="sxs-lookup"><span data-stu-id="3d093-259">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="3d093-260">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-260">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-261">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-261">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-262">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-262">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-263">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-263">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-264">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-264">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-265">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-265">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-266">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-266">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-267">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-267">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-268">自訂的雜湊程式碼提供者和自訂比較子啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-268">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-269">這個建構函式是 o （1） 的作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-269">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-270">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-270">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-271">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-271">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="3d093-272">
            <see cref="T:System.Collections.IEqualityComparer" /> 物件，它會定義與 <see cref="T:System.Collections.Hashtable" /> 並用的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-272">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-273">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-273">-or-</span>
          </span>
          <span data-ttu-id="3d093-274">
            <see langword="null" /> 表示使用預設雜湊程式碼提供者和預設比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-274">
              <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="3d093-275">預設雜湊程式碼提供者是各金鑰的 <see cref="M:System.Object.GetHashCode" /> 實作，而預設比較子是各金鑰的 <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-275">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-276">使用指定的初始容量和 <see cref="T:System.Collections.Hashtable" />，以及預設的載入因數，初始化 <see cref="T:System.Collections.IEqualityComparer" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-276">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-277">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-277">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-278">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-278">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-279">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-279">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-280">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-280">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-281">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-281">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-282"><xref:System.Collections.IEqualityComparer>物件包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-282">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="3d093-283">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-283">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-284">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-284">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-285">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-285">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-286">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-286">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-287">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-287">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-288">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-288">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-289"><xref:System.Collections.IEqualityComparer>啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-289">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-290">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-290">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-291">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-291">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-292">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-292">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-293">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-293">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-294">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-294">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-295">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-295">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-296">使用指定的初始容量和載入因數，以及預設的雜湊程式碼提供者和比較子，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-296">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-297">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-297">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-298">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-298">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-299">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-299">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-300">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-300">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-301">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-301">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-302">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-302">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-303">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-303">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-304">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-304">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-305">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-305">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-306">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-306">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-307">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-307">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-308">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-308">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-309">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-309">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-310">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-310">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d093-311">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-311">-or-</span>
          </span>
          <span data-ttu-id="3d093-312">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-312">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-313">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-313">-or-</span>
          </span>
          <span data-ttu-id="3d093-314">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-314">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-315">
            <paramref name="capacity" /> 導致溢位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-315">
              <paramref name="capacity" /> is causing an overflow.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3d093-316">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，含有要序列化 <see cref="T:System.Collections.Hashtable" /> 物件的必要資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-316">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3d093-317">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含 <see cref="T:System.Collections.Hashtable" /> 所關聯之序列化資料流的來源及目的地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-317">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-318">初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體，這個執行個體可序列化，並使用指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-318">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-319">雜湊資料表的容量用來計算最佳的載入因數為基礎的雜湊資料表貯體數目。</span><span class="sxs-lookup"><span data-stu-id="3d093-319">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="3d093-320">會自動增加容量，會視需要而定。</span><span class="sxs-lookup"><span data-stu-id="3d093-320">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="3d093-321">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-321">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-322">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-322">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-323">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-323">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-324">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-324">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-325">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-325">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-326">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-326">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-327">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-327">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-328">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-328">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-329">這個建構函式是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-329">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="3d093-330">因為序列化和還原序列化的列舉值<xref:System.Collections.Hashtable>可能會導致要成為重新排序的項目，就無法繼續列舉型別，而不需呼叫<xref:System.Collections.IEnumerator.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-330">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-331">
            <paramref name="info" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-331">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-332">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-332">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="3d093-333">
            <see cref="T:System.Collections.IHashCodeProvider" /> 物件，它會為 <see cref="T:System.Collections.Hashtable" /> 中的所有索引鍵提供雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-333">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-334">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-334">-or-</span>
          </span>
          <span data-ttu-id="3d093-335">要使用預設雜湊程式碼提供者的 <see langword="null" /> 是每個索引鍵的 <see cref="M:System.Object.GetHashCode" /> 之實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-335">
              <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3d093-336">要用來判斷兩個索引鍵是否相等的 <see cref="T:System.Collections.IComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-336">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="3d093-337">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-337">-or-</span>
          </span>
          <span data-ttu-id="3d093-338">表示使用預設比較子的 <see langword="null" />，預設比較子是每個索引鍵的  <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-338">
              <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-339">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-339">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-340">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用預設的載入因數，以及指定的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-340">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span>
          </span>
          <span data-ttu-id="3d093-341">這個 API 已經過時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-341">This API is obsolete.</span>
          </span>
          <span data-ttu-id="3d093-342">請參閱 <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" /> 以瞭解替代步驟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-342">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-343">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-343">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-344">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-344">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-345">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-345">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-346">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-346">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-347">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-347">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-348">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-348">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-349">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-349">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-350">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-350">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-351">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-351">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-352">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-352">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-353">自訂的雜湊程式碼提供者和自訂比較子啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-353">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-354">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-354">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-355">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-355">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-356">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-356">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-357">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-357">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-358">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-358">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-359">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-359">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-360">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-360">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="3d093-361">
            <see cref="T:System.Collections.IEqualityComparer" /> 物件，它會定義與 <see cref="T:System.Collections.Hashtable" /> 並用的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-361">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-362">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-362">-or-</span>
          </span>
          <span data-ttu-id="3d093-363">
            <see langword="null" /> 表示使用預設雜湊程式碼提供者和預設比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-363">
              <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="3d093-364">預設雜湊程式碼提供者是各金鑰的 <see cref="M:System.Object.GetHashCode" /> 實作，而預設比較子是各金鑰的 <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-364">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-365">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-365">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-366">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用指定的載入因數和 <see cref="T:System.Collections.IEqualityComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-366">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-367">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-367">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-368">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-368">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-369">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-369">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-370">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-370">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-371">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-371">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-372">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-372">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-373"><xref:System.Collections.IEqualityComparer>物件包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-373">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="3d093-374">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>物件不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-374">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-375">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-375">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-376">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-376">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-377">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-377">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-378">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-378">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-379">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-379">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-380"><xref:System.Collections.IEqualityComparer>啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-380">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-381">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-381">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-382">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-382">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-383">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-383">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-384">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-384">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-385">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-385">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-386">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-386">-or-</span>
          </span>
          <span data-ttu-id="3d093-387">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-387">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-388">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-388">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="3d093-389">
            <see cref="T:System.Collections.IHashCodeProvider" /> 物件，它會為 <see cref="T:System.Collections.Hashtable" /> 中的所有索引鍵提供雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-389">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-390">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-390">-or-</span>
          </span>
          <span data-ttu-id="3d093-391">要使用預設雜湊程式碼提供者的 <see langword="null" /> 是每個索引鍵的 <see cref="M:System.Object.GetHashCode" /> 之實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-391">
              <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3d093-392">要用來判斷兩個索引鍵是否相等的 <see cref="T:System.Collections.IComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-392">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="3d093-393">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-393">-or-</span>
          </span>
          <span data-ttu-id="3d093-394">表示使用預設比較子的 <see langword="null" />，預設比較子是每個索引鍵的  <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-394">
              <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-395">使用指定的初始容量、雜湊程式碼提供者、比較子和預設的載入因數，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-395">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-396">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-396">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-397">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-397">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-398">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-398">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-399">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-399">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="3d093-400">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-400">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-401">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-401">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-402">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-402">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-403">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-403">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-404">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-404">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-405">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-405">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-406">自訂的雜湊程式碼提供者和自訂比較子啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-406">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-407">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-407">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-408">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-408">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-409">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-409">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-410">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-410">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-411">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-411">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-412">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-412">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="3d093-413">
            <see cref="T:System.Collections.IEqualityComparer" /> 物件，它會定義與 <see cref="T:System.Collections.Hashtable" /> 並用的雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-413">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-414">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-414">-or-</span>
          </span>
          <span data-ttu-id="3d093-415">
            <see langword="null" /> 表示使用預設雜湊程式碼提供者和預設比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-415">
              <see langword="null" /> to use the default hash code provider and the default comparer.</span>
          </span>
          <span data-ttu-id="3d093-416">預設雜湊程式碼提供者是各金鑰的 <see cref="M:System.Object.GetHashCode" /> 實作，而預設比較子是各金鑰的 <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-416">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-417">使用指定的初始容量、載入因數和 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.IEqualityComparer" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-417">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-418">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-418">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-419">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-419">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-420">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-420">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-421">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-421">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-422">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-422">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-423">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-423">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-424"><xref:System.Collections.IEqualityComparer>物件包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-424">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="3d093-425">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-425">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-426">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-426">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-427">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-427">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-428">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-428">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-429">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-429">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-430">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-430">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-431"><xref:System.Collections.IEqualityComparer>啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-431">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-432">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-432">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-433">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-433">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-434">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-434">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d093-435">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-435">-or-</span>
          </span>
          <span data-ttu-id="3d093-436">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-436">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-437">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-437">-or-</span>
          </span>
          <span data-ttu-id="3d093-438">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-438">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="3d093-439">要複製到新 <see cref="T:System.Collections.IDictionary" /> 物件的 <see cref="T:System.Collections.Hashtable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-439">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-440">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-440">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-441">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-441">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="3d093-442">
            <see cref="T:System.Collections.IHashCodeProvider" /> 物件，它會為 <see cref="T:System.Collections.Hashtable" /> 中的所有索引鍵提供雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-442">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-443">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-443">-or-</span>
          </span>
          <span data-ttu-id="3d093-444">要使用預設雜湊程式碼提供者的 <see langword="null" /> 是每個索引鍵的 <see cref="M:System.Object.GetHashCode" /> 之實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-444">
              <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3d093-445">要用來判斷兩個索引鍵是否相等的 <see cref="T:System.Collections.IComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-445">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="3d093-446">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-446">-or-</span>
          </span>
          <span data-ttu-id="3d093-447">表示使用預設比較子的 <see langword="null" />，預設比較子是每個索引鍵的  <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-447">
              <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-448">藉由將指定字典中的項目複製到新的 <see cref="T:System.Collections.Hashtable" /> 物件，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-448">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span>
          </span>
          <span data-ttu-id="3d093-449">新 <see cref="T:System.Collections.Hashtable" /> 物件的初始容量等於複製的項目數，並且此物件使用指定的載入因數、雜湊程式碼提供者和比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-449">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-450">初始容量設定為來源字典中的項目數。</span><span class="sxs-lookup"><span data-stu-id="3d093-450">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="3d093-451">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-451">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-452">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-452">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-453">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-453">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-454">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-454">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-455">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-455">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-456">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-456">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-457">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-457">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-458">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-458">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-459">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-459">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-460">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-460">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-461">自訂的雜湊程式碼提供者和自訂比較子啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-461">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-462">新的項目<xref:System.Collections.Hashtable>都會依照相同的順序，在其中將列舉值逐一查看<xref:System.Collections.IDictionary>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-462">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="3d093-463">這個建構函式是 O (`n`) 運算，其中`n`是中的項目數`d`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-463">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-464">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-464">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-465">
            <paramref name="d" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-465">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-466">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-466">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-467">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-467">-or-</span>
          </span>
          <span data-ttu-id="3d093-468">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-468">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3d093-469">
            <see cref="T:System.Collections.Hashtable" /> 物件一開始可包含項目的大約數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-469">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span>
          </span>
        </param>
        <param name="loadFactor">
          <span data-ttu-id="3d093-470">從 0.1 到 1.0 範圍中的數字乘以預設值，提供最佳效能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-470">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span>
          </span>
          <span data-ttu-id="3d093-471">結果是雜湊桶項目的最大比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-471">The result is the maximum ratio of elements to buckets.</span>
          </span>
        </param>
        <param name="hcp">
          <span data-ttu-id="3d093-472">
            <see cref="T:System.Collections.IHashCodeProvider" /> 物件，它會為 <see cref="T:System.Collections.Hashtable" /> 中的所有索引鍵提供雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-472">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-473">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-473">-or-</span>
          </span>
          <span data-ttu-id="3d093-474">要使用預設雜湊程式碼提供者的 <see langword="null" /> 是每個索引鍵的 <see cref="M:System.Object.GetHashCode" /> 之實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-474">
              <see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="3d093-475">要用來判斷兩個索引鍵是否相等的 <see cref="T:System.Collections.IComparer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-475">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span>
          </span>
          <span data-ttu-id="3d093-476">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-476">-or-</span>
          </span>
          <span data-ttu-id="3d093-477">表示使用預設比較子的 <see langword="null" />，預設比較子是每個索引鍵的  <see cref="M:System.Object.Equals(System.Object)" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-477">
              <see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-478">使用指定的初始容量、載入因數、雜湊程式碼提供者和比較子，初始化 <see cref="T:System.Collections.Hashtable" /> 類別的空白新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-478">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-479">指定初始容量，就不需要執行數項調整大小作業新增項目時<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-479">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="3d093-480">容量會自動視需要增加的負載因數為基礎。</span><span class="sxs-lookup"><span data-stu-id="3d093-480">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="3d093-481">載入因數是雜湊桶項的最大比例。</span><span class="sxs-lookup"><span data-stu-id="3d093-481">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="3d093-482">較小的載入因數表示更快的查閱，但是相對地增加的記憶體耗用量。</span><span class="sxs-lookup"><span data-stu-id="3d093-482">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="3d093-483">1.0 的負載因數是速度和大小之間的最佳平衡。</span><span class="sxs-lookup"><span data-stu-id="3d093-483">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="3d093-484">當實際的載入因數達到指定的載入因數時，貯體數目會自動增加到大於兩次目前的貯體數目最小質數。</span><span class="sxs-lookup"><span data-stu-id="3d093-484">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="3d093-485">雜湊程式碼提供者上精心篩選中的索引鍵的雜湊碼<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-485">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-486">預設雜湊碼提供者是索引鍵的實作<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-486">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-487">比較子判斷兩個索引鍵是否相等。</span><span class="sxs-lookup"><span data-stu-id="3d093-487">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="3d093-488">在每個索引鍵<xref:System.Collections.Hashtable>必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="3d093-488">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="3d093-489">預設比較子是索引鍵的實作<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-489">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3d093-490">自訂的雜湊程式碼提供者和自訂比較子啟用的案例，例如執行查詢，使用不區分大小寫的字串。</span><span class="sxs-lookup"><span data-stu-id="3d093-490">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="3d093-491">這個建構函式是 O (`n`) 運算，其中`n`是`capacity`參數。</span><span class="sxs-lookup"><span data-stu-id="3d093-491">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-492">下列程式碼範例會使用雜湊表建立為不同<xref:System.Collections.Hashtable>建構函式，並示範中的雜湊表中，行為的差異，即使每個包含相同的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-492">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-493">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-493">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3d093-494">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-494">-or-</span>
          </span>
          <span data-ttu-id="3d093-495">
            <paramref name="loadFactor" /> 小於 0.1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-495">
              <paramref name="loadFactor" /> is less than 0.1.</span>
          </span>
          <span data-ttu-id="3d093-496">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-496">-or-</span>
          </span>
          <span data-ttu-id="3d093-497">
            <paramref name="loadFactor" /> 大於 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-497">
              <paramref name="loadFactor" /> is greater than 1.0.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hashtable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-498">要加入的項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-498">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3d093-499">要加入的項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-499">The value of the element to add.</span>
          </span>
          <span data-ttu-id="3d093-500">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-500">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-501">將有指定索引鍵和數值的項目加入 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-501">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-502">金鑰不能是`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="3d093-502">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="3d093-503">具有其狀態和其雜湊碼值之間沒有相互關聯的物件通常不應做為索引鍵。</span><span class="sxs-lookup"><span data-stu-id="3d093-503">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="3d093-504">例如，字串物件做為索引鍵是優於使用 StringBuilder 物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-504">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="3d093-505">您也可以使用<xref:System.Collections.Hashtable.Item%2A>屬性來設定索引鍵的值加入新項目不存在於<xref:System.Collections.Hashtable>; 例如， `myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="3d093-505">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="3d093-506">不過，如果指定的索引鍵已存在於<xref:System.Collections.Hashtable>，將<xref:System.Collections.Hashtable.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="3d093-506">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="3d093-507">相反地，<xref:System.Collections.Hashtable.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-507">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="3d093-508">如果<xref:System.Collections.Hashtable.Count%2A>容量少於<xref:System.Collections.Hashtable>，這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-508">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="3d093-509">如果容量需要增加，以容納新的項目，這個方法會變成 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-509">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-510">下列範例示範如何加入項目來<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-510">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-511">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-511">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-512">
            <see cref="T:System.Collections.Hashtable" /> 中已存在具有相同索引鍵的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-512">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d093-513">
            <see cref="T:System.Collections.Hashtable" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-513">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="3d093-514">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-514">-or-</span>
          </span>
          <span data-ttu-id="3d093-515">
            <see cref="T:System.Collections.Hashtable" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-515">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hashtable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d093-516">移除 <see cref="T:System.Collections.Hashtable" /> 中的所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-516">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-517"><xref:System.Collections.Hashtable.Count%2A> 是設為零，並且從項目集合中的其他物件的參考也釋出。</span><span class="sxs-lookup"><span data-stu-id="3d093-517"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="3d093-518">容量會維持不變。</span><span class="sxs-lookup"><span data-stu-id="3d093-518">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="3d093-519">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-519">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-520">下列範例示範如何清除的值<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-520">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d093-521">
            <see cref="T:System.Collections.Hashtable" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-521">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="hashtable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d093-522">建立 <see cref="T:System.Collections.Hashtable" /> 的淺層複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-522">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-523">
            <see cref="T:System.Collections.Hashtable" /> 的淺層複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-523">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-524">不論它們是參考型別或實值型別，但是它不會複製參考所參考的物件集合的元素複製集合的淺層複本。</span><span class="sxs-lookup"><span data-stu-id="3d093-524">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="3d093-525">新的集合中的參考會指向相同原始集合中的參考所指向的物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-525">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="3d093-526">相反地，項目複製集合的深層複本，並直接或間接參考的元素，所有項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-526">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="3d093-527"><xref:System.Collections.Hashtable>複製品具有相同的計數，相同的容量，相同<xref:System.Collections.IHashCodeProvider>實作，以及相同<xref:System.Collections.IComparer>實作與原始<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-527">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="3d093-528">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-528">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.comparer : System.Collections.IComparer with get, set" Usage="System.Collections.Hashtable.comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-529">取得或設定 <see cref="T:System.Collections.IComparer" /> 所使用的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-529">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-530">
            <see cref="T:System.Collections.IComparer" /> 所使用的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-530">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-531">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-531">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-532">屬性設為值，但使用 <see cref="T:System.Collections.IEqualityComparer" /> 建立雜湊資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-532">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hashtable.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-533">要在 <see cref="T:System.Collections.Hashtable" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-533">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-534">判斷 <see cref="T:System.Collections.Hashtable" /> 是否包含特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-534">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-535">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Hashtable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-535">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-536"><xref:System.Collections.Hashtable.Contains%2A> 會實作 <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3d093-536"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3d093-537">它的行為就像<xref:System.Collections.Hashtable.ContainsKey%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-537">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="3d093-538">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-538">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="3d093-539">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>上的方法`item`以判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="3d093-539">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="3d093-540">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-540">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-541">下列範例示範如何判斷是否<xref:System.Collections.Hashtable>包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-541">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-542">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-542">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="hashtable.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-543">要在 <see cref="T:System.Collections.Hashtable" /> 中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-543">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-544">判斷 <see cref="T:System.Collections.Hashtable" /> 是否包含特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-544">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-545">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Hashtable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-545">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-546">這個方法的行為就像<xref:System.Collections.Hashtable.Contains%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-546">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="3d093-547">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-547">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="3d093-548">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>上的方法`item`以判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="3d093-548">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="3d093-549">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-549">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-550">下列範例示範如何判斷是否<xref:System.Collections.Hashtable>包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-550">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-551">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-551">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="hashtable.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3d093-552">要在 <see cref="T:System.Collections.Hashtable" /> 中尋找的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-552">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-553">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-553">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-554">判斷 <see cref="T:System.Collections.Hashtable" /> 是否包含特定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-554">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-555">如果 <see langword="true" /> 包含具有指定 <see cref="T:System.Collections.Hashtable" /> 的項目，則為 <paramref name="value" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-555">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-556">項目的值<xref:System.Collections.Hashtable>會比較指定的值使用<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-556">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3d093-557">這個方法會執行線性搜尋;因此，這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-557">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="3d093-558">從.NET Framework 2.0 開始，這個方法會使用集合的物件<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>上的方法`item`以判斷項目是否存在。</span><span class="sxs-lookup"><span data-stu-id="3d093-558">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="3d093-559">在舊版的.NET Framework 中，藉由進行這項判斷<xref:System.Object.Equals%2A>並<xref:System.IComparable.CompareTo%2A>方法`item`參數集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-559">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-560">下列範例示範如何判斷是否<xref:System.Collections.Hashtable>包含特定項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-560">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hashtable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="3d093-561">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.DictionaryEntry" /> 複製過來的 <see cref="T:System.Collections.Hashtable" /> 物件之目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-561">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
          <span data-ttu-id="3d093-562">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-562">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="3d093-563">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-563">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-564">將 <see cref="T:System.Collections.Hashtable" /> 元素複製到指定索引的一維 <see cref="T:System.Array" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-564">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-565">將元素複製到<xref:System.Array>所在的列舉值逐一查看的順序相同<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-565">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="3d093-566">若要複製的中索引鍵<xref:System.Collections.Hashtable>，使用`Hashtable.Keys.CopyTo`。</span><span class="sxs-lookup"><span data-stu-id="3d093-566">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="3d093-567">若要複製中的值<xref:System.Collections.Hashtable>，使用`Hashtable.Values.CopyTo`。</span><span class="sxs-lookup"><span data-stu-id="3d093-567">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="3d093-568">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-568">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-569">下列範例示範如何將複製的索引鍵清單或清單中的值<xref:System.Collections.Hashtable>至一維<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="3d093-569">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-570">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-570">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3d093-571">
            <paramref name="arrayIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-571">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-572">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-572">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="3d093-573">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-573">-or-</span>
          </span>
          <span data-ttu-id="3d093-574">來源 <see cref="T:System.Collections.Hashtable" /> 中的項目數大於 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-574">The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3d093-575">來源 <see cref="T:System.Collections.Hashtable" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-575">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Hashtable.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-576">取得 <see cref="T:System.Collections.Hashtable" /> 中所包含的索引鍵/值組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-576">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-577">
            <see cref="T:System.Collections.Hashtable" /> 中所包含的索引鍵/值組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-577">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-578">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-578">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.Hashtable.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-579">取得 <see cref="T:System.Collections.IEqualityComparer" /> 所使用的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-579">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-580">
            <see cref="T:System.Collections.IEqualityComparer" /> 所使用的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-580">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-581"><xref:System.Collections.IEqualityComparer>包含雜湊程式碼提供者和比較子。</span><span class="sxs-lookup"><span data-stu-id="3d093-581">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="3d093-582">如果<xref:System.Collections.IEqualityComparer>用於<xref:System.Collections.Hashtable>建構函式，做為索引鍵中使用的物件<xref:System.Collections.Hashtable>不需要覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-582">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="3d093-583">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-583">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-584">屬性設為值，但使用 <see cref="T:System.Collections.IHashCodeProvider" /> 和 <see cref="T:System.Collections.IComparer" /> 建立雜湊資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-584">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hashtable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d093-585">傳回透過 <see cref="T:System.Collections.IDictionaryEnumerator" /> 重複的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-585">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-586">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-586">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-587">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="3d093-587">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="3d093-588">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="3d093-588">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="3d093-589">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="3d093-589">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="3d093-590">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="3d093-590">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3d093-591">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="3d093-591">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3d093-592"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="3d093-592"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="3d093-593">在這個位置上，<xref:System.Collections.IEnumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="3d093-593">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="3d093-594">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-594">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3d093-595"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-595"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="3d093-596"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-596"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="3d093-597">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d093-597">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3d093-598">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d093-598">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="3d093-599">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="3d093-599">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="3d093-600">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-600">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="3d093-601">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="3d093-601">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="3d093-602">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="3d093-602">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="3d093-603">列舉值對集合並沒有獨佔存取，因此列舉集合在本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="3d093-603">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="3d093-604">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="3d093-604">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="3d093-605">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="3d093-605">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="3d093-606">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-606">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="3d093-607">因為序列化和還原序列化的列舉值<xref:System.Collections.Hashtable>可能會導致要成為重新排序的項目，就無法繼續列舉型別，而不需呼叫<xref:System.Collections.IEnumerator.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-607">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-608">下列範例會比較使用<xref:System.Collections.Hashtable.GetEnumerator%2A>並`foreach`列舉的內容<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-608">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetHash : obj -&gt; int&#xA;override this.GetHash : obj -&gt; int" Usage="hashtable.GetHash key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-609">要傳回雜湊碼的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-609">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-610">傳回指定索引鍵的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-610">Returns the hash code for the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-611">
            <paramref name="key" /> 的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-611">The hash code for <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-612">如果雜湊表建立具有特定<xref:System.Collections.IHashCodeProvider>實作，這個方法會使用該雜湊程式碼提供者; 否則它會使用<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>實作`key`。</span><span class="sxs-lookup"><span data-stu-id="3d093-612">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="3d093-613">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-613">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="3d093-614">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-614">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="hashtable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3d093-615">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含序列化 <see cref="T:System.Collections.Hashtable" /> 所需的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-615">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3d093-616">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含 <see cref="T:System.Collections.Hashtable" /> 所關聯之序列化資料流的來源及目的地。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-616">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-617">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Collections.Hashtable" /> 所需的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-617">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-618">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-618">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-619">
            <paramref name="info" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-619">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3d093-620">已修改集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-620">The collection was modified.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3d093-621">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-621">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3d093-622">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-622">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.hcp : System.Collections.IHashCodeProvider with get, set" Usage="System.Collections.Hashtable.hcp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-623">取得或設定可以分配雜湊程式碼的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-623">Gets or sets the object that can dispense hash codes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-624">物件，其可以分配雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-624">The object that can dispense hash codes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-625">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-625">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3d093-626">屬性設為值，但使用 <see cref="T:System.Collections.IEqualityComparer" /> 建立雜湊資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-626">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Hashtable.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-627">取得值，指出 <see cref="T:System.Collections.Hashtable" /> 是否有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-627">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-628">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.Hashtable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-628">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d093-629">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-629">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-630">具有固定大小的集合不允許在集合建立後新增或移除項目，但允許對現有項目進行修改。</span><span class="sxs-lookup"><span data-stu-id="3d093-630">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="3d093-631">具有固定大小集合是唯讀的集合只會防止新增和移除項目; 的包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="3d093-631">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="3d093-632">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-632">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Hashtable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-633">取得值，指出 <see cref="T:System.Collections.Hashtable" /> 是否唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-633">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-634">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.Hashtable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-634">
              <see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d093-635">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-635">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-636">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-636">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="3d093-637">是唯讀的集合是可防止修改集合的包裝函式集合因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="3d093-637">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="3d093-638">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-638">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Hashtable.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-639">取得值，這個值表示對 <see cref="T:System.Collections.Hashtable" /> 的存取是否同步 (安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-639">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-640">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.Hashtable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-640">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3d093-641">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-641">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-642">A<xref:System.Collections.Hashtable>可以同時支援一個寫入器和多個讀取器。</span><span class="sxs-lookup"><span data-stu-id="3d093-642">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="3d093-643">若要支援多個寫入器，所有作業必須都透過包裝函式所傳回<xref:System.Collections.Hashtable.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-643">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="3d093-644">透過集合列舉是本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="3d093-644">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="3d093-645">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-645">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="3d093-646">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-646">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="3d093-647">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.Hashtable.SyncRoot%2A>在整個列舉期間：</span><span class="sxs-lookup"><span data-stu-id="3d093-647">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="3d093-648">下列範例示範如何同步處理<xref:System.Collections.Hashtable>，判斷是否<xref:System.Collections.Hashtable>同步處理，並使用 同步處理<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-648">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Hashtable.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-649">索引鍵，要讀取或設定其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-649">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-650">取得或設定與指定之索引鍵相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-650">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-651">與指定之索引鍵關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-651">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="3d093-652">如果找不到指定的索引鍵，嘗試取得將傳回 <see langword="null" />，並且嘗試設定會使用指定的索引鍵建立新的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-652">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-653">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="3d093-653">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="3d093-654">您也可以使用<xref:System.Collections.Hashtable.Item%2A>屬性來設定索引鍵的值加入新項目不存在於<xref:System.Collections.Hashtable>; 例如， `myCollection["myNonexistentKey"] = myValue`。</span><span class="sxs-lookup"><span data-stu-id="3d093-654">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="3d093-655">不過，如果指定的索引鍵已存在於<xref:System.Collections.Hashtable>，將<xref:System.Collections.Hashtable.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="3d093-655">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="3d093-656">相反地，<xref:System.Collections.Hashtable.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-656">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="3d093-657">金鑰不能是`null`，但是值可以是。</span><span class="sxs-lookup"><span data-stu-id="3d093-657">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="3d093-658">區別`null`傳回因為找不到指定的索引鍵和`null`，就會傳回指定之索引鍵的值是因為`null`，使用<xref:System.Collections.Hashtable.Contains%2A>方法或<xref:System.Collections.Hashtable.ContainsKey%2A>方法，可判斷索引鍵存在於清單中。</span><span class="sxs-lookup"><span data-stu-id="3d093-658">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="3d093-659">擷取這個屬性的值是 o （1） 的作業;設定屬性，也是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-659">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="3d093-660">C# 語言使用關鍵字來定義索引，而不必實作<xref:System.Collections.IList.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3d093-660">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="3d093-661">Visual Basic 會將 <xref:System.Collections.Hashtable.Item%2A> 實作為預設屬性，這樣會提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="3d093-661">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-662">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-662">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d093-663">屬性已設定，而且 <see cref="T:System.Collections.Hashtable" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-663">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="3d093-664">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-664">-or-</span>
          </span>
          <span data-ttu-id="3d093-665">屬性已設定，<paramref name="key" /> 不存在於集合中，而且 <see cref="T:System.Collections.Hashtable" /> 具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-665">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member KeyEquals : obj * obj -&gt; bool&#xA;override this.KeyEquals : obj * obj -&gt; bool" Usage="hashtable.KeyEquals (item, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="3d093-666">要和 <c>key</c> 比較的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-666">The <see cref="T:System.Object" /> to compare with <c>key</c>.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="3d093-667">
            <see cref="T:System.Collections.Hashtable" /> 中要和 <c>item</c> 比較的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-667">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-668">比較特定的 <see cref="T:System.Object" /> 和 <see cref="T:System.Collections.Hashtable" /> 中的特定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-668">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-669">如果 <paramref name="item" /> 和 <paramref name="key" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-669">
              <see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-670">如果雜湊表建立具有特定<xref:System.Collections.IComparer>實作，這個方法會使用該比較子; 也就是說， <xref:System.Collections.IComparer.Compare%2A> (`item`， `key`)。</span><span class="sxs-lookup"><span data-stu-id="3d093-670">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="3d093-671">否則，它會使用`item.Equals(key)`。</span><span class="sxs-lookup"><span data-stu-id="3d093-671">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="3d093-672">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-672">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-673">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-673">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3d093-674">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-674">-or-</span>
          </span>
          <span data-ttu-id="3d093-675">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-675">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Hashtable.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-676">取得含有 <see cref="T:System.Collections.ICollection" /> 中的索引鍵的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-676">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-677">
            <see cref="T:System.Collections.ICollection" />，含有 <see cref="T:System.Collections.Hashtable" /> 中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-677">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-678">中的索引鍵的順序<xref:System.Collections.ICollection>未指定，但它是做為相關聯的值中的相同順序<xref:System.Collections.ICollection>所傳回<xref:System.Collections.Hashtable.Values%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-678">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="3d093-679">傳回<xref:System.Collections.ICollection>不是靜態的複本; 相反地，<xref:System.Collections.ICollection>原始中的索引鍵是指回<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-679">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-680">因此，變更<xref:System.Collections.Hashtable>才會反映在繼續<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="3d093-680">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="3d093-681">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-681">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="hashtable.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="3d093-682">還原序列化之事件的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-682">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-683">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並於還原序列化完成時引發還原序列化事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-683">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-684">這個方法是 O (`n`) 運算，其中`n`是<xref:System.Collections.Hashtable.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-684">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="3d093-685">因為序列化和還原序列化的列舉值<xref:System.Collections.Hashtable>可能會導致要成為重新排序的項目，就無法繼續列舉型別，而不需呼叫<xref:System.Collections.IEnumerator.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-685">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="3d093-686">與目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 關聯的 <see cref="T:System.Collections.Hashtable" /> 物件是無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-686">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hashtable.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3d093-687">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-687">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-688">將有指定索引鍵的項目從 <see cref="T:System.Collections.Hashtable" /> 移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-688">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-689">如果<xref:System.Collections.Hashtable>不包含具有指定之索引鍵的項目<xref:System.Collections.Hashtable>會維持不變。</span><span class="sxs-lookup"><span data-stu-id="3d093-689">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="3d093-690">不會有例外狀況擲回。</span><span class="sxs-lookup"><span data-stu-id="3d093-690">No exception is thrown.</span></span>  
  
 <span data-ttu-id="3d093-691">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-691">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-692">下列範例示範如何移除項目從<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-692">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-693">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-693">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3d093-694">
            <see cref="T:System.Collections.Hashtable" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-694">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span>
          </span>
          <span data-ttu-id="3d093-695">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-695">-or-</span>
          </span>
          <span data-ttu-id="3d093-696">
            <see cref="T:System.Collections.Hashtable" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-696">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Hashtable -&gt; System.Collections.Hashtable" Usage="System.Collections.Hashtable.Synchronized table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="3d093-697">要同步處理的 <see cref="T:System.Collections.Hashtable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-697">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d093-698">傳回 <see cref="T:System.Collections.Hashtable" /> 同步處理的 (安全執行緒) 包裝函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-698">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-699">
            <see cref="T:System.Collections.Hashtable" /> 的同步處理之 (安全執行緒) 包裝函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-699">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-700"><xref:System.Collections.Hashtable.Synchronized%2A>方法具備執行緒安全之多個讀取器和寫入器。</span><span class="sxs-lookup"><span data-stu-id="3d093-700">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="3d093-701">此外，同步處理的包裝函式可確保沒有撰寫一次只能有一個寫入器。</span><span class="sxs-lookup"><span data-stu-id="3d093-701">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="3d093-702">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="3d093-702">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="3d093-703">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-703">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="3d093-704">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-704">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="3d093-705">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.Hashtable.SyncRoot%2A>在整個列舉期間：</span><span class="sxs-lookup"><span data-stu-id="3d093-705">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="3d093-706">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-706">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d093-707">下列範例示範如何同步處理<xref:System.Collections.Hashtable>，判斷是否<xref:System.Collections.Hashtable>同步處理，並使用 同步處理<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-707">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3d093-708">
            <paramref name="table" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-708">
              <paramref name="table" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Hashtable.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-709">取得可用以同步存取 <see cref="T:System.Collections.Hashtable" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-709">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-710">可用以同步存取 <see cref="T:System.Collections.Hashtable" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-710">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-711">若要建立的同步處理的版本<xref:System.Collections.Hashtable>，使用<xref:System.Collections.Hashtable.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-711">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="3d093-712">不過，在衍生的類別可以提供自己的同步處理的版本<xref:System.Collections.Hashtable>使用<xref:System.Collections.Hashtable.SyncRoot%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3d093-712">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="3d093-713">同步處理的程式碼必須執行作業<xref:System.Collections.Hashtable.SyncRoot%2A>的<xref:System.Collections.Hashtable>中，不要直接依賴<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-713">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="3d093-714">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="3d093-714">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="3d093-715">具體來說，它會維護適當的同步處理的其他執行緒可能同時修改<xref:System.Collections.Hashtable>物件。</span><span class="sxs-lookup"><span data-stu-id="3d093-715">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="3d093-716">透過集合列舉是本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="3d093-716">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="3d093-717">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-717">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="3d093-718">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-718">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="3d093-719">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.Hashtable.SyncRoot%2A>在整個列舉期間：</span><span class="sxs-lookup"><span data-stu-id="3d093-719">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d093-720">傳回逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-720">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d093-721">
            <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-721">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-722">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="3d093-722">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="3d093-723">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="3d093-723">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="3d093-724">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="3d093-724">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="3d093-725">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="3d093-725">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3d093-726">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="3d093-726">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3d093-727"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="3d093-727"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="3d093-728">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-728">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="3d093-729">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-729">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3d093-730"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-730"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="3d093-731"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="3d093-731"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="3d093-732">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d093-732">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3d093-733">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3d093-733">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="3d093-734">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-734">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="3d093-735">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d093-735">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="3d093-736">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="3d093-736">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="3d093-737">如果變更的集合，例如加入、 修改或刪除元素，列舉值可能會無效，而且下次呼叫來<xref:System.Collections.IEnumerator.MoveNext%2A>或是<xref:System.Collections.IEnumerator.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3d093-737">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="3d093-738">如果集合已修改之間<xref:System.Collections.IEnumerator.MoveNext%2A>並<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回設定為，項目，即使已經無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="3d093-738">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="3d093-739">列舉值對集合並沒有獨佔存取，因此列舉集合在本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="3d093-739">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="3d093-740">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-740">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="3d093-741">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3d093-741">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="3d093-742">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="3d093-742">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Hashtable.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3d093-743">取得 <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.Hashtable" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-743">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3d093-744">
            <see cref="T:System.Collections.ICollection" />，包含 <see cref="T:System.Collections.Hashtable" /> 中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d093-744">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d093-745">中值的順序<xref:System.Collections.ICollection>未指定，但它是做為相關聯的索引鍵中的相同順序<xref:System.Collections.ICollection>所傳回<xref:System.Collections.Hashtable.Keys%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d093-745">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="3d093-746">傳回<xref:System.Collections.ICollection>不是靜態的複本; 相反地，<xref:System.Collections.ICollection>中原始的值是指回<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="3d093-746">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="3d093-747">因此，變更<xref:System.Collections.Hashtable>才會反映在繼續<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="3d093-747">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="3d093-748">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="3d093-748">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>