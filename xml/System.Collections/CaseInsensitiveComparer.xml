<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aca070477e1aa9c859187d9672e888a016ba58e4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36711680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type CaseInsensitiveComparer = class&#xA;    interface IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>比較兩個物件是否相等，忽略字串的大小寫。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.CaseInsensitiveComparer> 實作<xref:System.Collections.IComparer>介面支援不區分大小寫的比較字串，就如同<xref:System.Collections.CaseInsensitiveHashCodeProvider>實作<xref:System.Collections.IHashCodeProvider>支援不區分大小寫的比較目前字串的介面。  
  
 <xref:System.Collections.Comparer>類別是的預設實作<xref:System.Collections.IComparer>介面並執行區分大小寫字串比較。  
  
 物件做為索引鍵<xref:System.Collections.Hashtable>才能覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IHashCodeProvider>介面) 和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IComparer>介面)。 方法或介面的實作必須處理區分大小寫相同的方式;否則，<xref:System.Collections.Hashtable>可能不正確地運作。 例如，當建立<xref:System.Collections.Hashtable>，您必須使用與這個類別<xref:System.Collections.CaseInsensitiveHashCodeProvider>類別或任何不區分大小寫<xref:System.Collections.IHashCodeProvider>實作。  
  
 字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會建立區分大小寫的雜湊表和不區分大小寫的雜湊表，並示範它們的行為差異，即使兩者都包含相同項目。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用目前執行緒的 <see cref="T:System.Collections.CaseInsensitiveComparer" />，初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Collections.CaseInsensitiveComparer>使用這個建構函式，建立執行個體<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>儲存目前執行緒。 比較程序會使用儲存的文化特性來決定排序順序及大小寫規則。因此，字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會建立區分大小寫的雜湊表和不區分大小寫的雜湊表，並示範它們的行為差異，即使兩者都包含相同項目。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.CaseInsensitiveComparer : System.Globalization.CultureInfo -&gt; System.Collections.CaseInsensitiveComparer" Usage="new System.Collections.CaseInsensitiveComparer culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">新 <see cref="T:System.Globalization.CultureInfo" /> 所使用的 <see cref="T:System.Collections.CaseInsensitiveComparer" />。</param>
        <summary>使用指定的 <see cref="T:System.Collections.CaseInsensitiveComparer" />，初始化 <see cref="T:System.Globalization.CultureInfo" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用指定的比較程序<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>來決定排序順序及大小寫規則。 字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會建立區分大小寫的雜湊表和不區分大小寫的雜湊表，並示範它們的行為差異，即使兩者都包含相同項目。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="culture" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="caseInsensitiveComparer.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">要比較的第一個物件。</param>
        <param name="b">要比較的第二個物件。</param>
        <summary>執行兩個相同型別物件的區分大小寫比較，並傳回表示是否某個物件小於、等於或大於另外一方的值。</summary>
        <returns>帶正負號的整數，表示 <paramref name="a" /> 和 <paramref name="b" /> 的相對值，如下表所示。  
  
 <list type="table"><listheader><term> 值  </term><description> 意義  </description></listheader><item><term> 小於零  </term><description> 忽略大小寫時 <paramref name="a" /> 小於 <paramref name="b" />。</description></item><item><term> 零  </term><description> 忽略大小寫時 <paramref name="a" /> 等於 <paramref name="b" />。</description></item><item><term> 大於零  </term><description> 忽略大小寫時 <paramref name="a" /> 大於 <paramref name="b" />。</description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`a`和`b`是這兩個字串，這個方法會使用<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>來比較有大小寫字串忽略它們; 否則它會使用<xref:System.IComparable>任一個物件的實作。 也就是說，如果`a`實作<xref:System.IComparable>，則這個方法會傳回的結果`a`。 `CompareTo` (`b`); 否則如果`b`實作<xref:System.IComparable>，則它會傳回已變換正負號的結果`b`。 `CompareTo` (`a`).  
  
 比較`null`允許與任何類型，且不會產生例外狀況，當使用<xref:System.IComparable>。 排序時，`null`會被視為小於任何其他物件。  
  
 字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="a" /> 和 <paramref name="b" /> 都不實作 <see cref="T:System.IComparable" /> 介面。  -或-  <paramref name="a" /> 和 <paramref name="b" /> 的型別不同。</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，它與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯，而且永遠可以使用。</summary>
        <value>
          <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，與目前執行緒的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 相關聯。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Collections.CaseInsensitiveComparer>的無參數建構函式來建立執行個體<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>儲存目前執行緒。 比較程序會使用儲存的文化特性來決定排序順序及大小寫規則。因此，字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInvariant : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，它與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯，而且永遠可以使用。</summary>
        <value>
          <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的執行個體，與 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 相關聯。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 比較程序使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>來決定排序順序及大小寫規則。 字串比較可能會有不同的結果，根據文化特性。 如需有關特定文化特性比較的詳細資訊，請參閱<xref:System.Globalization>命名空間和[全球化和當地語系化](~/docs/standard/globalization-localization/index.md)。  
  
   
  
## Examples  
 下列程式碼範例會建立區分大小寫的雜湊表和不區分大小寫的雜湊表，並示範它們的行為差異，即使兩者都包含相同項目。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
  </Members>
</Type>