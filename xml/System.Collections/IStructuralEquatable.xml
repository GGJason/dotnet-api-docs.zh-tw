<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24f9f86b4e1994a1305d34f6917275d03ae43de0" /><Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/15/2018" /><Meta Name="ms.locfileid" Value="51689880" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義支援物件之結構相等比較的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結構相等表示兩個物件相等的因為它們有相同的值。 不同於參考相等，指出兩個物件參考相等的因為它們參考相同的實體物件。 <xref:System.Collections.IStructuralEquatable>介面可讓您實作自訂的比較，若要檢查的集合物件的結構是否相等。 也就是說，您可以在 建立您自己定義的結構是否相等，並指定可接受的集合類型會使用此定義<xref:System.Collections.IStructuralEquatable>介面。 此介面有兩個成員： <xref:System.Collections.IStructuralEquatable.Equals%2A>，它會使用指定的測試是否相等<xref:System.Collections.IEqualityComparer>實作，和<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>，它會傳回相同的雜湊程式碼相等的物件。  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralEquatable>介面支援僅自訂比較的結構是否相等。 <xref:System.Collections.IStructuralComparable>介面支援自訂的結構化比較來排序及順序。  
  
 .NET Framework 也提供預設的等號比較子，由<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>和<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>屬性。 如需詳細資訊，請參閱範例。  
  
 泛型的元組類別 (<xref:System.Tuple%601>， <xref:System.Tuple%602>，<xref:System.Tuple%603>等等) 和<xref:System.Array>類別提供的明確實作<xref:System.Collections.IStructuralEquatable>介面。 轉型 （在 C# 中)，或轉換 （在 Visual Basic)，因此目前的執行個體的陣列或 tuple<xref:System.Collections.IStructuralEquatable>介面值，並提供您<xref:System.Collections.IEqualityComparer>做為引數的實作<xref:System.Collections.IStructuralEquatable.Equals%2A>方法中，您可以定義自訂的等號比較比較陣列或集合。  
  
   
  
## Examples  
 預設相等比較子， `EqualityComparer<Object>.Default.Equals`，會考慮兩個`NaN`相等的值。 不過，在某些情況下，您可能想要的比較`NaN`值是否相等，傳回`false`，這表示無法比較值。 下列範例定義一個實作 `NanComparer` 介面的 <xref:System.Collections.IStructuralEquatable> 類別。 它會比較兩個<xref:System.Double>或兩個<xref:System.Single>使用等號比較運算子的值。 將任何其他類型的值傳遞至預設相等比較子。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 下列範例會建立兩個相同的 3 元組物件，其元件包含三個<xref:System.Double>值。 第二個元件的值是<xref:System.Double.NaN?displayProperty=nameWithType>。 此範例接著會呼叫<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>方法，且其會呼叫<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法三次。 第一次，它會傳遞所傳回的預設相等比較子<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>屬性。 第二次，它會傳遞所傳回的預設相等比較子<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>屬性。 第三次，它會傳遞自訂`NanComparer`物件。 如範例輸出所示前, 三個方法呼叫傳回`true`，而第四個呼叫會傳回`false`。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">要與目前執行個體比較的物件。</param>
        <param name="comparer">物件，判斷目前的執行個體與 <paramref name="other" /> 是否相等。</param>
        <summary>判斷物件與目前的執行個體在結構上是否相等。</summary>
        <returns>如果兩個物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralEquatable.Equals%2A>方法支援陣列和 tuple 物件的自訂結構化比較。 這個方法會接著呼叫`comparer`物件的<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>方法來比較個別陣列元素或開頭之第一個元素或元件的元組元件。 個別呼叫<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>結束並<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法會傳回值的可能方法呼叫傳回時`false`或之後的所有陣列項目或 tuple 元件已做過比較。  
  
   
  
## Examples  
 預設相等比較子， `EqualityComparer<Object>.Default.Equals`，會考慮兩個`NaN`相等的值。 不過，在某些情況下，您可能想要的比較`NaN`值是否相等，傳回`false`，這表示無法比較值。 下列範例定義一個實作 `NanComparer` 介面的 <xref:System.Collections.IStructuralEquatable> 類別。 它會比較兩個<xref:System.Double>或兩個<xref:System.Single>使用等號比較運算子的值。 將任何其他類型的值傳遞至預設相等比較子。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 下列範例會建立兩個相同的 3 元組物件，其元件包含三個<xref:System.Double>值。 第二個元件的值是<xref:System.Double.NaN?displayProperty=nameWithType>。 此範例接著會呼叫<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>方法，且其會呼叫<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法三次。 第一次，它會傳遞所傳回的預設相等比較子<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>屬性。 第二次，它會傳遞所傳回的預設相等比較子<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>屬性。 第三次，它會傳遞自訂`NanComparer`物件。 如範例輸出所示前, 三個方法呼叫傳回`true`，而第四個呼叫會傳回`false`。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">物件，會計算目前物件的雜湊程式碼。</param>
        <summary>傳回目前執行個體的雜湊程式碼。</summary>
        <returns>目前執行個體的雜湊程式碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作此方法以傳回自訂的雜湊程式碼對應的集合物件所提供的結構是否相等的自訂比較<xref:System.Collections.IStructuralEquatable.Equals%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />方法會傳回<see langword="true" />兩個物件，傳回的值<see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />兩個物件的方法也必須相等。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>