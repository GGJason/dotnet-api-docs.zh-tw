<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ea5156ebffce17eec484be8e2ff6ff0056ce6e2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39818986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>代表來源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 以及目標物件 (可能是 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源) 之間的關聯。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.IO.Packaging.PackageRelationship>定義之間的關聯*來源*<xref:System.IO.Packaging.Package>或是<xref:System.IO.Packaging.PackagePart>來*目標*<xref:System.IO.Packaging.PackagePart>或外部的資源。  來源物件會被視為 「 擁有者 」 的關聯性。  
  
 <xref:System.IO.Packaging.PackageRelationship>類別沒有公用建構函式; 而使用兩個建立方法：  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|建立 「 封裝層級 」 的關聯性 — 從封裝到指定的組件或外部資源。|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|建立 「 組件層級 」 的關聯性，從某個組件到另一個組件或外部的資源。|  
  
 來源封裝或組件由<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>之關聯性屬性。  目標組件或外部的資源由<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>之關聯性屬性。  
  
 建立或刪除關聯性不會影響以任何方式的來源或目標的物件。  
  
 如果刪除的來源物件時，會一併刪除物件所擁有的所有關聯性。  
  
 關聯性中的文件和文件之間的導覽。  關聯性也支援文件物件模型服務，例如連結<xref:System.Printing.PrintTicket>列印時的特定文件項目。  
  
 如需詳細資訊<xref:System.IO.Packaging.PackageRelationship>項目請參閱中的 「 關聯性 」 的區段 1.3 *Open Packaging Conventions*規格可以從下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得識別關聯性的字串。</summary>
        <value>識別關聯性的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>屬性的字串都是唯一所擁有的所有關聯性的<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>封裝或組件。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>呼叫中指定**封裝**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或是**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 建立關聯性的方法。  在建立關聯性之後，<xref:System.IO.Packaging.PackageRelationship.Id%2A>無法變更。  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A>屬性字串是有效的 XML 識別項。 <xref:System.IO.Packaging.PackageRelationship.Id%2A>型別是 xsd:ID，且必須遵照中所指定的命名慣例*XML 結構描述第 2 部分： Datatypes*規格 (請參閱[ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含此關聯性的 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>包含此關聯性的封裝。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊<xref:System.IO.Packaging.Package>項目請參閱*Open Packaging Conventions*規格可以從下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得關聯性的限定型別名稱。</summary>
        <value>關聯性的限定型別名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>呼叫中指定**封裝**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或是**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 建立關聯性的方法。  在建立關聯性之後，<xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A>無法變更。  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> 定義中 URI 式的語法，並識別關聯性的角色。 例如，"http://schemas.microsoft.com/xps/2005/06/required-resource"識別關聯性目標組件的 「 所需的資源 」。  
  
 **整個套件的關聯性類型**  
  
|描述|關聯性類型|  
|-----------------|-----------------------|  
|核心屬性|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|數位簽章|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|數位簽章憑證|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|數位簽章原點|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|縮圖|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 如需有關封裝關聯性類型請參閱第 3 章和附錄 I 的*Open Packaging Conventions*規格可以從下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得擁有關聯性之套件或組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>擁有關聯性之 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果關聯性由擁有<xref:System.IO.Packaging.Package>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>傳回 URI 為"/"。  
  
 如果關聯性由擁有<xref:System.IO.Packaging.PackagePart>，<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>傳回組件的 URI。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出關聯性的目標對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <value>列舉值，指出 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 參考的資源對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>呼叫中指定**封裝**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或是**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 建立關聯性的方法。 在建立關聯性之後<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>無法變更。  
  
 當<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>已<xref:System.IO.Packaging.TargetMode.Internal>，則<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必須是相對的參考。  相對參考的套件層級關聯性，<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解決相對於擁有且包含關聯性的來源封裝的 pack URI。  (範例來源封裝組件的 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)組件層級關聯性<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解決相對於擁有關聯性的來源組件 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>會解譯相對<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 當<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>已<xref:System.IO.Packaging.TargetMode.External>，則<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相對的參考或完整格式的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相對的參考，參考會相對於位置解譯<xref:System.IO.Packaging.Package>，包含此關聯性。  
  
 如需詳細資訊<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>的 「 關聯性標記 」 看到區段 1.3.3*開放封裝慣例*規格可以從下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得關聯性之目標資源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <value>目標資源的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>呼叫中指定**封裝**。<xref:System.IO.Packaging.Package.CreateRelationship%2A> 或是**PackagePart**。<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 建立關聯性的方法。 在建立關聯性之後<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>無法變更。  
  
 當<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>已<xref:System.IO.Packaging.TargetMode.Internal>，則<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>必須是相對的參考。  相對參考的套件層級關聯性，<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解決相對於擁有且包含關聯性的來源封裝的 pack URI。  (範例來源封裝組件的 URI:"pack://http:、 www.adatum.com、 files,datapak.package/"。)組件層級關聯性<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>解決相對於擁有關聯性的來源組件 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>會解譯相對<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>)。  
  
 當<xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>已<xref:System.IO.Packaging.TargetMode.External>，則<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>可以是相對的參考或完整格式的 URI。  如果<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>是相對的參考，參考會相對於位置解譯<xref:System.IO.Packaging.Package>，包含此關聯性。  
  
 如需詳細資訊<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>的 「 關聯性標記 」 看到區段 1.3.3*開放封裝慣例*規格可以從下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>