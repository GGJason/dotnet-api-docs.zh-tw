<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4acc6f21ec13023541c348107a406f31ce5dea82" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="768c9-101">表示可以儲存多個資料物件的容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="768c9-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-102"><xref:System.IO.Packaging.Package> 是抽象類別，可用來將物件組織在單一實體的定義的實體格式，可攜性和能夠有效率地存取。</span><span class="sxs-lookup"><span data-stu-id="768c9-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="768c9-103">ZIP 檔案是主要實體格式<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="768c9-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="768c9-104">其他<xref:System.IO.Packaging.Package>實作可能會使用其他實體的格式，例如 XML 文件時，如果是資料庫，或 Web 服務。</span><span class="sxs-lookup"><span data-stu-id="768c9-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="768c9-105">項目包含在檔案系統中，例如<xref:System.IO.Packaging.Package>資料夾和檔案的階層式組織中的參考。</span><span class="sxs-lookup"><span data-stu-id="768c9-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="768c9-106">雖然<xref:System.IO.Packaging.Package>本身是抽象類別，<xref:System.IO.Packaging.ZipPackage>依預設會使用衍生的類別<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-107">A <xref:System.IO.Packaging.PackagePart> （「 部分 」） 是抽象類別，表示儲存在物件<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="768c9-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="768c9-108">A <xref:System.IO.Packaging.PackageRelationship> （「 關係 」） 之間定義關聯的來源<xref:System.IO.Packaging.Package>或<xref:System.IO.Packaging.PackagePart>和目標物件。</span><span class="sxs-lookup"><span data-stu-id="768c9-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="768c9-109">A<xref:System.IO.Packaging.PackageRelationship>可以是下列其中一種，其中每一個都可以有兩種形式：</span><span class="sxs-lookup"><span data-stu-id="768c9-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="768c9-110">封裝層級關聯性 (由<xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>方法) 與相關<xref:System.IO.Packaging.Package>為：</span><span class="sxs-lookup"><span data-stu-id="768c9-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="768c9-111">封裝中的目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="768c9-112">外部封裝的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="768c9-113">組件層級關聯性 (由<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>方法) 與來源<xref:System.IO.Packaging.PackagePart>為：</span><span class="sxs-lookup"><span data-stu-id="768c9-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="768c9-114">在封裝中的另一個目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="768c9-115">外部封裝的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-116">關聯性的來源<xref:System.IO.Packaging.Package>或來源<xref:System.IO.Packaging.PackagePart>會被視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-117">刪除來源物件時，會一併刪除來源物件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="768c9-118">建立或刪除的關聯性的程序不會實際變更以任何方式的來源或目標物件。</span><span class="sxs-lookup"><span data-stu-id="768c9-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="768c9-119">A <xref:System.IO.Packaging.PackageDigitalSignature> （「 數位簽章 」） 是組件和關係代表隨附的數位簽章的組成<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="768c9-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="768c9-120">數位簽章識別建立者，並驗證已簽署組件和關聯性包含在<xref:System.IO.Packaging.Package>尚未經過修改。</span><span class="sxs-lookup"><span data-stu-id="768c9-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="768c9-121">封裝也支援數位版權管理 (DRM) 可讓內容中的項目<xref:System.IO.Packaging.Package>加密與特定存取權限授與授權的使用者。</span><span class="sxs-lookup"><span data-stu-id="768c9-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="768c9-122">根據<xref:System.IO.Packaging.Package>架構，<xref:System.Windows.Xps.Packaging.XpsDocument>是針對儲存在開啟文件而設計的封裝類型[XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761)。</span><span class="sxs-lookup"><span data-stu-id="768c9-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 [!INCLUDE[TLA#tla_avalonwinfx](~/includes/tlasharptla-avalonwinfx-md.md)]<span data-ttu-id="768c9-123"> 您可以使用封裝來儲存內容、 資源和網頁和文件依預設會使用標準的 ZIP 檔案的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-123"> uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="768c9-124">任何 ZIP 檔案，您的應用程式可以使用<xref:System.IO.Packaging>類別來儲存並選擇性地保護任何類型或能夠有效率地存取單一容器中的資料檔案數目。</span><span class="sxs-lookup"><span data-stu-id="768c9-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="768c9-125">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-126">下列範例示範建立的基本步驟<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="768c9-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="768c9-127">在此範例中，封裝會建立包含搭配的圖形影像會顯示在文件的文件。</span><span class="sxs-lookup"><span data-stu-id="768c9-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="768c9-128">(這是類似於其中的 HTML 檔案的情況\<i m g > 標記，參考外部影像檔。)兩個<xref:System.IO.Packaging.PackageRelationship>項目也會包含在封裝。</span><span class="sxs-lookup"><span data-stu-id="768c9-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="768c9-129">第一個，「 封裝層級 」 關聯性定義的文件部分封裝的根項目。</span><span class="sxs-lookup"><span data-stu-id="768c9-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="768c9-130">第二個、 「 組件層級 」 的關聯性定義的文件部分 （「 來源 」 的組件層級關聯性） 和其使用的映像組件 （""的目標組件層級關聯性） 之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="768c9-131">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-131">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-132">初始化 <see cref="T:System.IO.Packaging.Package" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-132">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="768c9-133">套件的檔案 IO 權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-133">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-134">將使用特定 <see cref="T:System.IO.Packaging.Package" /> 之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-135"><xref:System.IO.Packaging.Package.%23ctor%2A> 是受保護的建構函式的<xref:System.IO.Packaging.Package>抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="768c9-135"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="768c9-136">在衍生類別中呼叫時<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式初始化衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="768c9-136">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-137">
            <paramref name="openFileAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-137">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="768c9-138">套件的檔案 IO 權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-138">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="768c9-139">
            <see langword="true" /> 表示開啟套件以進行資料流處理，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-139">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-140">將使用特定 <see cref="T:System.IO.Packaging.Package" /> 及資料流選項之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-140">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-141"><xref:System.IO.Packaging.Package.%23ctor%2A> 是受保護的建構函式的<xref:System.IO.Packaging.Package>抽象基底的抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="768c9-141"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="768c9-142">在衍生類別中呼叫時<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式初始化衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="768c9-142">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-143">
            <paramref name="openFileAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-143">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-144">儲存並關閉套件，以及所有基礎組件資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-144">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-145"><xref:System.IO.Packaging.Package>類別<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>執行相同的作業，沒有理由来呼叫<xref:System.IO.Packaging.Package.Dispose%2A>如果您呼叫<xref:System.IO.Packaging.Package.Close%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="768c9-145">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="768c9-146"><xref:System.IO.Packaging.Package.Close%2A> 和<xref:System.IO.Packaging.Package.Dispose%2A>內部呼叫<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="768c9-146"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="768c9-147">`using`陳述式 (不同於`using`命名空間指示詞) 是建議的方式<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>封裝。</span><span class="sxs-lookup"><span data-stu-id="768c9-147">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="768c9-148">[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)和[讀取封裝範例](http://go.microsoft.com/fwlink/?LinkID=160034)示範如何關閉和處置封裝使用`using`陳述式。</span><span class="sxs-lookup"><span data-stu-id="768c9-148">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-149">建立新的套件組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-149">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-150"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-150"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="768c9-151"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可以用來取得組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="768c9-151">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="768c9-152">如需封裝組件的詳細資訊，請參閱 1.1 規格的節開放封裝慣例 (OPC) 可供下載在[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-152">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-153">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="768c9-153">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="768c9-154">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-154">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-155">
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />實際建立組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-155">
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-156">新組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-156">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="768c9-157">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-157">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-158">以特定 URI 及內容類型建立新的未壓縮組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-158">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-159">新建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-159">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-160"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-160"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="768c9-161"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可以用來取得組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="768c9-161">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="768c9-162">組件<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>是<xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="768c9-162">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="768c9-163">如需有關封裝組件的詳細資訊，請參閱 > 一節 1.1 可供下載開放封裝慣例 (OPC) 規格中的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-163">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-164">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="768c9-164">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="768c9-165">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-165">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-166">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-166">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-167">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-167">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="768c9-168">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-168">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-169">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-169">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-170">套件是唯讀的 (無法新增組件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-170">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-171">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />實際建立組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-171">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-172">新組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-172">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="768c9-173">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-173">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="768c9-174">資料流、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 壓縮的壓縮選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-174">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-175">以特定 URI、內容類型及壓縮選項建立新組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-175">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-176">新建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-176">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-177">預設<xref:System.IO.Packaging.ZipPackage>衍生的類別，<xref:System.IO.Packaging.Package.CreatePart%2A>方法只支援兩個`compressionOption`值<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="768c9-177">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="768c9-178">其他<xref:System.IO.Packaging.CompressionOption>值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="768c9-178">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="768c9-179"><xref:System.IO.Packaging.Package.CreatePart%2A> 建立空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-179"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="768c9-180"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可以用來取得組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="768c9-180">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="768c9-181">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-181">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-182">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="768c9-182">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="768c9-183">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-183">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-184">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-184">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-185">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-185">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="768c9-186">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-186">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-187">
            <paramref name="compressionOption" /> 值不是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-187">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-188">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-188">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-189">套件是唯讀的 (無法新增組件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-189">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-190">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />實際建立組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-190">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-191">所建立之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-191">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="768c9-192">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-192">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="768c9-193">資料流的壓縮選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-193">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-194">在衍生類別中覆寫時，請在套件中建立新的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-194">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-195">建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-195">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-196">在衍生<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法透過呼叫<xref:System.IO.Packaging.Package.CreatePart%2A>建立組件的方法為基礎的實體格式，衍生類別中實作。</span><span class="sxs-lookup"><span data-stu-id="768c9-196">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="768c9-197">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象類別實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-197">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="768c9-198">在預設作業<xref:System.IO.Packaging.Package.CreatePart%2A>會在內部呼叫<xref:System.IO.Packaging.Package.CreatePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>ZIP 檔案中建立新的組件的類別。</span><span class="sxs-lookup"><span data-stu-id="768c9-198">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="768c9-199">預設<xref:System.IO.Packaging.ZipPackage>衍生的類別，<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法只支援兩個`compressionOption`值<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="768c9-199">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="768c9-200">其他<xref:System.IO.Packaging.CompressionOption>值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="768c9-200">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="768c9-201">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-201">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-202">在衍生<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />實作應該進行的順序或所執行的作業不作任何假設<see cref="Overload:System.IO.Packaging.Package.CreatePart" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-202">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-203">建立特定組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-203">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-204">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-204">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="768c9-205">封裝層級關聯性可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="768c9-205">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="768c9-206">之間<xref:System.IO.Packaging.Package>目標<xref:System.IO.Packaging.PackagePart>封裝內。</span><span class="sxs-lookup"><span data-stu-id="768c9-206">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="768c9-207">之間<xref:System.IO.Packaging.Package>於封裝之外的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-207">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-208">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-208">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-209">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-209">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="768c9-210">建立或刪除的關聯性的程序不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-210">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="768c9-211">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-211">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-212">下列範例會說明如何建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件部分。</span><span class="sxs-lookup"><span data-stu-id="768c9-212">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="768c9-213">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-213">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="768c9-214">目標組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-214">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="768c9-215">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-215">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="768c9-216">唯一定義關聯性角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-216">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-217">以特定 URI、目標模式及關聯性類型建立套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-217">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-218">指定之組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-218">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-219">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-219">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="768c9-220">封裝層級關聯性可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="768c9-220">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="768c9-221">之間<xref:System.IO.Packaging.Package>至封裝中的目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-221">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="768c9-222">之間<xref:System.IO.Packaging.Package>於封裝之外的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-222">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-223">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-223">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-224">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-224">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="768c9-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="768c9-226">關聯性的目標不能是另一個關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-226">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="768c9-227">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必須是相對 URI，形成根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-227">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-228">內部的相對 URI 可以是絕對路徑，開頭為斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如 「.../ imagespicture1.jpg"解析針對封裝根目錄 （"/"） 做為基底 URI。</span><span class="sxs-lookup"><span data-stu-id="768c9-228">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="768c9-229">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一個絕對或相對 URI 格式根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-230">「http://www.microsoft.com/page2.xml」 是絕對 URI 參照外部的目標資源 」 page2.xml 」 的範例。</span><span class="sxs-lookup"><span data-stu-id="768c9-230">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="768c9-231">「 images/picture1.jpg"是相對 URI，也會參考外部的目標資源 」 1.jpg"但可解析針對封裝本身的 URI 的範例。</span><span class="sxs-lookup"><span data-stu-id="768c9-231">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="768c9-232">`relationshipType` 必須是[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，形成根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-232">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-233">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="768c9-233">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="768c9-234">封裝層級關聯性</span><span class="sxs-lookup"><span data-stu-id="768c9-234">Package-level Relationship</span></span>|<span data-ttu-id="768c9-235">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="768c9-235">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="768c9-236">核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-236">Core Properties</span></span>|<span data-ttu-id="768c9-237">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-237">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="768c9-238">數位簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-238">Digital Signature</span></span>|<span data-ttu-id="768c9-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al 簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="768c9-240">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-240">Digital Signature Certificate</span></span>|<span data-ttu-id="768c9-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="768c9-242">數位簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-242">Digital Signature Origin</span></span>|<span data-ttu-id="768c9-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="768c9-244">縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-244">Thumbnail</span></span>|<span data-ttu-id="768c9-245">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-245">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="768c9-246">如需封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-246">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-247">下列範例說明如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件部分。</span><span class="sxs-lookup"><span data-stu-id="768c9-247">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="768c9-248">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-248">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-249">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-249">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-250">
            <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-250">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-251">
            <paramref name="targetMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-251">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-252">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-252">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-253">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-253">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="768c9-254">目標組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-254">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="768c9-255">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-255">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="768c9-256">唯一定義關聯性角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-256">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="768c9-257">唯一的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-257">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-258">以特定 URI、目標模式、關聯性類型及[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 建立套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-258">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-259">指定之組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-259">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-260">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-260">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="768c9-261">封裝層級關聯性可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="768c9-261">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="768c9-262">之間<xref:System.IO.Packaging.Package>至封裝中的目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-262">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="768c9-263">之間<xref:System.IO.Packaging.Package>於封裝之外的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-263">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-264">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-264">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-265">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-265">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="768c9-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="768c9-267">關聯性的目標不能是另一個關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-267">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="768c9-268">`id` 必須是有效的 XML 識別碼。</span><span class="sxs-lookup"><span data-stu-id="768c9-268">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="768c9-269">`id`型別是 xsd:ID，且必須遵照 XML 結構描述第 2 部分中所指定的命名慣例： 資料類型規格 (請參閱[ http://www.w3.org/TR/xmlschema-2/#ID ](http://www.w3.org/TR/xmlschema-2/))。</span><span class="sxs-lookup"><span data-stu-id="768c9-269">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).</span></span>  
  
 <span data-ttu-id="768c9-270">如果`id`指定為`null`就會自動產生的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="768c9-270">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="768c9-271">`id`指定空字串無效。</span><span class="sxs-lookup"><span data-stu-id="768c9-271">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="768c9-272">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必須是相對 URI，形成根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-272">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-273">內部的相對 URI 可以是絕對路徑，開頭為斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如 「.../ imagespicture1.jpg"解析針對封裝根目錄 （"/"） 做為基底 URI。</span><span class="sxs-lookup"><span data-stu-id="768c9-273">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="768c9-274">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一個絕對或相對 URI 格式根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-275">「http://www.microsoft.com/page2.xml」 是絕對 URI 參照外部的目標資源 」 page2.xml 」 的範例。</span><span class="sxs-lookup"><span data-stu-id="768c9-275">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="768c9-276">「 images/picture1.jpg"是相對 URI，也會參考外部的目標資源 」 1.jpg"但可解析針對封裝本身的 URI 的範例。</span><span class="sxs-lookup"><span data-stu-id="768c9-276">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="768c9-277">`relationshipType` 必須是根據不正確的 URI [RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-277">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-278">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="768c9-278">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="768c9-279">封裝層級關聯性</span><span class="sxs-lookup"><span data-stu-id="768c9-279">Package-level Relationship</span></span>|<span data-ttu-id="768c9-280">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="768c9-280">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="768c9-281">核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-281">Core Properties</span></span>|<span data-ttu-id="768c9-282">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-282">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="768c9-283">數位簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-283">Digital Signature</span></span>|<span data-ttu-id="768c9-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al 簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="768c9-285">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-285">Digital Signature Certificate</span></span>|<span data-ttu-id="768c9-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="768c9-287">數位簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-287">Digital Signature Origin</span></span>|<span data-ttu-id="768c9-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="768c9-289">縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-289">Thumbnail</span></span>|<span data-ttu-id="768c9-290">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-290">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="768c9-291">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-291">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-292">下列範例說明如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件部分。</span><span class="sxs-lookup"><span data-stu-id="768c9-292">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="768c9-293">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-293">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-294">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-294">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-295">
            <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-295">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-296">
            <paramref name="targetMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-296">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-297">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-297">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-298">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-298">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="768c9-299">
            <paramref name="id" /> 不是有效的 XML 識別項，或是套件中已存在具有指定之 <paramref name="id" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-299">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-300">要刪除之組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-300">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-301">刪除套件中具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-301">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-302">`partUri` 必須是相對 URI 的絕對路徑的開頭為斜線 （"/"） 字元所組成。</span><span class="sxs-lookup"><span data-stu-id="768c9-302">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="768c9-303">絕對路徑會相對於封裝根目錄，而且根據的正確[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="768c9-303">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="768c9-304">"/ page1.xaml 」 和 「 / images/picture4.jpg"是有效的組件 Uri 的範例。</span><span class="sxs-lookup"><span data-stu-id="768c9-304">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="768c9-305">如果具有指定的組件，會引發任何例外狀況`partUri`不是在封裝中。</span><span class="sxs-lookup"><span data-stu-id="768c9-305">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="768c9-306">(您可以使用<xref:System.IO.Packaging.Package.PartExists%2A>方法，以判斷是否包含指定的組件`partUri`套件中。)</span><span class="sxs-lookup"><span data-stu-id="768c9-306">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="768c9-307">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-307">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-308">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-308">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-309">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-309">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-310">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-310">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-311">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-311">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-312">
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實際刪除組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-312">
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-313">要刪除之 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-313">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-314">在衍生類別中覆寫時，刪除具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-314">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-315">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象類別實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-315">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="768c9-316">在預設作業<xref:System.IO.Packaging.Package.DeletePart%2A>會在內部呼叫<xref:System.IO.Packaging.Package.DeletePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別以執行實際刪除實體衍生類別中實作的格式為基礎的作業。</span><span class="sxs-lookup"><span data-stu-id="768c9-316">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="768c9-317">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-317">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-318">在衍生的類別<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實作會呼叫<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />指定之組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-318">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="768c9-319">在衍生<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實作應該進行的順序或所執行的作業不作任何假設<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-319">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="768c9-320">要刪除之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-320">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-321">刪除套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-321">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-322">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-322">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="768c9-323">封裝層級關聯性可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="768c9-323">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="768c9-324">之間<xref:System.IO.Packaging.Package>至封裝中的目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-324">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="768c9-325">之間<xref:System.IO.Packaging.Package>於封裝之外的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-325">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-326">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-326">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-327">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-327">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="768c9-328">如果具有指定的關聯性，會引發任何例外狀況`id`不是在封裝中。</span><span class="sxs-lookup"><span data-stu-id="768c9-328">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="768c9-329"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 不會實際變更目標組件，以任何方式。</span><span class="sxs-lookup"><span data-stu-id="768c9-329"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="768c9-330">如需封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-330">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-331">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-331">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-332">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-332">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-333">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-333">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="768c9-334">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-334">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="768c9-335">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-335">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-336">清除並儲存所有組件與關聯性的內容、關閉套件，然後釋放所有的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-336">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-337">若要確定所有變更正確都儲存<xref:System.IO.Packaging.Package.Dispose%2A>也完成、 排清，並關閉所有的組件和包含在封裝中的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-337">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="768c9-338">如<xref:System.IO.Packaging.Package>類別<xref:System.IO.Packaging.Package.Dispose%2A>和<xref:System.IO.Packaging.Package.Close%2A>執行相同的作業-沒有理由来呼叫<xref:System.IO.Packaging.Package.Dispose%2A>如果您呼叫<xref:System.IO.Packaging.Package.Close%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="768c9-338">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="768c9-339"><xref:System.IO.Packaging.Package.Close%2A> 和<xref:System.IO.Packaging.Package.Dispose%2A>內部呼叫<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="768c9-339"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="768c9-340">其中配置和管理非記憶體資源的衍生的類別應該覆寫此方法以釋放資源時<xref:System.IO.Packaging.Package.Dispose%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="768c9-340">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="768c9-341">衍生類別覆寫也應該呼叫<xref:System.IO.Packaging.Package.Flush%2A>和基底類別<xref:System.IO.Packaging.Package.Dispose%2A>方法，以確定該基底類別清除一律會執行。</span><span class="sxs-lookup"><span data-stu-id="768c9-341">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="768c9-342">`using`陳述式 (不同於`using`命名空間指示詞) 是建議的方式<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>封裝。</span><span class="sxs-lookup"><span data-stu-id="768c9-342">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="768c9-343">[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)示範如何關閉和處置封裝使用`using`陳述式。</span><span class="sxs-lookup"><span data-stu-id="768c9-343">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-344">取得套件的檔案存取設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-344">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="768c9-345">其中一個 <see cref="T:System.IO.FileAccess" /> 值：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-345">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-346"><xref:System.IO.Packaging.Package.FileOpenAccess%2A> 屬性沒有預設值。</span><span class="sxs-lookup"><span data-stu-id="768c9-346">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="768c9-347">檔案存取設定中指定<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式呼叫，當您建立新的封裝，或在<xref:System.IO.Packaging.Package.Open%2A>開啟現有的封裝時呼叫。</span><span class="sxs-lookup"><span data-stu-id="768c9-347">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-348">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-348">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-349">儲存套件包含的所有組件及關聯性的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-349">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-350"><xref:System.IO.Packaging.Package.Flush%2A> 在衍生的類別會在內部呼叫<xref:System.IO.Packaging.Package.FlushCore%2A>執行實際的特定格式的排清作業的實作。</span><span class="sxs-lookup"><span data-stu-id="768c9-350"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="768c9-351">在衍生的類別的<xref:System.IO.Packaging.Package.FlushCore%2A>方法會負責實際儲存特定實體的衍生的類別實作的組件和關聯性內容。</span><span class="sxs-lookup"><span data-stu-id="768c9-351">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="768c9-352">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-352">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="768c9-353">在預設作業<xref:System.IO.Packaging.Package.Flush%2A>會在內部呼叫<xref:System.IO.Packaging.Package.FlushCore%2A>ZIP 檔案封裝中儲存的組件和關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-353">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="768c9-354"><xref:System.IO.Packaging.Package.Flush%2A> 就會呼叫自動<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-354"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="768c9-355">當<xref:System.IO.Packaging.Package.Close%2A>或<xref:System.IO.Packaging.Package.Dispose%2A>會呼叫您不需要呼叫<xref:System.IO.Packaging.Package.Flush%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="768c9-355">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-356">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-356">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-357">套件是唯讀的，無法修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-357">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-358">
              <see cref="M:System.IO.Packaging.Package.Flush" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.FlushCore" />實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-358">
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-359">在衍生類別中覆寫時，將所有組件與關聯性的內容儲存到衍生類別存放區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-359">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-360"><xref:System.IO.Packaging.Package.FlushCore%2A> 會呼叫<xref:System.IO.Packaging.Package.Flush%2A>實體衍生類別中實作的格式為基礎的方法，以執行實際的清除作業。</span><span class="sxs-lookup"><span data-stu-id="768c9-360"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-361">在衍生<see cref="M:System.IO.Packaging.Package.FlushCore" />實作不應做任何假設的順序或所執行的作業<see cref="M:System.IO.Packaging.Package.Flush" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-361">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-362">要傳回之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-362">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-363">傳回具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-363">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-364">具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-364">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-365"><xref:System.InvalidOperationException>如果具有指定的組件，會擲回`partUri`不存在。</span><span class="sxs-lookup"><span data-stu-id="768c9-365">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="768c9-366"><xref:System.IO.Packaging.Package.PartExists%2A>方法可以用來判斷是否`partUri`參考現有的組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-366">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="768c9-367">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-367">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="768c9-368">在預設作業<xref:System.IO.Packaging.Package.GetPart%2A>會在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別，以傳回要求的組件從 ZIP 檔案。</span><span class="sxs-lookup"><span data-stu-id="768c9-368">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="768c9-369">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-369">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-370">下列範例會示範如何找出、 擷取及讀取包含在封裝的組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-370">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="768c9-371">如需完整範例，請參閱[讀取封裝範例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="768c9-371">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-372">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-372">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-373">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-373">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="768c9-374">具有指定之 <paramref name="partUri" /> 的組件不在套件內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-374">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-375">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-375">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-376">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-376">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-377">
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-377">
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-378">要擷取之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-378">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-379">在衍生類別中覆寫時，傳回由特定 URI 定址的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-379">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-380">要求的組件；或者，如果具有指定之 <paramref name="partUri" /> 的組件不存在套件中，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-380">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-381">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-381">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="768c9-382">在預設作業<xref:System.IO.Packaging.Package.GetPart%2A>會在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別來擷取從 ZIP 檔案的一部分。</span><span class="sxs-lookup"><span data-stu-id="768c9-382">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="768c9-383">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-383">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-384">在衍生的類別<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實作會呼叫<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />實體衍生類別中實作的格式為基礎的方法來存取，並傳回指定的組件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-384">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="768c9-385">在衍生<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實作應該進行的順序或所執行的作業不作任何假設<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-385">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-386">傳回套件中所有組件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-386">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-387">包含在套件中的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-387">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-388"><xref:System.IO.Packaging.Package.GetParts%2A> 傳回一組所包含的所有組件中封裝包括<xref:System.IO.Packaging.PackageRelationship>組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-388"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="768c9-389"><xref:System.IO.Packaging.Package.GetParts%2A> 永遠不會傳回`null`; 不過，如果封裝不包含的任何部分，傳回的集合將包含零個元素。</span><span class="sxs-lookup"><span data-stu-id="768c9-389"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="768c9-390">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-390">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="768c9-391">在預設作業<xref:System.IO.Packaging.Package.GetParts%2A>呼叫<xref:System.IO.Packaging.Package.GetPartsCore%2A>方法<xref:System.IO.Packaging.ZipPackage>類別，以傳回組件從 ZIP 檔案。</span><span class="sxs-lookup"><span data-stu-id="768c9-391">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="768c9-392">如需封裝和封裝組件的詳細資訊，請參閱 1.1 規格的節開放封裝慣例 (OPC) 可供下載在[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-392">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-393">下列範例示範如何使用<xref:System.IO.Packaging.Package.GetParts%2A>方法，以取得組件中所包含的集合<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="768c9-393">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="768c9-394">完成程式的原始程式碼，請參閱[建立數位簽章範例封裝](http://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="768c9-394">For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-395">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-395">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-396">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-396">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-397">
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.GetPartsCore" />實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-397">
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-398">在衍生類別中覆寫時，傳回套件中所有組件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-398">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-399">包含在套件中的所有組件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-399">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-400">在衍生的類別<xref:System.IO.Packaging.Package.GetPartsCore%2A>實作會呼叫<xref:System.IO.Packaging.Package.GetParts%2A>實體衍生類別中實作的格式為基礎的方法來存取，並傳回組件的陣列。</span><span class="sxs-lookup"><span data-stu-id="768c9-400">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="768c9-401">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="768c9-401">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="768c9-402">在預設作業<xref:System.IO.Packaging.Package.GetParts%2A>會在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別來擷取組件從 ZIP 檔案。</span><span class="sxs-lookup"><span data-stu-id="768c9-402">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="768c9-403">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-403">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="768c9-404">在衍生<see cref="M:System.IO.Packaging.Package.GetPartsCore" />實作應該進行的順序或所執行的作業不作任何假設<see cref="M:System.IO.Packaging.Package.GetParts" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="768c9-404">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="768c9-405">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-405">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-406">傳回具有特定識別項的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-406">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-407">具有指定之 <paramref name="id" /> 的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-407">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-408">`id` 必須是有效的 XML 識別碼。</span><span class="sxs-lookup"><span data-stu-id="768c9-408">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="768c9-409">`id`型別是 xsd:ID，且必須遵照 XML 結構描述第 2 部分中所指定的命名慣例： 資料類型規格 (請參閱[ http://www.w3.org/TR/xmlschema-2/#ID ](http://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="768c9-409">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="768c9-410">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-410">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-411">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-411">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="768c9-412">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-412">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="768c9-413">具有指定之 <paramref name="id" /> 的關聯性不在套件內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-413">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-414">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-414">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-415">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-415">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-416">傳回所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-416">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-417">包含在套件中的所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-417">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-418"><xref:System.IO.Packaging.Package.GetRelationships%2A> 永遠不會傳回`null`; 不過，如果封裝不包含封裝層級關聯性，傳回的集合可能包含零個元素。</span><span class="sxs-lookup"><span data-stu-id="768c9-418"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="768c9-419">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="768c9-419">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="768c9-420">封裝層級關聯性可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="768c9-420">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="768c9-421">之間<xref:System.IO.Packaging.Package>至封裝中的目標組件。</span><span class="sxs-lookup"><span data-stu-id="768c9-421">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="768c9-422">之間<xref:System.IO.Packaging.Package>於封裝之外的目標資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-422">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="768c9-423">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-423">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="768c9-424">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-424">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="768c9-425">建立或刪除的關聯性的程序不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="768c9-425">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="768c9-426">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-426">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-427">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-427">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-428">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-428">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="768c9-429">要進行比對並傳回集合的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-429">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-430">傳回符合特定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-430">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-431">符合指定之 <paramref name="relationshipType" /> 的套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-431">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-432"><xref:System.IO.Packaging.Package.GetRelationships%2A> 永遠不會傳回`null`; 不過，如果沒有符合指定的封裝層級關聯性，傳回的集合可能包含零個元素`relationshipType`。</span><span class="sxs-lookup"><span data-stu-id="768c9-432"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="768c9-433">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="768c9-433">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="768c9-434">封裝層級關聯性</span><span class="sxs-lookup"><span data-stu-id="768c9-434">Package-level Relationship</span></span>|<span data-ttu-id="768c9-435">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="768c9-435">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="768c9-436">核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-436">Core Properties</span></span>|<span data-ttu-id="768c9-437">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心屬性</span><span class="sxs-lookup"><span data-stu-id="768c9-437">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="768c9-438">數位簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-438">Digital Signature</span></span>|<span data-ttu-id="768c9-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al 簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="768c9-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="768c9-440">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-440">Digital Signature Certificate</span></span>|<span data-ttu-id="768c9-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="768c9-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="768c9-442">數位簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-442">Digital Signature Origin</span></span>|<span data-ttu-id="768c9-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章來源</span><span class="sxs-lookup"><span data-stu-id="768c9-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="768c9-444">縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-444">Thumbnail</span></span>|<span data-ttu-id="768c9-445">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="768c9-445">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="768c9-446">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-446">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-447">下列範例會示範如何擷取封裝所定義的關聯性。</span><span class="sxs-lookup"><span data-stu-id="768c9-447">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="768c9-448">如需完整範例，請參閱[讀取封裝範例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="768c9-448">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-449">
            <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-449">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-450">
            <paramref name="relationshipType" /> 為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-450">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-451">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-451">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-452">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-452">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-453">開啟封裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-453">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-454"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-454"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-455">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-455">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-456">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，結合<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="768c9-456">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="768c9-457">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-457">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="768c9-458">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-458">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-459">開啟位於特定 IO 資料流上的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-459">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-460">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-460">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-461"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-461"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-462">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-462">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-463">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-463">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-464">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-464">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="768c9-465">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-465">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-466">開啟特定路徑與檔名的封裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-466">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-467">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-467">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-468"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-468"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-469">這<xref:System.IO.Packaging.Package.Open%2A>方法會使用預設屬性來開啟封裝<xref:System.IO.FileMode.OpenOrCreate>， <xref:System.IO.FileAccess.ReadWrite>，和<xref:System.IO.FileShare.None>（以指定不同的屬性會使用其中一個其他的 Open 方法多載）。</span><span class="sxs-lookup"><span data-stu-id="768c9-469">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="768c9-470">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-470">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-471">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，結合<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="768c9-471">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="768c9-472">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-472">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-473">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-473">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="768c9-474">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-474">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="768c9-475">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-475">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-476">使用特定 IO 資料流及檔案模式開啟套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-476">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-477">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-477">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-478"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-478"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-479">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-479">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-480">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-480">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-481">
            <paramref name="packageMode" /> 值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-481">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-482">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-482">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="768c9-483">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-483">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="768c9-484">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-484">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-485">使用特定檔案模式開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-485">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-486">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-486">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-487"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-487"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-488">這<xref:System.IO.Packaging.Package.Open%2A>方法會使用預設屬性來開啟封裝<xref:System.IO.FileAccess.ReadWrite>和<xref:System.IO.FileShare.None>（以指定不同的屬性會使用其中一個其他的 Open 方法多載）。</span><span class="sxs-lookup"><span data-stu-id="768c9-488">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="768c9-489">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-489">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-490">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，結合<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="768c9-490">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="768c9-491">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-491">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-492">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-492">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-493">
            <paramref name="packageMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-493">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="768c9-494">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-494">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="768c9-495">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-495">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="768c9-496">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-496">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-497">使用特定 IO 資料流、檔案模式及檔案存取設定開啟套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-497">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-498">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-498">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-499"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-499"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-500">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-500">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-501">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-501">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-502">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-502">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-503">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-503">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="768c9-504">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-504">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="768c9-505">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-505">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="768c9-506">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-506">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-507">使用特定檔案模式及檔案存取設定，開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-507">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-508">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-508">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-509"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-509"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-510">這<xref:System.IO.Packaging.Package.Open%2A>方法預設值開啟封裝<xref:System.IO.FileShare.None>屬性 (若要指定不同的屬性使用<xref:System.IO.Packaging.Package.Open%2A>方法多載)。</span><span class="sxs-lookup"><span data-stu-id="768c9-510">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="768c9-511">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-511">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-512">下列範例示範如何開啟和讀取<xref:System.IO.Packaging.Package>包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="768c9-512">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="768c9-513">如需完整範例，請參閱[讀取封裝範例](http://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="768c9-513">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-514">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-514">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-515">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-515">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="768c9-516">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-516">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="768c9-517">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-517">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="768c9-518">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-518">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="768c9-519">用來開啟套件的檔案共用模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-519">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-520">使用特定檔案模式、檔案存取及檔案共用設定，開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-520">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-521">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-521">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-522"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，以供<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="768c9-522"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="768c9-523">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-523">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="768c9-524">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，結合<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="768c9-524">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="768c9-525">如需完整範例，請參閱[寫入封裝範例](http://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="768c9-525">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-526">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-526">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="768c9-527">
            <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-527">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="768c9-528">取得套件的核心屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-528">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="768c9-529">套件的核心屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-529">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-530">如需有關核心封裝屬性的詳細資訊，請參閱第 3.1 節可供下載開放封裝慣例 (OPC) 規格中的在[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-530">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-531">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-531">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="768c9-532">要檢查之組件的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-532">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-533">指出套件中是否存在具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-533">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-534">如果套件內已經存在具有指定之 <paramref name="partUri" /> 的組件，就是 <see langword="true" />，否則就是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-534">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-535">`partUri`開頭應該是正斜線字元"/"，而且是絕對根目錄中的封裝。</span><span class="sxs-lookup"><span data-stu-id="768c9-535">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="768c9-536">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-536">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-537">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-537">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="768c9-538">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-538">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-539">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-539">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-540">套件是唯寫的 (無法讀取資訊)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-540">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="768c9-541">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-541">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="768c9-542">指出套件中是否包含具有特定 ID 的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-542">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="768c9-543">如果套件裝包含具有指定之 <paramref name="id" /> 的套件層級關係，就是 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-543">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="768c9-544">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="768c9-544">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="768c9-545">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-545">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="768c9-546">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-546">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="768c9-547">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-547">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="768c9-548">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-548">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="768c9-549">這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但不建議用於應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-549">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="768c9-550">請改用類型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="768c9-550">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>