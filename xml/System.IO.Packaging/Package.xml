<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Package.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0726e89d81152bf959a5f5d5e7816e69f656353584.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26e89d81152bf959a5f5d5e7816e69f656353584</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Represents a container that can store multiple data objects.</source>
          <target state="translated">表示可以儲存多個資料物件的容器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 是抽象類別，可用來將物件組織在單一實體的定義的實體格式，可攜性和能夠有效率地存取。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A ZIP file is the primary physical format for the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">ZIP 檔案是主要實體格式<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> implementations might use other physical formats such as an XML document, a database, or Web service.</source>
          <target state="translated">其他<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>實作可能會使用其他實體的格式，例如 XML 文件時，如果是資料庫，或 Web 服務。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Like a file system, items contained in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> are referenced in a hierarchical organization of folders and files.</source>
          <target state="translated">項目包含在檔案系統中，例如<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>資料夾和檔案的階層式組織中的參考。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Although <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> itself is an abstract class, the <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class is used as default by the <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated">雖然<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>本身是抽象類別，<ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>依預設會使用衍生的類別<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("part") is the abstract class that represents an object that is stored in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> （「 部分 」） 是抽象類別，表示儲存在物件<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("relationship") defines an association between a source <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and a target object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> （「 關係 」） 之間定義關聯的來源<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>和目標物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> can be one of two types, each of which can be one of two forms:</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>可以是下列其中一種，其中每一個都可以有兩種形式：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship (created by the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> method) relates a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> to either:</source>
          <target state="translated">封裝層級關聯性 (由<ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>方法) 與相關<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>為：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target part in the package.</source>
          <target state="translated">封裝中的目標組件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target resource outside the package.</source>
          <target state="translated">外部封裝的目標資源。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A part-level relationship (created by the <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> method) relates a source <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> to either:</source>
          <target state="translated">組件層級關聯性 (由<ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>方法) 與來源<ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>為：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Another target part in the package.</source>
          <target state="translated">在封裝中的另一個目標組件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target resource outside the package.</source>
          <target state="translated">外部封裝的目標資源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The relationship's source <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> or source <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> is considered the "owner" of the relationship.</source>
          <target state="translated">關聯性的來源<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>或來源<ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>會被視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>When the source object is deleted, all the relationships owned by the source object are also deleted.</source>
          <target state="translated">刪除來源物件時，會一併刪除來源物件所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</source>
          <target state="translated">建立或刪除的關聯性的程序不會實際變更以任何方式的來源或目標物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> （「 數位簽章 」） 是組件和關係代表隨附的數位簽章的組成<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The digital signature identifies the originator and validates that the signed parts and relationships contained in the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> have not been modified.</source>
          <target state="translated">數位簽章識別建立者，並驗證已簽署組件和關聯性包含在<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>尚未經過修改。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Packages also support Digital Rights Management (DRM) which allows content elements in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to be encrypted with specific access rights granted to authorized users.</source>
          <target state="translated">封裝也支援數位版權管理 (DRM) 可讓內容中的項目<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>加密與特定存取權限授與授權的使用者。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Based on the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> architecture, an <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is a package type designed for storing documents based on the open <bpt id="p1">[</bpt>XML Paper Specification (XPS)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>.</source>
          <target state="translated">根據<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>架構，<ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph>是針對儲存在開啟文件而設計的封裝類型<bpt id="p1">[</bpt>XML Paper Specification (XPS)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</source>
          <target state="translated">.NET Framework 會使用封裝來儲存內容、 資源和網頁和文件依預設會使用標準的 ZIP 檔案的關聯性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>As with any ZIP file, your application can use the <ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</source>
          <target state="translated">任何 ZIP 檔案，您的應用程式可以使用<ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph>類別來儲存並選擇性地保護任何類型或能夠有效率地存取單一容器中的資料檔案數目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For more information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows the basic steps for creating a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">下列範例示範建立的基本步驟<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</source>
          <target state="translated">在此範例中，封裝會建立包含搭配的圖形影像會顯示在文件的文件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>(This is similar to the case in which an HTML file has an <ph id="ph1">\&lt;</ph>IMG&gt; tag that references an external image file.)  Two <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> elements are also included in the package.</source>
          <target state="translated">(這是類似於其中的 HTML 檔案的情況<ph id="ph1">\&lt;</ph>i m g &gt; 標記，參考外部影像檔。)兩個<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>項目也會包含在封裝。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The first, a "package-level" relationship, defines the document part as the package's root element.</source>
          <target state="translated">第一個，「 封裝層級 」 關聯性定義的文件部分封裝的根項目。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</source>
          <target state="translated">第二個、 「 組件層級 」 的關聯性定義的文件部分 （「 來源 」 的組件層級關聯性） 和其使用的映像組件 （""的目標組件層級關聯性） 之間的關聯。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>The file IO permissions for the package.</source>
          <target state="translated">套件的檔案 IO 權限。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class that uses a given <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</source>
          <target state="translated">將使用特定 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> 之 <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 類別的新執行個體初始化。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> is a protected constructor of the <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> abstract base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 是受保護的建構函式的<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>抽象基底類別。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>When called in a derived class, the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor initializes a new instance of the derived class.</source>
          <target state="translated">在衍生類別中呼叫時<ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph>建構函式初始化衍生類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>The value for <ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>The file IO permissions for the package.</source>
          <target state="translated">套件的檔案 IO 權限。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to open the package for streaming; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示開啟套件以進行資料流處理，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class that uses a given <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> and streaming option.</source>
          <target state="translated">將使用特定 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> 及資料流選項之 <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 類別的新執行個體初始化。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> is a protected constructor of the <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> abstract base abstract base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 是受保護的建構函式的<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>抽象基底的抽象基底類別。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>When called in a derived class, the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor initializes a new instance of the derived class.</source>
          <target state="translated">在衍生類別中呼叫時<ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph>建構函式初始化衍生類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>The value for <ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Close">
          <source>Saves and closes the package plus all underlying part streams.</source>
          <target state="translated">儲存並關閉套件，以及所有基礎組件資料流。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source>For the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> class <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> perform the same operation—there is no reason to call <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> if you call <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, or vice-versa.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>執行相同的作業，沒有理由来呼叫<ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>如果您呼叫<ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>，反之亦然。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> internally call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>內部呼叫<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source>The <ph id="ph1">`using`</ph> statement (different from the <ph id="ph2">`using`</ph> namespace directive) is the recommended way to <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> a package.</source>
          <target state="translated"><ph id="ph1">`using`</ph>陳述式 (不同於<ph id="ph2">`using`</ph>命名空間指示詞) 是建議的方式<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>封裝。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source><bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> and <bpt id="p2">[</bpt>Reading a Package Sample<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept> show how to close and dispose a package by using the <ph id="ph1">`using`</ph> statement.</source>
          <target state="translated"><bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>和<bpt id="p2">[</bpt>讀取封裝範例<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>示範如何關閉和處置封裝使用<ph id="ph1">`using`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Creates a new package part.</source>
          <target state="translated">建立新的套件組件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> initializes an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 初始化空<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>新組件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph>方法可以用來取得組件相關聯的資料流執行個體的參考。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝組件的詳細資訊，請參閱 1.1 規格的節開放封裝慣例 (OPC) 可供下載在<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>然後將資料儲存在組件中。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph>實際建立組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the new part.</source>
          <target state="translated">新組件的 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The content type of the data stream.</source>
          <target state="translated">資料流的內容類型。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>Creates a new uncompressed part with a given URI and content type.</source>
          <target state="translated">以特定 URI 及內容類型建立新的未壓縮組件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The new created part.</source>
          <target state="translated">新建立的組件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> initializes an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 初始化空<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>新組件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph>方法可以用來取得組件相關聯的資料流執行個體的參考。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The part <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CompressionOption%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">組件<ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CompressionOption%2A&gt;</ph>是<ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需有關封裝組件的詳細資訊，請參閱 &gt; 一節 1.1 可供下載開放封裝慣例 (OPC) 規格中的<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>然後將資料儲存在組件中。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is already present in the package.</source>
          <target state="translated">套件中已經存在具有指定之 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 的組件。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The package is read-only (a new part cannot be added).</source>
          <target state="translated">套件是唯讀的 (無法新增組件)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph>實際建立組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the new part.</source>
          <target state="translated">新組件的 <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The content type of the data stream.</source>
          <target state="translated">資料流的內容類型。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The compression option for the data stream, <ph id="ph1">&lt;see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.CompressionOption.Normal" /&gt;</ph> compression.</source>
          <target state="translated">資料流、<ph id="ph1">&lt;see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.CompressionOption.Normal" /&gt;</ph> 壓縮的壓縮選項。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Creates a new part with a given URI, content type, and compression option.</source>
          <target state="translated">以特定 URI、內容類型及壓縮選項建立新組件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The new created part.</source>
          <target state="translated">新建立的組件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the default <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class, the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> method only supports two <ph id="ph3">`compressionOption`</ph> values, <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">預設<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的類別，<ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph>方法只支援兩個<ph id="ph3">`compressionOption`</ph>值<ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph>或<ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph>壓縮。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> values of <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> use <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">其他<ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph>值<ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>，或<ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph>使用<ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph>壓縮。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> creates an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 建立空<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>新組件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph>方法可以用來取得組件相關聯的資料流執行個體的參考。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>然後將資料儲存在組件中。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is already present in the package.</source>
          <target state="translated">套件中已經存在具有指定之 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 的組件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">&lt;paramref name="compressionOption" /&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="compressionOption" /&gt;</ph> 值不是有效的。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The package is read-only (a new part cannot be added).</source>
          <target state="translated">套件是唯讀的 (無法新增組件)。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph>實際建立組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> for the part being created.</source>
          <target state="translated">所建立之組件的<ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The content type of the data stream.</source>
          <target state="translated">資料流的內容類型。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The compression option for the data stream.</source>
          <target state="translated">資料流的壓縮選項。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>When overridden in a derived class, creates a new part in the package.</source>
          <target state="translated">在衍生類別中覆寫時，請在套件中建立新的組件。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The created part.</source>
          <target state="translated">建立的組件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The derived <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> method to create a part based on the physical format implemented in the derived class.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph>方法透過呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph>建立組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象類別實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to create a new part in a ZIP file.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>ZIP 檔案中建立新的組件的類別。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the default <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class, the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> method only supports two <ph id="ph3">`compressionOption`</ph> values, <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">預設<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的類別，<ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph>方法只支援兩個<ph id="ph3">`compressionOption`</ph>值<ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph>或<ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph>壓縮。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> values of <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> use <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">其他<ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph>值<ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>，或<ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph>使用<ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph>壓縮。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> method that calls it.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph>實作應該進行的順序或所執行的作業不作任何假設<ph id="ph2">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph>方法呼叫它。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Creates a package-level relationship to a given part.</source>
          <target state="translated">建立特定組件的套件層級關係。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">封裝層級關聯性可以有兩種形式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> inside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>目標<ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>封裝內。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>於封裝之外的目標資源。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</source>
          <target state="translated">建立或刪除的關聯性的程序不會實際變更的目標組件或以任何方式的資源。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example illustrates creating a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">下列範例會說明如何建立<ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>之間<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>和根文件部分。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the target part.</source>
          <target state="translated">目標組件的 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Indicates if the target part is <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph> to the package.</source>
          <target state="translated">指出目標組件是套件的 <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A URI that uniquely defines the role of the relationship.</source>
          <target state="translated">唯一定義關聯性角色的 URI。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</source>
          <target state="translated">以特定 URI、目標模式及關聯性類型建立套件層級關係。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package-level relationship to the specified part.</source>
          <target state="translated">指定之組件的套件層級關係。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">封裝層級關聯性可以有兩種形式。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>至封裝中的目標組件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>於封裝之外的目標資源。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> does not physically change the target part or resource in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 不會實際變更的目標組件或以任何方式的資源。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The target of a relationship cannot be another relationship.</source>
          <target state="translated">關聯性的目標不能是另一個關聯性。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> must be a relative URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">如果<ph id="ph1">`targetMode`</ph>指定為<ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>，<ph id="ph3">`targetUri`</ph>必須是相對 URI，形成根據<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</source>
          <target state="translated">內部的相對 URI 可以是絕對路徑，開頭為斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如 「.../ imagespicture1.jpg"解析針對封裝根目錄 （"/"） 做為基底 URI。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> can be either an absolute or relative URI formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">如果<ph id="ph1">`targetMode`</ph>指定為<ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>，<ph id="ph3">`targetUri`</ph>可以是任一個絕對或相對 URI 格式根據<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>" is an example of an absolute URI that references an external target resource "page2.xml".</source>
          <target state="translated">「<ph id="ph1">http://www.microsoft.com/page2.xml</ph>」 是絕對 URI 參照外部的目標資源 」 page2.xml 」 的範例。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</source>
          <target state="translated">「 images/picture1.jpg"是相對 URI，也會參考外部的目標資源 」 1.jpg"但可解析針對封裝本身的 URI 的範例。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">`relationshipType`</ph> must be a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated"><ph id="ph1">`relationshipType`</ph> 必須是<ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>，形成根據<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">下表顯示封裝層級<ph id="ph1">`relationshipType`</ph>開放封裝慣例 (OPC) 規格所定義的 Uri。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">封裝層級關聯性</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">URI 的關聯性類型</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Core Properties</source>
          <target state="translated">核心屬性</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/核心屬性</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature</source>
          <target state="translated">數位簽章</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al 簽章/簽章</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">數位簽章憑證</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章憑證</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">數位簽章來源</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章來源</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Thumbnail</source>
          <target state="translated">縮圖</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/縮圖</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">下列範例說明如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph>建立<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>之間<ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph>和根文件部分。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> part is a <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> is <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> and <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> is an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 組件是 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>，或 <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> 是 <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> 且 <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> 是絕對 URI。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package is read-only.</source>
          <target state="translated">封裝是唯讀的。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the target part.</source>
          <target state="translated">目標組件的 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Indicates if the target part is <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph> to the package.</source>
          <target state="translated">指出目標組件是套件的 <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A URI that uniquely defines the role of the relationship.</source>
          <target state="translated">唯一定義關聯性角色的 URI。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A unique XML identifier.</source>
          <target state="translated">唯一的 XML 識別項。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Creates a package-level relationship to a part with a given URI, target mode, relationship type, and <ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph>.</source>
          <target state="translated">以特定 URI、目標模式、關聯性類型及<ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph> 建立套件層級關係。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package-level relationship to the specified part.</source>
          <target state="translated">指定之組件的套件層級關係。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">封裝層級關聯性可以有兩種形式。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>至封裝中的目標組件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>於封裝之外的目標資源。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> does not physically change the target part or resource in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 不會實際變更的目標組件或以任何方式的資源。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The target of a relationship cannot be another relationship.</source>
          <target state="translated">關聯性的目標不能是另一個關聯性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">`id`</ph> must be a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 必須是有效的 XML 識別碼。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">`id`</ph> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <bpt id="p1">[</bpt><ph id="ph2">https://www.w3.org/TR/xmlschema-2/#ID</ph><ept id="p1">](https://www.w3.org/TR/xmlschema-2/#ID)</ept>).</source>
          <target state="translated"><ph id="ph1">`id`</ph>型別是 xsd:ID，且必須遵照 XML 結構描述第 2 部分中所指定的命名慣例： 資料類型規格 (請參閱<bpt id="p1">[</bpt> <ph id="ph2">https://www.w3.org/TR/xmlschema-2/#ID</ph> <ept id="p1">](https://www.w3.org/TR/xmlschema-2/#ID)</ept>)。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`id`</ph> is specified as <ph id="ph2">`null`</ph> a unique ID will be automatically generated.</source>
          <target state="translated">如果<ph id="ph1">`id`</ph>指定為<ph id="ph2">`null`</ph>就會自動產生的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>An <ph id="ph1">`id`</ph> specified by an empty string is not valid.</source>
          <target state="translated"><ph id="ph1">`id`</ph>指定空字串無效。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> must be a relative URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">如果<ph id="ph1">`targetMode`</ph>指定為<ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>，<ph id="ph3">`targetUri`</ph>必須是相對 URI，形成根據<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</source>
          <target state="translated">內部的相對 URI 可以是絕對路徑，開頭為斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如 「.../ imagespicture1.jpg"解析針對封裝根目錄 （"/"） 做為基底 URI。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> can be either an absolute or relative URI formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">如果<ph id="ph1">`targetMode`</ph>指定為<ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>，<ph id="ph3">`targetUri`</ph>可以是任一個絕對或相對 URI 格式根據<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>" is an example of an absolute URI that references an external target resource "page2.xml".</source>
          <target state="translated">「<ph id="ph1">http://www.microsoft.com/page2.xml</ph>」 是絕對 URI 參照外部的目標資源 」 page2.xml 」 的範例。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</source>
          <target state="translated">「 images/picture1.jpg"是相對 URI，也會參考外部的目標資源 」 1.jpg"但可解析針對封裝本身的 URI 的範例。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">`relationshipType`</ph> must be a URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated"><ph id="ph1">`relationshipType`</ph> 必須是根據不正確的 URI <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">下表顯示封裝層級<ph id="ph1">`relationshipType`</ph>開放封裝慣例 (OPC) 規格所定義的 Uri。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">封裝層級關聯性</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">URI 的關聯性類型</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Core Properties</source>
          <target state="translated">核心屬性</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/核心屬性</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature</source>
          <target state="translated">數位簽章</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al 簽章/簽章</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">數位簽章憑證</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章憑證</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">數位簽章來源</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章來源</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Thumbnail</source>
          <target state="translated">縮圖</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/縮圖</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">下列範例說明如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph>建立<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>之間<ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph>和根文件部分。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> part is a <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> is <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> and <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> is an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 組件是 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>，或 <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> 是 <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> 且 <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> 是絕對 URI。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package is read-only.</source>
          <target state="translated">封裝是唯讀的。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier; or a part with the specified <ph id="ph2">&lt;paramref name="id" /&gt;</ph> already occurs in the package.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 不是有效的 XML 識別項，或是套件中已存在具有指定之 <ph id="ph2">&lt;paramref name="id" /&gt;</ph> 的組件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the part to delete.</source>
          <target state="translated">要刪除之組件的 <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>Deletes a part with a given URI from the package.</source>
          <target state="translated">刪除套件中具有特定 URI 的組件。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">`partUri`</ph> must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</source>
          <target state="translated"><ph id="ph1">`partUri`</ph> 必須是相對 URI 的絕對路徑的開頭為斜線 （"/"） 字元所組成。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The absolute path is relative to the package root and is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">絕對路徑會相對於封裝根目錄，而且根據的正確<bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept>統一資源識別元 (URI) 的一般語法規格。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</source>
          <target state="translated">"/ page1.xaml 」 和 「 / images/picture4.jpg"是有效的組件 Uri 的範例。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>No exception is raised if a part with the specified <ph id="ph1">`partUri`</ph> is not in the package.</source>
          <target state="translated">如果具有指定的組件，會引發任何例外狀況<ph id="ph1">`partUri`</ph>不是在封裝中。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>(You can use the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> method to determine whether a part with a specified <ph id="ph2">`partUri`</ph> is in the package.)</source>
          <target state="translated">(您可以使用<ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph>方法，以判斷是否包含指定的組件<ph id="ph2">`partUri`</ph>套件中。)</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The package is read-only.</source>
          <target state="translated">封裝是唯讀的。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> method to actually delete the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph>實際刪除組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackagePart.Uri" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> to delete.</source>
          <target state="translated">要刪除之 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackagePart.Uri" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>When overridden in a derived class, deletes a part with a given URI.</source>
          <target state="translated">在衍生類別中覆寫時，刪除具有特定 URI 的組件。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象類別實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeletePart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.DeletePartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to perform the actual delete operation based on the physical format implemented in the derived class.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeletePart%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.DeletePartCore%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>類別以執行實際刪除實體衍生類別中實作的格式為基礎的作業。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The derived class <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> implementation is called by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> method to the specified part based on the physical format implemented in the derived class.</source>
          <target state="translated">在衍生的類別<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph>實作會呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph>指定之組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> method that calls it.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph>實作應該進行的順序或所執行的作業不作任何假設<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph>方法呼叫它。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph> to delete.</source>
          <target state="translated">要刪除之 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Deletes a package-level relationship.</source>
          <target state="translated">刪除套件層級關係。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">封裝層級關聯性可以有兩種形式。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>至封裝中的目標組件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>於封裝之外的目標資源。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>No exception is raised if a relationship with the specified <ph id="ph1">`id`</ph> is not in the package.</source>
          <target state="translated">如果具有指定的關聯性，會引發任何例外狀況<ph id="ph1">`id`</ph>不是在封裝中。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeleteRelationship%2A&gt;</ph> does not physically change the target part in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeleteRelationship%2A&gt;</ph> 不會實際變更目標組件，以任何方式。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The package is read-only.</source>
          <target state="translated">封裝是唯讀的。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 不是有效的 XML 識別項。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</source>
          <target state="translated">清除並儲存所有組件與關聯性的內容、關閉套件，然後釋放所有的資源。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>To make sure that all changes are correctly saved, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</source>
          <target state="translated">若要確定所有變更正確都儲存<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>也完成、 排清，並關閉所有的組件和包含在封裝中的關聯性。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>For the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> class, <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> perform the same operation - there is no reason to call <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> if you call <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, or vice-versa.</source>
          <target state="translated">如<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>執行相同的作業-沒有理由来呼叫<ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>如果您呼叫<ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>，反之亦然。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> internally call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>內部呼叫<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Derived classes that allocate and manage non-memory resources should override this method to release resources when <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> is called.</source>
          <target state="translated">其中配置和管理非記憶體資源的衍生的類別應該覆寫此方法以釋放資源時<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Derived-class overrides should also call <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> and the base-class <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> method to make sure that base-class cleanup is always performed.</source>
          <target state="translated">衍生類別覆寫也應該呼叫<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>和基底類別<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>方法，以確定該基底類別清除一律會執行。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`using`</ph> statement (different from the <ph id="ph2">`using`</ph> namespace directive) is the recommended way to <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> a package.</source>
          <target state="translated"><ph id="ph1">`using`</ph>陳述式 (不同於<ph id="ph2">`using`</ph>命名空間指示詞) 是建議的方式<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>封裝。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> shows how to close and dispose a package by using the <ph id="ph1">`using`</ph> statement.</source>
          <target state="translated"><bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>示範如何關閉和處置封裝使用<ph id="ph1">`using`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>Gets the file access setting for the package.</source>
          <target state="translated">取得套件的檔案存取設定。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values: <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 值：<ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.Package.FileOpenAccess%2A&gt;</ph> property has no default value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FileOpenAccess%2A&gt;</ph> 屬性沒有預設值。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The file access setting is specified in the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor call when you create a new package, or in the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> call when you open an existing package.</source>
          <target state="translated">檔案存取設定中指定<ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph>建構函式呼叫，當您建立新的封裝，或在<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>開啟現有的封裝時呼叫。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>Saves the contents of all parts and relationships that are contained in the package.</source>
          <target state="translated">儲存套件包含的所有組件及關聯性的內容。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> implemetation to perform the actual format-specific flush operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph>執行實際的特定格式的排清作業的實作。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>The derived class's <ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</source>
          <target state="translated">在衍生的類別的<ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph>方法會負責實際儲存特定實體的衍生的類別實作的組件和關聯性內容。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>基底類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> to save the parts and relationships in a ZIP file package.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph>ZIP 檔案封裝中儲存的組件和關聯性。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> is called automatically by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 就會呼叫自動<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>When <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> is called you do not have to call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> separately.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph>會呼叫您不需要呼叫<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>分開。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>The package is read-only and cannot be modified.</source>
          <target state="translated">套件是唯讀的，無法修改。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph>實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.FlushCore">
          <source>When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</source>
          <target state="translated">在衍生類別中覆寫時，將所有組件與關聯性的內容儲存到衍生類別存放區。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.FlushCore">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> method to perform the actual flush operation based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> 會呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>實體衍生類別中實作的格式為基礎的方法，以執行實際的清除作業。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.FlushCore">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> implementation should not make any assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> method that calls it.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph>實作不應做任何假設的順序或所執行的作業<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph>方法呼叫它。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the part to return.</source>
          <target state="translated">要傳回之組件的<ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>Returns the part with a given URI.</source>
          <target state="translated">傳回具有特定 URI 的組件。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>.</source>
          <target state="translated">具有指定之 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 的組件。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown if a part with the specified <ph id="ph2">`partUri`</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果具有指定的組件，會擲回<ph id="ph2">`partUri`</ph>不存在。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> method can be used to determine whether <ph id="ph2">`partUri`</ph> references an existing part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph>方法可以用來判斷是否<ph id="ph2">`partUri`</ph>參考現有的組件。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>基底類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to return a requested part from a ZIP file.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>類別，以傳回要求的組件從 ZIP 檔案。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The following example shows how to locate, retrieve, and read parts that are contained in a package.</source>
          <target state="translated">下列範例會示範如何找出、 擷取及讀取包含在封裝的組件。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>讀取封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not in the package.</source>
          <target state="translated">具有指定之 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 的組件不在套件內。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph>實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the part to retrieve.</source>
          <target state="translated">要擷取之組件的<ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>When overridden in a derived class, returns the part addressed by a given URI.</source>
          <target state="translated">在衍生類別中覆寫時，傳回由特定 URI 定址的組件。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The requested part; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if a part with the specified <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> is not in the package.</source>
          <target state="translated">要求的組件；或者，如果具有指定之 <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> 的組件不存在套件中，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to retrieve a part from a ZIP file.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>類別來擷取從 ZIP 檔案的一部分。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The derived class  <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> implementation is called by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> method to access and return the specified part based on the physical format implemented in the derived class.</source>
          <target state="translated">在衍生的類別<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph>實作會呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph>實體衍生類別中實作的格式為基礎的方法來存取，並傳回指定的組件。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> method that calls it.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph>實作應該進行的順序或所執行的作業不作任何假設<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph>方法呼叫它。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>Returns a collection of all the parts in the package.</source>
          <target state="translated">傳回套件中所有組件的集合。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>A collection of all the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> elements that are contained in the package.</source>
          <target state="translated">包含在套件中的所有 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> 項目的集合。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> returns a collection of all parts that are contained in the package including <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 傳回一組所包含的所有組件中封裝包括<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>組件。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however, the returned collection will contain zero elements if the package contains no parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 永遠不會傳回<ph id="ph2">`null`</ph>; 不過，如果封裝不包含的任何部分，傳回的集合將包含零個元素。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>基底類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to return the parts from a ZIP file.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>類別，以傳回組件從 ZIP 檔案。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝和封裝組件的詳細資訊，請參閱 1.1 規格的節開放封裝慣例 (OPC) 可供下載在<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> method to obtain a collection of the parts that are contained in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph>方法，以取得組件中所包含的集合<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>For the complete program source code, see <bpt id="p1">[</bpt>Creating a Package with a Digital Signature Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159966)</ept>.</source>
          <target state="translated">完成程式的原始程式碼，請參閱<bpt id="p1">[</bpt>建立數位簽章範例封裝<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159966)</ept>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> 在衍生的類別會在內部呼叫<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph>實際上排清的組件的方法為基礎的實體格式，衍生類別中實作。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>When overridden in a derived class, returns an array of all the parts in the package.</source>
          <target state="translated">在衍生類別中覆寫時，傳回套件中所有組件的陣列。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>An array of all the parts that are contained in the package.</source>
          <target state="translated">包含在套件中的所有組件的陣列。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>The derived class <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> implementation is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> method to access and return the array of parts based on the physical format implemented in the derived class.</source>
          <target state="translated">在衍生的類別<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph>實作會呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph>實體衍生類別中實作的格式為基礎的方法來存取，並傳回組件的陣列。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>衍生的抽象實作<ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>類別會提供和使用。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to retrieve the parts from a ZIP file.</source>
          <target state="translated">在預設作業<ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph>會在內部呼叫<ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph>的<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>類別來擷取組件從 ZIP 檔案。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> method that calls it.</source>
          <target state="translated">在衍生<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph>實作應該進行的順序或所執行的作業不作任何假設<ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph>方法呼叫它。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the relationship to return.</source>
          <target state="translated">要傳回之關聯性的 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>Returns the package-level relationship with a given identifier.</source>
          <target state="translated">傳回具有特定識別項的套件層級關係。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package-level relationship with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph>.</source>
          <target state="translated">具有指定之 <ph id="ph1">&lt;paramref name="id" /&gt;</ph> 的套件層級關係。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">`id`</ph> must be a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 必須是有效的 XML 識別碼。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The <ph id="ph1">`id`</ph> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <bpt id="p1">[</bpt><ph id="ph2">https://www.w3.org/TR/xmlschema-2/#ID</ph><ept id="p1">](https://www.w3.org/TR/xmlschema-2/#ID)</ept>).</source>
          <target state="translated"><ph id="ph1">`id`</ph>型別是 xsd:ID，且必須遵照 XML 結構描述第 2 部分中所指定的命名慣例： 資料類型規格 (請參閱<bpt id="p1">[</bpt> <ph id="ph2">https://www.w3.org/TR/xmlschema-2/#ID</ph> <ept id="p1">](https://www.w3.org/TR/xmlschema-2/#ID)</ept>)。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 不是有效的 XML 識別項。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>A relationship with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not in the package.</source>
          <target state="translated">具有指定之 <ph id="ph1">&lt;paramref name="id" /&gt;</ph> 的關聯性不在套件內。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Returns a collection of all the package-level relationships.</source>
          <target state="translated">傳回所有套件層級關係的集合。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A collection of all the package-level relationships that are contained in the package.</source>
          <target state="translated">包含在套件中的所有套件層級關係的集合。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however the returned collection may contain zero elements if the package contains no package-level relationships.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> 永遠不會傳回<ph id="ph2">`null`</ph>; 不過，如果封裝不包含封裝層級關聯性，傳回的集合可能包含零個元素。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">封裝層級關聯性定義封裝和相關聯的目標組件或資源之間的關聯。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">封裝層級關聯性可以有兩種形式。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>至封裝中的目標組件。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">之間<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>於封裝之外的目標資源。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">刪除套件時，會一併刪除封裝所擁有的所有關聯性。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</source>
          <target state="translated">建立或刪除的關聯性的程序不會實際變更的目標組件或以任何方式的資源。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需有關封裝和封裝關聯性的詳細資訊，請參閱小節 1.3 開放封裝慣例 (OPC) 規格中可供下載<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph> to match and return in the collection.</source>
          <target state="translated">要進行比對並傳回集合的 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Returns a collection of all the package-level relationships that match a given <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph>.</source>
          <target state="translated">傳回符合特定 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph> 的所有套件層級關係的集合。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>A collection of package-level relationships that match the specified <ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph>.</source>
          <target state="translated">符合指定之 <ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> 的套件層級關係的集合。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however the returned collection may contain zero elements if there are no package-level relationships that match the specified <ph id="ph3">`relationshipType`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> 永遠不會傳回<ph id="ph2">`null`</ph>; 不過，如果沒有符合指定的封裝層級關聯性，傳回的集合可能包含零個元素<ph id="ph3">`relationshipType`</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">下表顯示封裝層級<ph id="ph1">`relationshipType`</ph>開放封裝慣例 (OPC) 規格所定義的 Uri。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">封裝層級關聯性</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">URI 的關聯性類型</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Core Properties</source>
          <target state="translated">核心屬性</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/核心屬性</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature</source>
          <target state="translated">數位簽章</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al 簽章/簽章</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">數位簽章憑證</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章憑證</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">數位簽章來源</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-簽章來源</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Thumbnail</source>
          <target state="translated">縮圖</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 資料/縮圖</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The following example shows how to retrieve the relationships that have been defined for the package.</source>
          <target state="translated">下列範例會示範如何擷取封裝所定義的關聯性。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>讀取封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> 為空字串。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Opens a package.</source>
          <target state="translated">開啟封裝。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>，結合<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>項目及儲存的資料。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">開啟封裝所在的 IO 資料流。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>Opens a package on a given IO stream.</source>
          <target state="translated">開啟位於特定 IO 資料流上的套件。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or, the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">要開啟的套件需要讀取或讀寫權限，而指定的 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> 是唯讀。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The path and file name of the package.</source>
          <target state="translated">封裝的路徑和檔名。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>Opens a package at a given path and file name.</source>
          <target state="translated">開啟特定路徑與檔名的封裝。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with default attributes <ph id="ph2">&lt;xref:System.IO.FileMode.OpenOrCreate&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileShare.None&gt;</ph> (to specify different attributes use one of the other Open method overloads).</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法會使用預設屬性來開啟封裝<ph id="ph2">&lt;xref:System.IO.FileMode.OpenOrCreate&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>，和<ph id="ph4">&lt;xref:System.IO.FileShare.None&gt;</ph>（以指定不同的屬性會使用其中一個其他的 Open 方法多載）。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>，結合<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>項目及儲存的資料。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">開啟封裝所在的 IO 資料流。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">開啟套件的檔案模式。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>Opens a package with a given IO stream and file mode.</source>
          <target state="translated">使用特定 IO 資料流及檔案模式開啟套件。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 值無效。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or, the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">要開啟的套件需要讀取或讀寫權限，而指定的 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> 是唯讀。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The path and file name of the package.</source>
          <target state="translated">封裝的路徑和檔名。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">開啟套件的檔案模式。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>Opens a package at a given path using a given file mode.</source>
          <target state="translated">使用特定檔案模式開啟位於特定路徑的套件。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with default attributes <ph id="ph2">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileShare.None&gt;</ph> (to specify different attributes use one of the other Open method overloads).</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法會使用預設屬性來開啟封裝<ph id="ph2">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.FileShare.None&gt;</ph>（以指定不同的屬性會使用其中一個其他的 Open 方法多載）。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>，結合<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>項目及儲存的資料。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>Value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">開啟封裝所在的 IO 資料流。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">開啟套件的檔案模式。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file access in which to open the package.</source>
          <target state="translated">開啟套件的檔案存取。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>Opens a package with a given IO stream, file mode, and file access setting.</source>
          <target state="translated">使用特定 IO 資料流、檔案模式及檔案存取設定開啟套件。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">要開啟的套件需要讀取或讀寫權限，而指定的 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> 是唯讀。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The path and file name of the package.</source>
          <target state="translated">封裝的路徑和檔名。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">開啟套件的檔案模式。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file access in which to open the package.</source>
          <target state="translated">開啟套件的檔案存取。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Opens a package at a given path using a given file mode and file access setting.</source>
          <target state="translated">使用特定檔案模式及檔案存取設定，開啟位於特定路徑的套件。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with a default <ph id="ph2">&lt;xref:System.IO.FileShare.None&gt;</ph> attribute (to specify a different attribute use the <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method overload).</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法預設值開啟封裝<ph id="ph2">&lt;xref:System.IO.FileShare.None&gt;</ph>屬性 (若要指定不同的屬性使用<ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法多載)。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The following example shows how to open and read a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that contains <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">下列範例示範如何開啟和讀取<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>包含<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>項目及儲存的資料。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>讀取封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The path and file name of the package.</source>
          <target state="translated">封裝的路徑和檔名。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">開啟套件的檔案模式。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file access in which to open the package.</source>
          <target state="translated">開啟套件的檔案存取。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file sharing mode in which to open the package.</source>
          <target state="translated">用來開啟套件的檔案共用模式。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Opens a package at a given path using a given file mode, file access, and file share setting.</source>
          <target state="translated">使用特定檔案模式、檔案存取及檔案共用設定，開啟位於特定路徑的套件。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The opened package.</source>
          <target state="translated">已開啟的套件。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 是預設封裝類型，以供<ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">下列範例示範如何建立新<ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>，結合<ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph>項目及儲存的資料。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>寫入封裝範例<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="packageShare" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph>、<ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="packageShare" /&gt;</ph> 的值無效。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>Gets the core properties of the package.</source>
          <target state="translated">取得套件的核心屬性。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>The core properties of the package.</source>
          <target state="translated">套件的核心屬性。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需有關核心封裝屬性的詳細資訊，請參閱第 3.1 節可供下載開放封裝慣例 (OPC) 規格中的在<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> of the part to check for.</source>
          <target state="translated">要檢查之組件的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>Indicates whether a part with a given URI is in the package.</source>
          <target state="translated">指出套件中是否存在具有特定 URI 的組件。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a part with the specified <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> is in the package; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果套件內已經存在具有指定之 <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> 的組件，就是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則就是 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The <ph id="ph1">`partUri`</ph> should begin with a forward-slash character "/" and be absolute from the root of the package.</source>
          <target state="translated"><ph id="ph1">`partUri`</ph>開頭應該是正斜線字元"/"，而且是絕對根目錄中的封裝。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The package is write-only (information cannot be read).</source>
          <target state="translated">套件是唯寫的 (無法讀取資訊)。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the relationship to check for.</source>
          <target state="translated">要檢查之關聯性的 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>Indicates whether a package-level relationship with a given ID is contained in the package.</source>
          <target state="translated">指出套件中是否包含具有特定 ID 的套件層級關係。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a package-level relationship with the specified <ph id="ph2">&lt;paramref name="id" /&gt;</ph> is in the package; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果套件裝包含具有指定之 <ph id="ph2">&lt;paramref name="id" /&gt;</ph> 的套件層級關係，就是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格<bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 不是有效的 XML 識別項。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">套件沒有開啟 (已呼叫 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">封裝是唯寫的。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended for application use.</source>
          <target state="translated">這個成員支援 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 基礎結構，但不建議用於應用程式。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
          <source>Use the type-safe <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> method instead.</source>
          <target state="translated">請改用類型安全的 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>