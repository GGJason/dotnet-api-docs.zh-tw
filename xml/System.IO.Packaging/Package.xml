<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dee45f1f612e06eeda3bbc4d49ae2828aed0329" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51912670" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="973d6-101">表示可以儲存多個資料物件的容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="973d6-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-102"><xref:System.IO.Packaging.Package> 是抽象類別，可用來將物件組織在單一實體的定義實體，可攜性和高效率的存取。</span><span class="sxs-lookup"><span data-stu-id="973d6-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="973d6-103">ZIP 檔案是主要實體格式<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="973d6-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="973d6-104">其他<xref:System.IO.Packaging.Package>實作可能使用其他實體的格式，例如 XML 文件時，資料庫，或 Web 服務。</span><span class="sxs-lookup"><span data-stu-id="973d6-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="973d6-105">項目包含在檔案系統，例如<xref:System.IO.Packaging.Package>在階層式組織中的資料夾與檔案參考。</span><span class="sxs-lookup"><span data-stu-id="973d6-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="973d6-106">雖然<xref:System.IO.Packaging.Package>本身是抽象類別，<xref:System.IO.Packaging.ZipPackage>衍生的類別做為預設的 <xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-107">A <xref:System.IO.Packaging.PackagePart> （「 組件 」） 是抽象類別，代表儲存在物件<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="973d6-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="973d6-108">A <xref:System.IO.Packaging.PackageRelationship> （「 關聯性 」） 會定義來源之間的關聯<xref:System.IO.Packaging.Package>或<xref:System.IO.Packaging.PackagePart>和目標物件。</span><span class="sxs-lookup"><span data-stu-id="973d6-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="973d6-109">A<xref:System.IO.Packaging.PackageRelationship>可以是下列其中一種，每一個都可以有兩種形式：</span><span class="sxs-lookup"><span data-stu-id="973d6-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="973d6-110">封裝層關係 (由<xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType>方法) 與相關<xref:System.IO.Packaging.Package>為：</span><span class="sxs-lookup"><span data-stu-id="973d6-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="973d6-111">目標組件在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="973d6-112">目標封裝外部的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="973d6-113">組件層關係 (由<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType>方法) 與來源<xref:System.IO.Packaging.PackagePart>為：</span><span class="sxs-lookup"><span data-stu-id="973d6-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="973d6-114">在封裝中的另一個目標組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="973d6-115">目標封裝外部的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-116">關聯性的來源<xref:System.IO.Packaging.Package>或來源<xref:System.IO.Packaging.PackagePart>會被視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-117">刪除來源物件時，會一併刪除來源物件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="973d6-118">建立或刪除關聯性的程序不會實際變更以任何方式的來源或目標物件。</span><span class="sxs-lookup"><span data-stu-id="973d6-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="973d6-119">A <xref:System.IO.Packaging.PackageDigitalSignature> （「 數位簽章 」） 是組件和關係代表隨附的數位簽章的組合<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="973d6-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="973d6-120">數位簽章識別建立者，並驗證已簽署組件和關聯性包含在<xref:System.IO.Packaging.Package>尚未經過修改。</span><span class="sxs-lookup"><span data-stu-id="973d6-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="973d6-121">封裝也支援數位版權管理 (DRM) 可讓內容中的項目<xref:System.IO.Packaging.Package>加密與特定存取權限授與授權的使用者。</span><span class="sxs-lookup"><span data-stu-id="973d6-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="973d6-122">根據<xref:System.IO.Packaging.Package>架構中，<xref:System.Windows.Xps.Packaging.XpsDocument>是設計用來儲存文件開啟為基礎的封裝類型[XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761)。</span><span class="sxs-lookup"><span data-stu-id="973d6-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](https://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="973d6-123">.NET Framework 會使用套件來儲存內容、 資源和網頁和依預設使用標準的 ZIP 檔案的文件的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="973d6-124">可以使用任何 ZIP 檔案中，您的應用程式<xref:System.IO.Packaging>類別來儲存並選擇性地保護任何類型或單一的有效存取容器中的資料檔案數目。</span><span class="sxs-lookup"><span data-stu-id="973d6-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="973d6-125">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-126">下列範例示範建立的基本步驟<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="973d6-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="973d6-127">在此範例中，封裝會建立包含文件以及圖形影像是顯示為文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="973d6-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="973d6-128">(這是類似於案例中具有 HTML 檔\<i m g > 標記，參考外部影像檔。)兩個<xref:System.IO.Packaging.PackageRelationship>元素也包含在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="973d6-129">第一天，「 封裝層級 」 關聯性會定義文件組件為套件的根項目。</span><span class="sxs-lookup"><span data-stu-id="973d6-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="973d6-130">第二，「 組件層級 」 的關聯性定義文件組件 （「 來源 」 的組件層關係） 和其使用的映像組件 （""做為目標的組件層級關聯性） 之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="973d6-131">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-131">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">
      <span data-ttu-id="973d6-132">開放式封裝慣例 (OPC) 規格</span>
      <span class="sxs-lookup">
        <span data-stu-id="973d6-132">Open Packaging Conventions (OPC) Specification</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">
      <span data-ttu-id="973d6-133">Digital Signing Framework of the Open Packaging Conventions</span>
      <span class="sxs-lookup">
        <span data-stu-id="973d6-133">Digital Signing Framework of the Open Packaging Conventions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-134">初始化 <see cref="T:System.IO.Packaging.Package" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="973d6-135">套件的檔案 IO 權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-135">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-136">將使用特定 <see cref="T:System.IO.Packaging.Package" /> 之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-136">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-137"><xref:System.IO.Packaging.Package.%23ctor%2A> 受保護的建構函式的<xref:System.IO.Packaging.Package>抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="973d6-137"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="973d6-138">在衍生類別中呼叫時<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式初始化衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="973d6-138">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-139">
            <paramref name="openFileAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-139">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="973d6-140">套件的檔案 IO 權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-140">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="973d6-141">
            <see langword="true" /> 表示開啟套件以進行資料流處理，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-141">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-142">將使用特定 <see cref="T:System.IO.Packaging.Package" /> 及資料流選項之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-142">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-143"><xref:System.IO.Packaging.Package.%23ctor%2A> 受保護的建構函式的<xref:System.IO.Packaging.Package>抽象基底的抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="973d6-143"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="973d6-144">在衍生類別中呼叫時<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式初始化衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="973d6-144">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-145">
            <paramref name="openFileAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-145">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-146">儲存並關閉套件，以及所有基礎組件資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-146">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-147">針對<xref:System.IO.Packaging.Package>類別<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>執行相同的作業 — 呼叫沒有理由<xref:System.IO.Packaging.Package.Dispose%2A>如果您呼叫<xref:System.IO.Packaging.Package.Close%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="973d6-147">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="973d6-148"><xref:System.IO.Packaging.Package.Close%2A> 並<xref:System.IO.Packaging.Package.Dispose%2A>在內部呼叫<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="973d6-148"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="973d6-149">`using`陳述式 (不同於`using`命名空間指示詞) 是建議的方式<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>封裝。</span><span class="sxs-lookup"><span data-stu-id="973d6-149">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="973d6-150">[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)並[讀取封裝範例](https://go.microsoft.com/fwlink/?LinkID=160034)示範如何關閉和處置封裝使用`using`陳述式。</span><span class="sxs-lookup"><span data-stu-id="973d6-150">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-151">建立新的套件組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-151">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-152"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-152"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="973d6-153"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用來取得與組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="973d6-153">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="973d6-154">如需有關封裝組件的詳細資訊，請參閱本文 1.1 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-154">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-155">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="973d6-155">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="973d6-156">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-156">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-157">
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />衍生類別中實作的實體格式作為基礎來實際建立部分的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-157">
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-158">新組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-158">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="973d6-159">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-159">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-160">以特定 URI 及內容類型建立新的未壓縮組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-160">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-161">新建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-161">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-162"><xref:System.IO.Packaging.Package.CreatePart%2A> 初始化空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-162"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="973d6-163"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用來取得與組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="973d6-163">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="973d6-164">組件<xref:System.IO.Packaging.PackagePart.CompressionOption%2A>是<xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="973d6-164">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="973d6-165">如需有關封裝組件的詳細資訊，請參閱在的一節 1.1 中可供下載的開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-165">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-166">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="973d6-166">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="973d6-167">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-167">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-168">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-168">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-169">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-169">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="973d6-170">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-170">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-171">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-171">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-172">套件是唯讀的 (無法新增組件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-172">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-173">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />衍生類別中實作的實體格式作為基礎來實際建立部分的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-173">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-174">新組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-174">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="973d6-175">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-175">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="973d6-176">資料流、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 壓縮的壓縮選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-176">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-177">以特定 URI、內容類型及壓縮選項建立新組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-177">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-178">新建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-178">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-179">預設值<xref:System.IO.Packaging.ZipPackage>衍生類別，<xref:System.IO.Packaging.Package.CreatePart%2A>方法只支援兩個`compressionOption`值<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="973d6-179">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="973d6-180">其他<xref:System.IO.Packaging.CompressionOption>的值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="973d6-180">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="973d6-181"><xref:System.IO.Packaging.Package.CreatePart%2A> 建立空<xref:System.IO.Stream>新組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-181"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="973d6-182"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType>方法可用來取得與組件相關聯的資料流執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="973d6-182">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="973d6-183">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-183">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-184">下列範例示範如何建立新<xref:System.IO.Packaging.PackagePart>然後將資料儲存在組件中。</span><span class="sxs-lookup"><span data-stu-id="973d6-184">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="973d6-185">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-185">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-186">
            <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-186">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-187">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-187">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="973d6-188">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-188">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-189">
            <paramref name="compressionOption" /> 值不是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-189">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-190">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-190">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-191">套件是唯讀的 (無法新增組件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-191">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-192">
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />衍生類別中實作的實體格式作為基礎來實際建立部分的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-192">
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-193">所建立之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-193">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="973d6-194">資料流的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-194">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="973d6-195">資料流的壓縮選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-195">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-196">在衍生類別中覆寫時，請在套件中建立新的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-196">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-197">建立的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-197">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-198">衍生<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法會呼叫<xref:System.IO.Packaging.Package.CreatePart%2A>衍生類別中實作的實體格式作為基礎來建立組件的方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-198">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="973d6-199">根據預設，<xref:System.IO.Packaging.ZipPackage>抽象的衍生類別實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-199">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="973d6-200">在預設作業中，<xref:System.IO.Packaging.Package.CreatePart%2A>在內部呼叫<xref:System.IO.Packaging.Package.CreatePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>ZIP 檔案中建立新的組件的類別。</span><span class="sxs-lookup"><span data-stu-id="973d6-200">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="973d6-201">預設值<xref:System.IO.Packaging.ZipPackage>衍生類別，<xref:System.IO.Packaging.Package.CreatePartCore%2A>方法只支援兩個`compressionOption`值<xref:System.IO.Packaging.CompressionOption.NotCompressed>或<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="973d6-201">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="973d6-202">其他<xref:System.IO.Packaging.CompressionOption>的值<xref:System.IO.Packaging.CompressionOption.Maximum>， <xref:System.IO.Packaging.CompressionOption.Fast>，或<xref:System.IO.Packaging.CompressionOption.SuperFast>使用<xref:System.IO.Packaging.CompressionOption.Normal>壓縮。</span><span class="sxs-lookup"><span data-stu-id="973d6-202">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="973d6-203">如需有關封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-203">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-204">衍生<see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />實作應該做出任何假設所執行作業的順序<see cref="Overload:System.IO.Packaging.Package.CreatePart" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-204">The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-205">建立特定組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-205">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-206">封裝層關係定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-206">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="973d6-207">封裝層關係可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="973d6-207">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="973d6-208">之間<xref:System.IO.Packaging.Package>目標<xref:System.IO.Packaging.PackagePart>套件內。</span><span class="sxs-lookup"><span data-stu-id="973d6-208">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="973d6-209">之間<xref:System.IO.Packaging.Package>封裝外部的目標資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-209">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-210">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-210">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-211">刪除套件時，會一併刪除的套件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-211">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="973d6-212">建立或刪除關聯性的程序不會實際改變的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-212">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="973d6-213">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-213">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-214">下列範例會說明如何建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-214">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="973d6-215">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-215">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="973d6-216">目標組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-216">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="973d6-217">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-217">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="973d6-218">唯一定義關聯性角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-218">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-219">以特定 URI、目標模式及關聯性類型建立套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-219">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-220">指定之組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-220">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-221">封裝層關係定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-221">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="973d6-222">封裝層關係可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="973d6-222">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="973d6-223">之間<xref:System.IO.Packaging.Package>目標組件在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-223">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="973d6-224">之間<xref:System.IO.Packaging.Package>封裝外部的目標資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-224">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-225">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-225">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-226">刪除套件時，會一併刪除的套件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-226">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="973d6-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-227"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="973d6-228">關聯性的目標不能是另一個關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-228">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="973d6-229">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必須是相對 URI，構成根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-230">內部的相對 URI 可以是任一個絕對路徑，開頭為正斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如".../ imagespicture1.jpg 」 解析對封裝根目錄 （"/"） 作為基底 URI。</span><span class="sxs-lookup"><span data-stu-id="973d6-230">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="973d6-231">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一個絕對或相對的 URI 格式，根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-231">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-232">「http://www.microsoft.com/page2.xml"是絕對 URI，參考外部目標資源 」 page2.xml 」 的範例。</span><span class="sxs-lookup"><span data-stu-id="973d6-232">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="973d6-233">「 images/picture1.jpg"是相對 URI，也會參考外部目標資源 」 1.jpg 」 但可解析封裝本身的 uri 的範例。</span><span class="sxs-lookup"><span data-stu-id="973d6-233">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="973d6-234">`relationshipType` 必須是[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，根據形成[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-234">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-235">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="973d6-235">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="973d6-236">封裝層關係</span><span class="sxs-lookup"><span data-stu-id="973d6-236">Package-level Relationship</span></span>|<span data-ttu-id="973d6-237">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="973d6-237">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="973d6-238">核心屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-238">Core Properties</span></span>|<span data-ttu-id="973d6-239">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心-屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-239">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="973d6-240">數位簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-240">Digital Signature</span></span>|<span data-ttu-id="973d6-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="973d6-242">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-242">Digital Signature Certificate</span></span>|<span data-ttu-id="973d6-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="973d6-244">數位簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-244">Digital Signature Origin</span></span>|<span data-ttu-id="973d6-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-245">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="973d6-246">縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-246">Thumbnail</span></span>|<span data-ttu-id="973d6-247">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-247">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="973d6-248">如需有關封裝和封裝關聯性的詳細資訊，請參閱本文 1.3 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-248">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-249">下列範例說明如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>來建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-249">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="973d6-250">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-250">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-251">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-251">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-252">
            <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-252">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-253">
            <paramref name="targetMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-253">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-254">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-254">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-255">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-255">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="973d6-256">目標組件的 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-256">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="973d6-257">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-257">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="973d6-258">唯一定義關聯性角色的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-258">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="973d6-259">唯一的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-259">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-260">以特定 URI、目標模式、關聯性類型及[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 建立套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-260">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-261">指定之組件的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-261">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-262">封裝層關係定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-262">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="973d6-263">封裝層關係可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="973d6-263">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="973d6-264">之間<xref:System.IO.Packaging.Package>目標組件在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-264">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="973d6-265">之間<xref:System.IO.Packaging.Package>封裝外部的目標資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-265">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-266">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-266">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-267">刪除套件時，會一併刪除的套件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-267">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="973d6-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 不會實際變更的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-268"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="973d6-269">關聯性的目標不能是另一個關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-269">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="973d6-270">`id` 必須是有效的 XML 識別項。</span><span class="sxs-lookup"><span data-stu-id="973d6-270">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="973d6-271">`id`型別 xsd:ID 作業，而且必須遵循命名慣例規定在 XML 結構描述第 2 部分： Datatypes 規格 (請參閱 < [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="973d6-271">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="973d6-272">如果`id`指定為`null`將會自動產生的唯一識別碼。</span><span class="sxs-lookup"><span data-stu-id="973d6-272">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="973d6-273">`id`指定空白字串無效。</span><span class="sxs-lookup"><span data-stu-id="973d6-273">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="973d6-274">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.Internal>，`targetUri`必須是相對 URI，構成根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-275">內部的相對 URI 可以是任一個絕對路徑，開頭為正斜線 （"/"） 字元例如"/ page1.xaml"或"/ images/picture4.jpg"，或相對路徑，例如".../ imagespicture1.jpg 」 解析對封裝根目錄 （"/"） 作為基底 URI。</span><span class="sxs-lookup"><span data-stu-id="973d6-275">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="973d6-276">如果`targetMode`指定為<xref:System.IO.Packaging.TargetMode.External>，`targetUri`可以是任一個絕對或相對的 URI 格式，根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-276">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-277">「http://www.microsoft.com/page2.xml"是絕對 URI，參考外部目標資源 」 page2.xml 」 的範例。</span><span class="sxs-lookup"><span data-stu-id="973d6-277">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="973d6-278">「 images/picture1.jpg"是相對 URI，也會參考外部目標資源 」 1.jpg 」 但可解析封裝本身的 uri 的範例。</span><span class="sxs-lookup"><span data-stu-id="973d6-278">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="973d6-279">`relationshipType` 必須是根據形成的 URI [RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-279">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-280">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="973d6-280">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="973d6-281">封裝層關係</span><span class="sxs-lookup"><span data-stu-id="973d6-281">Package-level Relationship</span></span>|<span data-ttu-id="973d6-282">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="973d6-282">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="973d6-283">核心屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-283">Core Properties</span></span>|<span data-ttu-id="973d6-284">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心-屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-284">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="973d6-285">數位簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-285">Digital Signature</span></span>|<span data-ttu-id="973d6-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="973d6-287">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-287">Digital Signature Certificate</span></span>|<span data-ttu-id="973d6-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="973d6-289">數位簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-289">Digital Signature Origin</span></span>|<span data-ttu-id="973d6-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-290">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="973d6-291">縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-291">Thumbnail</span></span>|<span data-ttu-id="973d6-292">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-292">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="973d6-293">如需有關封裝和封裝關聯性的詳細資訊，請參閱本文 1.3 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-293">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-294">下列範例說明如何使用<xref:System.IO.Packaging.Package.CreateRelationship%2A>來建立<xref:System.IO.Packaging.PackageRelationship>之間<xref:System.IO.Packaging.Package>和根文件組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-294">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="973d6-295">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-295">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-296">
            <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-296">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-297">
            <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-297">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-298">
            <paramref name="targetMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-298">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-299">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-299">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-300">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-300">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="973d6-301">
            <paramref name="id" /> 不是有效的 XML 識別項，或是套件中已存在具有指定之 <paramref name="id" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-301">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-302">要刪除之組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-302">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-303">刪除套件中具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-303">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-304">`partUri` 必須是絕對路徑的開頭使用正斜線 （"/"） 字元所組成的相對 URI。</span><span class="sxs-lookup"><span data-stu-id="973d6-304">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="973d6-305">絕對路徑是相對於封裝根目錄，而且正確根據[RFC 3986](http://tools.ietf.org/html/rfc3986)統一資源識別元 (URI) 的一般語法規格。</span><span class="sxs-lookup"><span data-stu-id="973d6-305">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="973d6-306">"/ page1.xaml"和"/ images/picture4.jpg 」 是有效的組件 Uri 的範例。</span><span class="sxs-lookup"><span data-stu-id="973d6-306">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="973d6-307">如果具有指定的組件，會引發任何例外狀況`partUri`不是在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-307">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="973d6-308">(您可以使用<xref:System.IO.Packaging.Package.PartExists%2A>方法，以判斷是否具有指定的組件`partUri`套件中。)</span><span class="sxs-lookup"><span data-stu-id="973d6-308">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="973d6-309">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-309">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-310">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-310">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-311">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-311">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-312">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-312">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-313">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-313">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-314">
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實際刪除組件的方法在衍生類別中實作的實體格式作為基礎。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-314">
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-315">要刪除之 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-315">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-316">在衍生類別中覆寫時，刪除具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-316">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-317">根據預設，<xref:System.IO.Packaging.ZipPackage>抽象的衍生類別實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-317">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="973d6-318">在預設作業中，<xref:System.IO.Packaging.Package.DeletePart%2A>在內部呼叫<xref:System.IO.Packaging.Package.DeletePartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別執行的實際刪除衍生類別中實作的實體格式作為基礎的作業。</span><span class="sxs-lookup"><span data-stu-id="973d6-318">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="973d6-319">如需有關封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-319">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-320">在衍生的類別<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實作會呼叫<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />方法，以指定的組件的衍生類別中實作的實體格式作為基礎。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-320">The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="973d6-321">衍生<see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />實作應該做出任何假設所執行作業的順序<see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-321">The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="973d6-322">要刪除之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-322">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-323">刪除套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-323">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-324">封裝層關係定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-324">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="973d6-325">封裝層關係可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="973d6-325">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="973d6-326">之間<xref:System.IO.Packaging.Package>目標組件在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-326">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="973d6-327">之間<xref:System.IO.Packaging.Package>封裝外部的目標資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-327">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-328">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-328">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-329">刪除套件時，會一併刪除的套件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-329">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="973d6-330">如果指定的關聯性，會引發任何例外狀況`id`不是在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-330">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="973d6-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 不會實際變更目標組件，以任何方式。</span><span class="sxs-lookup"><span data-stu-id="973d6-331"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="973d6-332">如需有關封裝關聯性的詳細資訊，請參閱本文 1.3 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-332">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-333">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-333">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-334">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-334">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-335">封裝是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-335">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="973d6-336">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-336">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="973d6-337">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-337">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-338">清除並儲存所有組件與關聯性的內容、關閉套件，然後釋放所有的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-338">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-339">若要確定所有變更會正確地都儲存<xref:System.IO.Packaging.Package.Dispose%2A>也完成、 排清，並關閉所有的組件和封裝中包含的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-339">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="973d6-340">針對<xref:System.IO.Packaging.Package>類別，<xref:System.IO.Packaging.Package.Dispose%2A>和<xref:System.IO.Packaging.Package.Close%2A>執行相同的作業： 呼叫沒有理由<xref:System.IO.Packaging.Package.Dispose%2A>如果您呼叫<xref:System.IO.Packaging.Package.Close%2A>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="973d6-340">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="973d6-341"><xref:System.IO.Packaging.Package.Close%2A> 並<xref:System.IO.Packaging.Package.Dispose%2A>在內部呼叫<xref:System.IO.Packaging.Package.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="973d6-341"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="973d6-342">配置及管理非記憶體資源的衍生的類別應該覆寫這個方法，以釋出資源時<xref:System.IO.Packaging.Package.Dispose%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="973d6-342">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="973d6-343">也應該呼叫衍生類別覆寫<xref:System.IO.Packaging.Package.Flush%2A>基底類別和<xref:System.IO.Packaging.Package.Dispose%2A>方法，以確保一律會執行的基底類別清除作業。</span><span class="sxs-lookup"><span data-stu-id="973d6-343">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="973d6-344">`using`陳述式 (不同於`using`命名空間指示詞) 是建議的方式<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>封裝。</span><span class="sxs-lookup"><span data-stu-id="973d6-344">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="973d6-345">[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)示範如何關閉和處置封裝使用`using`陳述式。</span><span class="sxs-lookup"><span data-stu-id="973d6-345">[Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-346">取得套件的檔案存取設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-346">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="973d6-347">其中一個 <see cref="T:System.IO.FileAccess" /> 值：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-347">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-348"><xref:System.IO.Packaging.Package.FileOpenAccess%2A> 屬性沒有預設值。</span><span class="sxs-lookup"><span data-stu-id="973d6-348">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="973d6-349">檔案存取設定中指定<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式呼叫，當您建立新的封裝，或在<xref:System.IO.Packaging.Package.Open%2A>呼叫，當您開啟現有的封裝。</span><span class="sxs-lookup"><span data-stu-id="973d6-349">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-350">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-350">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-351">儲存套件包含的所有組件及關聯性的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-351">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-352"><xref:System.IO.Packaging.Package.Flush%2A> 在衍生的類別會在內部呼叫<xref:System.IO.Packaging.Package.FlushCore%2A>執行實際的格式特定排清作業的實作。</span><span class="sxs-lookup"><span data-stu-id="973d6-352"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="973d6-353">在衍生的類別的<xref:System.IO.Packaging.Package.FlushCore%2A>方法會負責實際儲存的特定實體的衍生的類別實作的組件和關係的內容。</span><span class="sxs-lookup"><span data-stu-id="973d6-353">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="973d6-354">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-354">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="973d6-355">在預設作業中，<xref:System.IO.Packaging.Package.Flush%2A>在內部呼叫<xref:System.IO.Packaging.Package.FlushCore%2A>ZIP 檔案封裝中儲存的組件和關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-355">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="973d6-356"><xref:System.IO.Packaging.Package.Flush%2A> 會自動呼叫<xref:System.IO.Packaging.Package.Close%2A>和<xref:System.IO.Packaging.Package.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-356"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="973d6-357">當<xref:System.IO.Packaging.Package.Close%2A>或<xref:System.IO.Packaging.Package.Dispose%2A>稱為沒有呼叫<xref:System.IO.Packaging.Package.Flush%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="973d6-357">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-358">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-358">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-359">套件是唯讀的，無法修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-359">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-360">
              <see cref="M:System.IO.Packaging.Package.Flush" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.FlushCore" />實際排清的組件的方法在衍生類別中實作的實體格式作為基礎。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-360">
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-361">在衍生類別中覆寫時，將所有組件與關聯性的內容儲存到衍生類別存放區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-361">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-362"><xref:System.IO.Packaging.Package.FlushCore%2A> 會呼叫<xref:System.IO.Packaging.Package.Flush%2A>方法，以執行實際的清除作業會根據實體衍生類別中實作的格式。</span><span class="sxs-lookup"><span data-stu-id="973d6-362"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-363">衍生<see cref="M:System.IO.Packaging.Package.FlushCore" />實作不應建立的順序或所執行的作業有關的任何假設<see cref="M:System.IO.Packaging.Package.Flush" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-363">The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-364">要傳回之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-364">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-365">傳回具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-365">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-366">具有指定之 <paramref name="partUri" /> 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-366">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-367"><xref:System.InvalidOperationException>便會擲回具有指定的組件`partUri`不存在。</span><span class="sxs-lookup"><span data-stu-id="973d6-367">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="973d6-368"><xref:System.IO.Packaging.Package.PartExists%2A>方法可用來判斷是否`partUri`參考現有的組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-368">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="973d6-369">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-369">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="973d6-370">在預設作業中，<xref:System.IO.Packaging.Package.GetPart%2A>在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別，以傳回要求的組件從 ZIP 檔案。</span><span class="sxs-lookup"><span data-stu-id="973d6-370">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="973d6-371">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-371">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-372">下列範例示範如何找出、 擷取和讀取在封裝中包含的組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-372">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="973d6-373">如需完整的範例，請參閱[讀取封裝範例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="973d6-373">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-374">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-374">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-375">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-375">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="973d6-376">具有指定之 <paramref name="partUri" /> 的組件不在套件內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-376">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-377">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-377">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-378">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-378">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-379">
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實際排清的組件的方法在衍生類別中實作的實體格式作為基礎。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-379">
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-380">要擷取之組件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-380">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-381">在衍生類別中覆寫時，傳回由特定 URI 定址的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-381">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-382">要求的組件；或者，如果具有指定之 <paramref name="partUri" /> 的組件不存在套件中，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-382">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-383">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-383">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="973d6-384">在預設作業中，<xref:System.IO.Packaging.Package.GetPart%2A>在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別來擷取從 ZIP 檔案的一部分。</span><span class="sxs-lookup"><span data-stu-id="973d6-384">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="973d6-385">如需有關封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-385">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-386">在衍生的類別<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實作會呼叫<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />衍生類別中實作的實體格式作為基礎來存取並傳回指定的組件的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-386">The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.</span>
            </span>
            <span data-ttu-id="973d6-387">衍生<see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />實作應該做出任何假設所執行作業的順序<see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-387">The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-388">傳回套件中所有組件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-388">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-389">包含在套件中的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-389">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-390"><xref:System.IO.Packaging.Package.GetParts%2A> 傳回所包含的所有組件的集合中的封裝包括<xref:System.IO.Packaging.PackageRelationship>組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-390"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="973d6-391"><xref:System.IO.Packaging.Package.GetParts%2A> 永遠不會傳回`null`; 不過，如果封裝不包含的任何部分，傳回的集合將包含零個項目。</span><span class="sxs-lookup"><span data-stu-id="973d6-391"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="973d6-392">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>基底類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-392">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="973d6-393">在預設作業中，<xref:System.IO.Packaging.Package.GetParts%2A>呼叫<xref:System.IO.Packaging.Package.GetPartsCore%2A>方法<xref:System.IO.Packaging.ZipPackage>類別以從 ZIP 檔案中傳回的組件。</span><span class="sxs-lookup"><span data-stu-id="973d6-393">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="973d6-394">如需有關封裝和封裝組件的詳細資訊，請參閱本文 1.1 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-394">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-395">下列範例示範如何使用<xref:System.IO.Packaging.Package.GetParts%2A>方法，以取得集合中所包含的組件<xref:System.IO.Packaging.Package>。</span><span class="sxs-lookup"><span data-stu-id="973d6-395">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="973d6-396">完成程式的原始程式碼，請參閱 <<c0> [ 建立封裝的數位簽章範例](https://go.microsoft.com/fwlink/?LinkID=159966)。</span><span class="sxs-lookup"><span data-stu-id="973d6-396">For the complete program source code, see [Creating a Package with a Digital Signature Sample](https://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-397">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-397">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-398">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-398">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-399">
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 在衍生的類別會在內部呼叫<see cref="M:System.IO.Packaging.Package.GetPartsCore" />實際排清的組件的方法在衍生類別中實作的實體格式作為基礎。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-399">
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-400">在衍生類別中覆寫時，傳回套件中所有組件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-400">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-401">包含在套件中的所有組件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-401">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-402">在衍生的類別<xref:System.IO.Packaging.Package.GetPartsCore%2A>實作會呼叫<xref:System.IO.Packaging.Package.GetParts%2A>衍生類別中實作的實體格式作為基礎來存取並傳回陣列的組件的方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-402">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="973d6-403">根據預設，<xref:System.IO.Packaging.ZipPackage>衍生的抽象實作<xref:System.IO.Packaging.Package>類別會提供和使用。</span><span class="sxs-lookup"><span data-stu-id="973d6-403">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="973d6-404">在預設作業中，<xref:System.IO.Packaging.Package.GetParts%2A>在內部呼叫<xref:System.IO.Packaging.Package.GetPartCore%2A>的<xref:System.IO.Packaging.ZipPackage>類別來擷取組件從 ZIP 檔案。</span><span class="sxs-lookup"><span data-stu-id="973d6-404">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="973d6-405">如需有關封裝模型和封裝組件的詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格的第 1 章[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-405">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="973d6-406">衍生<see cref="M:System.IO.Packaging.Package.GetPartsCore" />實作應該做出任何假設所執行作業的順序<see cref="M:System.IO.Packaging.Package.GetParts" />方法呼叫它。</span>
            <span class="sxs-lookup">
              <span data-stu-id="973d6-406">The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="973d6-407">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-407">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-408">傳回具有特定識別項的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-408">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-409">具有指定之 <paramref name="id" /> 的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-409">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-410">`id` 必須是有效的 XML 識別項。</span><span class="sxs-lookup"><span data-stu-id="973d6-410">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="973d6-411">`id`型別 xsd:ID 作業，而且必須遵循命名慣例規定在 XML 結構描述第 2 部分： Datatypes 規格 (請參閱 < [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID))。</span><span class="sxs-lookup"><span data-stu-id="973d6-411">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="973d6-412">如需有關封裝和封裝關聯性的詳細資訊，請參閱本文 1.3 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-412">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-413">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-413">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="973d6-414">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-414">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="973d6-415">具有指定之 <paramref name="id" /> 的關聯性不在套件內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-415">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-416">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-416">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-417">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-417">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-418">傳回所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-418">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-419">包含在套件中的所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-419">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> 永遠不會傳回`null`; 不過，如果封裝不包含的任何封裝層級關聯性，傳回的集合可能包含零個項目。</span><span class="sxs-lookup"><span data-stu-id="973d6-420"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="973d6-421">封裝層關係定義封裝和相關聯的目標組件或資源之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="973d6-421">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="973d6-422">封裝層關係可以有兩種形式。</span><span class="sxs-lookup"><span data-stu-id="973d6-422">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="973d6-423">之間<xref:System.IO.Packaging.Package>目標組件在封裝中。</span><span class="sxs-lookup"><span data-stu-id="973d6-423">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="973d6-424">之間<xref:System.IO.Packaging.Package>封裝外部的目標資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-424">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="973d6-425">封裝關聯性中，封裝會視為 「 擁有者 」 的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-425">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="973d6-426">刪除套件時，會一併刪除的套件所擁有的所有關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-426">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="973d6-427">建立或刪除關聯性的程序不會實際改變的目標組件或以任何方式的資源。</span><span class="sxs-lookup"><span data-stu-id="973d6-427">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="973d6-428">如需有關封裝和封裝關聯性的詳細資訊，請參閱本文 1.3 開放封裝慣例 (OPC) 規格可供下載的[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-428">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-429">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-429">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-430">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-430">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="973d6-431">要進行比對並傳回集合的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-431">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-432">傳回符合特定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的所有套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-432">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-433">符合指定之 <paramref name="relationshipType" /> 的套件層級關係的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-433">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> 永遠不會傳回`null`; 不過，如果沒有符合指定的封裝層級關聯性，傳回的集合可能包含零個項目`relationshipType`。</span><span class="sxs-lookup"><span data-stu-id="973d6-434"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="973d6-435">下表顯示封裝層級`relationshipType`開放封裝慣例 (OPC) 規格所定義的 Uri。</span><span class="sxs-lookup"><span data-stu-id="973d6-435">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="973d6-436">封裝層關係</span><span class="sxs-lookup"><span data-stu-id="973d6-436">Package-level Relationship</span></span>|<span data-ttu-id="973d6-437">URI 的關聯性類型</span><span class="sxs-lookup"><span data-stu-id="973d6-437">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="973d6-438">核心屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-438">Core Properties</span></span>|<span data-ttu-id="973d6-439">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/核心-屬性</span><span class="sxs-lookup"><span data-stu-id="973d6-439">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="973d6-440">數位簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-440">Digital Signature</span></span>|<span data-ttu-id="973d6-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章/簽章</span><span class="sxs-lookup"><span data-stu-id="973d6-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="973d6-442">數位簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-442">Digital Signature Certificate</span></span>|<span data-ttu-id="973d6-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章憑證</span><span class="sxs-lookup"><span data-stu-id="973d6-443">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="973d6-444">數位簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-444">Digital Signature Origin</span></span>|<span data-ttu-id="973d6-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al-簽章原點</span><span class="sxs-lookup"><span data-stu-id="973d6-445">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="973d6-446">縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-446">Thumbnail</span></span>|<span data-ttu-id="973d6-447">http://schemas.openxmlformats.org/package/2006/relationships/meta 資料/縮圖</span><span class="sxs-lookup"><span data-stu-id="973d6-447">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="973d6-448">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-448">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-449">下列範例示範如何擷取已針對套件定義的關聯性。</span><span class="sxs-lookup"><span data-stu-id="973d6-449">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="973d6-450">如需完整的範例，請參閱[讀取封裝範例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="973d6-450">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-451">
            <paramref name="relationshipType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-451">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-452">
            <paramref name="relationshipType" /> 為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-452">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-453">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-453">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-454">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-454">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-455">開啟封裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-455">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-456"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-456"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-457">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-457">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-458">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="973d6-458">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="973d6-459">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-459">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="973d6-460">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-460">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-461">開啟位於特定 IO 資料流上的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-461">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-462">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-462">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-463"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-463"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-464">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-464">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-465">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-465">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-466">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-466">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="973d6-467">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-467">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-468">開啟特定路徑與檔名的封裝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-468">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-469">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-469">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-470"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-470"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-471">這<xref:System.IO.Packaging.Package.Open%2A>方法會使用預設屬性來開啟封裝<xref:System.IO.FileMode.OpenOrCreate>， <xref:System.IO.FileAccess.ReadWrite>，和<xref:System.IO.FileShare.None>（以指定不同的屬性使用其中一個其他開啟的方法多載）。</span><span class="sxs-lookup"><span data-stu-id="973d6-471">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="973d6-472">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-472">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-473">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="973d6-473">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="973d6-474">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-474">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-475">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-475">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="973d6-476">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-476">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="973d6-477">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-477">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-478">使用特定 IO 資料流及檔案模式開啟套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-478">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-479">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-479">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-480"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-480"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-481">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-481">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-482">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-482">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-483">
            <paramref name="packageMode" /> 值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-483">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-484">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-484">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="973d6-485">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-485">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="973d6-486">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-486">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-487">使用特定檔案模式開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-487">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-488">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-488">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-489"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-489"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-490">這<xref:System.IO.Packaging.Package.Open%2A>方法會使用預設屬性來開啟封裝<xref:System.IO.FileAccess.ReadWrite>和<xref:System.IO.FileShare.None>（以指定不同的屬性使用其中一個其他開啟的方法多載）。</span><span class="sxs-lookup"><span data-stu-id="973d6-490">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="973d6-491">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-491">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-492">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="973d6-492">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="973d6-493">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-493">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-494">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-494">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-495">
            <paramref name="packageMode" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-495">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="973d6-496">開啟封裝所在的 IO 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-496">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="973d6-497">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-497">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="973d6-498">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-498">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-499">使用特定 IO 資料流、檔案模式及檔案存取設定開啟套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-499">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-500">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-500">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-501"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-501"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-502">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-502">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-503">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-503">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-504">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-504">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-505">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-505">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="973d6-506">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-506">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="973d6-507">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-507">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="973d6-508">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-508">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-509">使用特定檔案模式及檔案存取設定，開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-509">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-510">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-510">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-511"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-511"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-512">這<xref:System.IO.Packaging.Package.Open%2A>方法會開啟封裝，預設值<xref:System.IO.FileShare.None>屬性 (若要指定不同的屬性使用<xref:System.IO.Packaging.Package.Open%2A>方法多載)。</span><span class="sxs-lookup"><span data-stu-id="973d6-512">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="973d6-513">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-513">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-514">下列範例示範如何開啟和讀取<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="973d6-514">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="973d6-515">如需完整的範例，請參閱[讀取封裝範例](https://go.microsoft.com/fwlink/?LinkID=160034)。</span><span class="sxs-lookup"><span data-stu-id="973d6-515">For the complete sample, see [Reading a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-516">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-516">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-517">
            <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-517">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="973d6-518">封裝的路徑和檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-518">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="973d6-519">開啟套件的檔案模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-519">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="973d6-520">開啟套件的檔案存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-520">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="973d6-521">用來開啟套件的檔案共用模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-521">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-522">使用特定檔案模式、檔案存取及檔案共用設定，開啟位於特定路徑的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-522">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-523">已開啟的套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-523">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-524"><xref:System.IO.Packaging.ZipPackage> 是預設封裝類型，可由<xref:System.IO.Packaging.Package.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="973d6-524"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="973d6-525">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-525">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="973d6-526">下列範例示範如何建立新<xref:System.IO.Packaging.Package>，其中包含<xref:System.IO.Packaging.PackageRelationship>和<xref:System.IO.Packaging.PackagePart>項目及儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="973d6-526">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="973d6-527">如需完整的範例，請參閱[寫入封裝範例](https://go.microsoft.com/fwlink/?LinkID=160055)。</span><span class="sxs-lookup"><span data-stu-id="973d6-527">For the complete sample, see [Writing a Package Sample](https://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-528">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-528">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="973d6-529">
            <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-529">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="973d6-530">取得套件的核心屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-530">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="973d6-531">套件的核心屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-531">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-532">如需有關核心封裝屬性的詳細資訊，請參閱第 3.1 節可供下載開放封裝慣例 (OPC) 規格中的在[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-532">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-533">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-533">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="973d6-534">要檢查之組件的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-534">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-535">指出套件中是否存在具有特定 URI 的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-535">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-536">如果套件內已經存在具有指定之 <paramref name="partUri" /> 的組件，就是 <see langword="true" />，否則就是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-536">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-537">`partUri`應該有正斜線字元"/"，是從封裝根目錄的絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="973d6-537">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="973d6-538">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-538">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-539">
            <paramref name="partUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-539">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="973d6-540">
            <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-540">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-541">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-541">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-542">套件是唯寫的 (無法讀取資訊)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-542">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="973d6-543">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-543">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="973d6-544">指出套件中是否包含具有特定 ID 的套件層級關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-544">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="973d6-545">如果套件裝包含具有指定之 <paramref name="id" /> 的套件層級關係，就是 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-545">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="973d6-546">如需詳細資訊，請參閱下載開放封裝慣例 (OPC) 規格[ http://go.microsoft.com/fwlink/?LinkID=71255 ](https://go.microsoft.com/fwlink/?LinkID=71255)。</span><span class="sxs-lookup"><span data-stu-id="973d6-546">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](https://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="973d6-547">
            <paramref name="id" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-547">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="973d6-548">
            <paramref name="id" /> 不是有效的 XML 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-548">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="973d6-549">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-549">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="973d6-550">封裝是唯寫的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-550">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="973d6-551">這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但不建議用於應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-551">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="973d6-552">請改用類型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="973d6-552">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>