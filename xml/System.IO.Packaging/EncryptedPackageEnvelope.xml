<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedPackageEnvelope.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d13de0354f15e43fe6e836cca6df2e57f369e866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13de0354f15e43fe6e836cca6df2e57f369e866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">代表包含加密封裝的 OLE 複合檔案 (Compound File)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> has no public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 有沒有公用建構函式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>An <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> is created by use of the static <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>由使用靜態<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">關閉加密封裝及保存該封裝的 OLE 複合檔案。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>The following example shows how to use this method to close an <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用這個方法來關閉<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">建立及傳回 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">要建立檔案的資料流。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">嵌入在複合檔案中的發行授權。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">物件，其決定目前使用者可以對加密內容執行的作業。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> on the specified stream.</source>
          <target state="translated">在指定的資料流上建立及傳回 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新建立的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">目前使用者具有讀取/寫入存取新的檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> 未提供讀取/寫入權限。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 複合檔案的名稱。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">嵌入在複合檔案中的發行授權。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">物件，其決定目前使用者可以對加密內容執行的作業。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and gives it the specified file name.</source>
          <target state="translated">建立及傳回 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>，並為其提供指定的檔名。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新建立的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">如果有指定名稱的檔案已經存在，則會覆寫。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">目前使用者具有讀取/寫入存取檔案。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses an existing unencrypted package as the source of its content.</source>
          <target state="translated">建立及傳回使用現有未加密封裝做為其內容來源的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>方法來具現化<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">要建立檔案的資料流。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">代表現有未加密封裝的資料流。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">嵌入在複合檔案中的發行授權。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">物件，其決定目前使用者可以對加密內容執行的作業。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">建立及傳回使用指定之未加密封裝做為其內容的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (在指定的資料流上)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新建立的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">目前使用者具有讀取/寫入存取新的檔案。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>方法來具現化<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> 未提供讀取/寫入權限。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 複合檔案的名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">代表現有未加密封裝的資料流。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">嵌入在複合檔案中的發行授權。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">物件，其決定目前使用者可以對加密內容執行的作業。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">建立及傳回使用指定之未加密封裝做為其內容的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>，並為其提供指定的檔名。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">新建立的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">如果有指定名稱的檔案已經存在，則會覆寫。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">目前使用者具有讀取/寫入存取檔案。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>方法來具現化<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> when finished with a <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>完成<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>小心不要參考物件已處置過的早期呼叫中<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">取得值，指出開啟檔案時使用的是讀取權限、寫入權限或兩者。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> value that was used to open the file.</source>
          <target state="translated">用於開啟檔案的 <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
          <source>Flush the stream for both the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and its package content.</source>
          <target state="translated">清除 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 及其封裝內容的資料流。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>Gets the encrypted package inside the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 內的加密封裝。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> in the envelope.</source>
          <target state="translated">封套中的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</source>
          <target state="translated">取得值，指定檔案是否為具有加密封裝資料流的 OLE 複合檔案。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>The stream that is tested.</source>
          <target state="translated">要測試的資料流。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">取得值，指出指定的資料流是否為具有加密封裝資料流的 OLE 複合檔案。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的資料流是具有加密封裝資料流的 OLE 複合檔案，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The file that is tested.</source>
          <target state="translated">要測試的檔案。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">取得值，指出指定的檔案是否為具有加密封裝資料流的 OLE 複合檔案。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的檔案是具有加密封裝資料流的 OLE 複合檔案，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The following example shows how to use this method to test for encryption.</source>
          <target state="translated">下列範例會示範如何使用這個方法以測試加密。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Opens the encrypted package in an OLE compound file.</source>
          <target state="translated">開啟 OLE 複合檔案中的加密封裝。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">包含加密封裝的資料流。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">開啟指定之資料流中的加密封裝。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">要開啟的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">資料流必須加密的封裝。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">檔案內含加密的套件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">以唯讀及非共用模式開啟指定之檔案中的加密封裝。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">要開啟的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">檔案必須有加密的封裝。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">開啟的檔案是唯讀及取消共用。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">檔案內含加密的套件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The type of access.</source>
          <target state="translated">存取權的類型。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">以非共用模式和指定的存取權，開啟指定之檔案中的加密封裝。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">要開啟的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">檔案必須有加密的封裝。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The opened file is unshared.</source>
          <target state="translated">開啟的檔案會取消。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">檔案內含加密的套件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of access.</source>
          <target state="translated">存取權的類型。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of sharing.</source>
          <target state="translated">共用的類型。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">開啟指定之檔案中的加密封裝，並為其提供指定的存取權和共用。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">要開啟的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">檔案必須有加密的封裝。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">取得權限 Managed 文件的核心封裝屬性 (例如 Title 和 Subject)。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> for the package.</source>
          <target state="translated">封裝的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">這些核心屬性會儲存在標準 OLE 屬性資料流 （\005SummaryInformation 和 \005DocumentSummaryInformation）。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">核心屬性也會儲存在封裝本身。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">負責應用程式保持這兩組同步處理的屬性。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>Gets the rights management information stored in the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>; specifically, the <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated">取得儲存在 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 中的版權管理資訊；具體來說就是儲存在包含版權管理保護封裝之 OLE 複合檔案中的 <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> for the package.</source>
          <target state="translated">封裝的 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The following example shows how to obtain <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> for an encrypted package by use the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何取得<ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph>加密封裝所使用的<ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">取得可用來存取加密封裝外部之複合檔案資料流的物件。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph>，代表加密封裝外部之 OLE 複合檔案中的資料流。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>