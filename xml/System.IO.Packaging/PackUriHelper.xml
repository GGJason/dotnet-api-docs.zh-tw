<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d281434774845f55f818257f013ac811314dd35" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996880" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供公用程式方法來撰寫和剖析 Pack URI 物件。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">第一個 Pack URI。</param>
        <param name="secondPackUri">第二個 Pack URI。</param>
        <summary>傳回值，這個值表示兩個 Pack URI 是否相等。</summary>
        <returns>帶正負號的整數，表示 <paramref name="firstPackUri" /> 與 <paramref name="secondPackUri" /> 之間的關聯性。  
  
 <list type="table"><listheader><term> 值 
 </term><description> 意義 
 </description></listheader><item><term> 小於 0 
 </term><description><paramref name="firstPackUri" /> 小於 <paramref name="secondPackUri" />。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> 相當於 <paramref name="secondPackUri" />。  
  
 </description></item><item><term> 大於 0 
 </term><description><paramref name="firstPackUri" /> 大於 <paramref name="secondPackUri" />。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果兩個`firstPackUri`並`secondPackUri`會`null`，<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A>會傳回 0。 比較 pack Uri，null 的 URI 時，一律小於非 null 的 URI。    案例其中`firstPackUri`並`secondPackUri`是絕對兩者的 pack Uri，<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A>執行比較。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不是絕對 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。  
  
-或- 
<paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 的開頭不是 "pack://" scheme。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的第一個<see cref="T:System.IO.Packaging.PackagePart" />。</param>
        <param name="secondPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]第二個<see cref="T:System.IO.Packaging.PackagePart" />。</param>
        <summary>傳回值，指出兩個套件組件 [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] 是否相等。</summary>
        <returns>值，指出之間的關聯性<paramref name="firstPartUri" />和<paramref name="secondPartUri" />。  
  
 <list type="table"><listheader><term> 值 
 </term><description> 意義 
 </description></listheader><item><term> 小於 0 
 </term><description><paramref name="firstPartUri" /> 小於 <paramref name="secondPartUri" />。  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> 相當於 <paramref name="secondPartUri" />。  
  
 </description></item><item><term> 大於 0 
 </term><description><paramref name="firstPartUri" /> 大於 <paramref name="secondPartUri" />。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果兩個`firstPartUri`並`secondPartUri`會`null`，<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A>會傳回 0。 比較時<xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)]，null[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]一律為非 null 值大於或等於[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。 案例其中`firstPartUri`並`secondPartUri`都是相對<xref:System.IO.Packaging.PackagePart>Uri、<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A>執行比較。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> 或是<paramref name="secondPartUri" />不是有效的組件[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]語法。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立新 Pack URI。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.Create%2A>方法。  
  
|`packageUri`|`partUri`|`fragment`|傳回的 pack URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:、 www.proseware.com、 mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 組成 URI 的組件是多步驟程序。  例如，形成 URI 的組件的其中一個步驟是要取代的正斜線 （/） 字元`packageUri`以逗號 （，）。  
  
 如需有關轉換字串和 pack Uri 的形成方式的詳細資訊，請參閱附錄 A.4"字串轉換範例 > 和附錄 B.3 「 撰寫組件 URI 」 下載開放封裝慣例規格中[規格與授權下載](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
        <summary>建立指向封裝的新 Pack URI。</summary>
        <returns>特定 <paramref name="packageUri" /> 所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 Pack URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` 不能指定為`null`或空白。  
  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.Create%2A>。  
  
|`packageUri`|傳回的 pack URI|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|pack://http:、 www.proseware.com、 mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|pack://file:,,,d:,packages,mypackage2.pkg|  
  
 組成 URI 的組件是多步驟程序。  例如，形成 URI 的組件的其中一個步驟是要取代的正斜線 （/） 字元`packageUri`以逗號 （，）。  
  
 如需有關轉換字串和 pack Uri 的形成方式的詳細資訊，請參閱附錄 A.4"字串轉換範例 > 和附錄 B.3 「 撰寫組件 URI 」 下載開放封裝慣例規格中[規格與授權下載](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.IO.Packaging.PackUriHelper.Create%2A>方法來定義的組件參考的封裝 URI。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> 不是絕對 URI。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的 <see cref="T:System.IO.Packaging.Package" />。</param>
        <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <summary>使用 <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 和套件組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，來建立 Pack URI。</summary>
        <returns>特定 <see cref="T:System.IO.Packaging.PackagePart" /> 的 Pack URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` 不可能指定為 null 或空白。  
  
 如果`partUri`是`null`，傳回的 pack URI 指向封裝。  
  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.Create%2A>方法。  
  
|`packageUri`|`partUri`|傳回的 pack URI|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|pack://http:、 www.proseware.com、 mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 組成 URI 的組件是多步驟程序。  例如，形成 URI 的組件的其中一個步驟是要取代的正斜線 （/） 字元`packageUri`以逗號 （，）。  
  
 如需有關轉換字串和 pack Uri 的形成方式的詳細資訊，請參閱附錄 A.4"字串轉換範例 > 和附錄 B.3 「 撰寫組件 URI 」 下載開放封裝慣例規格中[規格與授權下載](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>方法來定義的組件參考的封裝 URI。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> 不是絕對 URI。  
  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 的 <see cref="T:System.IO.Packaging.Package" />。</param>
        <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <param name="fragment">識別此封裝組件中項目的 "#" 參考。</param>
        <summary>使用 <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、套件組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，以及要附加的 "#" 片段，來建立 Pack URI。</summary>
        <returns>識別指定的封裝、封裝組件以及片段的封裝 URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` 不能指定為`null`或空白。  
  
 如果`partUri`是`null`，傳回的 pack URI 指向封裝。  
  
 `fragment` 不能是空字串，但是可以指定為`null`。  當未指定為`null`，則`fragment`字串必須以 '#' 字元開頭。  如需詳細資訊的語法`fragment`參考，請參閱 3.5 節 「 片段 」 的[RFC 3986](https://www.ietf.org/rfc/rfc3986.txt)。  
  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.Create%2A>方法。  
  
|`packageUri`|`partUri`|`fragment`|傳回的 pack URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:、 www.proseware.com、 mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:、 www.proseware.com、 mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 組成 URI 的組件是多步驟程序。  例如，形成 URI 的組件的其中一個步驟是要取代的正斜線 （/） 字元`packageUri`以逗號 （，）。  
  
 如需有關轉換字串和 pack Uri 的形成方式的詳細資訊，請參閱附錄 A.4"字串轉換範例 > 和附錄 B.3 「 撰寫組件 URI 」 下載開放封裝慣例規格中[規格與授權下載](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>方法來定義的組件參考的封裝 URI。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> 不是絕對 URI。  
  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。  
  
-或- 
 <paramref name="fragment" /> 是空的或開頭並非 "#"。</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI<see cref="T:System.IO.Packaging.PackagePart" />封裝內。</param>
        <summary>建立格式化<see cref="T:System.IO.Packaging.PackagePart" />URI。</summary>
        <returns>格式化<see cref="T:System.IO.Packaging.PackagePart" />URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的<xref:System.IO.Packaging.PackagePart>一律從參考<xref:System.IO.Packaging.Package>根。  
  
 傳回<xref:System.IO.Packaging.PackagePart>URI 是絕對路徑，永遠會啟動"/"且符合中定義的語法[開放式封裝慣例規格](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>。  
  
|`partUri`|傳回組件 URI|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>方法，以定義相對 Uri<xref:System.IO.Packaging.PackagePart>項目。  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">寫入封裝範例</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 不是絕對<see cref="T:System.Uri" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="T:System.IO.Packaging.PackagePart" />正規化的 URI。</param>
        <summary>傳回指定的正規化的形式<see cref="T:System.IO.Packaging.PackagePart" />URI。</summary>
        <returns>正規化的形式指定<paramref name="partUri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> 正規化`partUri`的情況下摺疊成大寫 (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) 並傳回結果。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 沒有有效<see cref="T:System.Uri" />語法。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">傳回 <see cref="T:System.IO.Packaging.Package" /> 之 URI 的 Pack URI。</param>
        <summary>傳回指向所指定 Pack URI 之整個封裝的內部 URI。</summary>
        <returns>所指定 <paramref name="packUri" /> 之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>。  
  
|`packUri`|傳回的封裝 URI|  
|---------------|--------------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|pack://http:、 www.proseware.com、 mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> 不是絕對<see cref="T:System.Uri" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="packUri">要從中傳回 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的 pack URI。</param>
        <summary>傳回指定 Pack URI 中的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
        <returns>指定之 <paramref name="packUri" /> 中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI；或若 <paramref name="packUri" /> 指向封裝而非 <see cref="T:System.IO.Packaging.PackagePart" />，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回<xref:System.IO.Packaging.PackagePart>URI 為相對於封裝根目錄，並且開始，永遠是絕對路徑"/"且符合中定義的語法[開放式封裝慣例規格](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>。  
  
|`packUri`|傳回組件 URI|  
|---------------|-----------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|pack://http:、 www.proseware.com、 packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  
|pack://http:、 www.proseware.com、 mypackage.pkg|null|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  
|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" />的<see cref="T:System.IO.Packaging.PackagePart" />傳回的 URI 相關聯的<see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
        <summary>傳回與指定 <see cref="T:System.IO.Packaging.PackagePart" /> 建立關聯之關聯性組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <returns>URI<see cref="T:System.IO.Packaging.PackageRelationship" />相關聯的一部分<see cref="T:System.IO.Packaging.PackagePart" />所識別<paramref name="partUri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` 必須識別<xref:System.IO.Packaging.Package>（"/"） 或<xref:System.IO.Packaging.PackagePart>不是<xref:System.IO.Packaging.PackageRelationship>組件。  
  
 如需詳細資訊<xref:System.IO.Packaging.PackageRelationship>組件，請參閱下載開放封裝慣例規格中的區段 9.3 「 關聯性 」[規格，並授權下載](https://go.microsoft.com/fwlink/?LinkID=71255)。  
  
   
  
## Examples  
 [WPF 中的 Pack URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [開放封裝慣例規格](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 封裝組件 URI 語法無效。  
  
-或- 
 <paramref name="partUri" /> 是絕對 URI。  
  
-或- 
 <paramref name="partUri" /> 參考關聯性組件。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]來源組件。</param>
        <param name="targetPartUri">目標組件的 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <summary>傳回兩個指定 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] 之間的相對 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <returns>相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]從<paramref name="sourcePartUri" />至<paramref name="targetPartUri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>。  
  
|`sourcePartUri`|`targetPartUri`|傳回相對的 URI|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
        <exception cref="T:System.ArgumentException">請<paramref name="sourcePartUri" />或是<paramref name="targetPartUri" />沒有有效<see cref="T:System.Uri" />語法。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的關聯性組件，以傳回<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />從。</param>
        <summary>傳回<see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />從<see cref="T:System.IO.Packaging.PackageRelationship" />以指定[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</summary>
        <returns><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />的<see cref="T:System.IO.Packaging.PackagePart" />從具有指定的關聯性<paramref name="relationshipPartUri" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>屬性的關聯性組件必須找出可能<xref:System.IO.Packaging.PackagePart.Package%2A>（"/"） 或<xref:System.IO.Packaging.PackagePart>不是<xref:System.IO.Packaging.PackageRelationship>。  
  
 比方說，如果封裝組件"/ files/document.xaml 」 關聯性組件的來源擁有者 」 / files/_rels/document.xaml.rels"，則呼叫<xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A>與`relationshipPartUri`參數"/ files/_rels/document.xaml.rels"會傳回<xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>的"/ files/document.xaml"。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> 是絕對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。  
  
-或- 
 <paramref name="relationshipPartUri" /> 語法不正確的<see cref="T:System.IO.Packaging.PackagePart" />。  
  
-或- 
 <paramref name="relationshipPartUri" /> 未參考關聯性組件。  
  
-或- 
關聯性組件的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 參考其他 (無效) 關聯性組件。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]檢查<see cref="T:System.IO.Packaging.PackageRelationship" />組件。</param>
        <summary>傳回值，這個值，指出是否指定[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]已[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的<see cref="T:System.IO.Packaging.PackageRelationship" />組件。</summary>
        <returns><see langword="true" /> 如果<paramref name="partUri" />可識別<see cref="T:System.IO.Packaging.PackageRelationship" />部分，否則<see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 是絕對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。  
  
-或- 
 <paramref name="partUri" /> 是無效<see cref="T:System.IO.Packaging.PackagePart" />語法。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">來源組件的 URI 或"/"以指定<see cref="T:System.IO.Packaging.Package" />根。</param>
        <param name="targetUri">目標組件的相對 URI。</param>
        <summary>傳回組件 URI，指定來源組件 URI 和 URI 的相對路徑與目標組件。</summary>
        <returns>目標組件的 URI 解析之間指定<paramref name="SourcePartUri" />而<paramref name="targetUri" />參數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表說明的範例案例<xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>。  
  
|`sourcePartUri`|`targetUri`|傳回的 URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 下列範例會示範如何使用 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> 方法。  如需完整的範例，請參閱[讀取封裝範例](https://go.microsoft.com/fwlink/?LinkID=160034)。  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 或 <paramref name="targetUri" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> 不是有效的組件的 URI。  
  
-或- 
 <paramref name="targetUri" /> 不是有效的相對 URI。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放封裝慣例規格</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定義封裝 URI 配置名稱 "pack"。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>