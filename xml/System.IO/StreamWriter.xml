<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StreamWriter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56f31bd789fd27cfb5dec1f299d1b5fc770e9fc32.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f31bd789fd27cfb5dec1f299d1b5fc770e9fc32</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Implements a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> for writing characters to a stream in a particular encoding.</source>
          <target state="translated">實作以特定的編碼方式將字元寫入位元組資料流的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> is designed for character output in a particular encoding, whereas classes derived from <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> are designed for byte input and output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 而從衍生類別，針對特定的編碼中的字元輸出<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>專為位元組輸入和輸出。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> defaults to using an instance of <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph> unless specified otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 若要使用的執行個體的預設值<ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>除非另行指定。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This instance of <ph id="ph1">`UTF8Encoding`</ph> is constructed without a byte order mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">這個執行個體<ph id="ph1">`UTF8Encoding`</ph>建構沒有位元組順序標記 (BOM)，因此其<ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph>方法會傳回空的位元組陣列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">這個建構函式的預設 utf-8 編碼方式在時擲回例外狀況的無效位元組。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此行為是編碼物件中所提供的行為不同<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">若要指定 BOM，並判斷是否擲回例外狀況的無效位元組上，使用這類接受做為參數的編碼物件的建構函式<ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> is not thread safe.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>See <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> for a thread-safe wrapper.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph>安全執行緒的包裝函式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object to write a file that lists the directories on the C drive, and then uses a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> object to read and display each directory name.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>物件寫入檔案，列出 C 磁碟機上的目錄，然後使用<ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph>物件來讀取和顯示每個目錄名稱。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>A good practice is to use these objects in a <ph id="ph1">`using`</ph> statement so that the unmanaged resources are correctly disposed.</source>
          <target state="translated">最好的作法是使用中的這些物件<ph id="ph1">`using`</ph>陳述式以便正確地處置 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The <ph id="ph1">`using`</ph> statement automatically calls <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> on the object when the code that is using it has completed.</source>
          <target state="translated"><ph id="ph1">`using`</ph>陳述式自動呼叫<ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>時正在使用它的程式碼已完成在物件上。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StreamWriter">
          <source>The constructor used in this example is not supported for use in <ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> Apps.</source>
          <target state="translated">此範例中使用的建構函式不支援用於<ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The stream to write to.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using UTF-8 encoding and the default buffer size.</source>
          <target state="translated">使用 UTF-8 編碼方式和預設緩衝區大小，為指定的資料流初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">這個建構函式會建立<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>以 utf-8 編碼方式沒有位元組順序標記 (BOM)，因此其<ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph>方法會傳回空的位元組陣列。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">這個建構函式的預設 utf-8 編碼方式在時擲回例外狀況的無效位元組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此行為是編碼物件中所提供的行為不同<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">若要指定是否擲回例外狀況的無效位元組上，使用這類接受做為參數的編碼物件的建構函式<ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property is initialized using the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph>屬性會初始化使用<ph id="ph2">`stream`</ph>參數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">不會重設資料流的位置。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>物件會呼叫<ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph>上提供<ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>物件時<ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">下列程式碼範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 不可寫入。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The complete file path to write to.</source>
          <target state="translated">要寫入的完整檔案路徑。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> can be a file name.</source>
          <target state="translated">「路徑」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>可以是檔案名稱。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the default encoding and buffer size.</source>
          <target state="translated">使用預設編碼方式和緩衝區大小，為指定的檔案初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">這個建構函式會建立<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>以 utf-8 編碼方式沒有位元組順序標記 (BOM)，因此其<ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph>方法會傳回空的位元組陣列。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">這個建構函式的預設 utf-8 編碼方式在時擲回例外狀況的無效位元組。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此行為是編碼物件中所提供的行為不同<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</source>
          <target state="translated">若要指定 BOM，並判斷是否擲回例外狀況的無效位元組上，使用這類接受做為參數的編碼物件的建構函式<ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph>參數可以是檔案名稱，包括通用命名慣例 (UNC) 共用上的檔案。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>If the file exists, it is overwritten; otherwise, a new file is created.</source>
          <target state="translated">如果檔案存在，則會覆寫。否則，會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph>參數不一定要儲存在磁碟上的檔案，它可以支援使用資料流存取系統的任何部分。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">下列程式碼範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Access is denied.</source>
          <target state="translated">存取被拒絕。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含系統裝置的名稱 (com1、com2 等等)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">例如，在 Windows 平台上，路徑不得超過 248 個字元，檔案名稱則不得超過 260 個字元。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含檔案名稱、目錄名稱或磁碟標籤語法的不正確或無效語法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream to write to.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">要使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and the default buffer size.</source>
          <target state="translated">使用指定的編碼方式和預設緩衝區大小，為指定的資料流初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter, and the <ph id="ph2">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the stream parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph>屬性使用的編碼方式的參數，而<ph id="ph2">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph>使用 stream 參數的屬性。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">不會重設資料流的位置。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>物件會呼叫<ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph>上提供<ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>物件時<ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">下列範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 不可寫入。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The complete file path to write to.</source>
          <target state="translated">要寫入的完整檔案路徑。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要附加資料至檔案，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示要覆寫檔案。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">如果指定的檔案不存在，則這個參數沒有任何作用，而且建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the default encoding and buffer size.</source>
          <target state="translated">使用預設編碼方式和緩衝區大小，為指定的檔案初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">如果檔案存在，可以將它寫入或附加。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">如果檔案不存在，這個建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph> method returns an empty byte array.</source>
          <target state="translated">這個建構函式會建立<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>以 utf-8 編碼方式沒有位元組順序標記 (BOM)，因此其<ph id="ph2">&lt;xref:System.Text.Encoding.GetPreamble%2A&gt;</ph>方法會傳回空的位元組陣列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</source>
          <target state="translated">這個建構函式的預設 utf-8 編碼方式在時擲回例外狀況的無效位元組。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>This behavior is different from the behavior provided by the encoding object in the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">此行為是編碼物件中所提供的行為不同<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>.</source>
          <target state="translated">若要指定 BOM，並判斷是否擲回例外狀況的無效位元組上，使用這類接受做為參數的編碼物件的建構函式<ph id="ph1">&lt;xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph>參數可以是檔案名稱，包括通用命名慣例 (UNC) 共用上的檔案。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph>參數不一定要儲存在磁碟上的檔案，它可以支援使用資料流存取系統的任何部分。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates this constructor.</source>
          <target state="translated">下列程式碼範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Access is denied.</source>
          <target state="translated">存取被拒絕。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含系統裝置的名稱 (com1、com2 等等)。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含檔案名稱、目錄名稱或磁碟標籤語法的不正確或無效語法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">例如，在 Windows 平台上，路徑不得超過 248 個字元，檔案名稱則不得超過 260 個字元。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The stream to write to.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The character encoding to use.</source>
          <target state="translated">要使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">緩衝區大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and buffer size.</source>
          <target state="translated">使用指定的編碼方式和緩衝區大小，為指定的資料流初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the <ph id="ph2">`encoding`</ph> parameter, and the <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property using the <ph id="ph4">`stream`</ph> parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph>屬性使用<ph id="ph2">`encoding`</ph>參數，而<ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph>屬性使用<ph id="ph4">`stream`</ph>參數。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">不會重設資料流的位置。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>物件會呼叫<ph id="ph2">&lt;xref:System.IO.Stream.Dispose&gt;</ph>上提供<ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>物件時<ph id="ph4">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">下列範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 不可寫入。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The complete file path to write to.</source>
          <target state="translated">要寫入的完整檔案路徑。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要附加資料至檔案，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示要覆寫檔案。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">如果指定的檔案不存在，則這個參數沒有任何作用，而且建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The character encoding to use.</source>
          <target state="translated">要使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file by using the specified encoding and default buffer size.</source>
          <target state="translated">使用指定的編碼方式和預設緩衝區大小，為指定的檔案初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">如果檔案存在，可以將它寫入或附加。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">如果檔案不存在，這個建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph>屬性使用的編碼方式的參數。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 可以是檔案名稱，包括通用命名慣例 (UNC) 共用上的檔案。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 不需要是儲存在磁碟上的檔案它可以支援透過資料流存取系統的任何部分。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">下列範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Access is denied.</source>
          <target state="translated">存取被拒絕。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是空的。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含系統裝置的名稱 (com1、com2 等等)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含檔案名稱、目錄名稱或磁碟標籤語法的不正確或無效語法。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">例如，在 Windows 平台上，路徑不得超過 248 個字元，檔案名稱則不得超過 260 個字元。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The stream to write to.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The character encoding to use.</source>
          <target state="translated">要使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">緩衝區大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在處置 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 物件之後，將資料流保持開啟；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</source>
          <target state="translated">使用指定的編碼方式和緩衝區大小，為指定的資料流初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體，並選擇性讓資料流保持開啟。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>Unless you set the <ph id="ph1">`leaveOpen`</ph> parameter to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> object calls <ph id="ph4">&lt;xref:System.IO.Stream.Dispose&gt;</ph> on the provided <ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph> object when <ph id="ph6">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph> is called.</source>
          <target state="translated">除非您將設定<ph id="ph1">`leaveOpen`</ph>參數<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph>物件會呼叫<ph id="ph4">&lt;xref:System.IO.Stream.Dispose&gt;</ph>上提供<ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph>物件時<ph id="ph6">&lt;xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property by using the <ph id="ph2">`encoding`</ph> parameter, and initializes the <ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph> property by using the <ph id="ph4">`stream`</ph> parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph>屬性使用<ph id="ph2">`encoding`</ph>參數，並初始化<ph id="ph3">&lt;xref:System.IO.StreamWriter.BaseStream%2A&gt;</ph>屬性使用<ph id="ph4">`stream`</ph>參數。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The position of the stream is not reset.</source>
          <target state="translated">不會重設資料流的位置。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">下列範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 不可寫入。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The complete file path to write to.</source>
          <target state="translated">要寫入的完整檔案路徑。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to append data to the file; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to overwrite the file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要附加資料至檔案，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示要覆寫檔案。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</source>
          <target state="translated">如果指定的檔案不存在，則這個參數沒有任何作用，而且建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The character encoding to use.</source>
          <target state="translated">要使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The buffer size, in bytes.</source>
          <target state="translated">緩衝區大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> class for the specified file on the specified path, using the specified encoding and buffer size.</source>
          <target state="translated">使用預設編碼方式和緩衝區大小，為指定路徑上的指定檔案初始化 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the file exists, it can be either overwritten or appended to.</source>
          <target state="translated">如果檔案存在，可以將它寫入或附加。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>If the file does not exist, this constructor creates a new file.</source>
          <target state="translated">如果檔案不存在，這個建構函式會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph> property using the encoding parameter.</source>
          <target state="translated">這個建構函式初始化<ph id="ph1">&lt;xref:System.IO.StreamWriter.Encoding%2A&gt;</ph>屬性使用的編碼方式的參數。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.IO.TextWriter.Encoding%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">`path`</ph> can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 可以是檔案名稱，包括通用命名慣例 (UNC) 共用上的檔案。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">`path`</ph> is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 不需要是儲存在磁碟上的檔案它可以支援透過資料流存取系統的任何部分。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">當您使用特定文化特性設定進行編譯的一組字元，並擷取相同的字元具有不同的文化特性設定時，這些字元可能會無法解譯，，而且可能會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The following example demonstrates this constructor.</source>
          <target state="translated">下列範例會示範這個建構函式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains the name of a system device (com1, com2, and so on).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含系統裝置的名稱 (com1、com2 等等)。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="encoding" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bufferSize" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 包含檔案名稱、目錄名稱或磁碟標籤語法的不正確或無效語法。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Access is denied.</source>
          <target state="translated">存取被拒絕。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定的路徑無效 (例如，它位於未對應的磁碟機上)。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</source>
          <target state="translated">例如，在 Windows 平台上，路徑不得超過 248 個字元，檔案名稱則不得超過 260 個字元。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> will flush its buffer to the underlying stream after every call to <ph id="ph2">&lt;see cref="M:System.IO.StreamWriter.Write(System.Char)" /&gt;</ph>.</source>
          <target state="translated">取得或設定值，指出 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 在每次呼叫 <ph id="ph2">&lt;see cref="M:System.IO.StreamWriter.Write(System.Char)" /&gt;</ph> 之後，是否要將其緩衝區清除到基礎資料流。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to force <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> to flush its buffer; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">強制 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 清除其緩衝區，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示資料會排清從緩衝區資料流之後每一個寫入作業，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>When <ph id="ph1">`AutoFlush`</ph> is set to <ph id="ph2">`false`</ph>, <ph id="ph3">`StreamWriter`</ph> will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</source>
          <target state="translated">當<ph id="ph1">`AutoFlush`</ph>設<ph id="ph2">`false`</ph>，<ph id="ph3">`StreamWriter`</ph>將進行有限的緩衝處理，同時在內部，以及可能在您所輸入的編碼的編碼器。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>You can get better performance by setting <ph id="ph1">`AutoFlush`</ph> to <ph id="ph2">`false`</ph>, assuming that you always call <ph id="ph3">`Close`</ph> (or at least <ph id="ph4">`Flush`</ph>) when you're done writing with a <ph id="ph5">`StreamWriter`</ph>.</source>
          <target state="translated">您可以取得更佳的效能設定<ph id="ph1">`AutoFlush`</ph>至<ph id="ph2">`false`</ph>，假設您一定要呼叫<ph id="ph3">`Close`</ph>(或至少<ph id="ph4">`Flush`</ph>) 當您完成寫入與<ph id="ph5">`StreamWriter`</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>For example, set <ph id="ph1">`AutoFlush`</ph> to <ph id="ph2">`true`</ph> when you are writing to a device where the user expects immediate feedback.</source>
          <target state="translated">例如，設定<ph id="ph1">`AutoFlush`</ph>至<ph id="ph2">`true`</ph>當您撰寫至裝置，使用者需要立即回應的位置。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source><ph id="ph1">`Console.Out`</ph> is one of these cases: The <ph id="ph2">`StreamWriter`</ph> used internally for writing to <ph id="ph3">`Console`</ph> flushes all its internal state except the encoder state after every call to <ph id="ph4">&lt;xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Console.Out`</ph> 是一種情況下：<ph id="ph2">`StreamWriter`</ph>在內部用來寫入<ph id="ph3">`Console`</ph>之後的每個呼叫會排清所有其內部狀態以外的編碼器狀態<ph id="ph4">&lt;xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.AutoFlush">
          <source>The following example shows the syntax for using the <ph id="ph1">`AutoFlush`</ph> property.</source>
          <target state="translated">下列範例顯示使用的語法<ph id="ph1">`AutoFlush`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.BaseStream">
          <source>Gets the underlying stream that interfaces with a backing store.</source>
          <target state="translated">取得以備份存放區作介面的基礎資料流。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.BaseStream">
          <source>The stream this <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> is writing to.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> 正在寫入的資料流。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.BaseStream">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Close">
          <source>Closes the current <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> object and the underlying stream.</source>
          <target state="translated">關閉目前的 <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> 物件和基礎資料流。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This implementation of <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">這項實作<ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StreamWriter.Dispose%2A&gt;</ph>方法傳遞<ph id="ph3">`true`</ph>值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> to ensure that all data is correctly written out to the underlying stream.</source>
          <target state="translated">您必須呼叫<ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>若要確定，正確將所有資料都寫入基礎資料流。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Following a call to <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>, any operations on the <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> might raise exceptions.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>上的任何作業<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>可能會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>If there is insufficient space on the disk, calling <ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph> will raise an exception.</source>
          <target state="translated">如果磁碟沒有足夠的空間，則呼叫<ph id="ph1">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Close">
          <source>The following code example demonstrates the <ph id="ph1">`Close`</ph> method.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">`Close`</ph>方法。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Close">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">目前的編碼不支援顯示 Unicode Surrogate 字組的其中一半。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.IO.StreamWriter&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">目前的編碼不支援顯示 Unicode Surrogate 字組的其中一半。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>，請小心不要參考到先前處置之前呼叫中的物件<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Dispose(System.Boolean)">
          <source>This method calls the dispose method of the base class, <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">這個方法會呼叫基底類別的 dispose 方法<ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.IO.StreamWriter.Encoding">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the output is written.</source>
          <target state="translated">取得寫入輸出的 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> specified in the constructor for the current instance, or <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph> if an encoding was not specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> (在目前執行個體的建構函式中指定)；如果未指定編碼方式，則為 <ph id="ph2">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>.</source>
          <target state="translated">這個屬性是必要的標頭必須寫入其中所包含的編碼方式使用某些 XML 案例<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>This allows the XML code to consume an arbitrary <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> and generate the correct XML header.</source>
          <target state="translated">這可讓取用任意的 XML 程式碼<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>並產生正確的 XML 標頭。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StreamWriter.Encoding">
          <source>The following example retrieves the encoding of the specified <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> instance.</source>
          <target state="translated">下列範例會擷取指定的編碼方式<ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</source>
          <target state="translated">清除目前寫入器 (Writer) 的所有緩衝區，並且造成所有緩衝資料都寫入基礎資料流。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">`Flush`</ph>或<ph id="ph2">&lt;xref:System.IO.StreamWriter.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示資料會排清從緩衝區資料流之後每一個寫入作業，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Flush">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>The current writer is closed.</source>
          <target state="translated">目前寫入器已關閉。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>An I/O error has occurred.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Flush">
          <source>The current encoding does not support displaying half of a Unicode surrogate pair.</source>
          <target state="translated">目前的編碼不支援顯示 Unicode Surrogate 字組的其中一半。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">以非同步的方式清除這個資料流的所有緩衝區，並造成所有緩衝資料都寫入基礎裝置。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示非同步排清作業的工作。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.FlushAsync">
          <source>The stream has been disposed.</source>
          <target state="translated">資料流已經處置。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="F:System.IO.StreamWriter.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph> with no backing store that can be written to, but not read from.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph>，但不包含可寫入但無法讀取的備份存放區。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>Use <ph id="ph1">`Null`</ph> to redirect output to a <ph id="ph2">`StreamWriter`</ph> that will not consume any operating system resources.</source>
          <target state="translated">使用<ph id="ph1">`Null`</ph>導向輸出<ph id="ph2">`StreamWriter`</ph>，不會耗用任何作業系統資源。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>When the <ph id="ph1">`StreamWriter.Write`</ph> methods are invoked on <ph id="ph2">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.</source>
          <target state="translated">當<ph id="ph1">`StreamWriter.Write`</ph>會叫用<ph id="ph2">`Null`</ph>、 呼叫只會傳回，而不實際寫入資料到任何支援的存放區。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.StreamWriter.Null">
          <source>The following example demonstrates a use of the <ph id="ph1">`Null`</ph> field.</source>
          <target state="translated">下列範例會示範使用<ph id="ph1">`Null`</ph>欄位。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data to the stream.</source>
          <target state="translated">寫入資料至資料流。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">要寫入資料流的字元。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>Writes a character to the stream.</source>
          <target state="translated">將一個字元寫入資料流。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">指定的字元是寫入至基礎資料流中，除非提前到達資料流的結尾。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>If <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>是<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph>會自動叫用。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且目前的寫入器已經關閉。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且因為 <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 是在資料流緩衝區的結尾，所以該緩衝區的內容無法寫入至基礎的固定大小資料流。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>A character array containing the data to write.</source>
          <target state="translated">含有要寫入之資料的字元陣列。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">如果「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是<ph id="ph1">&lt;see langword="null" /&gt;</ph>，則不寫入任何資料。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>Writes a character array to the stream.</source>
          <target state="translated">將字元陣列寫入資料流。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">指定的字元會寫入至基礎資料流中，除非提前到達資料流的結尾。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>If <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>是<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph>會自動叫用。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>This method might provide faster performance than <ph id="ph1">`Write`</ph> (<ph id="ph2">`char[],``int,``int`</ph>) because it has fewer arguments to check.</source>
          <target state="translated">這個方法可能會提供更快的效能比<ph id="ph1">`Write`</ph>(<ph id="ph2">`char[],``int,``int`</ph>) 因為它有檢查引數數目少。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且目前的寫入器已經關閉。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[])">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且因為 <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 是在資料流緩衝區的結尾，所以該緩衝區的內容無法寫入至基礎的固定大小資料流。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>The string to write to the stream.</source>
          <target state="translated">要寫入資料流的字串。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is null, nothing is written.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 是 null，則不寫入任何資料。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>Writes a string to the stream.</source>
          <target state="translated">將字串寫入資料流。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>The specified <ph id="ph1">&lt;xref:System.String&gt;</ph> is written to the underlying stream unless the end of the stream is reached prematurely.</source>
          <target state="translated">指定<ph id="ph1">&lt;xref:System.String&gt;</ph>除非資料流結尾為止提前寫入基礎資料流。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> 會自動叫用如果<ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no entries are written.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，會寫入任何項目。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且目前的寫入器已經關閉。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且因為 <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 是在資料流緩衝區的結尾，所以該緩衝區的內容無法寫入至基礎的固定大小資料流。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>A character array that contains the data to write.</source>
          <target state="translated">含有要寫入之資料的字元陣列。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start reading data.</source>
          <target state="translated">緩衝區中要開始讀取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要寫入的最大字元數。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the stream.</source>
          <target state="translated">將字元子陣列寫入資料流。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The characters are read from <ph id="ph1">`buffer`</ph> beginning at <ph id="ph2">`index`</ph> and continuing through <ph id="ph3">`index`</ph> + (<ph id="ph4">`count`</ph> - 1).</source>
          <target state="translated">從讀取字元<ph id="ph1">`buffer`</ph>開始<ph id="ph2">`index`</ph>並延續到<ph id="ph3">`index`</ph>+ (<ph id="ph4">`count`</ph> -1)。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</source>
          <target state="translated">所有的字元會寫入至基礎資料流中，除非提前到達之基礎資料流結尾。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> is invoked automatically if <ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter.Flush%2A&gt;</ph> 會自動叫用如果<ph id="ph2">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</source>
          <target state="translated">這個範例會從 13 個元素陣列八個字元寫入至檔案，從陣列的第三個項目。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">緩衝區長度減去 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and current writer is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且目前的寫入器已經關閉。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> is true or the <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> is at the end the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.StreamWriter.AutoFlush" /&gt;</ph> 為 True，或 <ph id="ph2">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 緩衝區已滿，且因為 <ph id="ph3">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 是在資料流緩衝區的結尾，所以該緩衝區的內容無法寫入至基礎的固定大小資料流。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data to the stream asynchronously.</source>
          <target state="translated">以非同步方式將資料寫入資料流。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">要寫入資料流的字元。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>Writes a character to the stream asynchronously.</source>
          <target state="translated">以非同步方式將字元寫入資料流。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The following example shows how to write a single character (the letter "a") to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何撰寫單一字元 (字母"a") 使用的文字檔案<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The string to write to the stream.</source>
          <target state="translated">要寫入資料流的字串。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">如果「值」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是<ph id="ph1">&lt;see langword="null" /&gt;</ph>，則不寫入任何資料。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>Writes a string to the stream asynchronously.</source>
          <target state="translated">以非同步方式將字串寫入資料流。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The following example shows how to write a string to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何使用將字串寫入文字檔<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.String)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A character array that contains the data to write.</source>
          <target state="translated">含有要寫入之資料的字元陣列。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to begin reading data.</source>
          <target state="translated">緩衝區中要開始讀取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要寫入的最大字元數。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the stream asynchronously.</source>
          <target state="translated">以非同步方式將字元的子陣列寫入資料流。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write multiple characters to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何寫入文字檔案中的多個字元，使用<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大於緩衝區的長度。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="T:System.IO.StreamWriter">
          <source>Writes data followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">以非同步方式將資料 (其後加上行結束字元) 寫入資料流。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>Writes a line terminator asynchronously to the stream.</source>
          <target state="translated">將行結束字元以非同步方式寫入資料流。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">行結束字元由定義<ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the stream.</source>
          <target state="translated">要寫入資料流的字元。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">以非同步方式將一個字元 (其後加上行結束字元) 寫入資料流。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">行結束字元由定義<ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何撰寫單一字元 (字母"a") 的文字檔案中的行，後面接著另一個包含單一字元 （字母"b"），使用的行<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">要寫入的字串。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">如果值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則只會寫入行結束字元。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">以非同步方式將字串 (後面接著行結束字元) 寫入資料流。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">行結束字元由定義<ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The following example shows how to write two lines that consist of string values to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何撰寫使用包含字串值，以文字檔案的兩個線條<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">資料寫入來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start reading data.</source>
          <target state="translated">緩衝區中要開始讀取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要寫入的最大字元數。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the stream.</source>
          <target state="translated">以非同步方式將字元子陣列 (其後加上行結束字元) 寫入資料流。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">行結束字元由定義<ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write characters to two separate lines in a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何將字元寫入到文字檔案中的兩個個別行中，使用<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</source>
          <target state="translated">第一行包含字串 （"第一行"後面接空格的字母） 的第一次 11 個字元。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The second line contains the remaining characters from the string (the letters "and second line").</source>
          <target state="translated">第二行包含從字串的其餘字元 (字母"和列的第二個")。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大於緩衝區的長度。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is disposed.</source>
          <target state="translated">資料流寫入器已處置。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The stream writer is currently in use by a previous write operation.</source>
          <target state="translated">資料流寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>