<Type Name="UnmanagedMemoryStream" FullName="System.IO.UnmanagedMemoryStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb4c975faf277d108657da605c92e4d25ec392c7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36483835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnmanagedMemoryStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnmanagedMemoryStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.UnmanagedMemoryStream" />
  <TypeSignature Language="VB.NET" Value="Public Class UnmanagedMemoryStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMemoryStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type UnmanagedMemoryStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="60bab-101">Provides access to unmanaged blocks of memory from managed code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60bab-101">Provides access to unmanaged blocks of memory from managed code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-102">這個類別支援使用現有的資料流為基礎的模型的 unmanaged 記憶體存取，而且不需要的 unmanaged 記憶體中的內容複製到堆積。</span><span class="sxs-lookup"><span data-stu-id="60bab-102">This class supports access to unmanaged memory using the existing stream-based model and does not require that the contents in the unmanaged memory be copied to the heap.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
## Examples  
 <span data-ttu-id="60bab-103">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-103">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span>  <span data-ttu-id="60bab-104">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-104">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream/cs/sample.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-105">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-105">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UnmanagedMemoryStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UnmanagedMemoryStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60bab-106">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-106">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60bab-107">The user does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-107">The user does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
          <span data-ttu-id="60bab-108">用於存取 unmanaged 的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-108">for accessing unmanaged memory.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnmanagedMemoryStream (byte* pointer, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8* pointer, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnmanagedMemoryStream(System::Byte* pointer, long length);" />
      <MemberSignature Language="F#" Value="new System.IO.UnmanagedMemoryStream : nativeptr&lt;byte&gt; * int64 -&gt; System.IO.UnmanagedMemoryStream" Usage="new System.IO.UnmanagedMemoryStream (pointer, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pointer" Type="System.Byte*" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="pointer">
          <span data-ttu-id="60bab-109">A pointer to an unmanaged memory location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-109">A pointer to an unmanaged memory location.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-110">The length of the memory to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-110">The length of the memory to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-111">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class using the specified location and memory length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-111">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class using the specified location and memory length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-112">這個建構函式建立的新執行個體<xref:System.IO.UnmanagedMemoryStream>類別，並依預設會設定<xref:System.IO.UnmanagedMemoryStream.CanWrite%2A>屬性`false`和<xref:System.IO.UnmanagedMemoryStream.CanRead%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="60bab-112">This constructor creates a new instance of the <xref:System.IO.UnmanagedMemoryStream> class, and by default sets the <xref:System.IO.UnmanagedMemoryStream.CanWrite%2A> property to `false` and the <xref:System.IO.UnmanagedMemoryStream.CanRead%2A> property to `true`.</span></span> <span data-ttu-id="60bab-113"><xref:System.IO.UnmanagedMemoryStream.Length%2A>屬性設定的值為`length`參數，而且無法變更。</span><span class="sxs-lookup"><span data-stu-id="60bab-113">The <xref:System.IO.UnmanagedMemoryStream.Length%2A> property is set to the value of the `length` parameter and cannot be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-114">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-114">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-115">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-115">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60bab-116">The user does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-116">The user does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60bab-117">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-117">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-118">The <paramref name="length" /> value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-118">The <paramref name="length" /> value is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-119">\- or -  The <paramref name="length" /> is large enough to cause an overflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-119">\- or -  The <paramref name="length" /> is large enough to cause an overflow.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
          <span data-ttu-id="60bab-120">用於存取 unmanaged 的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-120">for accessing unmanaged memory.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="60bab-121">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-121">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="60bab-122">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-122">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnmanagedMemoryStream (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.InteropServices.SafeBuffer buffer, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As SafeBuffer, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnmanagedMemoryStream(System::Runtime::InteropServices::SafeBuffer ^ buffer, long offset, long length);" />
      <MemberSignature Language="F#" Value="new System.IO.UnmanagedMemoryStream : System.Runtime.InteropServices.SafeBuffer * int64 * int64 -&gt; System.IO.UnmanagedMemoryStream" Usage="new System.IO.UnmanagedMemoryStream (buffer, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Runtime.InteropServices.SafeBuffer" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-123">The buffer to contain the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-123">The buffer to contain the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-124">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-124">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-125">The length of the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-125">The length of the unmanaged memory stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-126">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset and length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-126">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset and length.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnmanagedMemoryStream (byte* pointer, long length, long capacity, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8* pointer, int64 length, int64 capacity, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnmanagedMemoryStream(System::Byte* pointer, long length, long capacity, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.UnmanagedMemoryStream : nativeptr&lt;byte&gt; * int64 * int64 * System.IO.FileAccess -&gt; System.IO.UnmanagedMemoryStream" Usage="new System.IO.UnmanagedMemoryStream (pointer, length, capacity, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pointer" Type="System.Byte*" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="pointer">
          <span data-ttu-id="60bab-127">A pointer to an unmanaged memory location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-127">A pointer to an unmanaged memory location.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-128">The length of the memory to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-128">The length of the memory to use.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="60bab-129">The total amount of memory assigned to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-129">The total amount of memory assigned to the stream.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="60bab-130">One of the <see cref="T:System.IO.FileAccess" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-130">One of the <see cref="T:System.IO.FileAccess" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-131">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class using the specified location, memory length, total amount of memory, and file access values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-131">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class using the specified location, memory length, total amount of memory, and file access values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-132">`length`參數定義中使用目前的記憶體數量。</span><span class="sxs-lookup"><span data-stu-id="60bab-132">The `length` parameter defines the current amount of memory in use.</span></span> <span data-ttu-id="60bab-133">如果讀取或寫入資料流，附加資料`length`值應該等於要讀取的資料流中的有效資料量，或保留。</span><span class="sxs-lookup"><span data-stu-id="60bab-133">If reading or appending data to the stream, the `length` value should be equal to the amount of valid data in the stream to be read from or preserved.</span></span> <span data-ttu-id="60bab-134">如果寫入資料流，此值應該是零。</span><span class="sxs-lookup"><span data-stu-id="60bab-134">If writing to the stream, this value should be zero.</span></span>  
  
 <span data-ttu-id="60bab-135">`capacity`參數表示的可用總記憶體量。</span><span class="sxs-lookup"><span data-stu-id="60bab-135">The `capacity` parameter indicates the amount of total memory available.</span></span> <span data-ttu-id="60bab-136">這個值可以描述超過指定長度的區域，或表示您可以附加至的區域。</span><span class="sxs-lookup"><span data-stu-id="60bab-136">This value can describe a region that is longer than the length specified, or indicate a region that can be appended to.</span></span> <span data-ttu-id="60bab-137">任何嘗試寫入超過此值將會失敗。</span><span class="sxs-lookup"><span data-stu-id="60bab-137">Any attempt to write beyond this value will fail.</span></span>  
  
 <span data-ttu-id="60bab-138">`access`參數集<xref:System.IO.UnmanagedMemoryStream.CanRead%2A>，和<xref:System.IO.UnmanagedMemoryStream.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="60bab-138">The `access` parameter sets the <xref:System.IO.UnmanagedMemoryStream.CanRead%2A>, and <xref:System.IO.UnmanagedMemoryStream.CanWrite%2A> properties.</span></span> <span data-ttu-id="60bab-139">請注意該指定<xref:System.IO.FileAccess.Write>不保證的資料流將是可寫入。</span><span class="sxs-lookup"><span data-stu-id="60bab-139">Note that specifying <xref:System.IO.FileAccess.Write> does not guarantee that the stream will be writable.</span></span> <span data-ttu-id="60bab-140">存取參數可讓實作器建立其實作可比對實際資料流所公開的物件。</span><span class="sxs-lookup"><span data-stu-id="60bab-140">The access parameters allow the implementer to create an object whose implementation can match the actual stream that is exposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-141">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-141">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span>  <span data-ttu-id="60bab-142">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-142">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream/cs/sample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60bab-143">The user does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-143">The user does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60bab-144">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-144">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-145">The <paramref name="length" /> value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-145">The <paramref name="length" /> value is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-146">\- or -  The <paramref name="capacity" /> value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-146">\- or -  The <paramref name="capacity" /> value is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-147">\- or -  The <paramref name="length" /> value is greater than the <paramref name="capacity" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-147">\- or -  The <paramref name="length" /> value is greater than the <paramref name="capacity" /> value.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
          <span data-ttu-id="60bab-148">用於存取 unmanaged 的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-148">for accessing unmanaged memory.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="60bab-149">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-149">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="60bab-150">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-150">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnmanagedMemoryStream (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long length, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.InteropServices.SafeBuffer buffer, int64 offset, int64 length, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As SafeBuffer, offset As Long, length As Long, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnmanagedMemoryStream(System::Runtime::InteropServices::SafeBuffer ^ buffer, long offset, long length, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.UnmanagedMemoryStream : System.Runtime.InteropServices.SafeBuffer * int64 * int64 * System.IO.FileAccess -&gt; System.IO.UnmanagedMemoryStream" Usage="new System.IO.UnmanagedMemoryStream (buffer, offset, length, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Runtime.InteropServices.SafeBuffer" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-151">The buffer to contain the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-151">The buffer to contain the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-152">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-152">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-153">The length of the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-153">The length of the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="60bab-154">The mode of file access to the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-154">The mode of file access to the unmanaged memory stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-155">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset, length, and file access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-155">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset, length, and file access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.UnmanagedMemoryStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-156">Gets a value indicating whether a stream supports reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-156">Gets a value indicating whether a stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-157">如果物件由具有 <paramref name="access" /> 參數之不包括讀取資料流的建構函式建立，或者如果資料流已關閉，則為 <see langword="false" />；否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-157">
              <see langword="false" /> if the object was created by a constructor with an <paramref name="access" /> parameter that did not include reading the stream and if the stream is closed; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-158">這個屬性會指出目前資料流物件是否支援讀取。</span><span class="sxs-lookup"><span data-stu-id="60bab-158">This property indicates whether the current stream object supports reading.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-159">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-159">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-160">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-160">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="60bab-161">在此範例中，<xref:System.IO.UnmanagedMemoryStream>物件傳遞至方法，這個方法會檢查<xref:System.IO.UnmanagedMemoryStream.CanRead%2A>屬性，才能嘗試對主控台顯示內容。</span><span class="sxs-lookup"><span data-stu-id="60bab-161">In this example, an <xref:System.IO.UnmanagedMemoryStream> object is passed to a method which checks the <xref:System.IO.UnmanagedMemoryStream.CanRead%2A> property before attempting to display the contents to the console.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.UnmanagedMemoryStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-162">Gets a value indicating whether a stream supports seeking.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-162">Gets a value indicating whether a stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-163">如果資料流已關閉，則為 <see langword="false" />；否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-163">
              <see langword="false" /> if the stream is closed; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-164">這個屬性會指出目前資料流物件是否支援搜尋。</span><span class="sxs-lookup"><span data-stu-id="60bab-164">This property indicates whether the current stream object supports seeking.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.UnmanagedMemoryStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-165">Gets a value indicating whether a stream supports writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-165">Gets a value indicating whether a stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-166">如果物件由具有 <paramref name="access" /> 參數值之支援寫入的建構函式或由不具有參數的建構函式建立，或者如果資料流已關閉，則為 <see langword="false" />；否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-166">
              <see langword="false" /> if the object was created by a constructor with an <paramref name="access" /> parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-167">這個屬性會指出目前資料流物件是否支援寫入。</span><span class="sxs-lookup"><span data-stu-id="60bab-167">This property indicates whether the current stream object supports writing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-168">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-168">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-169">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-169">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="60bab-170">在此範例中，<xref:System.IO.UnmanagedMemoryStream>物件傳遞至方法，這個方法會檢查<xref:System.IO.UnmanagedMemoryStream.CanWrite%2A>屬性，然後再嘗試將資料寫入資料流。</span><span class="sxs-lookup"><span data-stu-id="60bab-170">In this example, an <xref:System.IO.UnmanagedMemoryStream> object is passed to a method which checks the <xref:System.IO.UnmanagedMemoryStream.CanWrite%2A> property before attempting to write the data to the stream.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public long Capacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Capacity As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Capacity { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int64" Usage="System.IO.UnmanagedMemoryStream.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-171">Gets the stream length (size) or the total amount of memory assigned to a stream (capacity).</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-171">Gets the stream length (size) or the total amount of memory assigned to a stream (capacity).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-172">資料流的大小或容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-172">The size or capacity of the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-173">這個屬性會傳回`capacity`值提供給建構函式。</span><span class="sxs-lookup"><span data-stu-id="60bab-173">This property returns the `capacity` value provided to the constructor.</span></span> <span data-ttu-id="60bab-174">如果沒有`capacity`初始化資料流時指定了值，這個屬性會傳回資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="60bab-174">If no `capacity` value was specified when the stream was initialized, this property returns the stream length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-175">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-175">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="unmanagedMemoryStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="60bab-176">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-176">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-177">Releases the unmanaged resources used by the <see cref="T:System.IO.UnmanagedMemoryStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-177">Releases the unmanaged resources used by the <see cref="T:System.IO.UnmanagedMemoryStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-178">這個方法會呼叫公用<xref:System.ComponentModel.Component.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="60bab-178">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="60bab-179"><xref:System.ComponentModel.Component.Dispose%2A> 叫用受保護<xref:System.IO.UnmanagedMemoryStream.Dispose%2A>方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="60bab-179"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.UnmanagedMemoryStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="60bab-180"><xref:System.Object.Finalize%2A> 叫用<xref:System.IO.UnmanagedMemoryStream.Dispose%2A>與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="60bab-180"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.UnmanagedMemoryStream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="60bab-181">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.IO.UnmanagedMemoryStream> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="60bab-181">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.UnmanagedMemoryStream> references.</span></span> <span data-ttu-id="60bab-182">這個方法會叫用每個參考物件的 <xref:System.ComponentModel.Component.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="60bab-182">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="60bab-183">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> 可以被其他物件呼叫多次。在覆寫<see cref="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)" />小心不要參考物件已處置過的早期呼叫中<see cref="M:System.ComponentModel.Component.Dispose" />。如需有關如何實作<see cref="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see cref="M:System.ComponentModel.Component.Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱 [總未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 清除。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-183">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="unmanagedMemoryStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60bab-184">Overrides the <see cref="M:System.IO.Stream.Flush" /> method so that no action is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-184">Overrides the <see cref="M:System.IO.Stream.Flush" /> method so that no action is performed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-185">這個方法會執行任何動作，但這個類別是包含在<xref:System.IO.Stream>基底類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-185">This method performs no action for this class but is included as part of the <xref:System.IO.Stream> base class.</span></span> <span data-ttu-id="60bab-186">由於 RAM 寫入任何資料，這個方法是多餘的。</span><span class="sxs-lookup"><span data-stu-id="60bab-186">Since any data is written to RAM, this method is redundant.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-187">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-187">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="unmanagedMemoryStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="60bab-188">The token to monitor for cancellation requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-188">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="60bab-189">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-189">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-190">Overrides the <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> method so that the operation is cancelled if specified, but no other action is performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-190">Overrides the <see cref="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" /> method so that the operation is cancelled if specified, but no other action is performed.</span>
          </span>
          <span data-ttu-id="60bab-191">Available starting in .NET Framework 4.6</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-191">Available starting in .NET Framework 4.6</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-192">A task that represents the asynchronous flush operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-192">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-193">如果未取消作業，<xref:System.IO.UnmanagedMemoryStream>呼叫<xref:System.IO.UnmanagedMemoryStream.Flush%2A>方法，這表示不執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="60bab-193">If the operation isn’t cancelled, the <xref:System.IO.UnmanagedMemoryStream> calls the <xref:System.IO.UnmanagedMemoryStream.Flush%2A> method, which means that no action performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-194">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer, or by using a pointer to an unmanaged memory location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-194">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer, or by using a pointer to an unmanaged memory location.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (byte* pointer, long length, long capacity, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(unsigned int8* pointer, int64 length, int64 capacity, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Byte* pointer, long length, long capacity, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.Initialize : nativeptr&lt;byte&gt; * int64 * int64 * System.IO.FileAccess -&gt; unit" Usage="unmanagedMemoryStream.Initialize (pointer, length, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.Byte*" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="pointer">
          <span data-ttu-id="60bab-195">A pointer to an unmanaged memory location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-195">A pointer to an unmanaged memory location.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-196">The length of the memory to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-196">The length of the memory to use.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="60bab-197">The total amount of memory assigned to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-197">The total amount of memory assigned to the stream.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="60bab-198">One of the <see cref="T:System.IO.FileAccess" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-198">One of the <see cref="T:System.IO.FileAccess" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-199">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class by using a pointer to an unmanaged memory location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-199">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class by using a pointer to an unmanaged memory location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-200">這個方法相當於<xref:System.IO.UnmanagedMemoryStream.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="60bab-200">This method is equivalent to the <xref:System.IO.UnmanagedMemoryStream.%23ctor%2A> constructor.</span></span> <span data-ttu-id="60bab-201">它支援需要初始化之前設定資料流變數的指標，因此，無法呼叫參數化建構函式的方法。</span><span class="sxs-lookup"><span data-stu-id="60bab-201">It supports methods that need to initialize the pointer before setting stream variables and, therefore, cannot call the parameterized constructor.</span></span> <span data-ttu-id="60bab-202">這類方法應該使用預設建構函式<xref:System.IO.UnmanagedMemoryStream.%23ctor>、 初始化指標，並接著叫用<xref:System.IO.UnmanagedMemoryStream.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="60bab-202">Such methods should use the default constructor, <xref:System.IO.UnmanagedMemoryStream.%23ctor>, initialize the pointer, and then invoke the <xref:System.IO.UnmanagedMemoryStream.Initialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="60bab-203">The user does not have the required permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-203">The user does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60bab-204">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-204">The <paramref name="pointer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-205">The <paramref name="length" /> value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-205">The <paramref name="length" /> value is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-206">\- or -  The <paramref name="capacity" /> value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-206">\- or -  The <paramref name="capacity" /> value is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-207">\- or -  The <paramref name="length" /> value is large enough to cause an overflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-207">\- or -  The <paramref name="length" /> value is large enough to cause an overflow.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
          <span data-ttu-id="60bab-208">用於存取 unmanaged 的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-208">for accessing unmanaged memory.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="60bab-209">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-209">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="60bab-210">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-210">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Runtime.InteropServices.SafeBuffer buffer, long offset, long length, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Runtime.InteropServices.SafeBuffer buffer, int64 offset, int64 length, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (buffer As SafeBuffer, offset As Long, length As Long, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Runtime::InteropServices::SafeBuffer ^ buffer, long offset, long length, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Runtime.InteropServices.SafeBuffer * int64 * int64 * System.IO.FileAccess -&gt; unit" Usage="unmanagedMemoryStream.Initialize (buffer, offset, length, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Runtime.InteropServices.SafeBuffer" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-211">The buffer to contain the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-211">The buffer to contain the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-212">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-212">The byte position in the buffer at which to start the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="60bab-213">The length of the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-213">The length of the unmanaged memory stream.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="60bab-214">The mode of file access to the unmanaged memory stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-214">The mode of file access to the unmanaged memory stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-215">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset, length, and file access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-215">Initializes a new instance of the <see cref="T:System.IO.UnmanagedMemoryStream" /> class in a safe buffer with a specified offset, length, and file access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.UnmanagedMemoryStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-216">Gets the length of the data in a stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-216">Gets the length of the data in a stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-217">資料流中資料的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-217">The length of the data in the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-218">如果沒有變更，因為資料流已經初始化，則這個屬性會傳回提供給建構函式的長度值。</span><span class="sxs-lookup"><span data-stu-id="60bab-218">If unchanged since the stream was initialized, this property returns the length value provided to the constructor.</span></span> <span data-ttu-id="60bab-219">如果已經發生變更之資料流，此屬性會反映資料的長度的任何變更。</span><span class="sxs-lookup"><span data-stu-id="60bab-219">If changes to the stream have occurred, this property reflects any changes to the length of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-220">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-220">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-221">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-221">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-222">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-222">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.UnmanagedMemoryStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-223">Gets or sets the current position in a stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-223">Gets or sets the current position in a stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-224">在資料流中的目前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-224">The current position in the stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-225">當初始化資料流時，這個屬性設為零。</span><span class="sxs-lookup"><span data-stu-id="60bab-225">When a stream is initialized, this property is set to zero.</span></span>  
  
 <span data-ttu-id="60bab-226">雖然您可以設定資料流的容量超出資料流的位置，您將無法存取該區域使用<xref:System.IO.UnmanagedMemoryStream.Read%2A>和<xref:System.IO.UnmanagedMemoryStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="60bab-226">Although you can set the position of the stream beyond the stream's capacity, you will not be able to access that area using the <xref:System.IO.UnmanagedMemoryStream.Read%2A> and <xref:System.IO.UnmanagedMemoryStream.Write%2A> methods.</span></span> <span data-ttu-id="60bab-227"><xref:System.IO.UnmanagedMemoryStream.Read%2A> 會傳回 0 和<xref:System.IO.UnmanagedMemoryStream.Write%2A>將會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="60bab-227"><xref:System.IO.UnmanagedMemoryStream.Read%2A> will return 0 and <xref:System.IO.UnmanagedMemoryStream.Write%2A> will throw a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="60bab-228">這項支援主要是基本的資料流作業與設計和程式碼相容性。</span><span class="sxs-lookup"><span data-stu-id="60bab-228">This support is primarily for design and code compatibility with basic stream operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-229">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-229">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-230">The position is set to a value that is less than zero, or the position is larger than <see cref="F:System.Int32.MaxValue" /> or results in overflow when added to the current pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-230">The position is set to a value that is less than zero, or the position is larger than <see cref="F:System.Int32.MaxValue" /> or results in overflow when added to the current pointer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PositionPointer">
      <MemberSignature Language="C#" Value="public byte* PositionPointer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8* PositionPointer" />
      <MemberSignature Language="DocId" Value="P:System.IO.UnmanagedMemoryStream.PositionPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte* PositionPointer { System::Byte* get(); void set(System::Byte* value); };" />
      <MemberSignature Language="F#" Value="member this.PositionPointer : nativeptr&lt;byte&gt; with get, set" Usage="System.IO.UnmanagedMemoryStream.PositionPointer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte*</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60bab-231">Gets or sets a byte pointer to a stream based on the current position in the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-231">Gets or sets a byte pointer to a stream based on the current position in the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60bab-232">位元組指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-232">A byte pointer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-233">若要傳回整個資料流的指標，將<xref:System.IO.UnmanagedMemoryStream.Position%2A>屬性設為零，並接著呼叫這個屬性。</span><span class="sxs-lookup"><span data-stu-id="60bab-233">To return a pointer to the entire stream, set the <xref:System.IO.UnmanagedMemoryStream.Position%2A> property to zero, and then call this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="60bab-234">The current position is larger than the capacity of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-234">The current position is larger than the capacity of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-235">The position is being set is not a valid position in the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-235">The position is being set is not a valid position in the current stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="60bab-236">The pointer is being set to a lower value than the starting position of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-236">The pointer is being set to a lower value than the starting position of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-237">The stream was initialized for use with a <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-237">The stream was initialized for use with a <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span>
          </span>
          <span data-ttu-id="60bab-238">The <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> property is valid only for streams that are initialized with a <see cref="T:System.Byte" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-238">The <see cref="P:System.IO.UnmanagedMemoryStream.PositionPointer" /> property is valid only for streams that are initialized with a <see cref="T:System.Byte" /> pointer.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="60bab-239">呼叫 unmanaged 程式碼，例如先呼叫原生程式碼與平台叫用或 COM 整合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-239">for calling unmanaged code, such as calling native code with platform invoke or COM integration.</span>
          </span>
          <span data-ttu-id="60bab-240">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-240">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="60bab-241">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-241">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="60bab-242">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-242">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="60bab-243">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-243">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="unmanagedMemoryStream.Read destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="unmanagedMemoryStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-244">When this method returns, contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-244">When this method returns, contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c> - 1) replaced by the bytes read from the current source.</span>
          </span>
          <span data-ttu-id="60bab-245">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-245">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-246">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-246">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60bab-247">The maximum number of bytes to read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-247">The maximum number of bytes to read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-248">Reads the specified number of bytes into the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-248">Reads the specified number of bytes into the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-249">The total number of bytes read into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-249">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="60bab-250">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-250">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-251">`offset`參數會提供中的位元組位移`array`參數 （緩衝區索引） 中要開始閱讀，而`count`參數指定要從這個資料流讀取的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="60bab-251">The `offset` parameter gives the offset of the byte in the `array` parameter (the buffer index) at which to begin reading, and the `count` parameter gives the maximum number of bytes to be read from this stream.</span></span> <span data-ttu-id="60bab-252">如果已到達資料流結尾，傳回的值會是個位元組，則為零的實際數目。</span><span class="sxs-lookup"><span data-stu-id="60bab-252">The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</span></span> <span data-ttu-id="60bab-253">如果在讀取的作業成功，讀取的位元組數目進階資料流的目前位置。</span><span class="sxs-lookup"><span data-stu-id="60bab-253">If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</span></span> <span data-ttu-id="60bab-254">如果發生例外狀況，目前資料流的位置不變。</span><span class="sxs-lookup"><span data-stu-id="60bab-254">If an exception occurs, the current position of the stream is unchanged.</span></span>  
  
 <span data-ttu-id="60bab-255"><xref:System.IO.UnmanagedMemoryStream.Read%2A>方法會傳回零只到達資料流結尾之後。</span><span class="sxs-lookup"><span data-stu-id="60bab-255">The <xref:System.IO.UnmanagedMemoryStream.Read%2A> method returns zero only after reaching the end of the stream.</span></span> <span data-ttu-id="60bab-256">否則，<xref:System.IO.UnmanagedMemoryStream.Read%2A>一律會讀取至少一個位元組資料流後再傳回。</span><span class="sxs-lookup"><span data-stu-id="60bab-256">Otherwise, <xref:System.IO.UnmanagedMemoryStream.Read%2A> always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="60bab-257">如果沒有資料可從呼叫時，資料流<xref:System.IO.UnmanagedMemoryStream.Read%2A>，方法會封鎖直到至少一個位元組的資料可能會傳回。</span><span class="sxs-lookup"><span data-stu-id="60bab-257">If no data is available from the stream upon a call to <xref:System.IO.UnmanagedMemoryStream.Read%2A>, the method will block until at least one byte of data can be returned.</span></span> <span data-ttu-id="60bab-258">實作可以自由地傳回比要求的位元組更少，即使尚未達到資料流結尾。</span><span class="sxs-lookup"><span data-stu-id="60bab-258">An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-259">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-259">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span>  <span data-ttu-id="60bab-260">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-260">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream/cs/sample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-261">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-261">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-262">The underlying memory does not support reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-262">The underlying memory does not support reading.</span>
          </span>
          <span data-ttu-id="60bab-263">\- or -  The <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-263">\- or -  The <see cref="P:System.IO.UnmanagedMemoryStream.CanRead" /> property is set to <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60bab-264">The <paramref name="buffer" /> parameter is set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-264">The <paramref name="buffer" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-265">The <paramref name="offset" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-265">The <paramref name="offset" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="60bab-266">\- or -  The <paramref name="count" /> parameter is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-266">\- or -  The <paramref name="count" /> parameter is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60bab-267">The length of the buffer array minus the <paramref name="offset" /> parameter is less than the <paramref name="count" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-267">The length of the buffer array minus the <paramref name="offset" /> parameter is less than the <paramref name="count" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="unmanagedMemoryStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-268">The buffer to write the data into.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-268">The buffer to write the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-269">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-269">The byte offset in <c>buffer</c> at which to begin writing data from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60bab-270">The maximum number of bytes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-270">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="60bab-271">The token to monitor for cancellation requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-271">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="60bab-272">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-272">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-273">Asynchronously reads the specified number of bytes into the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-273">Asynchronously reads the specified number of bytes into the specified array.</span>
          </span>
          <span data-ttu-id="60bab-274">Available starting in .NET Framework 4.6</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-274">Available starting in .NET Framework 4.6</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-275">A task that represents the asynchronous read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-275">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="60bab-276">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-276">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="60bab-277">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-277">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-278">如果在讀取作業期間發生例外狀況，它會設定為<xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType>所傳回工作的屬性。</span><span class="sxs-lookup"><span data-stu-id="60bab-278">If an exception occurs during the read operation, it will be set as the <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> of the property of the returned task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="unmanagedMemoryStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60bab-279">Reads a byte from a stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-279">Reads a byte from a stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-280">The unsigned byte cast to an <see cref="T:System.Int32" /> object, or -1 if at the end of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-280">The unsigned byte cast to an <see cref="T:System.Int32" /> object, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-281">使用此方法傳回的整數值，從資料流。</span><span class="sxs-lookup"><span data-stu-id="60bab-281">Use this method to return integer values from the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-282">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-282">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-283">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-283">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="60bab-284">在此範例中，<xref:System.IO.UnmanagedMemoryStream>物件傳遞至方法，這個方法會檢查<xref:System.IO.UnmanagedMemoryStream.CanRead%2A>屬性之後再嘗試讀取，並對主控台顯示內容。</span><span class="sxs-lookup"><span data-stu-id="60bab-284">In this example, an <xref:System.IO.UnmanagedMemoryStream> object is passed to a method which checks the <xref:System.IO.UnmanagedMemoryStream.CanRead%2A> property before attempting to read and display the contents to the console.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-285">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-285">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-286">The underlying memory does not support reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-286">The underlying memory does not support reading.</span>
          </span>
          <span data-ttu-id="60bab-287">\- or -  The current position is at the end of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-287">\- or -  The current position is at the end of the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin loc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, loc As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin loc);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="unmanagedMemoryStream.Seek (offset, loc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="loc" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="60bab-288">The point relative to <c>origin</c> to begin seeking from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-288">The point relative to <c>origin</c> to begin seeking from.</span>
          </span>
        </param>
        <param name="loc">
          <span data-ttu-id="60bab-289">Specifies the beginning, the end, or the current position as a reference point for <c>origin</c>, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-289">Specifies the beginning, the end, or the current position as a reference point for <c>origin</c>, using a value of type <see cref="T:System.IO.SeekOrigin" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-290">Sets the current position of the current stream to the given value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-290">Sets the current position of the current stream to the given value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-291">The new position in the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-291">The new position in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-292">如需搜尋的詳細資訊，請參閱<xref:System.IO.FileStream.Seek%2A>。</span><span class="sxs-lookup"><span data-stu-id="60bab-292">For more information about seeking, see <xref:System.IO.FileStream.Seek%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="60bab-293">An attempt was made to seek before the beginning of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-293">An attempt was made to seek before the beginning of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-294">The <paramref name="offset" /> value is larger than the maximum size of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-294">The <paramref name="offset" /> value is larger than the maximum size of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60bab-295">
            <paramref name="loc" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-295">
              <paramref name="loc" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-296">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-296">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="unmanagedMemoryStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60bab-297">The length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-297">The length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-298">Sets the length of a stream to a specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-298">Sets the length of a stream to a specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-299">如果指定的值小於目前資料流的長度，則會截斷資料流。</span><span class="sxs-lookup"><span data-stu-id="60bab-299">If the given value is less than the current length of the stream, the stream is truncated.</span></span> <span data-ttu-id="60bab-300">如果指定的值大於目前資料流的長度，則會展開資料流。</span><span class="sxs-lookup"><span data-stu-id="60bab-300">If the given value is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="60bab-301">如果展開資料流時，舊之間的新長度的資料流的內容會是未定義。</span><span class="sxs-lookup"><span data-stu-id="60bab-301">If the stream is expanded, the contents of the stream between the old and the new lengths are undefined.</span></span>  
  
 <span data-ttu-id="60bab-302">資料流必須支援寫入和搜尋的<xref:System.IO.UnmanagedMemoryStream.SetLength%2A>運作。</span><span class="sxs-lookup"><span data-stu-id="60bab-302">A stream must support both writing and seeking for <xref:System.IO.UnmanagedMemoryStream.SetLength%2A> to work.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="60bab-303">An I/O error has occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-303">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-304">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-304">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-305">The underlying memory does not support writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-305">The underlying memory does not support writing.</span>
          </span>
          <span data-ttu-id="60bab-306">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-306">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-307">The specified <paramref name="value" /> exceeds the capacity of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-307">The specified <paramref name="value" /> exceeds the capacity of the stream.</span>
          </span>
          <span data-ttu-id="60bab-308">\- or -  The specified <paramref name="value" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-308">\- or -  The specified <paramref name="value" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="unmanagedMemoryStream.Write source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="unmanagedMemoryStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-309">The byte array from which to copy bytes to the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-309">The byte array from which to copy bytes to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-310">The offset in the buffer at which to begin copying bytes to the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-310">The offset in the buffer at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60bab-311">The number of bytes to write to the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-311">The number of bytes to write to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-312">Writes a block of bytes to the current stream using data from a buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-312">Writes a block of bytes to the current stream using data from a buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-313">資料流中目前的位置進行寫入。</span><span class="sxs-lookup"><span data-stu-id="60bab-313">Writing occurs at the current position in the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60bab-314">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-314">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span>  <span data-ttu-id="60bab-315">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-315">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream/cs/sample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-316">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-316">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-317">The underlying memory does not support writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-317">The underlying memory does not support writing.</span>
          </span>
          <span data-ttu-id="60bab-318">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-318">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60bab-319">\- or -  The <paramref name="count" /> value is greater than the capacity of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-319">\- or -  The <paramref name="count" /> value is greater than the capacity of the stream.</span>
          </span>
          <span data-ttu-id="60bab-320">\- or -  The position is at the end of the stream capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-320">\- or -  The position is at the end of the stream capacity.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="60bab-321">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-321">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60bab-322">One of the specified parameters is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-322">One of the specified parameters is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60bab-323">The <paramref name="offset" /> parameter minus the length of the <paramref name="buffer" /> parameter is less than the <paramref name="count" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-323">The <paramref name="offset" /> parameter minus the length of the <paramref name="buffer" /> parameter is less than the <paramref name="count" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60bab-324">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-324">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="unmanagedMemoryStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60bab-325">The buffer to write data from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-325">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="60bab-326">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-326">The zero-based byte offset in <c>buffer</c> from which to begin copying bytes to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60bab-327">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-327">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="60bab-328">The token to monitor for cancellation requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-328">The token to monitor for cancellation requests.</span>
          </span>
          <span data-ttu-id="60bab-329">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-329">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-330">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-330">Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</span>
          </span>
          <span data-ttu-id="60bab-331">Available starting in .NET Framework 4.6</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-331">Available starting in .NET Framework 4.6</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60bab-332">A task that represents the asynchronous write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-332">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60bab-333">如果在寫入作業期間發生例外狀況，它會設定為<xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType>所傳回工作的屬性。</span><span class="sxs-lookup"><span data-stu-id="60bab-333">If an exception occurs during the write operation, it will be set as the <xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=nameWithType> of the property of the returned task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="unmanagedMemoryStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.UnmanagedMemoryStream</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60bab-334">A byte value written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-334">A byte value written to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60bab-335">Writes a byte to the current position in the file stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-335">Writes a byte to the current position in the file stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60bab-336">下列程式碼範例示範如何讀取和寫入 unmanaged 的記憶體使用<xref:System.IO.UnmanagedMemoryStream>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-336">The following code example demonstrates how to read from and write to unmanaged memory using the <xref:System.IO.UnmanagedMemoryStream> class.</span></span> <span data-ttu-id="60bab-337">配置和解除配置使用的 unmanaged 記憶體區塊<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="60bab-337">A block of unmanaged memory is allocated and de-allocated using the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="60bab-338">在此範例中，<xref:System.IO.UnmanagedMemoryStream>物件傳遞至方法，這個方法會檢查<xref:System.IO.UnmanagedMemoryStream.CanWrite%2A>屬性，然後再嘗試將資料寫入資料流。</span><span class="sxs-lookup"><span data-stu-id="60bab-338">In this example, an <xref:System.IO.UnmanagedMemoryStream> object is passed to a method which checks the <xref:System.IO.UnmanagedMemoryStream.CanWrite%2A> property before attempting to write the data to the stream.</span></span>  
  
 [!code-csharp[System.IO.UnmanagedMemoryStream_Example#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.UnmanagedMemoryStream_Example/cs/program.cs#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60bab-339">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-339">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="60bab-340">The underlying memory does not support writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-340">The underlying memory does not support writing.</span>
          </span>
          <span data-ttu-id="60bab-341">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-341">\- or -  An attempt is made to write to the stream and the <see cref="P:System.IO.UnmanagedMemoryStream.CanWrite" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60bab-342">\- or -  The current position is at the end of the capacity of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-342">\- or -  The current position is at the end of the capacity of the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="60bab-343">The supplied <paramref name="value" /> causes the stream exceed its maximum capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60bab-343">The supplied <paramref name="value" /> causes the stream exceed its maximum capacity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>