<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileInfo.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e511612781980353b1d0ee39752729ee05251c79.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e511612781980353b1d0ee39752729ee05251c79</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects.</source>
          <target state="translated">提供建立、複製、刪除、移動和開啟檔案的屬性和執行個體方法，並協助建立 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>一般作業，例如複製、 移動、 重新命名、 建立、 開啟、 刪除和附加至檔案的類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>If you are performing multiple operations on the same file, it can be more efficient to use <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> instance methods instead of the corresponding static methods of the <ph id="ph2">&lt;xref:System.IO.File&gt;</ph> class, because a security check will not always be necessary.</source>
          <target state="translated">如果您正在執行多個作業相同的檔案，它可以使用更有效率<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>執行個體方法，而不是對應靜態方法<ph id="ph2">&lt;xref:System.IO.File&gt;</ph>類別，因為安全性檢查不一定是必要的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Many of the <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> methods return other I/O types when you create or open files.</source>
          <target state="translated">許多<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>方法會傳回其他 I/O 類型，當您建立或開啟檔案。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>You can use these other types to further manipulate a file.</source>
          <target state="translated">您可以使用這些其他型別來進一步操作檔案。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>For more information, see specific <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> members such as <ph id="ph2">&lt;xref:System.IO.FileInfo.Open%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileInfo.OpenRead%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileInfo.OpenText%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileInfo.CreateText%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.IO.FileInfo.Create%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱特定<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>這類成員<ph id="ph2">&lt;xref:System.IO.FileInfo.Open%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.FileInfo.OpenRead%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.IO.FileInfo.OpenText%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.IO.FileInfo.CreateText%2A&gt;</ph>，或<ph id="ph6">&lt;xref:System.IO.FileInfo.Create%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>By default, full read/write access to new files is granted to all users.</source>
          <target state="translated">根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The following table describes the enumerations that are used to customize the behavior of various <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> methods.</source>
          <target state="translated">下表描述用於自訂的各種行為的列舉型別<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Enumeration</source>
          <target state="translated">列舉</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Specifies read and write access to a file.</source>
          <target state="translated">指定讀取和寫入檔案的存取權。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Specifies the level of access permitted for a file that is already in use.</source>
          <target state="translated">指定允許已在使用檔案的存取層級。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.</source>
          <target state="translated">指定是否保留或覆寫現有檔案的內容和要求以建立現有的檔案是否造成例外狀況。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>In members that accept a path as an input string, that path must be well-formed or an exception is raised.</source>
          <target state="translated">在接受的路徑做為輸入字串的成員，該路徑必須是格式正確，或例外狀況。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</source>
          <target state="translated">比方說，如果路徑是完整的但以空格開頭，路徑不被修剪中類別的方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Therefore, the path is malformed and an exception is raised.</source>
          <target state="translated">因此，路徑的格式不正確，而且會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Similarly, a path or a combination of paths cannot be fully qualified twice.</source>
          <target state="translated">同樣地，路徑的組合不被完整的兩倍。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>For example, "c:\temp c:\windows" also raises an exception in most cases.</source>
          <target state="translated">例如，"c:\temp c:\windows 」 也會引發例外狀況在大部分情況下。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
          <target state="translated">請確定您的路徑是語式正確的當您使用接受路徑字串的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>In members that accept a path, the path can refer to a file or just a directory.</source>
          <target state="translated">接受路徑的成員，在路徑可以參考到檔案或只是目錄。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</source>
          <target state="translated">指定的路徑也可以參考相對路徑或通用命名慣例 (UNC) 路徑的伺服器和共用的名稱。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>For example, all the following are acceptable paths:</source>
          <target state="translated">例如，下列所有條件都是可接受的路徑：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt 」 以 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir 」 以 C# 或 Visual Basic 中的"c:\MyDir"。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
          <target state="translated">「 MyDir<ph id="ph1">\\</ph>\MySubdir 」 以 C# 或 Visual Basic 中的"MyDir\MySubDir"。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
          <target state="translated">「<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare 」 在 C# 中，或 「<ph id="ph5">\\</ph>\MyServer\MyShare 「 在 Visual Basic 中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> class provides the following properties that enable you to retrieve information about a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>類別提供下列屬性可讓您擷取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>For an example of how to use each property, see the property pages.</source>
          <target state="translated">如需如何使用每個屬性的範例，請參閱屬性頁。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property retrieves an object that represents the parent directory of a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph>屬性擷取物件，代表檔案的上層目錄。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property retrieves the full path of the parent directory of a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph>屬性擷取檔案的父目錄的完整路徑。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property checks for the presence of a file before operating on it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph>屬性檢查檔案是否存在，才能進行運算。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property retrieves or sets a value that specifies whether a file can be modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph>屬性擷取或設定值，這個值會指定是否可以修改檔案。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> retrieves the size of a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph>擷取檔案的大小。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Name%2A&gt;</ph> retrieves the name of a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Name%2A&gt;</ph>擷取檔案的名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>The following example demonstrates some of the main members of the <ph id="ph1">`FileInfo`</ph> class.</source>
          <target state="translated">下列範例示範一些主要成員<ph id="ph1">`FileInfo`</ph>類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>When the properties are first retrieved, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> method and caches information about the file.</source>
          <target state="translated">當第一次擷取屬性時，<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>方法和快取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
          <target state="translated">在後續呼叫中，您必須呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>取得資訊的最新的複本。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>This example produces output similar to the following.</source>
          <target state="translated">這個範例會產生類似下列的輸出。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The fully qualified name of the new file, or the relative file name.</source>
          <target state="translated">新檔案的完整名稱，或者相對的檔名。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>Do not end the path with the directory separator character.</source>
          <target state="translated">不要以目錄分隔符號字元做為路徑的結尾。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> class, which acts as a wrapper for a file path.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 類別的新執行個體，以做為檔案路徑的包裝函式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.</source>
          <target state="translated">您可以指定完整或相對的檔名，但安全性檢查會取得完整限定的名稱。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.</source>
          <target state="translated">下列範例會使用這個建構函式，建立兩個檔案，然後再寫入、 讀取、 複製，並且刪除。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The following example opens an existing file or creates a file, appends text to the file, and displays the results.</source>
          <target state="translated">下例會開啟現有的檔案或建立檔案，將文字附加至檔案，並顯示結果。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The file name is empty, contains only white spaces, or contains invalid characters.</source>
          <target state="translated">此檔案名稱是空的，只包含空格或包含無效字元。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>Access to <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is denied.</source>
          <target state="translated">存取 <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 遭拒。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在以 Windows 為基礎的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> contains a colon (:) in the middle of the string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 在字串的中間包含一個冒號 (:)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>for reading files.</source>
          <target state="translated">讀取檔案。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.AppendText">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> that appends text to the file represented by this instance of the <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated">建立將文字附加在 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> 的這個執行個體所表示之檔案的 <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.AppendText">
          <source>A new <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>The following example appends text to a file and reads from the file.</source>
          <target state="translated">下列範例會將文字附加至檔案，並從檔案讀取。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console.</source>
          <target state="translated">下列範例示範如何將文字附加至檔案結尾，並也顯示到主控台的 新增作業的結果。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>The first time this routine is called, the file is created if it does not exist.</source>
          <target state="translated">第一次呼叫此常式時，如果不存在，會建立檔案。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>After that, the specified text is appended to the file.</source>
          <target state="translated">在這之後，指定的文字會附加至檔案。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>for reading and appending to files.</source>
          <target state="translated">用於讀取和附加至檔案。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.AppendText">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>Copies an existing file to a new file.</source>
          <target state="translated">複製現有的檔案到新的檔案。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The name of the new file to copy to.</source>
          <target state="translated">要複製的目標新檔案名稱。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>Copies an existing file to a new file, disallowing the overwriting of an existing file.</source>
          <target state="translated">複製現有的檔案到新的檔案，不允許覆寫現有的檔案。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>A new file with a fully qualified path.</source>
          <target state="translated">有完整路徑的新檔案。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to allow overwriting of an existing file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph>方法，以允許覆寫現有的檔案。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</source>
          <target state="translated">您應該盡可能避免使用短檔名 （例如 XXXXXX~1.XXX) 使用此方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</source>
          <target state="translated">如果兩個檔案有對等項目簡短檔案名稱，則這個方法可能會失敗並引發例外狀況和/或導致非預期的行為</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The following example demonstrates both overloads of the <ph id="ph1">`CopyTo`</ph> method.</source>
          <target state="translated">下列範例會示範這兩個多載<ph id="ph1">`CopyTo`</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.</source>
          <target state="translated">下列範例會示範將一個檔案複製到另一個檔案，如果目的地檔案已經存在，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 是空的、只包含空格或包含無效字元。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>An error occurs, or the destination file already exists.</source>
          <target state="translated">發生錯誤，或者目的檔案已經存在。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>A directory path is passed in, or the file is being moved to a different drive.</source>
          <target state="translated">傳入目錄路徑，或者檔案正要移至不同的磁碟機。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 中指定的目錄不存在。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在以 Windows 為基礎的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> contains a colon (:) within the string but does not specify the volume.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 的字串包含冒號 (:)，但是未指定磁碟區。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The name of the new file to copy to.</source>
          <target state="translated">要複製的目標新檔案名稱。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to allow an existing file to be overwritten; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若允許覆寫現有檔案，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>Copies an existing file to a new file, allowing the overwriting of an existing file.</source>
          <target state="translated">複製現有的檔案到新檔案，允許覆寫現有的檔案。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>A new file, or an overwrite of an existing file if <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">新檔案，或現有檔案的覆寫 (如果 <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>If the file exists and <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>, an <ph id="ph3">&lt;see cref="T:System.IO.IOException" /&gt;</ph> is thrown.</source>
          <target state="translated">如果檔案存在而且 <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，則會擲回 <ph id="ph3">&lt;see cref="T:System.IO.IOException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>Use this method to allow or prevent overwriting of an existing file.</source>
          <target state="translated">使用此方法以允許或防止覆寫現有的檔案。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to prevent overwriting of an existing file by default.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph>以避免覆寫現有檔案的預設方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</source>
          <target state="translated">您應該盡可能避免使用短檔名 （例如 XXXXXX~1.XXX) 使用此方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</source>
          <target state="translated">如果兩個檔案有對等項目簡短檔案名稱，則這個方法可能會失敗並引發例外狀況和/或導致非預期的行為</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The following example demonstrates both overloads of the <ph id="ph1">`CopyTo`</ph> method.</source>
          <target state="translated">下列範例會示範這兩個多載<ph id="ph1">`CopyTo`</ph>方法。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.</source>
          <target state="translated">下列範例會示範將一個檔案複製到另一個檔案，並指定是否要覆寫已存在的檔案。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 是空的、只包含空格或包含無效字元。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>An error occurs, or the destination file already exists and <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">發生錯誤，或者目的檔案已經存在，而且 <ph id="ph1">&lt;paramref name="overwrite" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 中指定的目錄不存在。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>A directory path is passed in, or the file is being moved to a different drive.</source>
          <target state="translated">傳入了目錄路徑，或者檔案正要移至不同的磁碟機。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在以 Windows 為基礎的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> contains a colon (:) in the middle of the string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 在字串的中間包含一個冒號 (:)。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Create">
          <source>Creates a file.</source>
          <target state="translated">建立檔案。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Create">
          <source>A new file.</source>
          <target state="translated">新檔案。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>By default, full read/write access to new files is granted to all users.</source>
          <target state="translated">根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>This method is a wrapper for the functionality provided by <ph id="ph1">&lt;xref:System.IO.File.Create%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法是提供的功能的包裝函式<ph id="ph1">&lt;xref:System.IO.File.Create%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>The following example creates a reference to a file, and then creates the file on disk using <ph id="ph1">`FileInfo.Create()`</ph>.</source>
          <target state="translated">下列範例會建立參考到檔案，並接著會建立使用磁碟上的檔案<ph id="ph1">`FileInfo.Create()`</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>The following example creates a file, adds some text to it, and reads from the file.</source>
          <target state="translated">下列範例會建立一個檔案、 加入一些文字，並從檔案讀取。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Create">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CreateText">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> that writes a new text file.</source>
          <target state="translated">建立寫入新文字檔的 <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CreateText">
          <source>A new <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see langword="StreamWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CreateText">
          <source>By default, full read/write access to new files is granted to all users.</source>
          <target state="translated">根據預設，所有使用者已授都與至新的檔案的完整讀取/寫入存取。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CreateText">
          <source>The following example demonstrates the <ph id="ph1">`CreateText`</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">`CreateText`</ph>方法。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CreateText">
          <source>The file name is a directory.</source>
          <target state="translated">檔案名稱為目錄。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CreateText">
          <source>The disk is read-only.</source>
          <target state="translated">磁碟是唯讀的。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.CreateText">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CreateText">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.CreateText">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>Decrypts a file that was encrypted by the current account using the <ph id="ph1">&lt;see cref="M:System.IO.FileInfo.Encrypt" /&gt;</ph> method.</source>
          <target state="translated">解密目前帳戶使用 <ph id="ph1">&lt;see cref="M:System.IO.FileInfo.Encrypt" /&gt;</ph> 方法加密的檔案。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method allows you to decrypt a file that was encrypted using the <ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法可讓您將使用加密檔案解密<ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method can decrypt only files that were encrypted using the current user account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法可以解密使用目前的使用者帳戶已加密的檔案。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>Both the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</source>
          <target state="translated">這兩個<ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法使用的電腦上安裝並呼叫方法的程序的檔案加密金鑰的密碼編譯服務提供者 (CSP)。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</source>
          <target state="translated">目前的檔案系統必須格式化為 NTFS，且目前的作業系統必須 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method to encrypt and then decrypt a file.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>來加密和解密的檔案，然後的方法。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>An invalid drive was specified.</source>
          <target state="translated">指定的磁碟機無效。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object could not be found.</source>
          <target state="translated">找不到目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">開啟檔案時發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>The file system is not NTFS.</source>
          <target state="translated">檔案系統不是 NTFS。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object is read-only.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案是唯讀的。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">這個作業在目前平台不受支援。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Decrypt">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>Security action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Decrypt">
          <source>For permission to read and write to the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">用於讀取和寫入至目前所描述之檔案的使用權限<ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>Permanently deletes a file.</source>
          <target state="translated">永遠地刪除檔案。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Delete">
          <source>If the file does not exist, this method does nothing.</source>
          <target state="translated">如果檔案不存在，這個方法沒有任何作用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Delete">
          <source>The following example demonstrates the <ph id="ph1">`Delete`</ph> method.</source>
          <target state="translated">下列範例會示範<ph id="ph1">`Delete`</ph>方法。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Delete">
          <source>The following example creates, closes, and deletes a file.</source>
          <target state="translated">下列範例會建立、 關閉，並刪除檔案。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>The target file is open or memory-mapped on a computer running Microsoft Windows NT.</source>
          <target state="translated">目標檔案已開啟，或電腦上的記憶體對應正在執行 Microsoft Windows NT。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>There is an open handle on the file, and the operating system is Windows XP or earlier.</source>
          <target state="translated">檔案上有開啟的控制代碼，而且作業系統是 Windows XP 或之前的版本。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>This open handle can result from enumerating directories and files.</source>
          <target state="translated">這個開啟的控制代碼可能是列舉目錄和檔案所產生的結果。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何：列舉目錄和檔案<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Delete">
          <source>The path is a directory.</source>
          <target state="translated">路徑為目錄。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Delete">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Delete">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Directory">
          <source>Gets an instance of the parent directory.</source>
          <target state="translated">取得父代 (Parent) 目錄的執行個體。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Directory">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object representing the parent directory of this file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>物件，代表這個檔案的父代目錄。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Directory">
          <source>To get the parent directory as a string, use the <ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property.</source>
          <target state="translated">若要取得以字串形式的父目錄，請使用<ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Directory">
          <source>The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.</source>
          <target state="translated">下列範例開啟或建立檔案，判斷其完整路徑，並決定並顯示目錄的完整內容。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Directory">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Directory">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Directory">
          <source>for reading files.</source>
          <target state="translated">讀取檔案。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Directory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.DirectoryName">
          <source>Gets a string representing the directory's full path.</source>
          <target state="translated">取得表示目錄完整路徑的字串。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>A string representing the directory's full path.</source>
          <target state="translated">字串，表示目錄的完整路徑。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>To get the parent directory as a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property.</source>
          <target state="translated">若要取得的父目錄<ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>物件，請使用<ph id="ph2">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
          <target state="translated">第一次呼叫時，<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>和快取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
          <target state="translated">在後續呼叫中，您必須呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>取得資訊的最新的複本。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>The following example retrieves the full path of the specified file.</source>
          <target state="translated">下列範例會擷取指定檔案的完整路徑。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.DirectoryName">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> was passed in for the directory name.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 為此目錄名稱傳入。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.DirectoryName">
          <source>The fully qualified path is 260 or more characters.</source>
          <target state="translated">完整的路徑為 260 或多個字元。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.DirectoryName">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>for reading files.</source>
          <target state="translated">讀取檔案。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.DirectoryName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>Encrypts a file so that only the account used to encrypt the file can decrypt it.</source>
          <target state="translated">加密檔案，只有使用加密檔案的帳戶才能將其解密。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method allows you to encrypt a file so that only the account used to call this method can decrypt it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法可讓您加密檔案，以便只有呼叫這個方法所使用的帳戶才能將其解密。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method to decrypt a file encrypted by the <ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法來解密加密的檔案<ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>Both the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</source>
          <target state="translated">這兩個<ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法使用的電腦上安裝並呼叫方法的程序的檔案加密金鑰的密碼編譯服務提供者 (CSP)。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</source>
          <target state="translated">目前的檔案系統必須格式化為 NTFS，且目前的作業系統必須 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method to encrypt a file and then decrypt it.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph>方法來加密檔案，然後加以解密。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>An invalid drive was specified.</source>
          <target state="translated">指定的磁碟機無效。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object could not be found.</source>
          <target state="translated">找不到目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">開啟檔案時發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>The file system is not NTFS.</source>
          <target state="translated">檔案系統不是 NTFS。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object is read-only.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案是唯讀的。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">這個作業在目前平台不受支援。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Encrypt">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>Security action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Encrypt">
          <source>For permission to read and write to the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">用於讀取和寫入至目前所描述之檔案的使用權限<ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Exists">
          <source>Gets a value indicating whether a file exists.</source>
          <target state="translated">取得值，這個值指出檔案是否存在。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the file exists; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the file does not exist or if the file is a directory.</source>
          <target state="translated">如果檔案存在，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果檔案不存在或者檔案是目錄，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
          <target state="translated">第一次呼叫時，<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>和快取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
          <target state="translated">在後續呼叫中，您必須呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>取得資訊的最新的複本。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph>屬性會傳回<ph id="ph2">`false`</ph>如果發生任何錯誤時嘗試判斷指定的檔案是否存在。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
          <target state="translated">可能發生這種情況下，會引發例外狀況，例如傳遞檔名無效的字元或太多的字元，失敗或遺失的磁碟，或如果呼叫端沒有讀取檔案的權限。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property ensure a file exists before opening it.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph>屬性確保檔案存在，然後再開啟它。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Exists">
          <source>You can use this technique to throw a custom exception when the file is not found.</source>
          <target state="translated">找不到檔案時所擲回自訂例外狀況，您可以使用這項技術。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件會封裝目前 <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案之存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> methods to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法來擷取存取控制清單 (ACL) 項目目前的檔案。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件會封裝目前 <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案之存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the access control rules for the current file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件會封裝目前檔案的存取控制規則。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法來擷取目前的檔案之存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何：新增或移除存取控制清單項目<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method to add and then remove an access control list (ACL) entry from a file.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法加入和從檔案中移除存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>You must supply a valid user or group account to run this example.</source>
          <target state="translated">您必須提供有效的使用者或群組帳戶，才能執行這個範例。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">開啟檔案時發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows 2000 (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>The current system account does not have administrative privileges.</source>
          <target state="translated">目前的系統帳戶沒有系統管理權限。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>The file could not be found.</source>
          <target state="translated">找不到檔案。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">這個作業在目前平台不受支援。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>Security action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl">
          <source>For permission to read the access control list.</source>
          <target state="translated">若要讀取的存取控制清單的權限。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> values that specifies which group of access control entries to retrieve.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 值，指定要擷取的存取控制項目群組。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件會封裝目前 <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案之指定類型的存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that encapsulates the access control rules for the current file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件會封裝目前檔案的存取控制規則。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法來擷取目前的檔案之存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何：新增或移除存取控制清單項目<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">開啟檔案時發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows 2000 (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The current system account does not have administrative privileges.</source>
          <target state="translated">目前的系統帳戶沒有系統管理權限。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The file could not be found.</source>
          <target state="translated">找不到檔案。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">這個作業在目前平台不受支援。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Security action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>For permission to read the access control list.</source>
          <target state="translated">若要讀取的存取控制清單的權限。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>Gets or sets a value that determines if the current file is read only.</source>
          <target state="translated">取得或設定值，判斷目前檔案是否為唯讀。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current file is read only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前檔案為唯讀，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to quickly determine or change whether the current file is read only.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph>快速判斷或變更是否目前檔案為唯讀屬性。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
          <target state="translated">第一次呼叫時，<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>和快取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
          <target state="translated">在後續呼叫中，您必須呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>取得資訊的最新的複本。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to mark a file as read only and then mark it as read-write.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph>檔案標示為唯讀，並將它標示為讀寫屬性。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object could not be found.</source>
          <target state="translated">找不到目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">開啟檔案時發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">這個作業在目前平台不受支援。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>The user does not have write permission, but attempted to set this property to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">使用者沒有寫入權限，卻嘗試將這個屬性設定為<ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.FileSystemRights.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>Security action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.IsReadOnly">
          <source>For permission to read and write to the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">用於讀取和寫入至目前所描述之檔案的使用權限<ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Length">
          <source>Gets the size, in bytes, of the current file.</source>
          <target state="translated">取得目前檔案的大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Length">
          <source>The size of the current file in bytes.</source>
          <target state="translated">目前檔案的大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Length">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> property is pre-cached if the current instance of the <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object was returned from any of the following <ph id="ph3">&lt;xref:System.IO.DirectoryInfo&gt;</ph> methods:</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph>預先快取，如果屬性為目前的執行個體<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>物件已從下列任何一個傳回<ph id="ph3">&lt;xref:System.IO.DirectoryInfo&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Length">
          <source>To get the latest value, call the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> method.</source>
          <target state="translated">若要取得最新的值，呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Length">
          <source>The following example displays the size of the specified files.</source>
          <target state="translated">下列範例會顯示指定檔案的大小。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Length">
          <source><ph id="ph1">&lt;see cref="M:System.IO.FileSystemInfo.Refresh" /&gt;</ph> cannot update the state of the file or directory.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.FileSystemInfo.Refresh" /&gt;</ph> 不能更新檔案或目錄的狀態。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Length">
          <source>The file does not exist.</source>
          <target state="translated">檔案不存在。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Length">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Length">
          <source>The <ph id="ph1">&lt;see langword="Length" /&gt;</ph> property is called for a directory.</source>
          <target state="translated">呼叫目錄的 <ph id="ph1">&lt;see langword="Length" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The path to move the file to, which can specify a different file name.</source>
          <target state="translated">要將檔案移至的路徑，可以指定不同的檔名。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>Moves a specified file to a new location, providing the option to specify a new file name.</source>
          <target state="translated">移動指定的檔案至新的位置，提供指定新檔名的選項。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>This method works across disk volumes.</source>
          <target state="translated">這個方法適用於跨磁碟區。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</source>
          <target state="translated">例如，檔案 c:\MyFile.txt 可以移至 d:\public 和重新命名 NewFile.txt。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The following example demonstrates moving a file to a different location and renaming the file.</source>
          <target state="translated">下列範例會示範將檔案移至不同的位置，以及重新命名檔案。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>An I/O error occurs, such as the destination file already exists or the destination device is not ready.</source>
          <target state="translated">發生 I/O 錯誤，例如目的檔案已經存在，或目的地裝置未就緒。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 是空的、只包含空格或包含無效字元。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> is read-only or is a directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 是唯讀的或者是目錄。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The file is not found.</source>
          <target state="translated">找不到此檔案。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">例如，在以 Windows 為基礎的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> contains a colon (:) in the middle of the string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 在字串的中間包含一個冒號 (:)。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.MoveTo(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.IO.FileInfo.Name">
          <source>Gets the name of the file.</source>
          <target state="translated">取得檔案的名稱。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Name">
          <source>The name of the file.</source>
          <target state="translated">檔案的檔名。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Name">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
          <target state="translated">第一次呼叫時，<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>和快取檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Name">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
          <target state="translated">在後續呼叫中，您必須呼叫<ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph>取得資訊的最新的複本。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Name">
          <source>The name of the file includes the file extension.</source>
          <target state="translated">檔案名稱包含副檔名。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.FileInfo.Name">
          <source>The following example uses the <ph id="ph1">`Name`</ph> property to display the names of files in the current directory.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Name`</ph>屬性目前的目錄中顯示的檔案名稱。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>Opens a file with various read/write and sharing privileges.</source>
          <target state="translated">使用各種讀取/寫入和共用權限來開啟檔案。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> constant specifying the mode (for example, <ph id="ph2">&lt;see langword="Open" /&gt;</ph> or <ph id="ph3">&lt;see langword="Append" /&gt;</ph>) in which to open the file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 常數，指定用於開啟檔案的模式 (例如，<ph id="ph2">&lt;see langword="Open" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Append" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>Opens a file in the specified mode.</source>
          <target state="translated">使用指定模式來開啟檔案。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>A file opened in the specified mode, with read/write access and unshared.</source>
          <target state="translated">以指定模式開啟的檔案，其使用讀取/寫入存取且為不共用。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>The following example opens a file, adds some information to the file, and reads the file.</source>
          <target state="translated">下列範例會開啟檔案、 將某些資訊加入至檔案，和讀取檔案。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>The file is not found.</source>
          <target state="translated">找不到此檔案。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>The file is read-only or is a directory.</source>
          <target state="translated">檔案是唯讀的或為目錄。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>The file is already open.</source>
          <target state="translated">檔案已經開啟。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>for writing to and reading from files.</source>
          <target state="translated">用於寫入和讀取檔案。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> constant specifying the mode (for example, <ph id="ph2">&lt;see langword="Open" /&gt;</ph> or <ph id="ph3">&lt;see langword="Append" /&gt;</ph>) in which to open the file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 常數，指定用於開啟檔案的模式 (例如，<ph id="ph2">&lt;see langword="Open" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Append" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> constant specifying whether to open the file with <ph id="ph2">&lt;see langword="Read" /&gt;</ph>, <ph id="ph3">&lt;see langword="Write" /&gt;</ph>, or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> file access.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 常數，指定是否以 <ph id="ph2">&lt;see langword="Read" /&gt;</ph>、<ph id="ph3">&lt;see langword="Write" /&gt;</ph> 或 <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> 檔案存取來開啟檔案。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>Opens a file in the specified mode with read, write, or read/write access.</source>
          <target state="translated">使用讀取、寫入或讀取/寫入存取，並以指定模式來開啟檔案。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object opened in the specified mode and access, and unshared.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 物件，開啟於指定模式和存取中，且為不共用。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>The following example opens a file as read-only and reads from the file.</source>
          <target state="translated">下列範例會開啟為唯讀檔案，並從檔案讀取。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>The file is not found.</source>
          <target state="translated">找不到此檔案。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is a directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是唯讀的或者是目錄。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>The file is already open.</source>
          <target state="translated">檔案已經開啟。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>for writing to and reading from files.</source>
          <target state="translated">用於寫入和讀取檔案。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> constant specifying the mode (for example, <ph id="ph2">&lt;see langword="Open" /&gt;</ph> or <ph id="ph3">&lt;see langword="Append" /&gt;</ph>) in which to open the file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 常數，指定用於開啟檔案的模式 (例如，<ph id="ph2">&lt;see langword="Open" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Append" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> constant specifying whether to open the file with <ph id="ph2">&lt;see langword="Read" /&gt;</ph>, <ph id="ph3">&lt;see langword="Write" /&gt;</ph>, or <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> file access.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 常數，指定是否以 <ph id="ph2">&lt;see langword="Read" /&gt;</ph>、<ph id="ph3">&lt;see langword="Write" /&gt;</ph> 或 <ph id="ph4">&lt;see langword="ReadWrite" /&gt;</ph> 檔案存取來開啟檔案。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> constant specifying the type of access other <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> objects have to this file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> 常數，指定其他 <ph id="ph2">&lt;see langword="FileStream" /&gt;</ph> 物件對這個檔案的存取類型。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</source>
          <target state="translated">使用讀取、寫入或讀取/寫入存取和指定的共用選項，將檔案開啟於指定模式中。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object opened with the specified mode, access, and sharing options.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 物件，以指定的模式、存取和共用選項開啟。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.</source>
          <target state="translated">下列範例示範如何開啟檔案進行讀取和寫入，但不允許其他使用者或處理程序的存取權。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file is not found.</source>
          <target state="translated">找不到此檔案。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is a directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是唯讀的或者是目錄。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file is already open.</source>
          <target state="translated">檔案已經開啟。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>for writing to and reading from files.</source>
          <target state="translated">用於寫入和讀取檔案。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>和 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenRead">
          <source>Creates a read-only <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</source>
          <target state="translated">建立唯讀的 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenRead">
          <source>A new read-only <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated">新的唯讀 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenRead">
          <source>This method returns a read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object with the <ph id="ph2">&lt;xref:System.IO.FileShare&gt;</ph> mode set to <ph id="ph3">&lt;xref:System.IO.FileShare.Read&gt;</ph>.</source>
          <target state="translated">這個方法會傳回唯讀<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>物件<ph id="ph2">&lt;xref:System.IO.FileShare&gt;</ph>模式設為<ph id="ph3">&lt;xref:System.IO.FileShare.Read&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenRead">
          <source>The following example opens a file as read-only and reads from it.</source>
          <target state="translated">下列範例會開啟為唯讀檔案，並從它讀取。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenRead">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is a directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是唯讀的或者是目錄。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenRead">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenRead">
          <source>The file is already open.</source>
          <target state="translated">檔案已經開啟。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenRead">
          <source>for reading files.</source>
          <target state="translated">讀取檔案。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenRead">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> with UTF8 encoding that reads from an existing text file.</source>
          <target state="translated">建立從現有文字檔讀取的 <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> (具有 UTF8 編碼方式)。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source>A new <ph id="ph1">&lt;see langword="StreamReader" /&gt;</ph> with UTF8 encoding.</source>
          <target state="translated">具有 UTF8 編碼方式的新 <ph id="ph1">&lt;see langword="StreamReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenText">
          <source>The following example reads text from a file.</source>
          <target state="translated">下列範例會從檔案讀取文字。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼叫端沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source>The file is not found.</source>
          <target state="translated">找不到此檔案。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is a directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 是唯讀的或者是目錄。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenText">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">指定的路徑無效，例如位於未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenText">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenText">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenWrite">
          <source>Creates a write-only <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</source>
          <target state="translated">建立唯寫的 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenWrite">
          <source>A write-only unshared <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object for a new or existing file.</source>
          <target state="translated">新檔案或現有檔案的唯寫非共用 <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.OpenWrite%2A&gt;</ph> method opens a file if one already exists for the file path, or creates a new file if one does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.OpenWrite%2A&gt;</ph>方法開啟的檔案，其中一個已存在的檔案路徑，或如果不存在的話，會建立新的檔案。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>For an existing file, it does not append the new text to the existing text.</source>
          <target state="translated">現有的檔案，它不會將新的文字附加至現有的文字。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>Instead, it overwrites the existing characters with the new characters.</source>
          <target state="translated">相反地，它會覆寫現有的字元與新的字元。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>If you overwrite a longer string (such as "This is a test of the OpenWrite method") with a shorter string (like "Second run"), the file will contain a mix of the strings ("Second runtest of the OpenWrite method").</source>
          <target state="translated">如果您覆寫較長的字串 （例如，"This is OpenWrite 方法的測試)"使用較短的字串 （例如 [第二個執行]），檔案會包含字串的混合 (「 第二個 runtest OpenWrite 方法的")。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>The following example opens a file for writing and then reads from the file.</source>
          <target state="translated">下列範例會開啟檔案進行寫入，並接著從檔案讀取。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenWrite">
          <source>The path specified when creating an instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object is read-only or is a directory.</source>
          <target state="translated">在建立 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件的執行個體時所指定的路徑唯讀的或是目錄。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.OpenWrite">
          <source>The path specified when creating an instance of the <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object is invalid, such as being on an unmapped drive.</source>
          <target state="translated">在建立 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件的執行個體時所指定的路徑無效，例如位在未對應的磁碟機上。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.OpenWrite">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="T:System.IO.FileInfo">
          <source>Replaces the contents of a specified file with the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.</source>
          <target state="translated">以目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案，取代指定檔案的內容、刪除原始檔案，並建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> methods when you need to quickly replace a file with the contents of the file described by the current <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph>時您需要快速更換檔案目前所描述之檔案的內容，方法<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The name of a file to replace with the current file.</source>
          <target state="translated">要使用目前檔案取代之檔案的名稱。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The name of a file with which to create a backup of the file described by the <bpt id="p1">&lt;c&gt;</bpt>destFileName<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">建立 <bpt id="p1">&lt;c&gt;</bpt>destFileName<ept id="p1">&lt;/c&gt;</ept> 參數所描述的檔案備份時，所使用之檔案的名稱。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Replaces the contents of a specified file with the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.</source>
          <target state="translated">以目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案，取代指定檔案的內容、刪除原始檔案，並建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object that encapsulates information about the file described by the <ph id="ph2">&lt;paramref name="destFileName" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件，該物件封裝 <ph id="ph2">&lt;paramref name="destFileName" /&gt;</ph> 參數所描述之檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph>方法會使用目前所描述之檔案的內容取代指定檔案的內容<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>It also creates a backup of the file that was replaced.</source>
          <target state="translated">它也會建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Finally, it returns a new <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.</source>
          <target state="translated">最後，它會傳回新<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>描述覆寫的檔案的物件。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>This method will succeed in Windows 2000 environments if the <ph id="ph1">`destFileName`</ph> is read-only and will not raise an exception.</source>
          <target state="translated">如果這個方法會成功在 Windows 2000 環境<ph id="ph1">`destFileName`</ph>處於唯讀狀態，並將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph>屬性來檢查目的地檔案然後再嘗試要取代它是否為唯讀。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Pass <ph id="ph1">`null`</ph> to the <ph id="ph2">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.</source>
          <target state="translated">傳遞<ph id="ph1">`null`</ph>至<ph id="ph2">`destBackupFileName`</ph>參數，如果您不想建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.File.Replace%2A&gt;</ph> method to replace a file with another file and create a backup of the replaced file.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.IO.File.Replace%2A&gt;</ph>方法來取代檔案與另一個檔案，並建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The path described by the <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> parameter was not of a legal form.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 參數所描述的路徑格式不合法。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The path described by the <ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> parameter was not of a legal form.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> 參數所描述的路徑格式不合法。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object could not be found.</source>
          <target state="translated">找不到目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The file described by the <ph id="ph1">&lt;paramref name="destinationFileName" /&gt;</ph> parameter could not be found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="destinationFileName" /&gt;</ph> 參數所描述的檔案。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>Security Action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String)">
          <source>For permission to write to file described by the <ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> parameter if one is specified.</source>
          <target state="translated">要寫入的權限所描述檔案<ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph>如果指定的參數。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The name of a file to replace with the current file.</source>
          <target state="translated">要使用目前檔案取代之檔案的名稱。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The name of a file with which to create a backup of the file described by the <bpt id="p1">&lt;c&gt;</bpt>destFileName<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">建立 <bpt id="p1">&lt;c&gt;</bpt>destFileName<ept id="p1">&lt;/c&gt;</ept> 參數所描述的檔案備份時，所使用之檔案的名稱。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示忽略發生在已取代檔案和取代檔案上的合併錯誤 (例如屬性和 ACL)，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Replaces the contents of a specified file with the file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.</source>
          <target state="translated">以目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案，取代指定檔案的內容、刪除原始檔案，並建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Also specifies whether to ignore merge errors.</source>
          <target state="translated">該方法還指定是否忽略合併錯誤。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object that encapsulates information about the file described by the <ph id="ph2">&lt;paramref name="destFileName" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件，該物件封裝 <ph id="ph2">&lt;paramref name="destFileName" /&gt;</ph> 參數所描述之檔案的相關資訊。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph>方法會使用目前所描述之檔案的內容取代指定檔案的內容<ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>It also creates a backup of the file that was replaced.</source>
          <target state="translated">它也會建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Finally, it returns a new <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.</source>
          <target state="translated">最後，它會傳回新<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>描述覆寫的檔案的物件。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>This method will succeed in Windows 2000 environments if the <ph id="ph1">`destFileName`</ph> is read-only and will not raise an exception.</source>
          <target state="translated">如果這個方法會成功在 Windows 2000 環境<ph id="ph1">`destFileName`</ph>處於唯讀狀態，並將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph>屬性來檢查目的地檔案然後再嘗試要取代它是否為唯讀。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Pass <ph id="ph1">`null`</ph> to the <ph id="ph2">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.</source>
          <target state="translated">傳遞<ph id="ph1">`null`</ph>至<ph id="ph2">`destBackupFileName`</ph>參數，如果您不想建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.File.Replace%2A&gt;</ph> method to replace a file with another file and create a backup of the replaced file.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.IO.File.Replace%2A&gt;</ph>方法來取代檔案與另一個檔案，並建立已取代檔案的備份。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The path described by the <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> parameter was not of a legal form.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 參數所描述的路徑格式不合法。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The path described by the <ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> parameter was not of a legal form.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> 參數所描述的路徑格式不合法。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destFileName" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The file described by the current <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object could not be found.</source>
          <target state="translated">找不到目前 <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The file described by the <ph id="ph1">&lt;paramref name="destinationFileName" /&gt;</ph> parameter could not be found.</source>
          <target state="translated">找不到 <ph id="ph1">&lt;paramref name="destinationFileName" /&gt;</ph> 參數所描述的檔案。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows NT 或更新版本。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>Security Action: Demand.</source>
          <target state="translated">安全性動作： 需求。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
          <source>For permission to write to file described by the <ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph> parameter if one is specified.</source>
          <target state="translated">要寫入的權限所描述檔案<ph id="ph1">&lt;paramref name="destBackupFileName" /&gt;</ph>如果指定的參數。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object that describes an access control list (ACL) entry to apply to the current file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件，該物件描述要套用至目前檔案的存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> object to the file described by the current <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> object.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.FileSecurity" /&gt;</ph> 物件所描述的存取控制清單 (ACL) 項目套用至目前 <ph id="ph2">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 物件所描述的檔案。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法適用於代表 noninherited 的 ACL 清單的目前檔案的存取控制清單 (ACL) 項目。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method whenever you need to add or remove ACL entries from a file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法，每當您需要新增或移除檔案的 ACL 項目。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The ACL specified for the <ph id="ph1">`fileSecurity`</ph> parameter replaces the existing ACL for the file.</source>
          <target state="translated">指定 ACL<ph id="ph1">`fileSecurity`</ph>參數已取代現有檔案的 ACL。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, modify it, and then use <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> to apply it back to the file.</source>
          <target state="translated">若要加入之新使用者的權限，請使用<ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph>方法來取得現有的 ACL，修改它，然後使用<ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>套用回到檔案。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">ACL 描述個人及/或群組，讓他們已經有或沒有，在指定的檔案上採取特定動作的權限。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>如何：新增或移除存取控制清單項目<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> objects that have been modified after object creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法仍然只存在<ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>物件建立後已修改的物件。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>不修改物件，不會保存至檔案。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
          <target state="translated">因此，不可以擷取<ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>物件從一個檔案，並重新套用到另一個檔案的相同物件。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>To copy ACL information from one file to another:</source>
          <target state="translated">若要將 ACL 資訊從一個檔案複製到另一個：</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from the source file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法來擷取<ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>從原始程式檔的物件。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object for the destination file.</source>
          <target state="translated">建立新<ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>目的地檔案的物件。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to retrieve the ACL information.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph>來源方法<ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>擷取 ACL 資訊的物件。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph>方法可複製的資訊擷取到目的地的步驟 3 中<ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">設定目的地<ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph>物件到目的地檔案時使用<ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method to add and then remove an ACL entry from a file.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph>方法加入和從檔案中移除的 ACL 項目。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>You must supply a valid user or group account to run this example.</source>
          <target state="translated">您必須提供有效的使用者或群組帳戶，才能執行這個範例。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The <ph id="ph1">&lt;paramref name="fileSecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileSecurity" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The file could not be found or modified.</source>
          <target state="translated">找不到或無法修改檔案。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">目前的處理序不具有開啟檔案的存取權。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">目前的作業系統不是 Microsoft Windows 2000 (含) 以後版本。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.Change" /&gt;</ph></source>
          <target state="translated">列舉型別相關聯： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.Change" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>Security Action: Demand</source>
          <target state="translated">安全性動作： 需求</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
          <source>For permission to access the file.</source>
          <target state="translated">用於存取檔案的使用權限。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.ToString">
          <source>Returns the path as a string.</source>
          <target state="translated">將路徑當做字串傳回。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.IO.FileInfo.ToString">
          <source>A string representing the path.</source>
          <target state="translated">表示路徑的字串。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.ToString">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method represents path that was passed to the constructor.</source>
          <target state="translated">所傳回的字串<ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph>方法表示已傳遞給建構函式的路徑。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.ToString">
          <source>When you create a <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object using the constructors, the <ph id="ph2">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method returns the fully qualified path.</source>
          <target state="translated">當您建立<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>物件使用建構函式，<ph id="ph2">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph>方法會傳回完整的路徑。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.ToString">
          <source>However, there are cases where the string returned by the <ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.</source>
          <target state="translated">不過，有些情況所傳回的字串是<ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph>方法不是完整的路徑。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.FileInfo.ToString">
          <source>For example, when you create a <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object using the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.</source>
          <target state="translated">例如，當您建立<ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>方法，<ph id="ph3">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph>方法不是完整的路徑。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>