<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextWriter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac537db43c3bb762501a2a8726c80dee4afa2a84a6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37db43c3bb762501a2a8726c80dee4afa2a84a6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Represents a writer that can write a sequential series of characters.</source>
          <target state="translated">代表可以寫入一連串連續字元的寫入器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>This class is abstract.</source>
          <target state="translated">這個類別是抽象的。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is the abstract base class of <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>, which write characters to streams and strings, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 是抽象基底類別<ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>，這將字元寫入到資料流和字串，分別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write an object to a string, write strings to a file, or to serialize XML.</source>
          <target state="translated">建立的執行個體<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>寫入字串的物件，將字串寫入至檔案，或將 XML 序列化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>You can also use an instance of <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</source>
          <target state="translated">您也可以使用的執行個體<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>以將文字寫入至自訂的備份存放區使用相同的 Api，您會使用字串或資料流，或是將文字格式的支援。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>All the <ph id="ph1">`Write`</ph> methods of <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> having primitive data types as parameters write out the values as strings.</source>
          <target state="translated">所有<ph id="ph1">`Write`</ph>方法<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>具有基本資料型別，如參數寫出做為字串值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> is not thread safe.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>See <ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph> for a thread-safe wrapper.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType&gt;</ph>安全執行緒的包裝函式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用衍生自這個型別的任何類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱 Dispose 和中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> and provides implementations of the members for writing to a stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph>類別衍生自<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>，並提供成員的實作寫入資料流。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>The following example shows how to write two lines that consist of string values to a text file by using the <ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何撰寫使用包含字串值，以文字檔案的兩個線條<ph id="ph1">&lt;xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>Override Dispose in a derived class to provide</source>
          <target state="translated">提供衍生類別中覆寫 Dispose</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.TextWriter">
          <source>A derived class must minimally implement the <ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph> method to make a useful instance of <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">在衍生的類別必須至少實作<ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Write(System.Char)" /&gt;</ph>方法以進行實用的執行個體的<ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor overload when you do not want to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">當您不想提供的值，請使用這個建構函式多載<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性是<ph id="ph2">`null`</ph>，目前執行緒的文化特性進行格式化。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>Use this constructor for derived classes.</source>
          <target state="translated">在衍生類別中使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that controls formatting.</source>
          <target state="translated">控制格式設定的 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> class with the specified format provider.</source>
          <target state="translated">使用指定的格式提供者，初始化 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>Use this constructor overload to provide a value for the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property.</source>
          <target state="translated">使用這個建構函式多載提供值給<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性會指定可在您呼叫的特定文化特性的格式設定<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果您不想要提供的格式提供者，您會建立執行個體使用<ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph>建構函式，設定<ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性是<ph id="ph2">`null`</ph>，目前執行緒的文化特性進行格式化。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Close">
          <source>Closes the current writer and releases any system resources associated with the writer.</source>
          <target state="translated">關閉目前寫入器並釋放任何與寫入器相關聯的系統資源。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method and passes it a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">這項實作<ph id="ph1">`Close`</ph>呼叫<ph id="ph2">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法並將其傳遞<ph id="ph3">`true`</ph>值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> or <ph id="ph2">`Close`</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph>或<ph id="ph2">`Close`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Setting the <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType&gt;</ph>屬性<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中編碼某些字元才編碼器接收或多個相鄰的字元。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>In derived classes, do not override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">在衍生類別中，不會覆寫<ph id="ph1">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Close">
          <source>Instead, override the <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method to add code for releasing resources.</source>
          <target state="translated">相反地，覆寫<ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>方法，將程式碼，以便釋放資源。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>Stores the newline characters used for this <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">儲存這個 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> 所使用的新行字元。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.CoreNewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">釋放由 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件使用的所有資源。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">釋放由 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件使用的所有資源。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Always call <ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>請注意<ept id="p1">**</ept>永遠呼叫<ph id="ph1">&lt;xref:System.IO.TextWriter.Dispose%2A&gt;</ph>您釋放最後一個參考之前<ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method is called by <ph id="ph1">`Dispose`</ph> and <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">`Dispose`</ph>和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>By default, this method specifies the <ph id="ph1">`disposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">根據預設，這個方法會指定<ph id="ph1">`disposing`</ph>參數做為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id="ph2">`disposing`</ph> parameter as <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 指定<ph id="ph2">`disposing`</ph>參數做為<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫這個方法，小心不要參考物件已處置過的早期呼叫中<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about how to implement this method, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需如何實作這個方法的詳細資訊，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.Encoding">
          <source>When overridden in a derived class, returns the character encoding in which the output is written.</source>
          <target state="translated">當在衍生類別中覆寫該屬性時，傳回用於寫入輸出的字元編碼。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>The character encoding in which the output is written.</source>
          <target state="translated">寫入輸出時使用的字元編碼。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">`TextWriter`</ph>.</source>
          <target state="translated">這個屬性是必要的標頭必須寫入其中所包含的編碼方式使用某些 XML 案例<ph id="ph1">`TextWriter`</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>This enables the XML code to consume an arbitrary <ph id="ph1">`TextWriter`</ph> and generate the correct XML header.</source>
          <target state="translated">這可讓取用任意的 XML 程式碼<ph id="ph1">`TextWriter`</ph>並產生正確的 XML 標頭。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.Encoding">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Flush">
          <source>Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">清除目前寫入器的所有緩衝區，並造成任何緩衝資料都寫入基礎裝置。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">這個預設方法沒有作用，但在衍生的類別可以覆寫方法以提供適當的功能。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">`Flush`</ph>或<ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">以非同步的方式清除目前寫入器的所有緩衝區，並造成任何緩衝資料都寫入基礎裝置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示非同步排清作業的工作。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.FlushAsync">
          <source>The writer is currently in use by a previous write operation.</source>
          <target state="translated">寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.FormatProvider">
          <source>Gets an object that controls formatting.</source>
          <target state="translated">取得控制格式設定的物件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object for a specific culture, or the formatting of the current culture if no other culture is specified.</source>
          <target state="translated">特定文化特性的 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 物件，或者目前文化特性的格式 (如果未指定其他文化特性)。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property specifies the culture-specific formatting that is used when you call the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性會指定可在您呼叫的特定文化特性的格式設定<ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>If you do not want to provide a format provider, you create an instance by using the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph> constructor, which sets the <ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果您不想要提供的格式提供者，您會建立執行個體使用<ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor&gt;</ph>建構函式，設定<ph id="ph2">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>, the culture of the current thread is used for formatting.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性包含<ph id="ph2">`null`</ph>，目前執行緒的文化特性進行格式化。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">如需建立檔案，並將文字寫入至檔案的範例，請參閱<bpt id="p1">[</bpt>How to： 將文字寫入至檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">從檔案讀取文字的範例，請參閱<bpt id="p1">[</bpt>How to： 從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">如需讀取和寫入二進位檔案的範例，請參閱<bpt id="p1">[</bpt>如何： 讀取和寫入至新建立資料檔<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.FormatProvider">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.IO.TextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> 所使用的行結束字元字串。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string for the current <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> 的行結束字元字串。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>The line terminator string is written to the text stream whenever one of the <ph id="ph1">`WriteLine`</ph> methods is called.</source>
          <target state="translated">每一次的文字資料流寫入行結束字元字串的<ph id="ph1">`WriteLine`</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>In order for text written by the <ph id="ph1">`TextWriter`</ph> to be readable by a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, only "\n" or "\r\n" should be used as terminator strings.</source>
          <target state="translated">為了讓文字由寫入<ph id="ph1">`TextWriter`</ph>至可供讀取<ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>，只有"\n"或"\r\n"應該做為結束字元字串。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>If <ph id="ph1">`NewLine`</ph> is set to <ph id="ph2">`null`</ph>, the default newline character is used instead.</source>
          <target state="translated">如果<ph id="ph1">`NewLine`</ph>設<ph id="ph2">`null`</ph>，改為使用預設的新行字元。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.TextWriter.NewLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="F:System.IO.TextWriter.Null">
          <source>Provides a <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> with no backing store that can be written to, but not read from.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>，但不包含可寫入但無法讀取的備份存放區。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>Use <ph id="ph1">`Null`</ph> to redirect output to a stream that will not consume any operating system resources.</source>
          <target state="translated">使用<ph id="ph1">`Null`</ph>將輸出重新導向不會耗用任何作業系統資源的資料流。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>When the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph> methods are invoked on <ph id="ph2">`Null`</ph>, the call simply returns, and no data is actually written to any backing store.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>會叫用<ph id="ph2">`Null`</ph>、 呼叫只會傳回，而不實際寫入資料到任何支援的存放區。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.TextWriter.Null">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> to synchronize.</source>
          <target state="translated">要同步處理的 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>Creates a thread-safe wrapper around the specified <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph>.</source>
          <target state="translated">在指定的 <ph id="ph1">&lt;see langword="TextWriter" /&gt;</ph> 內建立安全執行緒的包裝函式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>A thread-safe wrapper.</source>
          <target state="translated">安全執行緒的包裝函式。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>All write operations to the returned wrapper will be thread safe.</source>
          <target state="translated">所有寫入作業傳回的包裝函式將會是安全執行緒。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>You call this method to ensure that only one thread at a time can execute the methods on the <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> instance that is returned.</source>
          <target state="translated">呼叫此方法，以確保在上一次只有一個執行緒可以執行方法<ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>傳回的執行個體。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For more information about synchronization and threading, see <bpt id="p1">[</bpt>Synchronizing Data for Multithreading<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>.</source>
          <target state="translated">如需有關同步處理和執行緒處理的詳細資訊，請參閱<bpt id="p1">[</bpt>同步處理資料的<ept id="p1">](~/docs/standard/threading/synchronizing-data-for-multithreading.md)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to a text string or stream.</source>
          <target state="translated">將資料寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">要寫入的 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to the text string or stream.</source>
          <target state="translated">將 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值的文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法會輸出其中<ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>Writes a character to the text string or stream.</source>
          <target state="translated">將字元寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</source>
          <target state="translated">這個預設方法沒有作用，但在衍生的類別可以覆寫方法以提供適當的功能。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元陣列。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>Writes a character array to the text string or stream.</source>
          <target state="translated">將字元陣列寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>This default method calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method and passes the entire character array.</source>
          <target state="translated">這個預設方法會呼叫<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>方法並傳遞整個字元陣列。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, nothing is written.</source>
          <target state="translated">如果字元陣列是<ph id="ph1">`null`</ph>，不寫入任何資料。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">要寫入的十進位值。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>Writes the text representation of a decimal value to the text string or stream.</source>
          <target state="translated">將十進位值的文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">要寫入的 8 位元組浮點數值。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>Writes the text representation of an 8-byte floating-point value to the text string or stream.</source>
          <target state="translated">將 8 位元組浮點數值的文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">要寫入之 4 位元組帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer to the text string or stream.</source>
          <target state="translated">將 4 位元組帶正負號的整數之文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">要寫入之 8 位元組帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer to the text string or stream.</source>
          <target state="translated">將 8 位元組帶正負號的整數之文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The object to write.</source>
          <target state="translated">要寫入的物件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the text string or stream by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object.</source>
          <target state="translated">呼叫該物件的 <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> 方法，將物件的文字表示寫入至文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph> overload.</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>If the specified object is <ph id="ph1">`null`</ph>, no action is taken and no exception is thrown.</source>
          <target state="translated">如果指定的物件<ph id="ph1">`null`</ph>會採取任何動作，會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>Otherwise, the object's <ph id="ph1">`ToString`</ph> method is called to produce the string representation, and the resulting string is then written to the output stream.</source>
          <target state="translated">否則，此物件的<ph id="ph1">`ToString`</ph>方法呼叫產生的字串表示，而且產生的字串寫入至輸出資料流。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">要寫入的 4 位元組浮點數值。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value to the text string or stream.</source>
          <target state="translated">將 4 位元組浮點數值的文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The string to write.</source>
          <target state="translated">要寫入的字串。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>Writes a string to the text string or stream.</source>
          <target state="translated">將字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, nothing is written to the text stream.</source>
          <target state="translated">如果 <ph id="ph1">`value`</ph> 為 <ph id="ph2">`null`</ph>，不寫入任何字串到文字資料流。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">要寫入之 4 位元組不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer to the text string or stream.</source>
          <target state="translated">將 4 位元組不帶正負號的整數之文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">要寫入之 8 位元組不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer to the text string or stream.</source>
          <target state="translated">將 8 位元組不帶正負號的整數之文字表示寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">要格式化及寫入的物件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> 方法相同的語意，將格式化字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">因為這個多載具有單一物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律為 0。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>.</source>
          <target state="translated">。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">格式項目的索引小於 0 (零)，或大於或等於要格式化的物件數目 (就這個方法多載而言，是一個)。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">物件陣列，包含零或多個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> 方法相同的語意，將格式化字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">因為這個多載具有陣列，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>永遠必須小於陣列的長度。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="arg" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">格式項目的索引小於 0 (零)，或者大於或等於 <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> 陣列的長度。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">資料寫入來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">緩衝區中要開始擷取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要寫入的字元數。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream.</source>
          <target state="translated">將字元的子陣列寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">此方法將寫入<ph id="ph1">`count`</ph>字元的資料到這個<ph id="ph2">`TextWriter`</ph>從<ph id="ph3">`buffer`</ph>位置開始的字元陣列<ph id="ph4">`index`</ph>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload for each character in <ph id="ph2">`buffer`</ph> between <ph id="ph3">`index`</ph> and (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>).</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph>多載的每個字元<ph id="ph2">`buffer`</ph>之間<ph id="ph3">`index`</ph>和 (<ph id="ph4">`index`</ph><ph id="ph5"> + </ph><ph id="ph6">`count`</ph>)。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">緩衝區長度減去 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">第一個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">第二個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> 方法相同的語意，將格式化字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">因為這個多載有兩個物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律是 0 或 1。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">格式項目的索引小於 0 (零) 或大於或等於要格式化的物件數目 (就這個方法多載而言，是兩個)。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">第一個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">第二個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">第三個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Writes a formatted string to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /&gt;</ph> 方法相同的語意，將格式化字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">因為這個多載具有三個物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律是 0、 1 或 2。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法不會搜尋指定的字串，個別的新行字元 (十六進位的 0x000a)，將其取代為<ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">格式項目的索引小於 0 (零)，或大於或等於要格式化的物件數目 (就這個方法多載而言，是三個)。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data to the text string or stream asynchronously.</source>
          <target state="translated">以非同步方式將資料寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Writes a character to the text string or stream asynchronously.</source>
          <target state="translated">以非同步方式將字元寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元陣列。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written.</source>
          <target state="translated">如果「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>是<ph id="ph1">&lt;see langword="null" /&gt;</ph>，則不寫入任何資料。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>Writes a character array to the text string or stream asynchronously.</source>
          <target state="translated">以非同步方式將字元陣列寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">要寫入的字串。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written to the text stream.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則不寫入任何字串到文字資料流。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Writes a string to the text string or stream asynchronously.</source>
          <target state="translated">以非同步方式將字串寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">資料寫入來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">緩衝區中要開始擷取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要寫入的字元數。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the text string or stream asynchronously.</source>
          <target state="translated">以非同步方式將字元的子陣列寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大於緩衝區的長度。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator to the text string or stream.</source>
          <target state="translated">將資料 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>Writes a line terminator to the text string or stream.</source>
          <target state="translated">將行結束字元寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value to write.</source>
          <target state="translated">要寫入的 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>Writes the text representation of a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 值的文字表示，並加上行結束字元寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>This method outputs either <ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法會輸出其中<ph id="ph1">&lt;xref:System.Boolean.TrueString?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Boolean.FalseString?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Boolean)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>Writes a character followed by a line terminator to the text string or stream.</source>
          <target state="translated">將一個字元 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%29&gt;</ph>後面<ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The character array from which data is read.</source>
          <target state="translated">資料讀取來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>Writes an array of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">將一個字元 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>All the characters in <ph id="ph1">`buffer`</ph> are written to the underlying stream.</source>
          <target state="translated">中的所有字元<ph id="ph1">`buffer`</ph>會寫入至基礎資料流。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>If the character array is <ph id="ph1">`null`</ph>, only the line terminator is written.</source>
          <target state="translated">如果字元陣列是 <ph id="ph1">`null`</ph>，則只有行結束字元會被寫入。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>This overload is equivalent to <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph> .</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph>後面<ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[])">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The decimal value to write.</source>
          <target state="translated">要寫入的十進位值。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</source>
          <target state="translated">將十進位值的文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Decimal)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The 8-byte floating-point value to write.</source>
          <target state="translated">要寫入的 8 位元組浮點數值。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 8 位元組浮點數值的文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Double)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The 4-byte signed integer to write.</source>
          <target state="translated">要寫入之 4 位元組帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 4 位元組帶正負號的整數之文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The 8-byte signed integer to write.</source>
          <target state="translated">要寫入之 8 位元組帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 8 位元組帶正負號的整數之文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Int64)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The object to write.</source>
          <target state="translated">要寫入的物件。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，只寫入行結束字元。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>Writes the text representation of an object by calling the <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> method on that object, followed by a line terminator to the text string or stream.</source>
          <target state="translated">透過呼叫該物件上的 <ph id="ph1">&lt;see langword="ToString" /&gt;</ph> 方法，將該物件的文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph> overload.</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The 4-byte floating-point value to write.</source>
          <target state="translated">要寫入的 4 位元組浮點數值。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 4 位元組浮點數值的文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Single)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The string to write.</source>
          <target state="translated">要寫入的字串。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，只寫入行結束字元。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>Writes a string followed by a line terminator to the text string or stream.</source>
          <target state="translated">將字串 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This overload is equivalent to the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> overload.</source>
          <target state="translated">這個多載就相當於<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write.</source>
          <target state="translated">要寫入之 4 位元組不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 4 位元組不帶正負號的整數之文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The 8-byte unsigned integer to write.</source>
          <target state="translated">要寫入之 8 位元組不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</source>
          <target state="translated">將 8 位元組不帶正負號的整數之文字表示加上行結束字元，寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The text representation of the specified value is produced by calling the <ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">指定值的文字表示為所產生的呼叫<ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph> property, if not <ph id="ph2">`null`</ph>, specifies the culture-specific formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter.FormatProvider%2A&gt;</ph>屬性，如果不是<ph id="ph2">`null`</ph>，指定特定文化特性的格式。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.UInt64)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The object to format and write.</source>
          <target state="translated">要格式化及寫入的物件。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> 方法相同的語意，將格式化字串和新行寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Because this overload has only a single object in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">因為這個多載具有單一物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律為 0。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="translated">格式項目的索引小於 0 (零)，或大於或等於要格式化的物件數目 (就這個方法多載而言，是一個)。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format and write.</source>
          <target state="translated">物件陣列，包含零或多個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> 相同的語意，寫出格式化字串和新行。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Because this overload has an array in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be less than the length of the array.</source>
          <target state="translated">因為這個多載具有陣列，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>永遠必須小於陣列的長度。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>A string or object is passed in as <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">傳入的字串或物件為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> array.</source>
          <target state="translated">格式項目的索引小於 0 (零)，或者大於或等於 <ph id="ph1">&lt;paramref name="arg" /&gt;</ph> 陣列的長度。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which data is read.</source>
          <target state="translated">資料讀取來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to start reading data.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中要開始讀取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要寫入的最大字元數。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator to the text string or stream.</source>
          <target state="translated">將字元子陣列 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This method will write <ph id="ph1">`count`</ph> characters of data into this <ph id="ph2">`TextWriter`</ph> from the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">此方法將寫入<ph id="ph1">`count`</ph>字元的資料到這個<ph id="ph2">`TextWriter`</ph>從<ph id="ph3">`buffer`</ph>位置開始的字元陣列<ph id="ph4">`index`</ph>。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph> method followed by <ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> for each character in <ph id="ph3">`buffer`</ph> between <ph id="ph4">`index`</ph> and (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>).</source>
          <target state="translated">這個多載就相當於呼叫<ph id="ph1">&lt;xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29&gt;</ph>後面接著方法<ph id="ph2">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>的每個字元<ph id="ph3">`buffer`</ph>之間<ph id="ph4">`index`</ph>和 (<ph id="ph5">`index`</ph><ph id="ph6"> + </ph><ph id="ph7">`count`</ph>)。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">緩衝區長度減去 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">第一個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">第二個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes a formatted string and a new line to the text string or stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> 方法相同的語意，將格式化字串和新行寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Because this overload has two objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0 or 1.</source>
          <target state="translated">因為這個多載有兩個物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律是 0 或 1。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="translated">格式項目的索引小於 0 (零)，或大於或等於要格式化的物件數目 (就這個方法多載而言，是兩個)。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">複合格式字串。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format and write.</source>
          <target state="translated">第一個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format and write.</source>
          <target state="translated">第二個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format and write.</source>
          <target state="translated">第三個要格式化和寫入的物件。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Writes out a formatted string and a new line, using the same semantics as <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>.</source>
          <target state="translated">使用與 <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> 相同的語意，寫出格式化字串和新行。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</source>
          <target state="translated">這個方法會使用複合格式化物件的值轉換為其字串表示，以及該表示嵌入字串。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about date and time format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">如需有關日期和時間格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期和時間格式字串<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂日期和時間格式字串<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about enumeration format specifiers, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">如需列舉格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需格式的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數是由零個或多個文字執行混合零或多個索引的預留位置，稱為對應格式項目，這個方法的參數清單中的物件。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the value of the corresponding object.</source>
          <target state="translated">格式化的程序會將每個格式項目取代對應之物件的值的字串表示。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">格式項目的語法如下所示：</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">方括號中的項目是選擇性的。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For more information about the composite formatting feature, including the syntax of a format item, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">如需有關複合格式功能，包括語法的格式項目，請參閱<bpt id="p1">[</bpt>複合格式化<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>index</source>
          <target state="translated">索引</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">參數清單中要格式化之物件的以零為起始位置。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果所指定的物件<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>是<ph id="ph1">`null`</ph>，格式項目都會取代<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Because this overload has three objects in its parameter list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0, 1, or 2.</source>
          <target state="translated">因為這個多載具有三個物件，其參數中列出，值<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>必須一律是 0、 1 或 2。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">如果在沒有參數<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>位置<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>長度<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">在參數的字串表示的字元數目下限。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">如果是正數，參數是靠右對齊。如果是負數，它是靠左對齊。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the object to be formatted.</source>
          <target state="translated">標準或自訂格式字串格式化的物件所支援。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>Possible values for <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> are the same as the values supported by the object's <ph id="ph1">`ToString(string format)`</ph> method.</source>
          <target state="translated">可能值<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>支援的物件的值相同<ph id="ph1">`ToString(string format)`</ph>方法。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified and the object to be formatted implements the <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface, <ph id="ph2">`null`</ph> is passed as the value of the <ph id="ph3">`format`</ph> parameter that is used as the <ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph> format string.</source>
          <target state="translated">如果<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>未指定，並要格式化的物件會實作<ph id="ph1">&lt;xref:System.IFormattable&gt;</ph>介面，<ph id="ph2">`null`</ph>傳遞的值為<ph id="ph3">`format`</ph>參數做為<ph id="ph4">&lt;xref:System.IFormattable.ToString%2A?displayProperty=nameWithType&gt;</ph>格式字串。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The leading and trailing brace characters, "{" and "}", are required.</source>
          <target state="translated">前置和尾端大括號字元，"{"和"}"，所需。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>To specify a single literal brace character in <ph id="ph1">`format`</ph>, specify two leading or trailing brace characters; that is, "{{" or "}}".</source>
          <target state="translated">若要指定在單一常值的大括號字元<ph id="ph1">`format`</ph>、 指定兩個前置或尾端大括號字元; 也就是"{{"或"}}"。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph>.</source>
          <target state="translated">這個方法不會在指定的字串中搜尋個別的新行字元 (十六進位的 0x000a)，也不會以 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A&gt;</ph> 取代它們。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>If a specified object is not referenced in the format string, it is ignored.</source>
          <target state="translated">如果格式字串中不會參考指定的物件，則會忽略它。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">如需的一般 I/O 工作清單，請參閱<bpt id="p1">[</bpt>一般 I/O 工作<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 已關閉。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid composite format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的複合格式字串。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="translated">格式項目的索引小於 0 (零)，或大於或等於要格式化的物件數目 (就這個方法多載而言，是三個)。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="T:System.IO.TextWriter">
          <source>Writes data followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將資料 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>Writes a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將行結束字元寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將一個字元 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The character array to write to the text stream.</source>
          <target state="translated">要寫入到文字資料流的字元陣列。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>If the character array is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only the line terminator is written.</source>
          <target state="translated">如果字元陣列是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則只有行結束字元會被寫入。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將字元子陣列 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">要寫入的字串。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">如果值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則只會寫入行結束字元。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將字串 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.String)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">資料寫入來源的字元陣列。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character position in the buffer at which to start retrieving data.</source>
          <target state="translated">緩衝區中要開始擷取資料的字元位置。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要寫入的字元數。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="translated">以非同步方式將字元子陣列 (其後加上行結束字元) 寫入到文字字串或資料流。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> field.</source>
          <target state="translated">行結束字元是由 <ph id="ph1">&lt;xref:System.IO.TextWriter.CoreNewLine&gt;</ph> 欄位所定義。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> class is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 類別是抽象類別。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Therefore, you do not instantiate it in your code.</source>
          <target state="translated">因此，您的程式碼中不必將它執行個體化。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>For an example of using the <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph> method, see the <ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需使用<ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLineAsync%2A&gt;</ph>方法，請參閱<ph id="ph2">&lt;xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 加上 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 大於緩衝區的長度。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is disposed.</source>
          <target state="translated">文字寫入器已處置。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The text writer is currently in use by a previous write operation.</source>
          <target state="translated">文字寫入器目前由先前寫入作業所使用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>