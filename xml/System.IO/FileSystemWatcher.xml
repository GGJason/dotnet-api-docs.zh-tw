<Type Name="FileSystemWatcher" FullName="System.IO.FileSystemWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9ac0c5d96c95a9574125fb22b9322bd986f8986" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39983517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileSystemWatcher : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystemWatcher extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemWatcher&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemWatcher : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type FileSystemWatcher = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("Changed")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.IO.IODescription("")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.IO.IODescription("FileSystemWatcherDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3aacd-101">當目錄或目錄內的檔案變更時，接聽 (Listen) 檔案系統變更通知並引發事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3aacd-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-102">使用<xref:System.IO.FileSystemWatcher>監看的指定目錄中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-102">Use <xref:System.IO.FileSystemWatcher> to watch for changes in a specified directory.</span></span> <span data-ttu-id="3aacd-103">您可以監看的檔案和指定之目錄的子目錄中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-103">You can watch for changes in files and subdirectories of the specified directory.</span></span> <span data-ttu-id="3aacd-104">您可以建立要監看檔案的本機電腦、 網路磁碟機或遠端電腦上的元件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-104">You can create a component to watch files on a local computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="3aacd-105">若要觀看的所有檔案中的變更，請設定<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為空字串 ("") 或使用萬用字元 ("*。\*")。</span><span class="sxs-lookup"><span data-stu-id="3aacd-105">To watch for changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("") or use wildcards ("*.\*").</span></span> <span data-ttu-id="3aacd-106">若要觀看的特定檔案，設定<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-106">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="3aacd-107">例如，若要觀看 MyDoc.txt 檔案中的變更，請設定<xref:System.IO.FileSystemWatcher.Filter%2A>"MyDoc.txt"的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-107">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="3aacd-108">您也可以觀看某種類型的檔案中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-108">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="3aacd-109">例如，若要監看的文字檔案中的變更，將<xref:System.IO.FileSystemWatcher.Filter%2A>屬性為"\*.txt"。</span><span class="sxs-lookup"><span data-stu-id="3aacd-109">For example, to watch for changes in text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span>  
  
 <span data-ttu-id="3aacd-110">有數種您可以監看目錄或檔案中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-110">There are several types of changes you can watch for in a directory or file.</span></span> <span data-ttu-id="3aacd-111">例如，您可以觀看中的變更`Attributes`，則`LastWrite`日期和時間，或`Size`的檔案或目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-111">For example, you can watch for changes in `Attributes`, the `LastWrite` date and time, or the `Size` of files or directories.</span></span> <span data-ttu-id="3aacd-112">這是藉由設定<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>屬性設為其中的<xref:System.IO.NotifyFilters>值。</span><span class="sxs-lookup"><span data-stu-id="3aacd-112">This is done by setting the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to one of the <xref:System.IO.NotifyFilters> values.</span></span> <span data-ttu-id="3aacd-113">如需詳細資訊的變更類型可以觀看，請參閱<xref:System.IO.NotifyFilters>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-113">For more information on the type of changes you can watch, see <xref:System.IO.NotifyFilters>.</span></span>  
  
 <span data-ttu-id="3aacd-114">您可以觀看的重新命名、 刪除或建立的檔案或目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-114">You can watch for renaming, deletion, or creation of files or directories.</span></span> <span data-ttu-id="3aacd-115">例如，若要觀看的文字檔案重新命名，設定<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為"\*.txt"，並呼叫<xref:System.IO.FileSystemWatcher.WaitForChanged%2A>方法<xref:System.IO.WatcherChangeTypes.Renamed>其參數所指定。</span><span class="sxs-lookup"><span data-stu-id="3aacd-115">For example, to watch for renaming of text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt" and call the <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method with a <xref:System.IO.WatcherChangeTypes.Renamed> specified for its parameter.</span></span>  
  
 <span data-ttu-id="3aacd-116">Windows 作業系統會通知您有在緩衝區中所建立的檔案變更的元件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-116">The Windows operating system notifies your component of file changes in a buffer created by the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-117">如果在短時間內有許多變更，緩衝區會溢位。</span><span class="sxs-lookup"><span data-stu-id="3aacd-117">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="3aacd-118">這會導致遺失的目錄中，變更追蹤的元件，它只會提供地毯式通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-118">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="3aacd-119">使用緩衝區的大小增加<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性很高，因為它來自無法空出給磁碟，所以還保留較少的緩衝區的非分頁記憶體大型足以不錯過任何檔案變更的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-119">Increasing the size of the buffer with the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</span></span> <span data-ttu-id="3aacd-120">若要避免緩衝區溢位，請使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>屬性，如此您可以篩選掉不必要的變更通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-120">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties so you can filter out unwanted change notifications.</span></span>  
  
 <span data-ttu-id="3aacd-121">如需執行個體的初始屬性值的清單<xref:System.IO.FileSystemWatcher>，請參閱<xref:System.IO.FileSystemWatcher.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-121">For a list of initial property values for an instance of <xref:System.IO.FileSystemWatcher>, see the <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="3aacd-122">使用時，請注意下列<xref:System.IO.FileSystemWatcher>類別。</span><span class="sxs-lookup"><span data-stu-id="3aacd-122">Please note the following when using the <xref:System.IO.FileSystemWatcher> class.</span></span>  
  
-   <span data-ttu-id="3aacd-123">隱藏的檔案不會被忽略。</span><span class="sxs-lookup"><span data-stu-id="3aacd-123">Hidden files are not ignored.</span></span>  
  
-   <span data-ttu-id="3aacd-124">在某些系統中，<xref:System.IO.FileSystemWatcher>報告變更，使用簡短的 8.3 檔案名稱格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-124">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="3aacd-125">例如，"LongFileName.LongExtension 」 的變更無法回報為 「 LongFil ~。Lon"。</span><span class="sxs-lookup"><span data-stu-id="3aacd-125">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</span></span>  
  
-   <span data-ttu-id="3aacd-126">這個類別包含的連結要求和繼承要求套用到所有成員的類別層級。</span><span class="sxs-lookup"><span data-stu-id="3aacd-126">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="3aacd-127">A<xref:System.Security.SecurityException>立即呼叫端或衍生的類別不具有完全信任權限時，會擲回。</span><span class="sxs-lookup"><span data-stu-id="3aacd-127">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="3aacd-128">如需安全性需求的詳細資訊，請參閱[連結要求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-128">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
-   <span data-ttu-id="3aacd-129">您可以設定的大小上限<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性透過網路監視的目錄是 64 KB。</span><span class="sxs-lookup"><span data-stu-id="3aacd-129">The maximum size you can set for the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property for monitoring a directory over the network is 64 KB.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-130">執行<xref:System.IO.FileSystemWatcher>在 Windows 98 不支援。</span><span class="sxs-lookup"><span data-stu-id="3aacd-130">Running <xref:System.IO.FileSystemWatcher> on Windows 98 is not supported.</span></span>  
  
## <a name="copying-and-moving-folders"></a><span data-ttu-id="3aacd-131">複製和移動資料夾</span><span class="sxs-lookup"><span data-stu-id="3aacd-131">Copying and moving folders</span></span>  
 <span data-ttu-id="3aacd-132">作業系統和<xref:System.IO.FileSystemWatcher>物件解譯剪下和貼上動作或 move 動作的資料夾和其內容重新命名動作。</span><span class="sxs-lookup"><span data-stu-id="3aacd-132">The operating system and <xref:System.IO.FileSystemWatcher> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</span></span> <span data-ttu-id="3aacd-133">如果您剪下並將資料夾與檔案貼到正在監看資料夾<xref:System.IO.FileSystemWatcher>物件會報告為新的資料夾，但不是包括其內容因為基本上只重新命名。</span><span class="sxs-lookup"><span data-stu-id="3aacd-133">If you cut and paste a folder with files into a folder being watched, the <xref:System.IO.FileSystemWatcher> object reports only the folder as new, but not its contents because they are essentially only renamed.</span></span>  
  
 <span data-ttu-id="3aacd-134">若要收到資料夾的內容已移動或複製到監看的資料夾中，提供<xref:System.IO.FileSystemWatcher.OnChanged%2A>和<xref:System.IO.FileSystemWatcher.OnRenamed%2A>事件處理常式方法下, 表中的建議。</span><span class="sxs-lookup"><span data-stu-id="3aacd-134">To be notified that the contents of folders have been moved or copied into a watched folder, provide <xref:System.IO.FileSystemWatcher.OnChanged%2A> and <xref:System.IO.FileSystemWatcher.OnRenamed%2A> event handler methods as suggested in the following table.</span></span>  
  
|<span data-ttu-id="3aacd-135">事件處理常式</span><span class="sxs-lookup"><span data-stu-id="3aacd-135">Event Handler</span></span>|<span data-ttu-id="3aacd-136">處理的事件</span><span class="sxs-lookup"><span data-stu-id="3aacd-136">Events Handled</span></span>|<span data-ttu-id="3aacd-137">執行</span><span class="sxs-lookup"><span data-stu-id="3aacd-137">Performs</span></span>|  
|-------------------|--------------------|--------------|  
|<xref:System.IO.FileSystemWatcher.OnChanged%2A>|<span data-ttu-id="3aacd-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span><span class="sxs-lookup"><span data-stu-id="3aacd-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span></span>|<span data-ttu-id="3aacd-139">報告檔案屬性、 建立的檔案和已刪除的檔案中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-139">Report changes in file attributes, created files, and deleted files.</span></span>|  
|<xref:System.IO.FileSystemWatcher.OnRenamed%2A>|<xref:System.IO.FileSystemWatcher.Renamed>|<span data-ttu-id="3aacd-140">列出舊和新的路徑重新命名的檔案和資料夾，如有需要請展開以遞迴方式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-140">List the old and new paths of renamed files and folders, expanding recursively if needed.</span></span>|  
  
## <a name="events-and-buffer-sizes"></a><span data-ttu-id="3aacd-141">事件和緩衝區大小</span><span class="sxs-lookup"><span data-stu-id="3aacd-141">Events and Buffer Sizes</span></span>  
 <span data-ttu-id="3aacd-142">請注意，數個因素會影響哪些檔案系統變更會引發事件，如以下所述：</span><span class="sxs-lookup"><span data-stu-id="3aacd-142">Note that several factors can affect which file system change events are raised, as described by the following:</span></span>  
  
-   <span data-ttu-id="3aacd-143">常見的檔案系統作業可能會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-143">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="3aacd-144">比方說，當檔案移到另一個、 數個目錄之間<xref:System.IO.FileSystemWatcher.OnChanged%2A>和某些<xref:System.IO.FileSystemWatcher.OnCreated%2A>和<xref:System.IO.FileSystemWatcher.OnDeleted%2A>可能引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-144">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="3aacd-145">移動檔案簡單的多個作業所組成的複雜作業，因此會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-145">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="3aacd-146">同樣地，某些應用程式 （例如，防毒軟體） 可能會導致所偵測到的其他檔案系統事件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-146">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
-   <span data-ttu-id="3aacd-147"><xref:System.IO.FileSystemWatcher>可以觀看磁碟，只要它們不會切換，或移除。</span><span class="sxs-lookup"><span data-stu-id="3aacd-147">The <xref:System.IO.FileSystemWatcher> can watch disks as long as they are not switched or removed.</span></span> <span data-ttu-id="3aacd-148"><xref:System.IO.FileSystemWatcher>不會引發事件的 Cd 與 Dvd，因為時間戳記和屬性無法變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-148">The <xref:System.IO.FileSystemWatcher> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</span></span> <span data-ttu-id="3aacd-149">遠端電腦必須安裝之元件正確運作所需的平台之一。</span><span class="sxs-lookup"><span data-stu-id="3aacd-149">Remote computers must have one of the required platforms installed for the component to function properly.</span></span>  
  
-   <span data-ttu-id="3aacd-150">如果有多個<xref:System.IO.FileSystemWatcher>物件所監看 Windows XP Service Pack 1 之前相同的 UNC 路徑，或 Windows 2000 SP2 或更早版本，則只有其中一個物件，則會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-150">If multiple <xref:System.IO.FileSystemWatcher> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</span></span> <span data-ttu-id="3aacd-151">在機器上執行 Windows XP SP1 和更新版本中，Windows 2000 SP3 或更新版本或 Windows Server 2003，所有<xref:System.IO.FileSystemWatcher>物件將會引發適當的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-151">On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <xref:System.IO.FileSystemWatcher> objects will raise the appropriate events.</span></span>  
  
 <span data-ttu-id="3aacd-152">請注意，<xref:System.IO.FileSystemWatcher>可能會遺失超過緩衝區大小時的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-152">Note that a <xref:System.IO.FileSystemWatcher> may miss an event when the buffer size is exceeded.</span></span> <span data-ttu-id="3aacd-153">若要避免遺失事件，請遵循這些指導方針：</span><span class="sxs-lookup"><span data-stu-id="3aacd-153">To avoid missing events, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="3aacd-154">藉由設定增加緩衝區大小<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-154">Increase the buffer size by setting the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property.</span></span>  
  
-   <span data-ttu-id="3aacd-155">避免監看檔案具有長檔名，因為長檔名的層面得以填滿緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aacd-155">Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</span></span> <span data-ttu-id="3aacd-156">請考慮重新命名這些檔案，使用較短的名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-156">Consider renaming these files using shorter names.</span></span>  
  
-   <span data-ttu-id="3aacd-157">保留您的事件處理程式碼越短越好。</span><span class="sxs-lookup"><span data-stu-id="3aacd-157">Keep your event handling code as short as possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-158">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-158">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-159">元件會設定為監看的變更`LastWrite`和`LastAccess`時間、 建立、 刪除或重新命名的目錄中的文字檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-159">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-160">如果變更、 建立，或刪除檔案，檔案的路徑會列印至主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-160">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="3aacd-161">重新命名檔案時，新舊路徑列印到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-161">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="3aacd-162">使用<xref:System.Diagnostics>和<xref:System.IO>此範例中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-162">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="3aacd-163">針對衍生自<see cref="T:System.Diagnostics.ProcessStartInfo" />類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3aacd-163">for deriving from the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
      </span>
      <span data-ttu-id="3aacd-164">要求值： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />;具名使用權限集合： <see langword="FullTrust" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3aacd-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Named Permission Sets: <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-165">初始化 <see cref="T:System.IO.FileSystemWatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-166">初始化 <see cref="T:System.IO.FileSystemWatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-167">您無法查看遠端電腦沒有 Windows NT 或 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="3aacd-167">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="3aacd-168">您無法監看遠端的 Windows NT 4.0 電腦從 Windows NT 4.0 的電腦。</span><span class="sxs-lookup"><span data-stu-id="3aacd-168">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 <span data-ttu-id="3aacd-169">下表顯示的執行個體的初始屬性值<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-169">The following table shows initial property values for an instance of <xref:System.IO.FileSystemWatcher>.</span></span>  
  
|<span data-ttu-id="3aacd-170">屬性</span><span class="sxs-lookup"><span data-stu-id="3aacd-170">Property</span></span>|<span data-ttu-id="3aacd-171">初始值</span><span class="sxs-lookup"><span data-stu-id="3aacd-171">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>|<span data-ttu-id="3aacd-172">位元 OR 組合`LastWrite`， `FileName`，及 `DirectoryName`</span><span class="sxs-lookup"><span data-stu-id="3aacd-172">bitwise OR combination of `LastWrite`, `FileName`, and `DirectoryName`</span></span>|  
|<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.Filter%2A>|<span data-ttu-id="3aacd-173">"*.\*"（監看所有檔案。）</span><span class="sxs-lookup"><span data-stu-id="3aacd-173">"*.\*" (Watch all files.)</span></span>|  
|<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>|<span data-ttu-id="3aacd-174">8192</span><span class="sxs-lookup"><span data-stu-id="3aacd-174">8192</span></span>|  
|<xref:System.IO.FileSystemWatcher.Path%2A>|<span data-ttu-id="3aacd-175">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="3aacd-175">empty string ("")</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-176">元件將無法觀賞到指定的目錄<xref:System.IO.FileSystemWatcher.Path%2A>設定，並<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-176">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-177">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄物件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-177">The following example creates a <xref:System.IO.FileSystemWatcher> object to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-178"><xref:System.IO.FileSystemWatcher>中的變更的物件會監看`LastWrite`和`LastAccess`時間，同時建立、 刪除或重新命名的文字中的檔案目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-178">The <xref:System.IO.FileSystemWatcher> object watches for changes in `LastWrite` and `LastAccess` times, and for the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-179">如果變更、 建立，或刪除檔案，檔案的路徑會顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-179">If a file is changed, created, or deleted, the path to the file displays to the console.</span></span> <span data-ttu-id="3aacd-180">當檔案已重新命名時，則會在對主控台顯示的舊和新路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-180">When a file is renamed, the old and new paths display to the console.</span></span>  
  
 <span data-ttu-id="3aacd-181">這個範例會使用<xref:System.Diagnostics>和<xref:System.IO>命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-181">This example uses the <xref:System.Diagnostics> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3aacd-182">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-182">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3aacd-183">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-183">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3aacd-184">要監視的目錄，使用標準或通用命名慣例標記法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-185">提供要監視的指定目錄，初始化 <see cref="T:System.IO.FileSystemWatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-186">元件將無法觀賞到指定的目錄<xref:System.IO.FileSystemWatcher.Path%2A>設定，並<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-186">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="3aacd-187">元件可以監看您的個人電腦、 網路磁碟機或遠端電腦上的檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-187">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="3aacd-188">您無法查看遠端電腦沒有 Windows NT 或 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="3aacd-188">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="3aacd-189">您無法監看遠端的 Windows NT 4.0 電腦從 Windows NT 4.0 的電腦。</span><span class="sxs-lookup"><span data-stu-id="3aacd-189">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span> <span data-ttu-id="3aacd-190"><xref:System.IO.FileSystemWatcher.Filter%2A>屬性設定預設為監看所有檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-190">The <xref:System.IO.FileSystemWatcher.Filter%2A> property is set by default to watch all files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aacd-191">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-191">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aacd-192">
            <paramref name="path" /> 參數是空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-192">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="3aacd-193">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-193">-or-</span>
          </span>
          <span data-ttu-id="3aacd-194">透過 <paramref name="path" /> 參數指定的路徑不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-194">The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="3aacd-195">
            <paramref name="path" /> 太長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-195">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3aacd-196">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-196">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3aacd-197">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-197">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemWatcher : string * string -&gt; System.IO.FileSystemWatcher" Usage="new System.IO.FileSystemWatcher (path, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3aacd-198">要監視的目錄，使用標準或通用命名慣例標記法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-198">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="3aacd-199">要監看的檔案類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-199">The type of files to watch.</span>
          </span>
          <span data-ttu-id="3aacd-200">例如，"\*.txt" 監看所有文字檔的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-200">For example, "\*.txt" watches for changes to all text files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-201">提供要監視的指定目錄和檔案類型，初始化 <see cref="T:System.IO.FileSystemWatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-201">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-202">元件將無法觀賞到指定的目錄<xref:System.IO.FileSystemWatcher.Path%2A>設定，並<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-202">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="3aacd-203">元件可以監看您的個人電腦、 網路磁碟機或遠端電腦上的檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-203">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="3aacd-204">您無法查看遠端電腦沒有 Windows NT 或 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="3aacd-204">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="3aacd-205">您無法監看遠端的 Windows NT 4.0 電腦從 Windows NT 4.0 的電腦。</span><span class="sxs-lookup"><span data-stu-id="3aacd-205">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aacd-206">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-206">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3aacd-207">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-207">-or-</span>
          </span>
          <span data-ttu-id="3aacd-208">
            <paramref name="filter" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-208">The <paramref name="filter" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aacd-209">
            <paramref name="path" /> 參數是空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-209">The <paramref name="path" /> parameter is an empty string ("").</span>
          </span>
          <span data-ttu-id="3aacd-210">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-210">-or-</span>
          </span>
          <span data-ttu-id="3aacd-211">透過 <paramref name="path" /> 參數指定的路徑不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-211">The path specified through the <paramref name="path" /> parameter does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="3aacd-212">
            <paramref name="path" /> 太長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-212">
              <paramref name="path" /> is too long.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="3aacd-213">針對完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-213">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3aacd-214">這個成員無法供部分信任的程式碼使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-214">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="fileSystemWatcher.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-215">開始初始化用於表單或為另一個元件所使用的 <see cref="T:System.IO.FileSystemWatcher" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-215">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="3aacd-216">初始化發生於執行階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-216">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-217">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]設計環境會使用這個方法來啟動元件的初始化用於表單或另一個元件所使用。</span><span class="sxs-lookup"><span data-stu-id="3aacd-217">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="3aacd-218"><xref:System.IO.FileSystemWatcher.EndInit%2A>方法結束初始化。</span><span class="sxs-lookup"><span data-stu-id="3aacd-218">The <xref:System.IO.FileSystemWatcher.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="3aacd-219">使用<xref:System.IO.FileSystemWatcher.BeginInit%2A>和<xref:System.IO.FileSystemWatcher.EndInit%2A>方法，防止控制項被完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="3aacd-219">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : System.IO.FileSystemEventHandler " Usage="member this.Changed : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Occurs when a file/directory change matches the filter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Changed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-220">發生在指定之 <see cref="P:System.IO.FileSystemWatcher.Path" /> 內的檔案或目錄變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-220">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-221"><xref:System.IO.FileSystemWatcher.Changed>對大小變更時引發事件時，系統屬性、 上次寫入時間、 上次存取時間或檔案或目錄的安全性權限的受監視的目錄中。</span><span class="sxs-lookup"><span data-stu-id="3aacd-221">The <xref:System.IO.FileSystemWatcher.Changed> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-222">常見的檔案系統作業可能會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-222">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="3aacd-223">比方說，當檔案移到另一個、 數個目錄之間<xref:System.IO.FileSystemWatcher.OnChanged%2A>和某些<xref:System.IO.FileSystemWatcher.OnCreated%2A>和<xref:System.IO.FileSystemWatcher.OnDeleted%2A>可能引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-223">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="3aacd-224">移動檔案簡單的多個作業所組成的複雜作業，因此會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-224">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="3aacd-225">同樣地，某些應用程式 （例如，防毒軟體） 可能會導致所偵測到的其他檔案系統事件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-225">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 <span data-ttu-id="3aacd-226">使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>限制時處理這個事件引發的通知數目。</span><span class="sxs-lookup"><span data-stu-id="3aacd-226">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> to restrict the number of notifications raised when this event is handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-227"><xref:System.IO.FileSystemWatcher.Changed>時檔案重新命名，但不是會在重新命名目錄時所引發非預期地引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-227">The <xref:System.IO.FileSystemWatcher.Changed> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</span></span> <span data-ttu-id="3aacd-228">若要觀看重新命名，請使用<xref:System.IO.FileSystemWatcher.Renamed>事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-228">To watch for renaming, use the <xref:System.IO.FileSystemWatcher.Renamed> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-229">順序<xref:System.IO.FileSystemWatcher.Changed>就會引發事件，與其他<xref:System.IO.FileSystemWatcher>事件可能會變更時<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>屬性不是`null`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-229">The order in which the <xref:System.IO.FileSystemWatcher.Changed> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-230">下列範例會使用<xref:System.IO.FileSystemWatcher.Changed>事件，以監看的檔案變更時，對主控台顯示的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-230">The following example uses the <xref:System.IO.FileSystemWatcher.Changed> event to display the file path to the console whenever the watched file is changed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Created" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Created As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Created;" />
      <MemberSignature Language="F#" Value="member this.Created : System.IO.FileSystemEventHandler " Usage="member this.Created : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Occurs when a file/directory creation matches the filter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Created")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-231">發生在指定之 <see cref="P:System.IO.FileSystemWatcher.Path" /> 內的檔案或目錄建立時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-231">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-232">一些常見的相符項目，例如複製或移動檔案或目錄中，執行未直接對應到事件，但這些項目，並會造成要引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-232">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="3aacd-233">當您複製檔案或目錄時，系統就會引發<xref:System.IO.FileSystemWatcher.Created>要將檔案複製，如果該目錄正在監看的目錄中的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-233">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="3aacd-234">如果您複製的目錄就正在由另一個執行個體所監看<xref:System.IO.FileSystemWatcher>，就會引發任何事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-234">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="3aacd-235">例如，您會建立兩個執行個體<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-235">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-236">FileSystemWatcher1 設為觀看"C:\My Documents"，而 FileSystemWatcher2 設觀看 「 C:\Your 文件 」。</span><span class="sxs-lookup"><span data-stu-id="3aacd-236">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="3aacd-237">如果您將檔案從 「 我的文件 」 複製到 您的文件 」， <xref:System.IO.FileSystemWatcher.Created> FileSystemWatcher2，將會引發事件，但不會引發事件的 FileSystemWatcher1。</span><span class="sxs-lookup"><span data-stu-id="3aacd-237">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="3aacd-238">不同於複製、 移動檔案或目錄將會引發兩個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-238">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="3aacd-239">上述範例中，如果將檔案從 「 我的文件 」 移到 您的文件 」，從<xref:System.IO.FileSystemWatcher.Created>FileSystemWatcher2 會引發事件和<xref:System.IO.FileSystemWatcher.Deleted>FileSystemWatcher1 會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-239">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-240">常見的檔案系統作業可能會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-240">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="3aacd-241">比方說，當檔案移到另一個、 數個目錄之間<xref:System.IO.FileSystemWatcher.OnChanged%2A>和某些<xref:System.IO.FileSystemWatcher.OnCreated%2A>和<xref:System.IO.FileSystemWatcher.OnDeleted%2A>可能引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-241">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="3aacd-242">移動檔案簡單的多個作業所組成的複雜作業，因此會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-242">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="3aacd-243">同樣地，某些應用程式 （例如，防毒軟體） 可能會導致所偵測到的其他檔案系統事件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-243">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-244">順序<xref:System.IO.FileSystemWatcher.Created>就會引發事件，與其他<xref:System.IO.FileSystemWatcher>事件可能會變更時<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>屬性不是`null`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-244">The order in which the <xref:System.IO.FileSystemWatcher.Created> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
 <span data-ttu-id="3aacd-245"><xref:System.IO.FileSystemWatcher.OnCreated%2A>只要建立檔案時，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-245">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="3aacd-246">如果正在將檔案複製或傳送到監看的目錄中，<xref:System.IO.FileSystemWatcher.OnCreated%2A>事件會立即引發，後面接著一或多個<xref:System.IO.FileSystemWatcher.OnChanged%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-246">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-247">下列範例會使用<xref:System.IO.FileSystemWatcher.Created>事件，以建立監看的檔案時，對主控台顯示的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-247">The following example uses the <xref:System.IO.FileSystemWatcher.Created> event to display the file path to the console whenever the watched file is created.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.IO.FileSystemEventHandler " Usage="member this.Deleted : System.IO.FileSystemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Occurs when a file/directory deletion matches the filter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Deleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-248">發生在指定之 <see cref="P:System.IO.FileSystemWatcher.Path" /> 內的檔案或目錄刪除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-248">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-249">一些常見的相符項目，例如複製或移動檔案或目錄中，執行未直接對應到事件，但這些項目，並會造成要引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-249">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="3aacd-250">當您複製檔案或目錄時，系統就會引發<xref:System.IO.FileSystemWatcher.Created>要將檔案複製，如果該目錄正在監看的目錄中的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-250">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="3aacd-251">如果您複製的目錄就正在由另一個執行個體所監看<xref:System.IO.FileSystemWatcher>，就會引發任何事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-251">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="3aacd-252">例如，您會建立兩個執行個體<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-252">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-253">FileSystemWatcher1 設為觀看"C:\My Documents"，而 FileSystemWatcher2 設觀看 「 C:\Your 文件 」。</span><span class="sxs-lookup"><span data-stu-id="3aacd-253">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="3aacd-254">如果您將檔案從 「 我的文件 」 複製到 您的文件 」， <xref:System.IO.FileSystemWatcher.Created> FileSystemWatcher2，將會引發事件，但不會引發事件的 FileSystemWatcher1。</span><span class="sxs-lookup"><span data-stu-id="3aacd-254">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="3aacd-255">不同於複製、 移動檔案或目錄將會引發兩個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-255">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="3aacd-256">上述範例中，如果將檔案從 「 我的文件 」 移到 您的文件 」，從<xref:System.IO.FileSystemWatcher.Created>FileSystemWatcher2 會引發事件和<xref:System.IO.FileSystemWatcher.Deleted>FileSystemWatcher1 會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-256">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-257">常見的檔案系統作業可能會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-257">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="3aacd-258">比方說，當檔案移到另一個、 數個目錄之間<xref:System.IO.FileSystemWatcher.OnChanged%2A>和某些<xref:System.IO.FileSystemWatcher.OnCreated%2A>和<xref:System.IO.FileSystemWatcher.OnDeleted%2A>可能引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-258">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="3aacd-259">移動檔案簡單的多個作業所組成的複雜作業，因此會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-259">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="3aacd-260">同樣地，某些應用程式 （例如，防毒軟體） 可能會導致所偵測到的其他檔案系統事件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-260">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-261">順序<xref:System.IO.FileSystemWatcher.Deleted>就會引發事件，與其他<xref:System.IO.FileSystemWatcher>事件可能會變更時<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>屬性不是`null`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-261">The order in which the <xref:System.IO.FileSystemWatcher.Deleted> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-262">下列範例會使用<xref:System.IO.FileSystemWatcher.Deleted>事件，每當刪除監看的檔案時，對主控台顯示的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-262">The following example uses the <xref:System.IO.FileSystemWatcher.Deleted> event to display the file path to the console whenever the watched file is deleted.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="fileSystemWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileSystemWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3aacd-263">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-263">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-264">釋放 <see cref="T:System.IO.FileSystemWatcher" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-264">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-265">這個方法會呼叫公用<xref:System.ComponentModel.Component.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aacd-265">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="3aacd-266"><xref:System.ComponentModel.Component.Dispose%2A> 叫用受保護<xref:System.IO.FileSystemWatcher.Dispose%2A>方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-266"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileSystemWatcher.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3aacd-267"><xref:System.Object.Finalize%2A> 叫用<xref:System.IO.FileSystemWatcher.Dispose%2A>具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-267"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileSystemWatcher.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3aacd-268">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.IO.Compression.DeflateStream> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="3aacd-268">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="3aacd-269">這個方法會叫用每個參考物件的 <xref:System.ComponentModel.Component.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3aacd-269">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-270">
            <para>
              <see cref="M:System.ComponentModel.Component.Dispose" /> 可以多次呼叫的其他物件。當覆寫<see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />小心不要參考先前處置好的呼叫中的物件<see cref="M:System.ComponentModel.Component.Dispose" />。如需有關如何實作<see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。如需詳細資訊<see cref="M:System.ComponentModel.Component.Dispose" />並<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-270">
              <para>
                <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />. For more information about how to implement <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableRaisingEvents : bool with get, set" Usage="System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Flag to indicate if this instance is active")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Enabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-271">取得或設定數值，表示是否啟用元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-271">Gets or sets a value indicating whether the component is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-272">如果啟用元件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-272">
              <see langword="true" /> if the component is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aacd-273">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-273">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aacd-274">如果您在 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 中使用設計工具上的元件，則預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-274">If you are using the component on a designer in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-275">元件不會引發事件，除非您設定<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-275">The component will not raise events unless you set <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-276">元件將無法觀賞到指定的目錄<xref:System.IO.FileSystemWatcher.Path%2A>屬性已設定並<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-276">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> property has been set and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="3aacd-277"><xref:System.IO.FileSystemWatcher.WaitForChanged%2A>方法可讓事件處理常式被叫用來回應檔案的變更，即使這個屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-277">The <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method allows event handlers to be invoked to respond to file changes even if this property is set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-278">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-278">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-279">元件會設定為監看的變更`LastWrite`和`LastAccess`時間、 建立、 刪除或重新命名的目錄中的文字檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-279">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-280">如果變更、 建立，或刪除檔案，檔案的路徑會列印至主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-280">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="3aacd-281">重新命名檔案時，新舊路徑列印到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-281">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="3aacd-282">使用<xref:System.Diagnostics>和<xref:System.IO>此範例中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-282">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3aacd-283">
            <see cref="T:System.IO.FileSystemWatcher" /> 物件已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-283">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3aacd-284">目前的作業系統不是 Microsoft Windows NT 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-284">The current operating system is not Microsoft Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3aacd-285">找不到在 <see cref="P:System.IO.FileSystemWatcher.Path" /> 中指定的目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-285">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aacd-286">
            <see cref="P:System.IO.FileSystemWatcher.Path" /> 尚未設定或無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-286">
              <see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="fileSystemWatcher.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-287">結束初始化用於表單或為另一個元件所使用的 <see cref="T:System.IO.FileSystemWatcher" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-287">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="3aacd-288">初始化發生於執行階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-288">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-289">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]設計環境會使用這個方法最後一個元件的初始化用於表單或另一個元件所使用。</span><span class="sxs-lookup"><span data-stu-id="3aacd-289">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="3aacd-290"><xref:System.IO.FileSystemWatcher.BeginInit%2A>方法會啟動初始化。</span><span class="sxs-lookup"><span data-stu-id="3aacd-290">The <xref:System.IO.FileSystemWatcher.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="3aacd-291">使用<xref:System.IO.FileSystemWatcher.BeginInit%2A>和<xref:System.IO.FileSystemWatcher.EndInit%2A>方法，防止控制項被完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="3aacd-291">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.IO.ErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.ErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As ErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::ErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.ErrorEventHandler " Usage="member this.Error : System.IO.ErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.ErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-292">發生在 <see cref="T:System.IO.FileSystemWatcher" /> 執行個體無法繼續執行監視變更時或在內部緩衝區溢位時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-292">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-293">此事件的引發的項目可防止<xref:System.IO.FileSystemWatcher>從監視變更的物件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-293">This event is raised whenever something prevents the <xref:System.IO.FileSystemWatcher> object from monitoring changes.</span></span> <span data-ttu-id="3aacd-294">例如，如果物件正在監視遠端目錄中的變更，而且該目錄的連線都會遺失，<xref:System.IO.FileSystemWatcher.Error>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-294">For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <xref:System.IO.FileSystemWatcher.Error> event is raised.</span></span>  
  
 <span data-ttu-id="3aacd-295">系統會通知您的檔案變更，並將那些變更儲存在緩衝區中的元件會建立並傳遞至 Api。</span><span class="sxs-lookup"><span data-stu-id="3aacd-295">The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</span></span> <span data-ttu-id="3aacd-296">如果在短時間內有許多變更，緩衝區會溢位。</span><span class="sxs-lookup"><span data-stu-id="3aacd-296">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="3aacd-297">這會導致遺失的目錄中，變更追蹤的元件，它只會提供地毯式通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-297">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="3aacd-298">增加緩衝區的大小很高，因為它是來自非分頁記憶體無法空出至磁碟，因此保持越小越好的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aacd-298">Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="3aacd-299">若要避免緩衝區溢位，請使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>， <xref:System.IO.FileSystemWatcher.Filter%2A>，和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>篩選掉不必要的屬性變更通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-299">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-300">常見的檔案系統作業可能會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-300">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="3aacd-301">比方說，當檔案移到另一個、 數個目錄之間<xref:System.IO.FileSystemWatcher.OnChanged%2A>和某些<xref:System.IO.FileSystemWatcher.OnCreated%2A>和<xref:System.IO.FileSystemWatcher.OnDeleted%2A>可能引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-301">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="3aacd-302">移動檔案簡單的多個作業所組成的複雜作業，因此會引發多個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-302">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="3aacd-303">同樣地，某些應用程式 （例如，防毒軟體） 可能會導致所偵測到的其他檔案系統事件<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-303">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.IO.FileSystemWatcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("*.*")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("File name filter pattern")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Filter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-304">取得或設定篩選字串，用以判斷在目錄中監視什麼檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-304">Gets or sets the filter string used to determine what files are monitored in a directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-305">篩選條件字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-305">The filter string.</span>
          </span>
          <span data-ttu-id="3aacd-306">預設值是"*。\*"（監看所有檔案）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-306">The default is "*.\*" (Watches all files.)</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-307">若要觀看的所有檔案中的變更，請設定<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="3aacd-307">To watch changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("").</span></span> <span data-ttu-id="3aacd-308">若要觀看的特定檔案，設定<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-308">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="3aacd-309">例如，若要觀看 MyDoc.txt 檔案中的變更，請設定<xref:System.IO.FileSystemWatcher.Filter%2A>"MyDoc.txt"的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-309">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="3aacd-310">您也可以觀看某種類型的檔案中的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-310">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="3aacd-311">例如，若要監看的任何文字檔案中的變更，將<xref:System.IO.FileSystemWatcher.Filter%2A>"\*.txt"的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-311">For example, to watch for changes in any text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span> <span data-ttu-id="3aacd-312">使用多個篩選條件，例如"\*.txt&#124;\*.doc"不支援。</span><span class="sxs-lookup"><span data-stu-id="3aacd-312">Use of multiple filters such as "\*.txt&#124;\*.doc" is not supported.</span></span>  
  
 <span data-ttu-id="3aacd-313"><xref:System.IO.FileSystemWatcher.Filter%2A>之後，就可以變更屬性<xref:System.IO.FileSystemWatcher>物件已開始接收事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-313">The <xref:System.IO.FileSystemWatcher.Filter%2A> property can be changed after the <xref:System.IO.FileSystemWatcher> object has started receiving events.</span></span>  
  
 <span data-ttu-id="3aacd-314">如需有關篩選掉不想要通知的詳細資訊，請參閱<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>， <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>，和<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-314">For more information about filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="3aacd-315"><xref:System.IO.FileSystemWatcher.Filter%2A> 接受萬用字元相符的檔案，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="3aacd-315"><xref:System.IO.FileSystemWatcher.Filter%2A> accepts wildcards for matching files, as shown in the following examples.</span></span>  
  
|<span data-ttu-id="3aacd-316">篩選字串</span><span class="sxs-lookup"><span data-stu-id="3aacd-316">Filter string</span></span>|<span data-ttu-id="3aacd-317">監看下列的檔案</span><span class="sxs-lookup"><span data-stu-id="3aacd-317">Watches the following files</span></span>|  
|-------------------|---------------------------------|  
|<span data-ttu-id="3aacd-318">*.\*</span><span class="sxs-lookup"><span data-stu-id="3aacd-318">*.\*</span></span>|<span data-ttu-id="3aacd-319">所有檔案 （預設值）。</span><span class="sxs-lookup"><span data-stu-id="3aacd-319">All files (default).</span></span> <span data-ttu-id="3aacd-320">空字串 ("") 也會監看所有檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-320">An empty string ("") also watches all files.</span></span>|  
|<span data-ttu-id="3aacd-321">\*.txt</span><span class="sxs-lookup"><span data-stu-id="3aacd-321">\*.txt</span></span>|<span data-ttu-id="3aacd-322">副檔名為"txt"的所有檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-322">All files with a "txt" extension.</span></span>|  
|<span data-ttu-id="3aacd-323">\*recipe.doc</span><span class="sxs-lookup"><span data-stu-id="3aacd-323">\*recipe.doc</span></span>|<span data-ttu-id="3aacd-324">結尾為 「 配方 」 與 「 文件 」 延伸模組的所有檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-324">All files ending in "recipe" with a "doc" extension.</span></span>|  
|<span data-ttu-id="3aacd-325">win\*.xml</span><span class="sxs-lookup"><span data-stu-id="3aacd-325">win\*.xml</span></span>|<span data-ttu-id="3aacd-326">副檔名為"xml"開頭"win"的所有檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-326">All files beginning with "win" with an "xml" extension.</span></span>|  
|<span data-ttu-id="3aacd-327">銷售 \* 200？。xls</span><span class="sxs-lookup"><span data-stu-id="3aacd-327">Sales\*200?.xls</span></span>|<span data-ttu-id="3aacd-328">符合下列項目：</span><span class="sxs-lookup"><span data-stu-id="3aacd-328">Matches the following:</span></span><br /><br /> <span data-ttu-id="3aacd-329">銷售年 7 月 2001.xlsSales Aug 2002.xlsSales 年 3 月 2004.xls</span><span class="sxs-lookup"><span data-stu-id="3aacd-329">Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</span></span><br /><br /> <span data-ttu-id="3aacd-330">但不符合：</span><span class="sxs-lookup"><span data-stu-id="3aacd-330">but does not match:</span></span><br /><br /> <span data-ttu-id="3aacd-331">銷售年 11 月 1999.xls</span><span class="sxs-lookup"><span data-stu-id="3aacd-331">Sales Nov 1999.xls</span></span>|  
|<span data-ttu-id="3aacd-332">MyReport.Doc</span><span class="sxs-lookup"><span data-stu-id="3aacd-332">MyReport.Doc</span></span>|<span data-ttu-id="3aacd-333">監看式唯一 MyReport.doc</span><span class="sxs-lookup"><span data-stu-id="3aacd-333">Watches only MyReport.doc</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-334">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-334">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-335">元件會設定為監看的變更`LastWrite`和`LastAccess`時間、 建立、 刪除或重新命名的目錄中的文字檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-335">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-336">如果變更、 建立，或刪除檔案，檔案的路徑會列印至主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-336">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="3aacd-337">重新命名檔案時，新舊路徑列印到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-337">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="3aacd-338">使用<xref:System.Diagnostics>和<xref:System.IO>此範例中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-338">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileSystemWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="fileSystemWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubdirectories">
      <MemberSignature Language="C#" Value="public bool IncludeSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubdirectories : bool with get, set" Usage="System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Flag to indicate we want to watch subdirectories")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_IncludeSubdirectories")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-339">取得或設定數值，表示是否應該監視指定路徑內的子目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-339">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-340">如果您想要監視子目錄，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-340">
              <see langword="true" /> if you want to monitor subdirectories; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aacd-341">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-341">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-342">設定<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>要`true`當您想要監看的檔案和目錄包含在透過所指定的目錄內的變更通知<xref:System.IO.FileSystemWatcher.Path%2A>屬性和其子目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-342">Set <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> to `true` when you want to watch for change notifications for files and directories contained within the directory specified through the <xref:System.IO.FileSystemWatcher.Path%2A> property, and its subdirectories.</span></span> <span data-ttu-id="3aacd-343">設定<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>屬性設`false`有助於降低的通知傳送至內部緩衝區數目。</span><span class="sxs-lookup"><span data-stu-id="3aacd-343">Setting the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property to `false` helps reduce the number of notifications sent to the internal buffer.</span></span> <span data-ttu-id="3aacd-344">如需有關篩選掉不想要通知的詳細資訊，請參閱<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>和<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-344">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="3aacd-345">當`true`，<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>是透過整個子樹狀結構，而不只是直屬子目錄遞迴。</span><span class="sxs-lookup"><span data-stu-id="3aacd-345">When `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is recursive through the entire sub tree, not just the immediate child directories.</span></span> <span data-ttu-id="3aacd-346">中的檔案或目錄子樹狀結構中的相對路徑傳回<xref:System.IO.FileSystemEventArgs.Name%2A>屬性<xref:System.IO.FileSystemEventArgs>並<xref:System.IO.RenamedEventArgs.OldName%2A>屬性<xref:System.IO.RenamedEventArgs>，取決於您所監看的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-346">The relative path to a file or directory within the sub tree returns in the <xref:System.IO.FileSystemEventArgs.Name%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldName%2A> property of <xref:System.IO.RenamedEventArgs>, depending on changes you are watching for.</span></span> <span data-ttu-id="3aacd-347">您可以取得的完整的路徑<xref:System.IO.FileSystemEventArgs.FullPath%2A>屬性<xref:System.IO.FileSystemEventArgs>並<xref:System.IO.RenamedEventArgs.OldFullPath%2A>屬性<xref:System.IO.RenamedEventArgs>，取決於您所監看的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-347">You can get the fully qualified path from the <xref:System.IO.FileSystemEventArgs.FullPath%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldFullPath%2A> property of <xref:System.IO.RenamedEventArgs>, depending on the changes you are watching for.</span></span>  
  
 <span data-ttu-id="3aacd-348">如果您正在觀賞，目錄的子樹狀目錄中會建立一個目錄並<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>是`true`，自動會監看該目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-348">If a directory is created in the sub tree of the directory you are watching, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is `true`, that directory will automatically be watched.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemEventArgs.FullPath" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldFullPath" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
        <altmember cref="P:System.IO.FileSystemEventArgs.Name" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldName" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InternalBufferSize">
      <MemberSignature Language="C#" Value="public int InternalBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InternalBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.InternalBufferSize : int with get, set" Usage="System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-349">取得或設定內部緩衝區的大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-349">Gets or sets the size (in bytes) of the internal buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-350">內部緩衝區大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-350">The internal buffer size in bytes.</span>
          </span>
          <span data-ttu-id="3aacd-351">預設為 8192 (8 KB)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-351">The default is 8192 (8 KB).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-352">您可以設定緩衝區為 4 KB 或更大，但它不能超過 64 KB。</span><span class="sxs-lookup"><span data-stu-id="3aacd-352">You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</span></span> <span data-ttu-id="3aacd-353">如果您嘗試設定<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>捨棄屬性為小於 4096 個位元組，您的值和<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性設定為 4096 個位元組。</span><span class="sxs-lookup"><span data-stu-id="3aacd-353">If you try to set the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property to less than 4096 bytes, your value is discarded and the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is set to 4096 bytes.</span></span> <span data-ttu-id="3aacd-354">為了達到最佳效能，使用 Intel 架構的電腦上的 4 KB 的倍數。</span><span class="sxs-lookup"><span data-stu-id="3aacd-354">For best performance, use a multiple of 4 KB on Intel-based computers.</span></span>  
  
 <span data-ttu-id="3aacd-355">系統會通知檔案變更的元件，並將這些變更儲存在緩衝區中的元件會建立並傳遞至 Api。</span><span class="sxs-lookup"><span data-stu-id="3aacd-355">The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</span></span> <span data-ttu-id="3aacd-356">每個事件都可以使用最多 16 個位元組的記憶體，不包括檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-356">Each event can use up to 16 bytes of memory, not including the file name.</span></span> <span data-ttu-id="3aacd-357">如果在短時間內有許多變更，緩衝區會溢位。</span><span class="sxs-lookup"><span data-stu-id="3aacd-357">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="3aacd-358">這會導致遺失的目錄中，變更追蹤的元件，它只會提供地毯式通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-358">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="3aacd-359">增加緩衝區的大小可以避免遺失檔案系統變更事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-359">Increasing the size of the buffer can prevent missing file system change events.</span></span> <span data-ttu-id="3aacd-360">不過，增加緩衝區大小是昂貴，因為它來自無法空出給磁碟，所以讓緩衝區越小越好的非分頁記憶體。</span><span class="sxs-lookup"><span data-stu-id="3aacd-360">However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="3aacd-361">若要避免緩衝區溢位，請使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>和<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>篩選掉不必要的屬性變更通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-361">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="NotifyFilter">
      <MemberSignature Language="C#" Value="public System.IO.NotifyFilters NotifyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.NotifyFilters NotifyFilter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyFilter As NotifyFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::NotifyFilters NotifyFilter { System::IO::NotifyFilters get(); void set(System::IO::NotifyFilters value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyFilter : System.IO.NotifyFilters with get, set" Usage="System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Flag to indicate which change event we want to monitor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_ChangedFilter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.NotifyFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-362">取得或設定要監看的變更類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-362">Gets or sets the type of changes to watch for.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-363">其中一個 <see cref="T:System.IO.NotifyFilters" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-363">One of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
          <span data-ttu-id="3aacd-364">預設值為 <see langword="LastWrite" />、<see langword="FileName" /> 與 <see langword="DirectoryName" /> 的位元 OR 運算子組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-364">The default is the bitwise OR combination of <see langword="LastWrite" />, <see langword="FileName" />, and <see langword="DirectoryName" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-365">您可以結合的成員<xref:System.IO.NotifyFilters>監看的變更一次的一種以上類型的列舉。</span><span class="sxs-lookup"><span data-stu-id="3aacd-365">You can combine the members of the <xref:System.IO.NotifyFilters> enumeration to watch for more than one type of change at a time.</span></span> <span data-ttu-id="3aacd-366">例如，您可以在其中觀看變更檔案的大小，以及變更`LastWrite`時間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-366">For example, you can watch for changes in size of a file, and for changes in the `LastWrite` time.</span></span> <span data-ttu-id="3aacd-367">這會引發事件，只要變更檔案或資料夾的大小，或變更`LastWrite`檔案或資料夾的時間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-367">This raises an event anytime there is a change in file or folder size, or a change in the `LastWrite` time of the file or folder.</span></span>  
  
 <span data-ttu-id="3aacd-368">這是一種方式篩選掉不必要的通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-368">This is one way to filter out unwanted notifications.</span></span> <span data-ttu-id="3aacd-369">如需有關篩選掉不想要通知的詳細資訊，請參閱<xref:System.IO.FileSystemWatcher.Filter%2A>， <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>，和<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aacd-369">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-370">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-370">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-371">元件會設定為監看的變更`LastWrite`和`LastAccess`時間、 建立、 刪除或重新命名的目錄中的文字檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-371">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-372">如果變更、 建立，或刪除檔案，檔案的路徑會列印至主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-372">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="3aacd-373">重新命名檔案時，新舊路徑列印到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-373">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="3aacd-374">使用<xref:System.Diagnostics>和<xref:System.IO>此範例中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-374">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aacd-375">其值不是 <see cref="T:System.IO.NotifyFilters" /> 值的有效位元的 OR 運算子組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-375">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="3aacd-376">要設定的值無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-376">The value that is being set is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3aacd-377">
            <see cref="T:System.IO.FileSystemEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-377">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-378">引發 <see cref="E:System.IO.FileSystemWatcher.Changed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-378">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-379"><xref:System.IO.FileSystemWatcher.OnChanged%2A> 變更大小、 系統屬性、 上次寫入時間、 上次存取時間或檔案或目錄中的目錄受監視的安全性權限時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aacd-379"><xref:System.IO.FileSystemWatcher.OnChanged%2A> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
 <span data-ttu-id="3aacd-380">使用<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>限制的事件數目的屬性時引發<xref:System.IO.FileSystemWatcher.Changed>處理事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-380">Use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to restrict the number of events raised when the <xref:System.IO.FileSystemWatcher.Changed> event is handled.</span></span>  
  
 <span data-ttu-id="3aacd-381"><xref:System.IO.FileSystemWatcher.OnCreated%2A>只要建立檔案時，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-381">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="3aacd-382">如果正在將檔案複製或傳送到監看的目錄中，<xref:System.IO.FileSystemWatcher.OnCreated%2A>事件會立即引發，後面接著一或多個<xref:System.IO.FileSystemWatcher.OnChanged%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-382">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="3aacd-383">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-383">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3aacd-384">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-384">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-385">
            <para>當覆寫<see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-385">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Changed" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected void OnCreated (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCreated(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCreated (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCreated(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnCreated : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3aacd-386">
            <see cref="T:System.IO.FileSystemEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-386">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-387">引發 <see cref="E:System.IO.FileSystemWatcher.Created" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-387">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-388"><xref:System.IO.FileSystemWatcher.OnCreated%2A> 受監視的目錄中建立檔案或目錄時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aacd-388"><xref:System.IO.FileSystemWatcher.OnCreated%2A> is called when a file or directory is created in the directory being monitored.</span></span>  
  
 <span data-ttu-id="3aacd-389">一些常見的相符項目，例如複製或移動檔案或目錄中，執行未直接對應到事件，但這些項目，並會造成要引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-389">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="3aacd-390">當您複製檔案或目錄時，系統就會引發<xref:System.IO.FileSystemWatcher.Created>要將檔案複製，如果該目錄正在監看的目錄中的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-390">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="3aacd-391">如果您複製的目錄就正在由另一個執行個體所監看<xref:System.IO.FileSystemWatcher>，就會引發任何事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-391">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="3aacd-392">例如，您會建立兩個執行個體<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-392">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-393">FileSystemWatcher1 設為觀看"C:\My Documents"，而 FileSystemWatcher2 設觀看 「 C:\Your 文件 」。</span><span class="sxs-lookup"><span data-stu-id="3aacd-393">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="3aacd-394">如果您從 我的文件 複製檔案，並將它貼到 您的文件 」，<xref:System.IO.FileSystemWatcher.Created>中 FileSystemWatcher2，便會引發事件，但不會引發事件的 FileSystemWatcher1。</span><span class="sxs-lookup"><span data-stu-id="3aacd-394">If you copy a file from "My Documents" and paste it into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="3aacd-395">不同於複製、 移動檔案或目錄，將會引發兩個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-395">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="3aacd-396">上述範例中，如果將檔案從 「 我的文件 」 移到 您的文件 」，從<xref:System.IO.FileSystemWatcher.Created>FileSystemWatcher2 中，會引發事件和<xref:System.IO.FileSystemWatcher.Deleted>FileSystemWatcher1 中，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-396">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised in FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised in FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="3aacd-397"><xref:System.IO.FileSystemWatcher.OnCreated%2A>只要建立檔案時，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-397">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="3aacd-398">如果正在將檔案複製或傳送到監看的目錄中，<xref:System.IO.FileSystemWatcher.OnCreated%2A>事件會立即引發，後面接著一或多個<xref:System.IO.FileSystemWatcher.OnChanged%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-398">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="3aacd-399">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-399">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3aacd-400">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-400">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-401">
            <para>當覆寫<see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-401">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected void OnDeleted (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDeleted(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDeleted (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDeleted(System::IO::FileSystemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDeleted : System.IO.FileSystemEventArgs -&gt; unit" Usage="fileSystemWatcher.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3aacd-402">
            <see cref="T:System.IO.FileSystemEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-402">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-403">引發 <see cref="E:System.IO.FileSystemWatcher.Deleted" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-403">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-404"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> 刪除檔案或目錄，在受監視的目錄內時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aacd-404"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> is called when a file or directory, within the directory being monitored, is deleted.</span></span>  
  
 <span data-ttu-id="3aacd-405">一些常見的相符項目，例如複製或移動檔案或目錄中，執行未直接對應到事件，但這些項目，並會造成要引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-405">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="3aacd-406">當您複製檔案或目錄時，系統就會引發<xref:System.IO.FileSystemWatcher.Created>要將檔案複製，如果該目錄正在監看的目錄中的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-406">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="3aacd-407">如果您複製的目錄就正在由另一個執行個體所監看<xref:System.IO.FileSystemWatcher>，就會引發任何事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-407">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="3aacd-408">例如，您會建立兩個執行個體<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-408">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-409">FileSystemWatcher1 設為觀看"C:\My Documents"，而 FileSystemWatcher2 設觀看 「 C:\Your 文件 」。</span><span class="sxs-lookup"><span data-stu-id="3aacd-409">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="3aacd-410">如果您將檔案從 「 我的文件 」 複製到 您的文件 」， <xref:System.IO.FileSystemWatcher.Created> FileSystemWatcher2，將會引發事件，但不會引發事件的 FileSystemWatcher1。</span><span class="sxs-lookup"><span data-stu-id="3aacd-410">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="3aacd-411">不同於複製、 移動檔案或目錄，將會引發兩個事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-411">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="3aacd-412">上述範例中，如果將檔案從 「 我的文件 」 移到 您的文件 」，從<xref:System.IO.FileSystemWatcher.Created>FileSystemWatcher2 會引發事件和<xref:System.IO.FileSystemWatcher.Deleted>FileSystemWatcher1 會引發事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-412">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="3aacd-413">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-413">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3aacd-414">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-414">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-415">
            <para>當覆寫<see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-415">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="protected void OnError (System.IO.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnError(class System.IO.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnError(System::IO::ErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnError : System.IO.ErrorEventArgs -&gt; unit" Usage="fileSystemWatcher.OnError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3aacd-416">包含事件資料的 <see cref="T:System.IO.ErrorEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-416">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-417">引發 <see cref="E:System.IO.FileSystemWatcher.Error" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-417">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-418"><xref:System.IO.FileSystemWatcher.OnError%2A> 發生錯誤時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aacd-418"><xref:System.IO.FileSystemWatcher.OnError%2A> is called when an error occurs.</span></span>  
  
 <span data-ttu-id="3aacd-419">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-419">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3aacd-420">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-420">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-421">
            <para>當覆寫<see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-421">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Error" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected void OnRenamed (System.IO.RenamedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRenamed(class System.IO.RenamedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRenamed (e As RenamedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRenamed(System::IO::RenamedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnRenamed : System.IO.RenamedEventArgs -&gt; unit" Usage="fileSystemWatcher.OnRenamed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3aacd-422">
            <see cref="T:System.IO.RenamedEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-422">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-423">引發 <see cref="E:System.IO.FileSystemWatcher.Renamed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-423">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-424"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> 檔案或目錄內要監視的目錄已重新命名時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aacd-424"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> is called when a file or directory within the directory being monitored is renamed.</span></span> <span data-ttu-id="3aacd-425">其<xref:System.IO.RenamedEventArgs>引數包含在重新命名作業，例如變更、 的舊和新的路徑，以及舊的和新名稱的類型的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3aacd-425">Its <xref:System.IO.RenamedEventArgs> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</span></span> <span data-ttu-id="3aacd-426">請注意，其<xref:System.IO.FileSystemEventArgs.Name>屬性可能為 null 如果重新命名事件<xref:System.IO.FileSystemWatcher>不會取得符合從作業系統的新舊名稱事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-426">Note that its <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span> 
  
 <span data-ttu-id="3aacd-427">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="3aacd-427">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="3aacd-428">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="3aacd-428">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aacd-429">
            <para>當覆寫<see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-429">
              <para>When overriding <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IO.FileSystemWatcher.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("The directory to monitor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Path")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-430">取得或設定要監看的目錄路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-430">Gets or sets the path of the directory to watch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-431">要監視的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-431">The path to monitor.</span>
          </span>
          <span data-ttu-id="3aacd-432">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-432">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-433">這是目錄的完整的路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-433">This is a fully qualified path to a directory.</span></span> <span data-ttu-id="3aacd-434">如果<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>屬性是`true`，此目錄是的根目錄的系統會監看的變更，否則為監看的唯一目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-434">If the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property is `true`, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</span></span> <span data-ttu-id="3aacd-435">若要觀看的特定檔案，設定<xref:System.IO.FileSystemWatcher.Path%2A>屬性的完整、 正確的目錄，而<xref:System.IO.FileSystemWatcher.Filter%2A>屬性設為檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-435">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Path%2A> property to the fully qualified, correct directory, and the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span>  
  
 <span data-ttu-id="3aacd-436"><xref:System.IO.FileSystemWatcher.Path%2A>屬性支援通用命名慣例 (UNC) 路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-436">The <xref:System.IO.FileSystemWatcher.Path%2A> property supports Universal Naming Convention (UNC) paths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-437">必須先設定這個屬性，該元件可以監看的變更。</span><span class="sxs-lookup"><span data-stu-id="3aacd-437">This property must be set before the component can watch for changes.</span></span>  
  
 <span data-ttu-id="3aacd-438">當目錄已重新命名時，<xref:System.IO.FileSystemWatcher>自動將本身重新附加至剛重新命名的項目。</span><span class="sxs-lookup"><span data-stu-id="3aacd-438">When a directory is renamed, the <xref:System.IO.FileSystemWatcher> automatically reattaches itself to the newly renamed item.</span></span> <span data-ttu-id="3aacd-439">例如，如果您設定<xref:System.IO.FileSystemWatcher.Path%2A>"C:\My Documents"的屬性，然後手動重新命名 [C:\Your 文件] 目錄元件仍會繼續接聽剛重新命名的目錄上的變更通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-439">For example, if you set the <xref:System.IO.FileSystemWatcher.Path%2A> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</span></span> <span data-ttu-id="3aacd-440">不過，當您尋求<xref:System.IO.FileSystemWatcher.Path%2A>屬性，其中包含舊的路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-440">However, when you ask for the <xref:System.IO.FileSystemWatcher.Path%2A> property, it contains the old path.</span></span> <span data-ttu-id="3aacd-441">這是因為此元件可讓您判斷監看基礎控制代碼，而不是目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="3aacd-441">This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</span></span> <span data-ttu-id="3aacd-442">重新命名並不會影響此控制代碼。</span><span class="sxs-lookup"><span data-stu-id="3aacd-442">Renaming does not affect the handle.</span></span> <span data-ttu-id="3aacd-443">因此，如果您終結的元件，並再重新建立它，而不需要更新<xref:System.IO.FileSystemWatcher.Path%2A>屬性，您的應用程式會失敗，因為目錄不存在。</span><span class="sxs-lookup"><span data-stu-id="3aacd-443">So, if you destroy the component, and then recreate it without updating the <xref:System.IO.FileSystemWatcher.Path%2A> property, your application will fail because the directory no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-444">下列範例會建立<xref:System.IO.FileSystemWatcher>監看在執行階段指定的目錄。</span><span class="sxs-lookup"><span data-stu-id="3aacd-444">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="3aacd-445">元件會設定為監看的變更`LastWrite`和`LastAccess`時間、 建立、 刪除或重新命名的目錄中的文字檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-445">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="3aacd-446">如果變更、 建立，或刪除檔案，檔案的路徑會列印至主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-446">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="3aacd-447">重新命名檔案時，新舊路徑列印到主控台。</span><span class="sxs-lookup"><span data-stu-id="3aacd-447">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="3aacd-448">使用<xref:System.Diagnostics>和<xref:System.IO>此範例中的命名空間。</span><span class="sxs-lookup"><span data-stu-id="3aacd-448">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aacd-449">指定的路徑不存在或找不到該路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-449">The specified path does not exist or could not be found.</span>
          </span>
          <span data-ttu-id="3aacd-450">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-450">-or-</span>
          </span>
          <span data-ttu-id="3aacd-451">指定路徑包含萬用字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-451">The specified path contains wildcard characters.</span>
          </span>
          <span data-ttu-id="3aacd-452">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-452">-or-</span>
          </span>
          <span data-ttu-id="3aacd-453">指定路徑包含無效路徑字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-453">The specified path contains invalid path characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event System.IO.RenamedEventHandler Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.RenamedEventHandler Renamed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Renamed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Renamed As RenamedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::RenamedEventHandler ^ Renamed;" />
      <MemberSignature Language="F#" Value="member this.Renamed : System.IO.RenamedEventHandler " Usage="member this.Renamed : System.IO.RenamedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("Occurs when a file/directory rename matches the filter")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_Renamed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.RenamedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-454">發生在指定之 <see cref="P:System.IO.FileSystemWatcher.Path" /> 內的檔案或目錄重新命名時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-454">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-455">`Renamed`事件是<xref:System.IO.RenamedEventHandler>具有下列簽章的委派：</span><span class="sxs-lookup"><span data-stu-id="3aacd-455">The `Renamed` event is an <xref:System.IO.RenamedEventHandler> delegate that has the following signature:</span></span>

 ```csharp
public delegate void Renamed(object sender, RenamedEventArgs e);
 ```
 ```vb
Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)
 ```
 <span data-ttu-id="3aacd-456"><xref:System.IO.RenamedEventArgs>物件會提供重新命名作業，例如重新命名類型的相關資訊 (<xref:System.IO.FileSystemEventArgs.ChangeType>屬性)，舊的和新名稱，而舊的和新的路徑。</span><span class="sxs-lookup"><span data-stu-id="3aacd-456">The <xref:System.IO.RenamedEventArgs> object provides information about the renaming operation, such as the type of the rename (the <xref:System.IO.FileSystemEventArgs.ChangeType> property), the old and new name, and the old and new path.</span></span> <span data-ttu-id="3aacd-457">請注意，<xref:System.IO.FileSystemEventArgs.Name>屬性可能為 null 如果重新命名事件<xref:System.IO.FileSystemWatcher>不會取得符合從作業系統的新舊名稱事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-457">Note that the <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span>

 <span data-ttu-id="3aacd-458">重新命名您所監看的目錄將不會引發通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-458">Renaming the directory you are watching will not raise a notification.</span></span> <span data-ttu-id="3aacd-459">如您所監看的目錄內的項目，才會引發通知。</span><span class="sxs-lookup"><span data-stu-id="3aacd-459">Notifications are only raised for entries inside the directory you are watching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aacd-460">下列範例會使用<xref:System.IO.FileSystemWatcher.Renamed>對主控台顯示的檔案路徑，每當監看的檔案已重新命名的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-460">The following example uses the <xref:System.IO.FileSystemWatcher.Renamed> event to display the file path to the console whenever the watched file is renamed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.IO.FileSystemWatcher.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-461">取得或設定 <see cref="T:System.IO.FileSystemWatcher" /> 的 <see cref="T:System.ComponentModel.ISite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-461">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-462">
            <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.IO.FileSystemWatcher" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-462">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-463">站台繫結<xref:System.ComponentModel.Component>至<xref:System.ComponentModel.Design.IDesignerHost.Container%2A>和啟用它們，之間的通訊，以及提供讓要管理其元件的容器。</span><span class="sxs-lookup"><span data-stu-id="3aacd-463">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.IO.IODescription("The object used to marshal the event handler calls resulting from a directory change")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.IO.IODescription("FSW_SynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-464">取得或設定物件，用以封送處理因目錄變更而發出的事件處理常式呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-464">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aacd-465">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，代表用以封送處理因目錄變更而發出的事件處理常式呼叫的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-465">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> that represents the object used to marshal the event handler calls issued as a result of a directory change.</span>
          </span>
          <span data-ttu-id="3aacd-466">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-466">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-467">當<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>已`null`，方法處理<xref:System.IO.FileSystemWatcher.Changed>， <xref:System.IO.FileSystemWatcher.Created>， <xref:System.IO.FileSystemWatcher.Deleted>，和<xref:System.IO.FileSystemWatcher.Renamed>系統執行緒集區的執行緒上呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-467">When <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> is `null`, methods handling the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are called on a thread from the system thread pool.</span></span> <span data-ttu-id="3aacd-468">如需有關系統執行緒集區的詳細資訊，請參閱<xref:System.Threading.ThreadPool>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-468">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="3aacd-469">當<xref:System.IO.FileSystemWatcher.Changed>， <xref:System.IO.FileSystemWatcher.Created>， <xref:System.IO.FileSystemWatcher.Deleted>，以及<xref:System.IO.FileSystemWatcher.Renamed>事件會由 visual 的 Windows Form 元件，例如<xref:System.Windows.Forms.Button>，透過系統執行緒集區中存取元件可能無法運作，或可能會導致例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3aacd-469">When the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or may result in an exception.</span></span> <span data-ttu-id="3aacd-470">藉由設定避免這<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>至 Windows Form 元件，這樣會使處理的方法<xref:System.IO.FileSystemWatcher.Changed>， <xref:System.IO.FileSystemWatcher.Created>， <xref:System.IO.FileSystemWatcher.Deleted>，和<xref:System.IO.FileSystemWatcher.Renamed>元件建立所在的相同執行緒上呼叫的事件。</span><span class="sxs-lookup"><span data-stu-id="3aacd-470">Avoid this by setting <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> to a Windows Forms component, which causes the methods that handle the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="3aacd-471">如果<xref:System.IO.FileSystemWatcher>使用於內部[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]在 Windows Form 設計工具中，<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>會自動將包含的控制項為<xref:System.IO.FileSystemWatcher>。</span><span class="sxs-lookup"><span data-stu-id="3aacd-471">If the <xref:System.IO.FileSystemWatcher> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> automatically sets to the control that contains the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="3aacd-472">比方說，如果您放置<xref:System.IO.FileSystemWatcher>Form1 設計工具上 (繼承自<xref:System.Windows.Forms.Form>)<xref:System.IO.FileSystemWatcher.SynchronizingObject%2A>屬性<xref:System.IO.FileSystemWatcher>設為 Form1 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="3aacd-472">For example, if you place a <xref:System.IO.FileSystemWatcher> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property of <xref:System.IO.FileSystemWatcher> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForChanged">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3aacd-473">同步方法，傳回含有發生的變更之特定資訊的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-473">A synchronous method that returns a structure that contains specific information on the change that occurred.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged changeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="3aacd-474">要監視的 <see cref="T:System.IO.WatcherChangeTypes" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-474">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-475">提供想要監視的變更類型，同步方法會傳回含有發生的變更之特定資訊的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-475">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aacd-476">
            <see cref="T:System.IO.WaitForChangedResult" />，含有發生之變更的特定資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-476">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-477">這個方法會等候直到第一項變更，就會發生，並且接著會傳回。</span><span class="sxs-lookup"><span data-stu-id="3aacd-477">This method waits indefinitely until the first change occurs and then returns.</span></span> <span data-ttu-id="3aacd-478">這是使用相同<xref:System.IO.FileSystemWatcher.WaitForChanged%2A>與`timeout`參數設定為-1。</span><span class="sxs-lookup"><span data-stu-id="3aacd-478">This is the same as using <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> with the `timeout` parameter set to -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-479">這個方法可讓事件處理常式被叫用來回應檔案的變更，即使<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-479">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="3aacd-480">在某些系統中，<xref:System.IO.FileSystemWatcher>報告變更，使用簡短的 8.3 檔案名稱格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-480">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="3aacd-481">例如，"LongFileName.LongExtension 」 的變更無法回報為 「 LongFi ~。Lon"。</span><span class="sxs-lookup"><span data-stu-id="3aacd-481">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForChanged : System.IO.WatcherChangeTypes * int -&gt; System.IO.WaitForChangedResult" Usage="fileSystemWatcher.WaitForChanged (changeType, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changeType">
          <span data-ttu-id="3aacd-482">要監視的 <see cref="T:System.IO.WatcherChangeTypes" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-482">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="3aacd-483">逾時之前的等候時間 (單位為毫秒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-483">The time (in milliseconds) to wait before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aacd-484">提供您想要監視的變更類型和逾時前的等候時間 (以毫秒計)，同步方法會傳回含有發生的變更之特定資訊的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-484">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aacd-485">
            <see cref="T:System.IO.WaitForChangedResult" />，含有發生之變更的特定資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aacd-485">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aacd-486">這個方法會等到發生變更，或它已逾時。值為-1`timeout`參數表示無限期等候。</span><span class="sxs-lookup"><span data-stu-id="3aacd-486">This method waits until a change occurs or it has timed out. A value of -1 for the `timeout` parameter means wait indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aacd-487">這個方法可讓事件處理常式被叫用來回應檔案的變更，即使<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3aacd-487">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="3aacd-488">在某些系統中，<xref:System.IO.FileSystemWatcher>報告變更，使用簡短的 8.3 檔案名稱格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="3aacd-488">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="3aacd-489">例如，"LongFileName.LongExtension 」 的變更無法回報為 「 LongFi ~。Lon"。</span><span class="sxs-lookup"><span data-stu-id="3aacd-489">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
  </Members>
</Type>