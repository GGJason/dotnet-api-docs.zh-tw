<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7464a35d5d918ea9d55ba7973845d7fc133537cc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651618" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="042cf-101">實作讀取字串的 <see cref="T:System.IO.TextReader" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="042cf-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-102"><xref:System.IO.StringReader> 可讓您以同步或非同步方式讀取字串。</span><span class="sxs-lookup"><span data-stu-id="042cf-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="042cf-103">您可以使用一次讀取一個字元<xref:System.IO.StringReader.Read%2A>或<xref:System.IO.StringReader.ReadAsync%2A>方法，在階段使用一行<xref:System.IO.StringReader.ReadLine%2A>或<xref:System.IO.StringReader.ReadLineAsync%2A>方法與整個字串使用<xref:System.IO.StringReader.ReadToEnd%2A>或<xref:System.IO.StringReader.ReadToEndAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="042cf-104">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-105">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-105">To do this...</span></span>|<span data-ttu-id="042cf-106">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-107">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-107">Create a text file.</span></span>|[<span data-ttu-id="042cf-108">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-109">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-109">Write to a text file.</span></span>|[<span data-ttu-id="042cf-110">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-111">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-111">Read from a text file.</span></span>|[<span data-ttu-id="042cf-112">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-113">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-113">Append text to a file.</span></span>|[<span data-ttu-id="042cf-114">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-115">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-116">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-117">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-118">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-119">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-119">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-120">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-121">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-121">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-122">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="042cf-123">下列範例示範如何以非同步方式讀取整個字串。</span><span class="sxs-lookup"><span data-stu-id="042cf-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="042cf-124">
            <see cref="T:System.IO.StringReader" /> 應該初始化的目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="042cf-125">初始化 <see cref="T:System.IO.StringReader" /> 類別的新執行個體，這個執行個體會從指定的字串讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-126">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-127">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-127">To do this...</span></span>|<span data-ttu-id="042cf-128">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-129">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-129">Create a text file.</span></span>|[<span data-ttu-id="042cf-130">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-131">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-131">Write to a text file.</span></span>|[<span data-ttu-id="042cf-132">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-133">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-133">Read from a text file.</span></span>|[<span data-ttu-id="042cf-134">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-135">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-135">Append text to a file.</span></span>|[<span data-ttu-id="042cf-136">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-137">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-138">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-139">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-140">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-141">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-141">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-142">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-143">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-143">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-144">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="042cf-145">此程式碼範例是針對提供之較大範例的一部分<xref:System.IO.StringReader>類別。</span><span class="sxs-lookup"><span data-stu-id="042cf-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="042cf-146">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-146">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-147">關閉 <see cref="T:System.IO.StringReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-147">Closes the <see cref="T:System.IO.StringReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-148">如需建立檔案，並將文字寫入至檔案的範例，請參閱 <<c0> [ 如何： 將文字寫入至檔案](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="042cf-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="042cf-149">從檔案讀取文字的範例，請參閱 <<c0> [ 如何： 從檔案讀取文字](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="042cf-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="042cf-150">如需讀取和寫入二進位檔案的範例，請參閱 <<c0> [ 如何： 讀取和寫入至新建立的資料檔案](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="042cf-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="042cf-151">這個方法會覆寫<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="042cf-152">這個實作`Close`呼叫<xref:System.IO.StringReader.Dispose%2A>方法並傳遞`true`值。</span><span class="sxs-lookup"><span data-stu-id="042cf-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="042cf-153">排清資料流不會清除其基礎的編碼器，除非您明確地呼叫`Close`。</span><span class="sxs-lookup"><span data-stu-id="042cf-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="042cf-154">設定<xref:System.IO.StreamWriter.AutoFlush%2A>至`true`表示資料會從排清緩衝區資料流，但並不會清除編碼器的狀態。</span><span class="sxs-lookup"><span data-stu-id="042cf-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="042cf-155">這可讓編碼器，讓它可以正確編碼字元的下一個區塊保持其狀態 （部分的字元）。</span><span class="sxs-lookup"><span data-stu-id="042cf-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="042cf-156">UTF8，UTF7，其中某些字元可以只編碼編碼器接收或多個相鄰的字元後，會影響此案例。</span><span class="sxs-lookup"><span data-stu-id="042cf-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="042cf-157">呼叫`Close`，其他方法可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="042cf-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="042cf-158">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="042cf-159">釋放 <see cref="T:System.IO.StringReader" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-160">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.IO.StringReader> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="042cf-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="042cf-161">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="042cf-162">
            <para>
              <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 可以多次呼叫的其他物件。當覆寫<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />，請小心不要參考先前處置呼叫中的物件<see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-162">
              <para>
                <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-163">傳回下一個可供使用的字元，但不使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-163">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-164">整數，表示要讀取的下一個字元，如果沒有更多字元可供使用或資料流不支援搜尋，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-164">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-165"><xref:System.IO.StringReader.Peek%2A>方法會傳回整數值，以判斷是否發生檔案或另一個錯誤的結尾。</span><span class="sxs-lookup"><span data-stu-id="042cf-165">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="042cf-166">這可讓使用者能夠先檢查 是否傳回的值為-1 的之前先將它轉換<xref:System.Char>型別。</span><span class="sxs-lookup"><span data-stu-id="042cf-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="042cf-167">這個方法會覆寫<xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-167">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="042cf-168">目前的位置`StringReader`這項作業不會變更。</span><span class="sxs-lookup"><span data-stu-id="042cf-168">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="042cf-169">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-169">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-170">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-170">To do this...</span></span>|<span data-ttu-id="042cf-171">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-171">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-172">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-172">Create a text file.</span></span>|[<span data-ttu-id="042cf-173">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-173">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-174">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-174">Write to a text file.</span></span>|[<span data-ttu-id="042cf-175">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-175">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-176">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-176">Read from a text file.</span></span>|[<span data-ttu-id="042cf-177">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-177">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-178">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-178">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-179">目前的讀取器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-179">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="042cf-180">自輸入字串讀取下一個字元或下一組字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-180">Reads the next character or next set of characters from the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-181">自輸入字串讀取下一個字元，並將字元位置前移一個字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-181">Reads the next character from the input string and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-182">基礎字串的下一個字元；如果不再有字元可供使用，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-182">The next character from the underlying string, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-183">這個方法會覆寫<xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-183">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="042cf-184">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-184">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-185">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-185">To do this...</span></span>|<span data-ttu-id="042cf-186">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-186">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-187">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-187">Create a text file.</span></span>|[<span data-ttu-id="042cf-188">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-189">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-189">Write to a text file.</span></span>|[<span data-ttu-id="042cf-190">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-190">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-191">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-191">Read from a text file.</span></span>|[<span data-ttu-id="042cf-192">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-192">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-193">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-193">Append text to a file.</span></span>|[<span data-ttu-id="042cf-194">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-194">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-195">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-195">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-196">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-196">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-197">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-197">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-198">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-198">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-199">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-199">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-200">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-200">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-201">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-201">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-202">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-202">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="042cf-203">此程式碼範例是針對提供之較大範例的一部分<xref:System.IO.StringReader>類別。</span><span class="sxs-lookup"><span data-stu-id="042cf-203">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-204">目前的讀取器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-204">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="042cf-205">當這個方法傳回時，會包含其值介於 <c>index</c> 與 (<c>index</c> + <c>count</c> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-205">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="042cf-206">緩衝區中的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-206">The starting index in the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="042cf-207">要讀取的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-207">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="042cf-208">自輸入字串讀取字元區塊，並將字元位置前移 <paramref name="count" /> 個字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-208">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-209">讀入緩衝區的字元總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-209">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="042cf-210">如果目前無法提供那麼多的字元數，則這個數目可能小於所要求的字元數，或如果已經到達基礎字串的末端，則為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-210">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-211">這個方法覆寫 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="042cf-211">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="042cf-212">方法會讀取最多`count`字元<xref:System.IO.StringReader>成`buffer`位置開始的字元陣列`index`。</span><span class="sxs-lookup"><span data-stu-id="042cf-212">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="042cf-213">傳回的實際字元數讀取，或如果已經達到字串的結尾，而且會讀取任何字元為零。</span><span class="sxs-lookup"><span data-stu-id="042cf-213">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="042cf-214">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-214">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-215">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-215">To do this...</span></span>|<span data-ttu-id="042cf-216">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-216">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-217">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-217">Create a text file.</span></span>|[<span data-ttu-id="042cf-218">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-219">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-219">Write to a text file.</span></span>|[<span data-ttu-id="042cf-220">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-220">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-221">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-221">Read from a text file.</span></span>|[<span data-ttu-id="042cf-222">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-222">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-223">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-223">Append text to a file.</span></span>|[<span data-ttu-id="042cf-224">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-224">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-225">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-225">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-226">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-226">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-227">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-227">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-228">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-228">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-229">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-229">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-230">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-231">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-231">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-232">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-232">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="042cf-233">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-233">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="042cf-234">緩衝區長度減去 <paramref name="index" /> 小於 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-234">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="042cf-235">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-235">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-236">目前的讀取器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-236">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="042cf-237">當這個方法傳回時，會包含其值介於 <c>index</c> 與 (<c>index</c> + <c>count</c> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-237">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="042cf-238">「緩衝區」<c></c>中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-238">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="042cf-239">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-239">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="042cf-240">如果指定的字元數寫入緩衝區之前，便到達字串末端，則方法會返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-240">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="042cf-241">從目前的字串非同步讀取指定的取大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-241">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-242">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-242">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="042cf-243">
            <paramref name="TResult" /> 參數的值會包含讀取至緩衝區的位元組總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-243">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="042cf-244">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達字串末端，則可能為 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-244">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-245">在工作完成之後指定的字元數目`count`讀取參數，或字串的結尾為止。</span><span class="sxs-lookup"><span data-stu-id="042cf-245">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="042cf-246">下列範例示範如何以非同步方式讀取字串的第一次 23 個字元。</span><span class="sxs-lookup"><span data-stu-id="042cf-246">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="042cf-247">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-247">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="042cf-248">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-248">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="042cf-249">
            <paramref name="index" /> 和 <paramref name="count" /> 的總和大於緩衝區長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-249">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-250">字串讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-250">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="042cf-251">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-251">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="042cf-252">當這個方法傳回時，會包含其值介於 <c>index</c> 與 (<c>index</c> + <c>count</c> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-252">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="042cf-253">「緩衝區」<c></c>中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-253">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="042cf-254">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="042cf-255">如果指定的字元數寫入緩衝區之前，便到達字串末端，則方法會返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-255">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="042cf-256">從目前的字串非同步讀取指定的取大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-256">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-257">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="042cf-258">
            <paramref name="TResult" /> 參數的值會包含讀取至緩衝區的位元組總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="042cf-259">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達字串末端，則可能為 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-260">工作未完成之前所指定的字元數`count`會讀取參數，或已經到達字串結尾。</span><span class="sxs-lookup"><span data-stu-id="042cf-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="042cf-261">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="042cf-262">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="042cf-263">
            <paramref name="index" /> 和 <paramref name="count" /> 的總和大於緩衝區長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-264">字串讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-264">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="042cf-265">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-266">自目前字串讀取一行字元，並將資料以字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-266">Reads a line of characters from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-267">目前字串的下一行，如果已到達字串的結尾，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-267">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-268">這個方法會覆寫<xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-268">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="042cf-269">在行的定義是一串字元後面接著行摘要 ("\n")、 歸位字元 ("\r") 或歸位字元後面緊跟著一條線摘要 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="042cf-269">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="042cf-270">終止歸位字元或換行字元，並不會包含所傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="042cf-270">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="042cf-271">傳回的值是`null`如果已經到達字串結尾。</span><span class="sxs-lookup"><span data-stu-id="042cf-271">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="042cf-272">如果目前的方法會擲回<xref:System.OutOfMemoryException>，在基礎字串中的讀取器的位置進階的方法無法讀取的字元，但已讀取到內部的字元數<xref:System.IO.StringReader.ReadLine%2A>緩衝區都會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="042cf-272">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="042cf-273">因為無法變更讀取器在字串中的位置，已讀取的字元是無法復原，並可重新初始化來只存取<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="042cf-273">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="042cf-274">若要避免這種情況，請使用<xref:System.IO.StringReader.Read%2A>讀取方法，並存放區中預先配置的緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="042cf-274">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="042cf-275">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-275">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-276">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-276">To do this...</span></span>|<span data-ttu-id="042cf-277">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-277">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-278">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-278">Create a text file.</span></span>|[<span data-ttu-id="042cf-279">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-279">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-280">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-280">Write to a text file.</span></span>|[<span data-ttu-id="042cf-281">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-281">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-282">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-282">Read from a text file.</span></span>|[<span data-ttu-id="042cf-283">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-283">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-284">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-284">Append text to a file.</span></span>|[<span data-ttu-id="042cf-285">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-285">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-286">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-286">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-287">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-287">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-288">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-288">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-289">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-289">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-290">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-290">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-291">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-291">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-292">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-292">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-293">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-293">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="042cf-294">此程式碼範例是針對提供之較大範例的一部分<xref:System.IO.StringReader>類別。</span><span class="sxs-lookup"><span data-stu-id="042cf-294">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-295">目前的讀取器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-295">The current reader is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="042cf-296">沒有足夠記憶體可為傳回的字串配置緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-296">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-297">自目前字串非同步讀取一行字元，並將資料以字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-297">Reads a line of characters asynchronously from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-298">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-298">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="042cf-299">
            <paramref name="TResult" />參數的值會包含字串讀取器中的下一行，或者是<see langword="null" />（如果已經讀取所有字元）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-299">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="042cf-300">下列範例示範如何以非同步方式從字串一次讀取一行。</span><span class="sxs-lookup"><span data-stu-id="042cf-300">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="042cf-301">下一行中的字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-301">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-302">字串讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-302">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="042cf-303">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-303">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-304">讀取從目前位置到字串末端的所有字元，並將它們以單一字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-304">Reads all characters from the current position to the end of the string and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-305">基礎字串從目前位置至結尾的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-305">The content from the current position to the end of the underlying string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="042cf-306">這個方法會覆寫<xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="042cf-306">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="042cf-307">如果目前的方法會擲回<xref:System.OutOfMemoryException>，在基礎字串中的讀取器的位置進階的方法無法讀取的字元，但已讀取到內部的字元數<xref:System.IO.StringReader.ReadToEnd%2A>緩衝區都會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="042cf-307">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="042cf-308">因為無法變更讀取器在字串中的位置，已讀取的字元是無法復原，並可重新初始化來只存取<xref:System.IO.StringReader>。</span><span class="sxs-lookup"><span data-stu-id="042cf-308">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="042cf-309">若要避免這種情況，請使用<xref:System.IO.StringReader.Read%2A>讀取方法，並存放區中預先配置的緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="042cf-309">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="042cf-310">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="042cf-310">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="042cf-311">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="042cf-311">To do this...</span></span>|<span data-ttu-id="042cf-312">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="042cf-312">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="042cf-313">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="042cf-313">Create a text file.</span></span>|[<span data-ttu-id="042cf-314">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-315">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-315">Write to a text file.</span></span>|[<span data-ttu-id="042cf-316">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="042cf-317">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="042cf-317">Read from a text file.</span></span>|[<span data-ttu-id="042cf-318">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="042cf-318">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="042cf-319">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-319">Append text to a file.</span></span>|[<span data-ttu-id="042cf-320">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="042cf-320">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-321">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="042cf-321">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-322">取得檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-322">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-323">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="042cf-323">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-324">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="042cf-324">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="042cf-325">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-325">Read from a binary file.</span></span>|[<span data-ttu-id="042cf-326">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-326">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="042cf-327">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="042cf-327">Write to a binary file.</span></span>|[<span data-ttu-id="042cf-328">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="042cf-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="042cf-329">此程式碼範例是針對提供之較大範例的一部分<xref:System.IO.TextReader>類別。</span><span class="sxs-lookup"><span data-stu-id="042cf-329">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="042cf-330">沒有足夠記憶體可為傳回的字串配置緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-330">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-331">目前的讀取器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-331">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="042cf-332">非同步讀取從目前位置到字串末端的所有字元，並將它們以單一字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-332">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="042cf-333">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-333">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="042cf-334">
            <paramref name="TResult" />參數的值會包含字串，該字串含有從目前位置到字串結尾的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-334">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="042cf-335">下列範例示範如何以非同步方式讀取整個字串。</span><span class="sxs-lookup"><span data-stu-id="042cf-335">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="042cf-336">字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-336">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="042cf-337">字串讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-337">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="042cf-338">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="042cf-338">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>