<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringReader.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e5544ec430580a68ed365b7ad95b2b2d74d4e0e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e5544ec430580a68ed365b7ad95b2b2d74d4e0e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.StringReader">
          <source>Implements a <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that reads from a string.</source>
          <target state="translated">實作讀取字串的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> enables you to read a string synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 可讓您以同步或非同步方式讀取字串。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>You can read a character at a time with the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.IO.StringReader.ReadAsync%2A&gt;</ph> method, a line at a time using the <ph id="ph3">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.IO.StringReader.ReadLineAsync%2A&gt;</ph> method and an entire string using the <ph id="ph5">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> or the <ph id="ph6">&lt;xref:System.IO.StringReader.ReadToEndAsync%2A&gt;</ph> method.</source>
          <target state="translated">您可以使用一次讀取一個字元<ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.StringReader.ReadAsync%2A&gt;</ph>方法中，於使用行<ph id="ph3">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.IO.StringReader.ReadLineAsync%2A&gt;</ph>方法與整個字串使用<ph id="ph5">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph>或<ph id="ph6">&lt;xref:System.IO.StringReader.ReadToEndAsync%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>The following example shows how to read an entire string asynchronously.</source>
          <target state="translated">下列範例會示範如何以非同步方式讀取整個字串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The string to which the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> should be initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> 應該初始化的目的字串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> class that reads from the specified string.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> 類別的新執行個體，這個執行個體會從指定的字串讀取。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>.</source>
          <target state="translated">關閉 <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">如需建立檔案，並將文字寫入至檔案的範例，請參閱<bpt id="p1">[</bpt>How to： 將文字寫入至檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">從檔案讀取文字的範例，請參閱<bpt id="p1">[</bpt>How to： 從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">如需讀取和寫入二進位檔案的範例，請參閱<bpt id="p1">[</bpt>如何： 讀取和寫入至新建立資料檔<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">這項實作<ph id="ph1">`Close`</ph>呼叫<ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%2A&gt;</ph>方法傳遞<ph id="ph3">`true`</ph>值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Close`</ph>.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">`Close`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>至<ph id="ph2">`true`</ph>表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Following a call to <ph id="ph1">`Close`</ph>, other methods might throw an exception.</source>
          <target state="translated">呼叫<ph id="ph1">`Close`</ph>，其他方法可能會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>，請小心不要參考到先前處置之前呼叫中的物件<ph id="ph2">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>Returns the next available character but does not consume it.</source>
          <target state="translated">傳回下一個可供使用的字元，但不使用它。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</source>
          <target state="translated">整數，表示要讀取的下一個字元，如果沒有更多字元可供使用或資料流不支援搜尋，則為 -1。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The <ph id="ph1">&lt;xref:System.IO.StringReader.Peek%2A&gt;</ph> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringReader.Peek%2A&gt;</ph>方法會傳回整數值，以判斷是否發生檔案或另一項錯誤的結尾。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>This allows a user to first check if the returned value is -1 before casting it to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> type.</source>
          <target state="translated">這可讓使用者能夠先檢查 是否傳回的值為-1 的之前先將它轉換<ph id="ph1">&lt;xref:System.Char&gt;</ph>型別。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The current position of the <ph id="ph1">`StringReader`</ph> is not changed by this operation.</source>
          <target state="translated">目前的位置<ph id="ph1">`StringReader`</ph>不會變更這項作業。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>The current reader is closed.</source>
          <target state="translated">目前的讀取器已關閉。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.IO.StringReader">
          <source>Reads the next character or next set of characters from the input string.</source>
          <target state="translated">自輸入字串讀取下一個字元或下一組字元。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>Reads the next character from the input string and advances the character position by one character.</source>
          <target state="translated">自輸入字串讀取下一個字元，並將字元位置前移一個字元。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>The next character from the underlying string, or -1 if no more characters are available.</source>
          <target state="translated">基礎字串的下一個字元；如果不再有字元可供使用，則為 -1。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>The current reader is closed.</source>
          <target state="translated">目前的讀取器已關閉。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">當這個方法傳回時，會包含其值介於 <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 與 (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The starting index in the buffer.</source>
          <target state="translated">緩衝區中的起始索引。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">要讀取的字元數。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads a block of characters from the input string and advances the character position by <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">自輸入字串讀取字元區塊，並將字元位置前移 <ph id="ph1">&lt;paramref name="count" /&gt;</ph> 個字元。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The total number of characters read into the buffer.</source>
          <target state="translated">讀入緩衝區的字元總數。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</source>
          <target state="translated">如果目前無法提供那麼多的字元數，則這個數目可能小於所要求的字元數，或如果已經到達基礎字串的末端，則為零。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The method will read up to <ph id="ph1">`count`</ph> characters from the <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> into the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">此方法會讀取最多<ph id="ph1">`count`</ph>字元<ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph>到<ph id="ph3">`buffer`</ph>位置開始的字元陣列<ph id="ph4">`index`</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</source>
          <target state="translated">傳回實際的字元數所讀取，或如果已達到字串的結尾，且會讀取任何字元零。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">緩衝區長度減去 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The current reader is closed.</source>
          <target state="translated">目前的讀取器已關閉。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">當這個方法傳回時，會包含其值介於 <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 與 (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中要開始寫入的位置。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">要讀取的字元數上限。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</source>
          <target state="translated">如果指定的字元數寫入緩衝區之前，便到達字串末端，則方法會返回。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">從目前的字串非同步讀取指定的取大字元數目，並從指定的索引開始將資料寫入緩衝區。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">表示非同步讀取作業的工作。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 參數的值會包含讀取至緩衝區的位元組總數。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</source>
          <target state="translated">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達字串末端，則可能為 0（零）。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task completes after either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read or the end of the string is reached.</source>
          <target state="translated">在工作完成之後指定的字元數目<ph id="ph1">`count`</ph>參數讀取或字串的結尾為止。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to read the first 23 characters of a string asynchronously.</source>
          <target state="translated">下列範例會示範如何以非同步方式讀取字串的第一次 23 個字元。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 的總和大於緩衝區長度。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string reader has been disposed.</source>
          <target state="translated">字串讀取器已處置。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">之前的讀取作業目前正在使用讀取器。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">當這個方法傳回時，會包含其值介於 <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 與 (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) 之間，並由讀取自目前來源的字元取代的指定字元陣列。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中要開始寫入的位置。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">要讀取的字元數上限。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</source>
          <target state="translated">如果指定的字元數寫入緩衝區之前，便到達字串末端，則方法會返回。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">從目前的字串非同步讀取指定的取大字元數目，並從指定的索引開始將資料寫入緩衝區。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">表示非同步讀取作業的工作。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 參數的值會包含讀取至緩衝區的位元組總數。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</source>
          <target state="translated">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達字串末端，則可能為 0（零）。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task does not complete until either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read, or the end of the string has been reached.</source>
          <target state="translated">工作未完成，直到指定的字元數目<ph id="ph1">`count`</ph>會讀取參數，或已經到達字串結尾。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 的總和大於緩衝區長度。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string reader has been disposed.</source>
          <target state="translated">字串讀取器已處置。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">之前的讀取作業目前正在使用讀取器。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>Reads a line of characters from the current string and returns the data as a string.</source>
          <target state="translated">自目前字串讀取一行字元，並將資料以字串傳回。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>The next line from the current string, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the end of the string is reached.</source>
          <target state="translated">目前字串的下一行，如果已到達字串的結尾，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</source>
          <target state="translated">一條線被定義為一串字元後面接著行摘要 ("\n")、 ("\r") 的歸位字元或歸位字元後面緊跟著行摘要 ("\r\n")。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The string that is returned does not contain the terminating carriage return or line feed.</source>
          <target state="translated">所傳回的字串沒有結尾的歸位字元或換行字元。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The returned value is <ph id="ph1">`null`</ph> if the end of the string has been reached.</source>
          <target state="translated">傳回的值是<ph id="ph1">`null`</ph>如果已經到達字串結尾。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>If the current method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph2">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">如果目前的方法會擲回<ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>，基礎字串中的讀取器的位置進階的方法無法讀取的字元，但已經讀入內部的字元數<ph id="ph2">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph>緩衝區會被捨棄。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">已讀取的字元字串中讀取器的位置無法變更，因為無法復原，和可存取只能由重新初始化<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>To avoid such a situation, use the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">若要避免這種情況，請使用<ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph>讀取方法，並存放區中預先配置的緩衝區的字元。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>The current reader is closed.</source>
          <target state="translated">目前的讀取器已關閉。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">沒有足夠記憶體可為傳回的字串配置緩衝區。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>Reads a line of characters asynchronously from the current string and returns the data as a string.</source>
          <target state="translated">自目前字串非同步讀取一行字元，並將資料以字串傳回。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">表示非同步讀取作業的工作。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the next line from the string reader, or is <ph id="ph2">&lt;see langword="null" /&gt;</ph> if all the characters have been read.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>參數的值會包含字串讀取器中的下一行，或者是<ph id="ph2">&lt;see langword="null" /&gt;</ph>（如果已經讀取所有字元）。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The following example shows how to read one line at a time from a string asynchronously.</source>
          <target state="translated">下列範例會示範如何以非同步方式從字串一次讀取一行。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The number of characters in the next line is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">下一行中的字元數大於 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The string reader has been disposed.</source>
          <target state="translated">字串讀取器已處置。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">之前的讀取作業目前正在使用讀取器。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Reads all characters from the current position to the end of the string and returns them as a single string.</source>
          <target state="translated">讀取從目前位置到字串末端的所有字元，並將它們以單一字串傳回。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The content from the current position to the end of the underlying string.</source>
          <target state="translated">基礎字串從目前位置至結尾的內容。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>If the current method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph2">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">如果目前的方法會擲回<ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>，基礎字串中的讀取器的位置進階的方法無法讀取的字元，但已經讀入內部的字元數<ph id="ph2">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph>緩衝區會被捨棄。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">已讀取的字元字串中讀取器的位置無法變更，因為無法復原，和可存取只能由重新初始化<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>To avoid such a situation, use the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">若要避免這種情況，請使用<ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph>讀取方法，並存放區中預先配置的緩衝區的字元。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">下表列出的其他一般或相關的 I/O 工作的範例。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>To do this...</source>
          <target state="translated">若要執行相關作業…</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>See the example in this topic...</source>
          <target state="translated">請參閱這個主題中的範例…</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Create a text file.</source>
          <target state="translated">建立文字檔</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Write to a text file.</source>
          <target state="translated">寫入文字檔案。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：將文字寫入檔案<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Read from a text file.</source>
          <target state="translated">從文字檔讀取。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：從檔案讀取文字<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Append text to a file.</source>
          <target state="translated">將文字附加至檔案。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：開啟並附加至記錄檔<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Get the size of a file.</source>
          <target state="translated">取得檔案的大小。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Get the attributes of a file.</source>
          <target state="translated">取得檔案的屬性。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Set the attributes of a file.</source>
          <target state="translated">設定檔案屬性。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Determine if a file exists.</source>
          <target state="translated">判斷檔案是否存在。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Read from a binary file.</source>
          <target state="translated">讀取二進位檔案。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Write to a binary file.</source>
          <target state="translated">寫入二進位檔案。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>如何：讀取和寫入新建立的資料檔案<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">沒有足夠記憶體可為傳回的字串配置緩衝區。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The current reader is closed.</source>
          <target state="translated">目前的讀取器已關閉。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</source>
          <target state="translated">非同步讀取從目前位置到字串末端的所有字元，並將它們以單一字串傳回。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">表示非同步讀取作業的工作。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains a string with the characters from the current position to the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph>參數的值會包含字串，該字串含有從目前位置到字串結尾的字元。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The following example shows how to read an entire string asynchronously.</source>
          <target state="translated">下列範例會示範如何以非同步方式讀取整個字串。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The number of characters is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">字元數大於 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The string reader has been disposed.</source>
          <target state="translated">字串讀取器已處置。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">之前的讀取作業目前正在使用讀取器。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>