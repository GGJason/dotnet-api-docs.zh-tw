<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bd9f475d97a2588289faff36fbe341407d05b69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36483910" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf393-101">實作 <see cref="T:System.IO.TextWriter" /> 以便將資訊寫入字串。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf393-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="bf393-102">資訊儲存在基礎 <see cref="T:System.Text.StringBuilder" /> 中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf393-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-103"><xref:System.IO.StringWriter> 可讓您以同步或非同步方式寫入字串。</span><span class="sxs-lookup"><span data-stu-id="bf393-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="bf393-104">您可以使用一次寫入字元<xref:System.IO.StringWriter.Write%28System.Char%29>或<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法中，於使用字串<xref:System.IO.StringWriter.Write%28System.String%29>或<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="bf393-105">此外，您可以在其中撰寫字元、 字元陣列或字串，後面接著行結束字元以非同步方式與其中一個<xref:System.IO.StringWriter.WriteLineAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="bf393-106">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-107">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-107">To do this...</span></span>|<span data-ttu-id="bf393-108">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-109">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-109">Create a text file.</span></span>|[<span data-ttu-id="bf393-110">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-111">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-111">Write to a text file.</span></span>|[<span data-ttu-id="bf393-112">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-113">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-113">Read from a text file.</span></span>|[<span data-ttu-id="bf393-114">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-115">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-115">Append text to a file.</span></span>|[<span data-ttu-id="bf393-116">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-117">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-118">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-119">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-120">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-121">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-121">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-122">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-123">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-123">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-124">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-125">下列程式碼範例會示範連續段落建立從表示雙倍的句子，然後再將該段落轉換群組回到原始的文字。</span><span class="sxs-lookup"><span data-stu-id="bf393-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf393-126">初始化 <see cref="T:System.IO.StringWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf393-127">初始化 <see cref="T:System.IO.StringWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-128">新<xref:System.Text.StringBuilder>物件是自動建立及相關聯的新執行個體<xref:System.IO.StringWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="bf393-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="bf393-129">這個建構函式未指定控制項的格式，因為新的執行個體將會初始化<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-130">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-131">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-131">To do this...</span></span>|<span data-ttu-id="bf393-132">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-133">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-133">Create a text file.</span></span>|[<span data-ttu-id="bf393-134">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-135">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-135">Write to a text file.</span></span>|[<span data-ttu-id="bf393-136">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-137">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-137">Read from a text file.</span></span>|[<span data-ttu-id="bf393-138">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-139">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-139">Append text to a file.</span></span>|[<span data-ttu-id="bf393-140">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-141">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-142">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-143">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-144">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-145">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-145">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-146">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-147">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-147">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-148">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-149">下列程式碼範例示範如何建構字串使用`StringWriter`類別。</span><span class="sxs-lookup"><span data-stu-id="bf393-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="bf393-150">控制格式設定的 <see cref="T:System.IFormatProvider" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-151">使用指定的控制項格式，初始化 <see cref="T:System.IO.StringWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-152">新<xref:System.Text.StringBuilder>物件是自動建立及相關聯的新執行個體<xref:System.IO.StringWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="bf393-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="bf393-153">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-154">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-154">To do this...</span></span>|<span data-ttu-id="bf393-155">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-156">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-156">Create a text file.</span></span>|[<span data-ttu-id="bf393-157">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-158">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-158">Write to a text file.</span></span>|[<span data-ttu-id="bf393-159">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-160">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-160">Read from a text file.</span></span>|[<span data-ttu-id="bf393-161">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-162">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-162">Append text to a file.</span></span>|[<span data-ttu-id="bf393-163">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-164">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-165">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-166">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-167">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-168">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-168">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-169">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-170">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-170">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-171">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-172">下列程式碼範例示範如何建構中的特定文化特性的字串。</span><span class="sxs-lookup"><span data-stu-id="bf393-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="bf393-173">要寫入至其中的 <see cref="T:System.Text.StringBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-174">初始化 <see cref="T:System.IO.StringWriter" /> 類別的新執行個體，這個執行個體可寫入至指定的 <see cref="T:System.Text.StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-175">這個建構函式未指定控制項的格式，因為新的執行個體將會初始化<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-176">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-177">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-177">To do this...</span></span>|<span data-ttu-id="bf393-178">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-179">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-179">Create a text file.</span></span>|[<span data-ttu-id="bf393-180">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-181">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-181">Write to a text file.</span></span>|[<span data-ttu-id="bf393-182">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-183">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-183">Read from a text file.</span></span>|[<span data-ttu-id="bf393-184">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-185">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-185">Append text to a file.</span></span>|[<span data-ttu-id="bf393-186">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-187">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-188">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-189">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-190">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-191">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-191">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-192">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-193">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-193">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-194">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-195">下列程式碼範例示範如何使用<xref:System.Text.StringBuilder>類別來修改基礎字串中關閉`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="bf393-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf393-196">
            <paramref name="sb" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-196">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="bf393-197">要寫入至其中的 <see cref="T:System.Text.StringBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="bf393-198">控制格式設定的 <see cref="T:System.IFormatProvider" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-199">初始化 <see cref="T:System.IO.StringWriter" /> 類別的新執行個體，這個執行個體會寫入至指定的 <see cref="T:System.Text.StringBuilder" />，並且具有指定的格式提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-200">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-201">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-201">To do this...</span></span>|<span data-ttu-id="bf393-202">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-203">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-203">Create a text file.</span></span>|[<span data-ttu-id="bf393-204">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-205">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-205">Write to a text file.</span></span>|[<span data-ttu-id="bf393-206">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-207">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-207">Read from a text file.</span></span>|[<span data-ttu-id="bf393-208">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-209">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-209">Append text to a file.</span></span>|[<span data-ttu-id="bf393-210">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-211">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-212">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-213">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-214">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-215">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-215">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-216">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-217">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-217">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-218">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf393-219">
            <paramref name="sb" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-219">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf393-220">關閉目前 <see cref="T:System.IO.StringWriter" /> 和基礎資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-221">如需建立檔案，並將文字寫入至檔案的範例，請參閱[How to： 將文字寫入至檔案](~/docs/standard/io/how-to-write-text-to-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="bf393-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="bf393-222">從檔案讀取文字的範例，請參閱[How to： 從檔案讀取文字](~/docs/standard/io/how-to-read-text-from-a-file.md)。</span><span class="sxs-lookup"><span data-stu-id="bf393-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="bf393-223">如需讀取和寫入二進位檔案的範例，請參閱[如何： 讀取和寫入至新建立資料檔](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)。</span><span class="sxs-lookup"><span data-stu-id="bf393-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="bf393-224">這個方法覆寫 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-225">這項實作`Close`呼叫<xref:System.IO.StringWriter.Dispose%2A>方法傳遞`true`值。</span><span class="sxs-lookup"><span data-stu-id="bf393-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="bf393-226">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫`Close`。</span><span class="sxs-lookup"><span data-stu-id="bf393-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="bf393-227">設定<xref:System.IO.StreamWriter.AutoFlush%2A>至`true`表示從緩衝區資料流，清除資料，但並不會清除編碼器狀態。</span><span class="sxs-lookup"><span data-stu-id="bf393-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="bf393-228">這可讓編碼器將保存其狀態 （部分字元），讓它可以正確編碼字元的下一個區塊。</span><span class="sxs-lookup"><span data-stu-id="bf393-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="bf393-229">這種情況下會影響 UTF8 及 UTF7 其中某些字元可以只編碼的編碼器接收或多個相鄰的字元之後。</span><span class="sxs-lookup"><span data-stu-id="bf393-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf393-230">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="bf393-231">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-232">釋放 <see cref="T:System.IO.StringWriter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-233">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.IO.StringWriter> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="bf393-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="bf393-234">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="bf393-235">
            <para>
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> 可以被其他物件呼叫多次。在覆寫<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-235">
              <para>
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf393-236">取得寫入輸出的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-236">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf393-237">寫入輸出的 <see langword="Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-237">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-238">這個屬性是必要的標頭必須寫入其中所包含的編碼方式使用某些 XML 案例`StringWriter`。</span><span class="sxs-lookup"><span data-stu-id="bf393-238">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="bf393-239">這可讓取用任意的 XML 程式碼`StringWriter`並產生正確的 XML 標頭。</span><span class="sxs-lookup"><span data-stu-id="bf393-239">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="bf393-240">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-240">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-241">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-241">To do this...</span></span>|<span data-ttu-id="bf393-242">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-242">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-243">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-243">Create a text file.</span></span>|[<span data-ttu-id="bf393-244">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-244">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-245">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-245">Write to a text file.</span></span>|[<span data-ttu-id="bf393-246">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-246">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-247">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-247">Read from a text file.</span></span>|[<span data-ttu-id="bf393-248">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-248">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-249">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-249">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf393-250">以非同步的方式清除目前寫入器的所有緩衝區，並造成任何緩衝資料都寫入基礎裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-250">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-251">表示非同步排清作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-251">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf393-252">傳回基礎 <see cref="T:System.Text.StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-252">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-253">基礎 <see langword="StringBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-253">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-254">這可能是`StringBuilder`傳遞給建構函式，或`StringBuilder`所自動建立。</span><span class="sxs-lookup"><span data-stu-id="bf393-254">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="bf393-255">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-255">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-256">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-256">To do this...</span></span>|<span data-ttu-id="bf393-257">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-257">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-258">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-258">Create a text file.</span></span>|[<span data-ttu-id="bf393-259">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-259">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-260">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-260">Write to a text file.</span></span>|[<span data-ttu-id="bf393-261">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-261">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-262">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-262">Read from a text file.</span></span>|[<span data-ttu-id="bf393-263">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-263">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-264">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-264">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf393-265">傳回字串，包含被寫入至目前 <see langword="StringWriter" /> 的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-265">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-266">字串，包含被寫入至目前 <see langword="StringWriter" /> 的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-266">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-267">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-267">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-268">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-268">To do this...</span></span>|<span data-ttu-id="bf393-269">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-269">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-270">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-270">Create a text file.</span></span>|[<span data-ttu-id="bf393-271">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-271">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-272">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-272">Write to a text file.</span></span>|[<span data-ttu-id="bf393-273">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-273">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-274">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-274">Read from a text file.</span></span>|[<span data-ttu-id="bf393-275">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-275">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-276">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-276">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf393-277">將資料寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-277">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-278">要寫入的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-278">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-279">將一個字元寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-279">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-280">這個方法覆寫 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-280">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-281">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-281">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-282">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-282">To do this...</span></span>|<span data-ttu-id="bf393-283">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-283">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-284">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-284">Create a text file.</span></span>|[<span data-ttu-id="bf393-285">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-285">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-286">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-286">Write to a text file.</span></span>|[<span data-ttu-id="bf393-287">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-287">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-288">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-288">Read from a text file.</span></span>|[<span data-ttu-id="bf393-289">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-289">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-290">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-290">Append text to a file.</span></span>|[<span data-ttu-id="bf393-291">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-291">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-292">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-292">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-293">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-293">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-294">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-294">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-295">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-295">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-296">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-296">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-297">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-297">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-298">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-298">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-299">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-299">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-300">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-300">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-301">寫入器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-301">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-302">要寫入的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-302">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-303">將字串寫入目前的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-303">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-304">這個方法覆寫 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-304">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-305">如果指定的字串`null`，不寫入任何資料。</span><span class="sxs-lookup"><span data-stu-id="bf393-305">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="bf393-306">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-306">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-307">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-307">To do this...</span></span>|<span data-ttu-id="bf393-308">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-308">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-309">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-309">Create a text file.</span></span>|[<span data-ttu-id="bf393-310">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-310">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-311">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-311">Write to a text file.</span></span>|[<span data-ttu-id="bf393-312">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-312">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-313">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-313">Read from a text file.</span></span>|[<span data-ttu-id="bf393-314">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-314">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-315">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-315">Append text to a file.</span></span>|[<span data-ttu-id="bf393-316">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-316">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-317">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-317">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-318">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-318">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-319">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-319">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-320">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-320">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-321">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-321">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-322">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-322">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-323">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-323">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-324">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-324">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-325">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="bf393-325">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-326">寫入器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-326">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bf393-327">資料寫入來源的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-327">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bf393-328">緩衝區中要開始讀取資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-328">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="bf393-329">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-329">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-330">將字元子陣列寫入此字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-330">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-331">這個方法覆寫 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="bf393-331">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="bf393-332">這個方法會寫入`count`字元的資料，這樣`StringWriter`從`buffer`開始於位置`index`。</span><span class="sxs-lookup"><span data-stu-id="bf393-332">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="bf393-333">下表列出的其他一般或相關的 I/O 工作的範例。</span><span class="sxs-lookup"><span data-stu-id="bf393-333">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="bf393-334">若要執行相關作業…</span><span class="sxs-lookup"><span data-stu-id="bf393-334">To do this...</span></span>|<span data-ttu-id="bf393-335">請參閱這個主題中的範例…</span><span class="sxs-lookup"><span data-stu-id="bf393-335">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="bf393-336">建立文字檔</span><span class="sxs-lookup"><span data-stu-id="bf393-336">Create a text file.</span></span>|[<span data-ttu-id="bf393-337">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-337">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-338">寫入文字檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-338">Write to a text file.</span></span>|[<span data-ttu-id="bf393-339">如何：將文字寫入檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-339">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="bf393-340">從文字檔讀取。</span><span class="sxs-lookup"><span data-stu-id="bf393-340">Read from a text file.</span></span>|[<span data-ttu-id="bf393-341">如何：從檔案讀取文字</span><span class="sxs-lookup"><span data-stu-id="bf393-341">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="bf393-342">將文字附加至檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-342">Append text to a file.</span></span>|[<span data-ttu-id="bf393-343">如何：開啟並附加至記錄檔</span><span class="sxs-lookup"><span data-stu-id="bf393-343">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-344">取得檔案的大小。</span><span class="sxs-lookup"><span data-stu-id="bf393-344">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-345">取得檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-345">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-346">設定檔案屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-346">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-347">判斷檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="bf393-347">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="bf393-348">讀取二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-348">Read from a binary file.</span></span>|[<span data-ttu-id="bf393-349">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-349">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="bf393-350">寫入二進位檔案。</span><span class="sxs-lookup"><span data-stu-id="bf393-350">Write to a binary file.</span></span>|[<span data-ttu-id="bf393-351">如何：讀取和寫入新建立的資料檔案</span><span class="sxs-lookup"><span data-stu-id="bf393-351">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="bf393-352">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.IO.StringWriter.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="bf393-352">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf393-353">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-353">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bf393-354">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-354">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf393-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="bf393-356">
            <see langword="Length" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-356">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-357">寫入器已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-357">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf393-358">以非同步方式將資料寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-358">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-359">要寫入字串的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-359">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-360">以非同步方式將字元寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-360">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-361">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-361">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf393-362">下列範例示範如何將字元寫入使用<xref:System.IO.StringWriter.WriteAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-362">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-363">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-363">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-364">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-364">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-365">要寫入的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-365">The string to write.</span>
          </span>
          <span data-ttu-id="bf393-366">如果 <c>value</c> 為 <see langword="null" />，則不寫入任何字串到文字資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-366">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-367">將字串以非同步方式寫入目前的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-367">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-368">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-368">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf393-369">下列範例示範如何使用寫入的字串<xref:System.IO.StringWriter.WriteAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-369">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-370">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-370">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-371">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-371">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bf393-372">資料寫入來源的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-372">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bf393-373">緩衝區中要開始讀取資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-373">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="bf393-374">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-375">以非同步方式將字元的子陣列寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-375">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-376">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-376">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bf393-377">下列範例示範如何將字元寫入使用<xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-377">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf393-378">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-378">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf393-379">
            <paramref name="index" /> 加上 <paramref name="count" /> 大於緩衝區的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-379">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bf393-380">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-380">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-381">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-381">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-382">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-382">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bf393-383">以非同步方式將後面接有行結束字元的資料寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-383">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-384">要寫入字串的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-384">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-385">以非同步方式將一個字元 (其後加上行結束字元) 寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-385">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-386">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-386">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-387">行結束字元由定義<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-387">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf393-388">下列範例示範如何將字元寫入使用<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-388">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-389">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-389">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-390">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-390">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bf393-391">要寫入的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-391">The string to write.</span>
          </span>
          <span data-ttu-id="bf393-392">如果值為 <see langword="null" />，則只會寫入行結束字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-392">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-393">以非同步方式將字串 (後面接著行結束字元) 寫入目前的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-393">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-394">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-394">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-395">行結束字元由定義<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-395">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf393-396">下列範例示範如何使用寫入的字串<xref:System.IO.StringWriter.WriteLineAsync%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-396">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-397">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-397">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-398">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-398">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bf393-399">資料寫入來源的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-399">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="bf393-400">緩衝區中要開始讀取資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-400">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="bf393-401">要寫入的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-401">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf393-402">以非同步方式將字元子陣列 (其後加上行結束字元) 寫入字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-402">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf393-403">表示非同步寫入作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-403">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf393-404">行結束字元由定義<xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="bf393-404">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bf393-405">下列範例示範如何將字元寫入使用<xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="bf393-405">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf393-406">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-406">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf393-407">
            <paramref name="index" /> 加上 <paramref name="count" /> 大於緩衝區的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-407">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bf393-408">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-408">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="bf393-409">字串寫入器已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-409">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bf393-410">字串寫入器目前正由先前的寫入作業所使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf393-410">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>