<Type Name="Path" FullName="System.IO.Path">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bf02bf44c1539cbdc42991601a69fc037e7d135" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Path" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Path extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Path" />
  <TypeSignature Language="VB.NET" Value="Public Class Path" />
  <TypeSignature Language="C++ CLI" Value="public ref class Path abstract sealed" />
  <TypeSignature Language="F#" Value="type Path = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f886d-101">在含有檔案或目錄路徑資訊的 <see cref="T:System.String" /> 執行個體上執行作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f886d-101">Performs operations on <see cref="T:System.String" /> instances that contain file or directory path information.</span>
      </span>
      <span data-ttu-id="f886d-102">這些作業是以跨平台方式來執行的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f886d-102">These operations are performed in a cross-platform manner.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-103">.NET Framework 不支援直接存取實體磁碟，透過路徑的裝置名稱，例如"\\\\。 \PHYSICALDRIVE0"。</span><span class="sxs-lookup"><span data-stu-id="f886d-103">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="f886d-104">路徑是提供的檔案或目錄位置的字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-104">A path is a string that provides the location of a file or directory.</span></span> <span data-ttu-id="f886d-105">路徑不一定是指向磁碟; 上的位置例如，路徑可能會對應到記憶體中或是在裝置上的位置。</span><span class="sxs-lookup"><span data-stu-id="f886d-105">A path does not necessarily point to a location on disk; for example, a path might map to a location in memory or on a device.</span></span> <span data-ttu-id="f886d-106">確切路徑的格式取決於目前的平台。</span><span class="sxs-lookup"><span data-stu-id="f886d-106">The exact format of a path is determined by the current platform.</span></span> <span data-ttu-id="f886d-107">比方說，某些系統上，路徑可以開始為磁碟機或磁碟區的代號，而這個項目就不會出現在其他系統。</span><span class="sxs-lookup"><span data-stu-id="f886d-107">For example, on some systems, a path can start with a drive or volume letter, while this element is not present in other systems.</span></span> <span data-ttu-id="f886d-108">某些系統檔案的路徑可以包含擴充功能，表示儲存在檔案中的資訊類型。</span><span class="sxs-lookup"><span data-stu-id="f886d-108">On some systems, file paths can contain extensions, which indicate the type of information stored in the file.</span></span> <span data-ttu-id="f886d-109">格式檔案是副檔名的平台而定;例如，某些系統限制擴充到三個字元，而有些不。</span><span class="sxs-lookup"><span data-stu-id="f886d-109">The format of a file name extension is platform-dependent; for example, some systems limit extensions to three characters, and others do not.</span></span> <span data-ttu-id="f886d-110">目前的平台也會決定一組字元用來分隔的項目路徑，以及一組指定的路徑時，無法使用的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-110">The current platform also determines the set of characters used to separate the elements of a path, and the set of characters that cannot be used when specifying paths.</span></span> <span data-ttu-id="f886d-111">由於這些差異的欄位`Path`類別的某些成員的確切行為及`Path`類別是平台而異。</span><span class="sxs-lookup"><span data-stu-id="f886d-111">Because of these differences, the fields of the `Path` class as well as the exact behavior of some members of the `Path` class are platform-dependent.</span></span>  
  
 <span data-ttu-id="f886d-112">路徑可以包含絕對或相對的位置資訊。</span><span class="sxs-lookup"><span data-stu-id="f886d-112">A path can contain absolute or relative location information.</span></span> <span data-ttu-id="f886d-113">完整指定絕對路徑的位置： 檔案或目錄可以唯一識別目前的位置無關。</span><span class="sxs-lookup"><span data-stu-id="f886d-113">Absolute paths fully specify a location: the file or directory can be uniquely identified regardless of the current location.</span></span> <span data-ttu-id="f886d-114">相對路徑指定的部分位置： 時尋找檔案，以相對路徑來指定目前位置用作為起始點。</span><span class="sxs-lookup"><span data-stu-id="f886d-114">Relative paths specify a partial location: the current location is used as the starting point when locating a file specified with a relative path.</span></span> <span data-ttu-id="f886d-115">若要判斷目前的目錄，請呼叫<xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f886d-115">To determine the current directory, call <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f886d-116">大部分成員`Path`類別不會與檔案系統互動，並且不會驗證指定的路徑字串的檔案是否存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-116">Most members of the `Path` class do not interact with the file system and do not verify the existence of the file specified by a path string.</span></span> <span data-ttu-id="f886d-117">`Path` 類別成員，以修改路徑的字串，例如<xref:System.IO.Path.ChangeExtension%2A>，在檔案系統中有不會影響的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="f886d-117">`Path` class members that modify a path string, such as <xref:System.IO.Path.ChangeExtension%2A>, have no effect on names of files in the file system.</span></span> <span data-ttu-id="f886d-118">`Path` 成員，不過，驗證指定的路徑字串的內容，並擲回<xref:System.ArgumentException>例外狀況，如果字串包含不是有效的路徑字串中從傳回的字元所定義的字元<xref:System.IO.Path.GetInvalidPathChars%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-118">`Path` members do, however, validate the contents of a specified path string, and throw an <xref:System.ArgumentException> exception if the string contains characters that are not valid in path strings, as defined in the characters returned from the <xref:System.IO.Path.GetInvalidPathChars%2A> method.</span></span> <span data-ttu-id="f886d-119">例如，在 Windows 架構桌面平台上無效路徑字元可能會包含引號 （"）、 小於 (\<)、 大於 (>)、 管道 (&#124;)、 退格鍵 (\b)、 null (\0)，並透過 18 和 20-25 的 Unicode 字元 16。</span><span class="sxs-lookup"><span data-stu-id="f886d-119">For example, on Windows-based desktop platforms, invalid path characters might include quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0), and Unicode characters 16 through 18 and 20 through 25.</span></span>  
  
 <span data-ttu-id="f886d-120">成員`Path`類別可讓您快速且輕鬆地執行一般作業，例如判斷檔案的副檔名是否為路徑的一部分，以及將兩個字串結合成一個路徑名稱。</span><span class="sxs-lookup"><span data-stu-id="f886d-120">The members of the `Path` class enable you to quickly and easily perform common operations such as determining whether a file name extension is part of a path, and combining two strings into one path name.</span></span>  
  
 <span data-ttu-id="f886d-121">所有成員`Path`類別是靜態的而且因此不需要路徑的執行個體呼叫。</span><span class="sxs-lookup"><span data-stu-id="f886d-121">All members of the `Path` class are static and can therefore be called without having an instance of a path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f886d-122">在接受的路徑做為輸入字串的成員，該路徑必須是格式正確，或例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f886d-122">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="f886d-123">比方說，如果路徑是完整的但以空格開頭，路徑不被修剪中類別的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-123">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="f886d-124">因此，路徑的格式不正確，而且會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f886d-124">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="f886d-125">同樣地，路徑的組合不被完整的兩倍。</span><span class="sxs-lookup"><span data-stu-id="f886d-125">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="f886d-126">例如，"c:\temp c:\windows 」 也會引發例外狀況在大部分情況下。</span><span class="sxs-lookup"><span data-stu-id="f886d-126">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="f886d-127">請確定您的路徑是語式正確的當您使用接受路徑字串的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-127">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="f886d-128">接受路徑的成員，在路徑可以參考到檔案或只是目錄。</span><span class="sxs-lookup"><span data-stu-id="f886d-128">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="f886d-129">指定的路徑也可以參考相對路徑或通用命名慣例 (UNC) 路徑的伺服器和共用的名稱。</span><span class="sxs-lookup"><span data-stu-id="f886d-129">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="f886d-130">例如，下列所有條件都是可接受的路徑：</span><span class="sxs-lookup"><span data-stu-id="f886d-130">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="f886d-131">"c:\\\MyDir\\\MyFile.txt 」 以 C# 或 Visual Basic 中的"c:\MyDir\MyFile.txt"。</span><span class="sxs-lookup"><span data-stu-id="f886d-131">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f886d-132">"c:\\\MyDir 」 以 C# 或 Visual Basic 中的"c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="f886d-132">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f886d-133">「 MyDir\\\MySubdir 」 以 C# 或 Visual Basic 中的"MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="f886d-133">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f886d-134">「\\\\\\\MyServer\\\MyShare 」 在 C# 中，或 「\\\MyServer\MyShare 「 在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="f886d-134">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="f886d-135">因為所有這些作業會執行字串，就無法確認結果是在所有案例中有效。</span><span class="sxs-lookup"><span data-stu-id="f886d-135">Because all these operations are performed on strings, it is impossible to verify that the results are valid in all scenarios.</span></span> <span data-ttu-id="f886d-136">例如，<xref:System.IO.Path.GetExtension%2A>方法會剖析字串傳遞給它，並傳回該字串的副檔名。</span><span class="sxs-lookup"><span data-stu-id="f886d-136">For example, the <xref:System.IO.Path.GetExtension%2A> method parses a string that you pass to it and returns the extension from that string.</span></span> <span data-ttu-id="f886d-137">不過，這不表示該副檔名的檔案存在磁碟上。</span><span class="sxs-lookup"><span data-stu-id="f886d-137">However, this does not mean that a file with that extension exists on the disk.</span></span>  
  
 <span data-ttu-id="f886d-138">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-138">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-139">下列程式碼範例示範一些主要成員`Path`類別。</span><span class="sxs-lookup"><span data-stu-id="f886d-139">The following code example demonstrates some of the main members of the `Path` class.</span></span>  
  
 [!code-cpp[path class#1](~/samples/snippets/cpp/VS_Snippets_CLR/Path Class/CPP/path class.cpp#1)]
 [!code-csharp[path class#1](~/samples/snippets/csharp/VS_Snippets_CLR/Path Class/CS/path class.cs#1)]
 [!code-vb[path class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Path Class/VB/path class.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AltDirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char AltDirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.AltDirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AltDirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable AltDirectorySeparatorChar : char" Usage="System.IO.Path.AltDirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-140">提供平台特定替代字元，用以在反映階層式檔案系統組織的路徑字串中分隔目錄層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-140">Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-141">儲存在此欄位中的字元不能在<xref:System.IO.Path.InvalidPathChars>。</span><span class="sxs-lookup"><span data-stu-id="f886d-141">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="f886d-142">這個欄位可以設定為相同的值<xref:System.IO.Path.DirectorySeparatorChar>。</span><span class="sxs-lookup"><span data-stu-id="f886d-142">This field can be set to the same value as <xref:System.IO.Path.DirectorySeparatorChar>.</span></span> <span data-ttu-id="f886d-143">`AltDirectorySeparatorChar` 和<xref:System.IO.Path.DirectorySeparatorChar>都適用於分隔目錄層級的路徑字串中。</span><span class="sxs-lookup"><span data-stu-id="f886d-143">`AltDirectorySeparatorChar` and <xref:System.IO.Path.DirectorySeparatorChar> are both valid for separating directory levels in a path string.</span></span>  
  
 <span data-ttu-id="f886d-144">這個欄位的值是正斜線 （'/') 在 Windows、 UNIX 和 Macintosh 作業系統上。</span><span class="sxs-lookup"><span data-stu-id="f886d-144">The value of this field is a slash ('/') on Windows, UNIX and Macintosh operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-145">下列程式碼範例示範使用`AltDirectorySeparatorChar`欄位。</span><span class="sxs-lookup"><span data-stu-id="f886d-145">The following code example demonstrates a use of the `AltDirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeExtension">
      <MemberSignature Language="C#" Value="public static string ChangeExtension (string path, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeExtension(string path, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.ChangeExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeExtension (path As String, extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeExtension(System::String ^ path, System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member ChangeExtension : string * string -&gt; string" Usage="System.IO.Path.ChangeExtension (path, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-146">要修改的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-146">The path information to modify.</span>
          </span>
          <span data-ttu-id="f886d-147">路徑不可以包含定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 的任何一個字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-147">The path cannot contain any of the characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </param>
        <param name="extension">
          <span data-ttu-id="f886d-148">新的副檔名 (可能有前置句點)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-148">The new extension (with or without a leading period).</span>
          </span>
          <span data-ttu-id="f886d-149">指定 <see langword="null" /> 以從「路徑」<c></c>移除現有副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-149">Specify <see langword="null" /> to remove an existing extension from <c>path</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-150">變更路徑字串的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-150">Changes the extension of a path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-151">已修改的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-151">The modified path information.</span>
          </span>
          <span data-ttu-id="f886d-152">在 Windows 架構桌面平台上，如果 <paramref name="path" /> 為 <see langword="null" /> 或空字串 ("")，則會傳回未修改的路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-152">On Windows-based desktop platforms, if <paramref name="path" /> is <see langword="null" /> or an empty string (""), the path information is returned unmodified.</span>
          </span>
          <span data-ttu-id="f886d-153">如果 <paramref name="extension" /> 為 <see langword="null" />，則傳回的字串會包含已移除其副檔名的指定路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-153">If <paramref name="extension" /> is <see langword="null" />, the returned string contains the specified path with its extension removed.</span>
          </span>
          <span data-ttu-id="f886d-154">如果 <paramref name="path" /> 沒有副檔名，並且 <paramref name="extension" /> 不是 <see langword="null" />，則傳回的路徑字串會包含附加至 <paramref name="path" /> 結尾的 <paramref name="extension" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-154">If <paramref name="path" /> has no extension, and <paramref name="extension" /> is not <see langword="null" />, the returned path string contains <paramref name="extension" /> appended to the end of <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-155">如果沒有`path`也`extension`包含句點 （.）、`ChangeExtension`加入句號。</span><span class="sxs-lookup"><span data-stu-id="f886d-155">If neither `path` nor `extension` contains a period (.), `ChangeExtension` adds the period.</span></span>  
  
 <span data-ttu-id="f886d-156">`extension`參數可以包含多個句號和任何有效的路徑字元，而且可以任何長度。</span><span class="sxs-lookup"><span data-stu-id="f886d-156">The `extension` parameter can contain multiple periods and any valid path characters, and can be any length.</span></span> <span data-ttu-id="f886d-157">如果`extension`是`null`，傳回的字串包含的內容`path`與最後一個期間和之後的所有字元移除。</span><span class="sxs-lookup"><span data-stu-id="f886d-157">If `extension` is `null`, the returned string contains the contents of `path` with the last period and all characters following it removed.</span></span>  
  
 <span data-ttu-id="f886d-158">如果`extension`為空字串，傳回的路徑字串中包含的內容`path`移除最後一個句點之後的任何字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-158">If `extension` is an empty string, the returned path string contains the contents of `path` with any characters following the last period removed.</span></span>  
  
 <span data-ttu-id="f886d-159">如果`path`並未擴充功能和`extension`不`null`，傳回的字串包含`path`後面`extension`。</span><span class="sxs-lookup"><span data-stu-id="f886d-159">If `path` does not have an extension and `extension` is not `null`, the returned string contains `path` followed by `extension`.</span></span>  
  
 <span data-ttu-id="f886d-160">如果`extension`不`null`，而且不包含前置的句點，期間加入。</span><span class="sxs-lookup"><span data-stu-id="f886d-160">If `extension` is not `null` and does not contain a leading period, the period is added.</span></span>  
  
 <span data-ttu-id="f886d-161">如果`path`包含多個句號隔開，多個延伸模組傳回的字串包含的內容`path`與最後一個期間和之後的所有字元取代`extension`。</span><span class="sxs-lookup"><span data-stu-id="f886d-161">If `path` contains a multiple extension separated by multiple periods, the returned string contains the contents of `path` with the last period and all characters following it replaced by `extension`.</span></span> <span data-ttu-id="f886d-162">例如，如果`path`是 「 \Dir1\examples\pathtests.csx.txt"和`extension`"cs"，修改過的路徑是"\Dir1\examples\pathtests.csx.cs"。</span><span class="sxs-lookup"><span data-stu-id="f886d-162">For example, if `path` is "\Dir1\examples\pathtests.csx.txt" and `extension` is "cs", the modified path is "\Dir1\examples\pathtests.csx.cs".</span></span>  
  
 <span data-ttu-id="f886d-163">您不可以確認傳回的結果會在所有案例中有效。</span><span class="sxs-lookup"><span data-stu-id="f886d-163">It is not possible to verify that the returned results are valid in all scenarios.</span></span> <span data-ttu-id="f886d-164">例如，如果`path`是空的`extension`附加。</span><span class="sxs-lookup"><span data-stu-id="f886d-164">For example, if `path` is empty, `extension` is appended.</span></span>  
  
 <span data-ttu-id="f886d-165">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-165">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-166">下列程式碼範例示範使用`ChangeExtension`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-166">The following code example demonstrates a use of the `ChangeExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#1)]
 [!code-csharp[System.IO.Path Members#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#1)]
 [!code-vb[System.IO.Path Members#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-167">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-167">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-168">將多個字串合併為一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-168">Combines strings into a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberSignature Language="F#" Value="static member Combine : string[] -&gt; string" Usage="System.IO.Path.Combine paths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths">
          <span data-ttu-id="f886d-169">路徑中各部分的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-169">An array of parts of the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-170">將一個字串陣列合併為單一路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-170">Combines an array of strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-171">合併的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-171">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-172">`paths` 應該是路徑的要合併部分的陣列。</span><span class="sxs-lookup"><span data-stu-id="f886d-172">`paths` should be an array of the parts of the path to combine.</span></span> <span data-ttu-id="f886d-173">如果其中一個後續的路徑是絕對路徑，然後合併操作會重設開頭的絕對路徑，並捨棄所有先前合併的路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-173">If the one of the subsequent paths is an absolute path, then the combine operation resets starting with that absolute path, discarding all previous combined paths.</span></span>  
  
 <span data-ttu-id="f886d-174">合併的路徑會省略零長度字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-174">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f886d-175">如果有空格，不會剖析參數。</span><span class="sxs-lookup"><span data-stu-id="f886d-175">The parameters are not parsed if they have white space.</span></span>  
  
 <span data-ttu-id="f886d-176">並非所有的目錄和檔案名稱無效的字元會解譯為無法接受由`Combine`方法，因為您可以使用這些字元的搜尋萬用字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-176">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f886d-177">例如，雖然`Path.Combine("c:\\", "*.txt")`可能無效如果您是從它建立檔案，則它是有效的搜尋字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-177">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f886d-178">它會因此成功經過解譯`Combine`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-178">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-179">下列範例會結合為一個路徑的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="f886d-179">The following example combines an array of strings into a path.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#3)]
 [!code-vb[System.IO.Path.Combine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-180">陣列中的一個字串包含在 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中定義的一個或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-180">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f886d-181">陣列中的一個字串為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-181">One of the strings in the array is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="f886d-182">要合併的第一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-182">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="f886d-183">要合併的第二個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-183">The second path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-184">將兩個字串合併為一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-184">Combines two strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-185">合併的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-185">The combined paths.</span>
          </span>
          <span data-ttu-id="f886d-186">如果指定的其中一個路徑是長度為零的字串，這個方法會傳回其他路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-186">If one of the specified paths is a zero-length string, this method returns the other path.</span>
          </span>
          <span data-ttu-id="f886d-187">如果 <paramref name="path2" /> 包含絕對路徑，這個方法會傳回 <paramref name="path2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-187">If <paramref name="path2" /> contains an absolute path, this method returns <paramref name="path2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-188">如果`path1`不是磁碟機參照 （亦即，"C:"或"D:"） 和結尾不是有效的分隔符號字元如中所定義<xref:System.IO.Path.DirectorySeparatorChar>， <xref:System.IO.Path.AltDirectorySeparatorChar>，或<xref:System.IO.Path.VolumeSeparatorChar>，<xref:System.IO.Path.DirectorySeparatorChar>附加至`path1`之前串連。</span><span class="sxs-lookup"><span data-stu-id="f886d-188">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="f886d-189">如果`path2`不包含根目錄 (例如，如果`path2`開頭不是分隔符號字元或磁碟機規格)，結果是串連兩個路徑中, 介的分隔符號字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-189">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f886d-190">如果`path2`包含根，`path2`傳回。</span><span class="sxs-lookup"><span data-stu-id="f886d-190">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f886d-191">如果有空格，不會剖析參數。</span><span class="sxs-lookup"><span data-stu-id="f886d-191">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f886d-192">因此，如果`path2`包含泛空白字元 (例如，"\file.txt")，<xref:System.IO.Path.Combine%2A>方法會附加`path2`至`path1`而不是只傳回`path2`。</span><span class="sxs-lookup"><span data-stu-id="f886d-192">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1` instead of returning only `path2`.</span></span>  
  
 <span data-ttu-id="f886d-193">並非所有的目錄和檔案名稱無效的字元會解譯為無法接受由`Combine`方法，因為您可以使用這些字元的搜尋萬用字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-193">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f886d-194">例如，雖然`Path.Combine("c:\\", "*.txt")`可能無效如果您是從它建立檔案，則它是有效的搜尋字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-194">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f886d-195">它會因此成功經過解譯`Combine`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-195">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
 <span data-ttu-id="f886d-196">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-197">下列程式碼範例示範如何使用`Combine`Windows 架構桌面平台上的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-197">The following code example demonstrates using the `Combine` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[pathcombine#1](~/samples/snippets/cpp/VS_Snippets_CLR/pathcombine/CPP/pathcombine.cpp#1)]
 [!code-csharp[pathcombine#1](~/samples/snippets/csharp/VS_Snippets_CLR/pathcombine/CS/pathcombine.cs#1)]
 [!code-vb[pathcombine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/pathcombine/VB/pathcombine.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-198">
            <paramref name="path1" /> 或 <paramref name="path2" /> 含有 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中定義的一個或多個不正確字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-198">
              <paramref name="path1" /> or <paramref name="path2" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f886d-199">
            <paramref name="path1" /> 或 <paramref name="path2" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-199">
              <paramref name="path1" /> or <paramref name="path2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="f886d-200">要合併的第一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-200">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="f886d-201">要合併的第二個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-201">The second path to combine.</span>
          </span>
        </param>
        <param name="path3">
          <span data-ttu-id="f886d-202">要合併的第三個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-202">The third path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-203">將三個字串合併為一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-203">Combines three strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-204">合併的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-204">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-205">`path1` 應該是絕對路徑 (例如，"d:\archives"或"\\\archives\public")。</span><span class="sxs-lookup"><span data-stu-id="f886d-205">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").</span></span> <span data-ttu-id="f886d-206">如果`path2`或`path3`也是絕對路徑，合併作業捨棄所有先前合併的路徑和重設為絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-206">If `path2` or `path3` is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="f886d-207">合併的路徑會省略零長度字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-207">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f886d-208">如果`path1`不是磁碟機參照 （亦即，"C:"或"D:"） 和結尾不是有效的分隔符號字元如中所定義<xref:System.IO.Path.DirectorySeparatorChar>， <xref:System.IO.Path.AltDirectorySeparatorChar>，或<xref:System.IO.Path.VolumeSeparatorChar>，<xref:System.IO.Path.DirectorySeparatorChar>附加至`path1`之前串連。</span><span class="sxs-lookup"><span data-stu-id="f886d-208">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="f886d-209">如果`path2`不包含根目錄 (例如，如果`path2`開頭不是分隔符號字元或磁碟機規格)，結果是串連兩個路徑中, 介的分隔符號字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-209">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f886d-210">如果`path2`包含根，`path2`傳回。</span><span class="sxs-lookup"><span data-stu-id="f886d-210">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f886d-211">如果有空格，不會剖析參數。</span><span class="sxs-lookup"><span data-stu-id="f886d-211">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f886d-212">因此，如果`path2`包含泛空白字元 (例如，"\file.txt")，<xref:System.IO.Path.Combine%2A>方法會附加`path2`至`path1`。</span><span class="sxs-lookup"><span data-stu-id="f886d-212">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="f886d-213">並非所有的目錄和檔案名稱無效的字元會解譯為無法接受由`Combine`方法，因為您可以使用這些字元的搜尋萬用字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-213">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f886d-214">例如，雖然`Path.Combine("c:\\", "*.txt")`可能無效如果您是從它建立檔案，則它是有效的搜尋字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-214">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f886d-215">它會因此成功經過解譯`Combine`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-215">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-216">下列範例會結合三個路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-216">The following example combines three paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#1)]
 [!code-vb[System.IO.Path.Combine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-217">
            <paramref name="path1" />、<paramref name="path2" /> 或 <paramref name="path3" /> 包含一或多個在 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中所定義的無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-217">
              <paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f886d-218">
            <paramref name="path1" />
            <paramref name="path2" /> 或 <paramref name="path3" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-218">
              <paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3, path4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
        <Parameter Name="path4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1">
          <span data-ttu-id="f886d-219">要合併的第一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-219">The first path to combine.</span>
          </span>
        </param>
        <param name="path2">
          <span data-ttu-id="f886d-220">要合併的第二個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-220">The second path to combine.</span>
          </span>
        </param>
        <param name="path3">
          <span data-ttu-id="f886d-221">要合併的第三個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-221">The third path to combine.</span>
          </span>
        </param>
        <param name="path4">
          <span data-ttu-id="f886d-222">要合併的第四個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-222">The fourth path to combine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-223">將四個字串合併為一個路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-223">Combines four strings into a path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-224">合併的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-224">The combined paths.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-225">`path1` 應該是絕對路徑 (例如，"d:\archives"或"\\\archives\public")。如果其中一個後續的路徑也是絕對路徑，合併作業會捨棄所有先前合併的路徑，並會重設為絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-225">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").If one of the subsequent paths is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="f886d-226">合併的路徑會省略零長度字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-226">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f886d-227">如果`path1`不是磁碟機參照 （亦即，"C:"或"D:"） 和結尾不是有效的分隔符號字元如中所定義<xref:System.IO.Path.DirectorySeparatorChar>， <xref:System.IO.Path.AltDirectorySeparatorChar>，或<xref:System.IO.Path.VolumeSeparatorChar>，<xref:System.IO.Path.DirectorySeparatorChar>附加至`path1`之前串連。</span><span class="sxs-lookup"><span data-stu-id="f886d-227">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="f886d-228">如果`path2`不包含根目錄 (例如，如果`path2`開頭不是分隔符號字元或磁碟機規格)，結果是串連兩個路徑中, 介的分隔符號字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-228">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f886d-229">如果`path2`包含根，`path2`傳回。</span><span class="sxs-lookup"><span data-stu-id="f886d-229">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f886d-230">如果有空格，不會剖析參數。</span><span class="sxs-lookup"><span data-stu-id="f886d-230">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f886d-231">因此，如果`path2`包含泛空白字元 (例如，"\file.txt")，<xref:System.IO.Path.Combine%2A>方法會附加`path2`至`path1`。</span><span class="sxs-lookup"><span data-stu-id="f886d-231">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="f886d-232">並非所有的目錄和檔案名稱無效的字元會解譯為無法接受由`Combine`方法，因為您可以使用這些字元的搜尋萬用字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-232">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f886d-233">例如，雖然`Path.Combine("c:\\", "*.txt")`可能無效如果您是從它建立檔案，則它是有效的搜尋字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-233">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f886d-234">它會因此成功經過解譯`Combine`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-234">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-235">下列範例會將四個路徑結合。</span><span class="sxs-lookup"><span data-stu-id="f886d-235">The following example combines four paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#2)]
 [!code-vb[System.IO.Path.Combine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-236">
            <paramref name="path1" />、<paramref name="path2" />、<paramref name="path3" /> 或 <paramref name="path4" /> 含有 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中定義的一個或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-236">
              <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f886d-237">
            <paramref name="path1" />、<paramref name="path2" />、<paramref name="path3" /> 或 <paramref name="path4" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-237">
              <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char DirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char DirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.DirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char DirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable DirectorySeparatorChar : char" Usage="System.IO.Path.DirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-238">提供平台特定字元，用以在反映階層式檔案系統組織的路徑字串中分隔目錄層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-238">Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-239">儲存在此欄位中的字元不能在<xref:System.IO.Path.InvalidPathChars>。</span><span class="sxs-lookup"><span data-stu-id="f886d-239">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="f886d-240"><xref:System.IO.Path.AltDirectorySeparatorChar> 和`DirectorySeparatorChar`都適用於分隔目錄層級的路徑字串中。</span><span class="sxs-lookup"><span data-stu-id="f886d-240"><xref:System.IO.Path.AltDirectorySeparatorChar> and `DirectorySeparatorChar` are both valid for separating directory levels in a path string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-241">下列程式碼範例示範如何使用`DirectorySeparatorChar`欄位。</span><span class="sxs-lookup"><span data-stu-id="f886d-241">The following code example demonstrates the use of the `DirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetDirectoryName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetDirectoryName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetDirectoryName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static string GetDirectoryName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : string -&gt; string" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-242">檔案或目錄的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-242">The path of a file or directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-243">傳回指定路徑字串的目錄資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-243">Returns the directory information for the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-244">
            <paramref name="path" /> 的目錄資訊；如果 <paramref name="path" /> 表示根目錄或為 null，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-244">Directory information for <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> denotes a root directory or is null.</span>
          </span>
          <span data-ttu-id="f886d-245">如果 <paramref name="path" /> 不包含目錄資訊，則傳回 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-245">Returns <see cref="F:System.String.Empty" /> if <paramref name="path" /> does not contain directory information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-246">在大部分情況下，這個方法所傳回的字串所組成，但不是包括最後一個路徑中的所有字元<xref:System.IO.Path.DirectorySeparatorChar>或<xref:System.IO.Path.AltDirectorySeparatorChar>。</span><span class="sxs-lookup"><span data-stu-id="f886d-246">In most cases, the string returned by this method consists of all characters in the path up to but not including the last <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span> <span data-ttu-id="f886d-247">如果路徑包含根目錄，例如"c:\\"，則傳回 null。</span><span class="sxs-lookup"><span data-stu-id="f886d-247">If the path consists of a root directory, such as "c:\\", null is returned.</span></span> <span data-ttu-id="f886d-248">請注意，這個方法不支援使用 「 檔案:"。</span><span class="sxs-lookup"><span data-stu-id="f886d-248">Note that this method does not support paths using "file:".</span></span> <span data-ttu-id="f886d-249">因為傳回的路徑不包含<xref:System.IO.Path.DirectorySeparatorChar>或<xref:System.IO.Path.AltDirectorySeparatorChar>，將傳回的路徑傳遞回<xref:System.IO.Path.GetDirectoryName%2A>方法會導致每個後續呼叫上的結果字串的一個資料夾層級的截斷。</span><span class="sxs-lookup"><span data-stu-id="f886d-249">Because the returned path does not include the <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>, passing the returned path back into the <xref:System.IO.Path.GetDirectoryName%2A> method will result in the truncation of one folder level per subsequent call on the result string.</span></span> <span data-ttu-id="f886d-250">例如，將路徑 「 C:\Directory\SubDirectory\test.txt"傳遞至<xref:System.IO.Path.GetDirectoryName%2A>方法會傳回"C:\Directory\SubDirectory"。</span><span class="sxs-lookup"><span data-stu-id="f886d-250">For example, passing the path "C:\Directory\SubDirectory\test.txt" into the <xref:System.IO.Path.GetDirectoryName%2A> method will return "C:\Directory\SubDirectory".</span></span> <span data-ttu-id="f886d-251">將"C:\Directory\SubDirectory 」，該字串傳遞至<xref:System.IO.Path.GetDirectoryName%2A>會導致 「 C:\Directory"。</span><span class="sxs-lookup"><span data-stu-id="f886d-251">Passing that string, "C:\Directory\SubDirectory", into <xref:System.IO.Path.GetDirectoryName%2A> will result in "C:\Directory".</span></span>  
  
 <span data-ttu-id="f886d-252">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-252">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-253">下列程式碼範例示範如何使用`GetDirectoryName`Windows 架構桌面平台上的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-253">The following code example demonstrates using the `GetDirectoryName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#3)]
 [!code-csharp[System.IO.Path Members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#3)]
 [!code-vb[System.IO.Path Members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-254">
            <paramref name="path" />參數包含無效字元、是空的，或只包含空格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-254">The <paramref name="path" /> parameter contains invalid characters, is empty, or contains only white spaces.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f886d-255">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.IO.IOException" />。</para>
            </block>
            <paramref name="path" /> 參數超過系統定義的長度上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-255">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.  </para>
              </block>  The <paramref name="path" /> parameter is longer than the system-defined maximum length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-256">要從中取得副檔名的路徑字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-256">The path string from which to get the extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-257">傳回指定路徑字串的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-257">Returns the extension of the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-258">指定路徑的副檔名 (包括句點 ".")、<see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-258">The extension of the specified path (including the period "."), or <see langword="null" />, or <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="f886d-259">如果 <paramref name="path" /> 是 <see langword="null" />，則 <see cref="M:System.IO.Path.GetExtension(System.String)" /> 會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-259">If <paramref name="path" /> is <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f886d-260">如果 <paramref name="path" /> 沒有副檔名資訊，則 <see cref="M:System.IO.Path.GetExtension(System.String)" /> 會傳回 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-260">If <paramref name="path" /> does not have extension information, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-261">副檔名`path`取得藉由搜尋`path`的句號 （.），而繼續到路徑的路徑中的最後一個字元開始。</span><span class="sxs-lookup"><span data-stu-id="f886d-261">The extension of `path` is obtained by searching `path` for a period (.), starting with the last character in path and continuing toward the start of path.</span></span> <span data-ttu-id="f886d-262">如果之前，先找到句號<xref:System.IO.Path.DirectorySeparatorChar>或<xref:System.IO.Path.AltDirectorySeparatorChar>字元，傳回的字串會包含句號，並將字元後; 否則<xref:System.String.Empty>傳回。</span><span class="sxs-lookup"><span data-stu-id="f886d-262">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned string contains the period and the characters after it; otherwise, <xref:System.String.Empty> is returned.</span></span>  
  
 <span data-ttu-id="f886d-263">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-263">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-264">下列程式碼範例示範如何使用`GetExtension`Windows 架構桌面平台上的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-264">The following code example demonstrates using the `GetExtension` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#4)]
 [!code-csharp[System.IO.Path Members#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#4)]
 [!code-vb[System.IO.Path Members#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-265">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-265">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-266">要從中取得檔案名稱和副檔名的路徑字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-266">The path string from which to obtain the file name and extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-267">傳回指定路徑字串的檔案名稱和副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-267">Returns the file name and extension of the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-268">
            <paramref name="path" /> 中最後一個目錄字元之後的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-268">The characters after the last directory character in <paramref name="path" />.</span>
          </span>
          <span data-ttu-id="f886d-269">如果 <paramref name="path" /> 的最後一個字元是目錄或磁碟區分隔符號字元，這個方法會傳回 <see cref="F:System.String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-269">If the last character of <paramref name="path" /> is a directory or volume separator character, this method returns <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="f886d-270">如果 <paramref name="path" /> 為 <see langword="null" />，這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-270">If <paramref name="path" /> is <see langword="null" />, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-271">傳回的值是`null`如果檔案路徑`null`。</span><span class="sxs-lookup"><span data-stu-id="f886d-271">The returned value is `null` if the file path is `null`.</span></span>  
  
 <span data-ttu-id="f886d-272">用來判斷檔案名稱的開始分隔符號字元都是<xref:System.IO.Path.DirectorySeparatorChar>和<xref:System.IO.Path.AltDirectorySeparatorChar>。</span><span class="sxs-lookup"><span data-stu-id="f886d-272">The separator characters used to determine the start of the file name are <xref:System.IO.Path.DirectorySeparatorChar> and <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span>  
  
 <span data-ttu-id="f886d-273">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-273">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-274">下列程式碼範例示範的行為`GetFileName`Windows 架構桌面平台上的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-274">The following code example demonstrates the behavior of the `GetFileName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#5)]
 [!code-csharp[System.IO.Path Members#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#5)]
 [!code-vb[System.IO.Path Members#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-275">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-275">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileNameWithoutExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static string GetFileNameWithoutExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileNameWithoutExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileNameWithoutExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : string -&gt; string" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-276">檔案的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-276">The path of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-277">傳回沒有副檔名的指定路徑字串的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-277">Returns the file name of the specified path string without the extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-278">
            <see cref="M:System.IO.Path.GetFileName(System.String)" /> 傳回的字串，但不包含最後的句號 (.) 以及其後的所有字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-278">The string returned by <see cref="M:System.IO.Path.GetFileName(System.String)" />, minus the last period (.) and all characters following it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-279">這個方法不會確認此路徑或檔案名稱存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-279">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f886d-280">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-280">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-281">下列程式碼範例示範使用`GetFileNameWithoutExtension`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-281">The following code example demonstrates a use of the `GetFileNameWithoutExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#6)]
 [!code-csharp[System.IO.Path Members#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#6)]
 [!code-vb[System.IO.Path Members#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-282">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-282">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string -&gt; string" Usage="System.IO.Path.GetFullPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-283">要為其取得絕對路徑資訊的檔案或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-283">The file or directory for which to obtain absolute path information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-284">傳回指定路徑字串的絕對路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-284">Returns the absolute path for the specified path string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-285">
            <paramref name="path" /> 的完整位置，例如 "C:\MyFile.txt"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-285">The fully qualified location of <paramref name="path" />, such as "C:\MyFile.txt".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-286">.NET Framework 不支援直接存取實體磁碟，透過路徑的裝置名稱，例如"\\\\。 \PHYSICALDRIVE0"。</span><span class="sxs-lookup"><span data-stu-id="f886d-286">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="f886d-287">絕對路徑中包含的系統上尋找檔案或目錄所需的所有資訊。</span><span class="sxs-lookup"><span data-stu-id="f886d-287">The absolute path includes all information required to locate a file or directory on a system.</span></span>  
  
 <span data-ttu-id="f886d-288">指定檔案或目錄的`path`不需要存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-288">The file or directory specified by `path` is not required to exist.</span></span> <span data-ttu-id="f886d-289">例如，如果 c:\temp\newdir 是目前的目錄，則呼叫`GetFullPath`檔案名稱，例如 test.txt 傳回 c:\temp\newdir\test.txt。</span><span class="sxs-lookup"><span data-stu-id="f886d-289">For example, if c:\temp\newdir is the current directory, calling `GetFullPath` on a file name such as test.txt returns c:\temp\newdir\test.txt.</span></span> <span data-ttu-id="f886d-290">檔案必須存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-290">The file need not exist.</span></span>  
  
 <span data-ttu-id="f886d-291">不過，如果`path`存在，呼叫端必須具有要取得的路徑資訊的權限`path`。</span><span class="sxs-lookup"><span data-stu-id="f886d-291">However, if `path` does exist, the caller must have permission to obtain path information for `path`.</span></span> <span data-ttu-id="f886d-292">請注意，不同於大部分<xref:System.IO.Path>類別，這個方法會存取檔案系統。</span><span class="sxs-lookup"><span data-stu-id="f886d-292">Note that unlike most members of the <xref:System.IO.Path> class, this method accesses the file system.</span></span>  
  
 <span data-ttu-id="f886d-293">這個方法會使用目前的目錄和目前的磁碟區資訊來完整限定`path`。</span><span class="sxs-lookup"><span data-stu-id="f886d-293">This method uses current directory and current volume information to fully qualify `path`.</span></span> <span data-ttu-id="f886d-294">如果您指定的檔案名稱僅在`path`，`GetFullPath`傳回目前目錄的完整的路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-294">If you specify a file name only in `path`, `GetFullPath` returns the fully qualified path of the current directory.</span></span>  
  
 <span data-ttu-id="f886d-295">如果您要傳入的短檔名，它會展開長檔名。</span><span class="sxs-lookup"><span data-stu-id="f886d-295">If you pass in a short file name, it is expanded to a long file name.</span></span>  
  
 <span data-ttu-id="f886d-296">如果路徑不包含任何有效字元是無效除非它包含一或多個"。"字元後面接著任何數目的空格，則它會剖析為"。".."。</span><span class="sxs-lookup"><span data-stu-id="f886d-296">If a path contains no significant characters it is invalid unless it contains one or more "." characters followed by any number of spaces, then it will be parsed as either "." or "..".</span></span>  
  
 <span data-ttu-id="f886d-297">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-297">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-298">下列程式碼範例示範`GetFullPath`Windows 架構桌面平台上的方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-298">The following code example demonstrates the `GetFullPath` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#7)]
 [!code-csharp[System.IO.Path Members#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#7)]
 [!code-vb[System.IO.Path Members#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-299">
            <paramref name="path" /> 是長度為零的字串、只包含泛空白字元，或包含 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中定義的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-299">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
          <span data-ttu-id="f886d-300">或系統無法擷取絕對路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-300">-or-  The system could not retrieve the absolute path.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f886d-301">呼叫端沒有必要的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-301">The caller does not have the required permissions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f886d-302">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-302">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f886d-303">
            <paramref name="path" /> 含有不屬於磁碟區識別碼 (例如 "c:\\") 一部分的冒號 (":")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-303">
              <paramref name="path" /> contains a colon (":") that is not part of a volume identifier (for example, "c:\\").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="f886d-304">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-304">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="f886d-305">為路徑的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-305">for access to the path.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path, System::String ^ basePath);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string * string -&gt; string" Usage="System.IO.Path.GetFullPath (path, basePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="basePath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidFileNameChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidFileNameChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidFileNameChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidFileNameChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidFileNameChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidFileNameChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidFileNameChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidFileNameChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f886d-306">取得陣列，該陣列包含檔案名稱中不允許的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-306">Gets an array containing the characters that are not allowed in file names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-307">陣列，該陣列包含檔案名稱中不允許的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-307">An array containing the characters that are not allowed in file names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-308">不保證此方法傳回的陣列包含一組完整的檔案和目錄名稱中無效的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-308">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f886d-309">一組完整的無效的字元可能會因檔案系統。</span><span class="sxs-lookup"><span data-stu-id="f886d-309">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f886d-310">比方說，在 Windows 架構桌面平台無效路徑字元可能會包括 ASCII/Unicode 字元 1 到 31，以及加上引號 （"）、 小於 (\<)、 大於 (>)、 管道 (&#124;)、 退格鍵 (\b)、 null (\0) 和定位字元 (\t)。</span><span class="sxs-lookup"><span data-stu-id="f886d-310">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-311">下列程式碼範例示範<xref:System.IO.Path.GetInvalidFileNameChars%2A>方法和<xref:System.IO.Path.GetInvalidPathChars%2A>方法來擷取無效的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-311">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidPathChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidPathChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidPathChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidPathChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidPathChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidPathChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidPathChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f886d-312">取得陣列，該陣列包含路徑名稱中不允許的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-312">Gets an array containing the characters that are not allowed in path names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-313">陣列，該陣列包含路徑名稱中不允許的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-313">An array containing the characters that are not allowed in path names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-314">不保證此方法傳回的陣列包含一組完整的檔案和目錄名稱中無效的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-314">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f886d-315">一組完整的無效的字元可能會因檔案系統。</span><span class="sxs-lookup"><span data-stu-id="f886d-315">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f886d-316">比方說，在 Windows 架構桌面平台無效路徑字元可能會包括 ASCII/Unicode 字元 1 到 31，以及加上引號 （"）、 小於 (\<)、 大於 (>)、 管道 (&#124;)、 退格鍵 (\b)、 null (\0) 和定位字元 (\t)。</span><span class="sxs-lookup"><span data-stu-id="f886d-316">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-317">下列程式碼範例示範<xref:System.IO.Path.GetInvalidFileNameChars%2A>方法和<xref:System.IO.Path.GetInvalidPathChars%2A>方法來擷取無效的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-317">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetPathRoot (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetPathRoot(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetPathRoot(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static string GetPathRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPathRoot(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : string -&gt; string" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-318">要從中取得根目錄資訊的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-318">The path from which to obtain root directory information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-319">取得指定路徑的根目錄資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-319">Gets the root directory information of the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-320">
            <paramref name="path" /> 的根目錄，例如 "C:\\"；如果 <paramref name="path" /> 為 <see langword="null" />，則為 <see langword="null" />；如果 <paramref name="path" /> 不包含根目錄資訊，則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-320">The root directory of <paramref name="path" />, such as "C:\\", or <see langword="null" /> if <paramref name="path" /> is <see langword="null" />, or an empty string if <paramref name="path" /> does not contain root directory information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-321">這個方法不會確認此路徑或檔案名稱存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-321">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f886d-322">這個方法所傳回的字串模式可能如下所示：</span><span class="sxs-lookup"><span data-stu-id="f886d-322">Possible patterns for the string returned by this method are as follows:</span></span>  
  
-   <span data-ttu-id="f886d-323">空字串 (`path`目前的磁碟機或磁碟區上指定的相對路徑)。</span><span class="sxs-lookup"><span data-stu-id="f886d-323">An empty string (`path` specified a relative path on the current drive or volume).</span></span>  
  
-   <span data-ttu-id="f886d-324">"/"(`path`指定目前的磁碟機上的絕對路徑)。</span><span class="sxs-lookup"><span data-stu-id="f886d-324">"/" (`path` specified an absolute path on the current drive).</span></span>  
  
-   <span data-ttu-id="f886d-325">"X": (`path`指定為相對路徑上的磁碟機，其中 X 代表磁碟機或磁碟區代號)。</span><span class="sxs-lookup"><span data-stu-id="f886d-325">"X:" (`path` specified a relative path on a drive, where X represents a drive or volume letter).</span></span>  
  
-   <span data-ttu-id="f886d-326">"X: /"(`path`指定絕對路徑指定磁碟機上)。</span><span class="sxs-lookup"><span data-stu-id="f886d-326">"X:/" (`path` specified an absolute path on a given drive).</span></span>  
  
-   <span data-ttu-id="f886d-327">「\\\ComputerName\SharedFolder 」 （UNC 路徑）。</span><span class="sxs-lookup"><span data-stu-id="f886d-327">"\\\ComputerName\SharedFolder" (a UNC path).</span></span>  
  
 <span data-ttu-id="f886d-328">.NET Framework 不支援直接存取實體磁碟，透過路徑的裝置名稱，例如"\\\\。 \PHYSICALDRIVE0"。</span><span class="sxs-lookup"><span data-stu-id="f886d-328">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="f886d-329">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-329">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-330">下列程式碼範例示範使用`GetPathRoot`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-330">The following code example demonstrates a use of the `GetPathRoot` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#8)]
 [!code-csharp[System.IO.Path Members#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#8)]
 [!code-vb[System.IO.Path Members#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-331">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-331">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
          <span data-ttu-id="f886d-332">或 <see cref="F:System.String.Empty" /> 已傳遞給 <paramref name="path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-332">-or-  <see cref="F:System.String.Empty" /> was passed to <paramref name="path" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRandomFileName">
      <MemberSignature Language="C#" Value="public static string GetRandomFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRandomFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRandomFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRandomFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRandomFileName();" />
      <MemberSignature Language="F#" Value="static member GetRandomFileName : unit -&gt; string" Usage="System.IO.Path.GetRandomFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f886d-333">傳回隨機資料夾名稱或檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-333">Returns a random folder name or file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-334">隨機資料夾名稱或檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-334">A random folder name or file name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-335"><xref:System.IO.Path.GetRandomFileName%2A>方法會傳回可用來當作資料夾名稱或檔案名稱的密碼編譯方面強式的隨機字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-335">The <xref:System.IO.Path.GetRandomFileName%2A> method returns a cryptographically strong, random string that can be used as either a folder name or a file name.</span></span> <span data-ttu-id="f886d-336">不同於<xref:System.IO.Path.GetTempFileName%2A>，<xref:System.IO.Path.GetRandomFileName%2A>並不會建立檔案。</span><span class="sxs-lookup"><span data-stu-id="f886d-336">Unlike <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> does not create a file.</span></span> <span data-ttu-id="f886d-337">而不是最重要的檔案系統的安全性時，應該使用這個方法<xref:System.IO.Path.GetTempFileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="f886d-337">When the security of your file system is paramount, this method should be used instead of <xref:System.IO.Path.GetTempFileName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-338">下列範例顯示輸出來源<xref:System.IO.Path.GetRandomFileName%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-338">The following example show output from the <xref:System.IO.Path.GetRandomFileName%2A> method.</span></span>  
  
 [!code-csharp[System.IO.Path Members#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers20.cs#20)]
 [!code-vb[System.IO.Path Members#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers20.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativePath">
      <MemberSignature Language="C#" Value="public static string GetRelativePath (string relativeTo, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRelativePath(string relativeTo, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativePath (relativeTo As String, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRelativePath(System::String ^ relativeTo, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetRelativePath : string * string -&gt; string" Usage="System.IO.Path.GetRelativePath (relativeTo, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeTo">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="static member GetTempFileName : unit -&gt; string" Usage="System.IO.Path.GetTempFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f886d-339">在磁碟上建立具名之零位元組的唯一暫存檔案，然後傳回該檔案的完整路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-339">Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-340">暫存檔案的完整路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-340">The full path of the temporary file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-341">這個方法會建立暫存檔案。TMP 檔案的副檔名。</span><span class="sxs-lookup"><span data-stu-id="f886d-341">This method creates a temporary file with a .TMP file extension.</span></span> <span data-ttu-id="f886d-342">暫存檔案會在使用者的暫存資料夾，也就是路徑內建立傳回<xref:System.IO.Path.GetTempPath%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-342">The temporary file is created within the user’s temporary folder, which is the path returned by the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
 <span data-ttu-id="f886d-343"><xref:System.IO.Path.GetTempFileName%2A>方法會引發<xref:System.IO.IOException>如果它用來建立超過 65535 的檔案，而不刪除暫存檔案。</span><span class="sxs-lookup"><span data-stu-id="f886d-343">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if it is used to create more than 65535 files without deleting previous temporary files.</span></span>  
  
 <span data-ttu-id="f886d-344"><xref:System.IO.Path.GetTempFileName%2A>方法會引發<xref:System.IO.IOException>沒有唯一暫存檔案名稱是否可用。</span><span class="sxs-lookup"><span data-stu-id="f886d-344">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if no unique temporary file name is available.</span></span> <span data-ttu-id="f886d-345">若要解決這個錯誤，刪除所有不必要的暫存檔案。</span><span class="sxs-lookup"><span data-stu-id="f886d-345">To resolve this error, delete all unneeded temporary files.</span></span>  
  
 <span data-ttu-id="f886d-346">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-346">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f886d-347">發生 I/O 錯誤，例如沒有可用的唯一暫存檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-347">An I/O error occurs, such as no unique temporary file name is available.</span>
          </span>
          <span data-ttu-id="f886d-348">\- 或這個方法無法建立暫存檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-348">\- or -  This method was unable to create a temporary file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="f886d-349">用於寫入至暫存目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-349">for writing to the temporary directory.</span>
          </span>
          <span data-ttu-id="f886d-350">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-350">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTempPath">
      <MemberSignature Language="C#" Value="public static string GetTempPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempPath();" />
      <MemberSignature Language="F#" Value="static member GetTempPath : unit -&gt; string" Usage="System.IO.Path.GetTempPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f886d-351">傳回目前使用者的暫存資料夾的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-351">Returns the path of the current user's temporary folder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-352">暫存資料夾的路徑，結尾是反斜線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-352">The path to the temporary folder, ending with a backslash.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-353">這個方法會檢查存在的環境變數以下列順序，並使用找到的第一個路徑：</span><span class="sxs-lookup"><span data-stu-id="f886d-353">This method checks for the existence of environment variables in the following order and uses the first path found:</span></span>  
  
1.  <span data-ttu-id="f886d-354">TMP 環境變數所指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-354">The path specified by the TMP environment variable.</span></span>  
  
2.  <span data-ttu-id="f886d-355">TEMP 環境變數所指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-355">The path specified by the TEMP environment variable.</span></span>  
  
3.  <span data-ttu-id="f886d-356">使用者設定檔環境變數所指定的路徑。</span><span class="sxs-lookup"><span data-stu-id="f886d-356">The path specified by the USERPROFILE environment variable.</span></span>  
  
4.  <span data-ttu-id="f886d-357">Windows 目錄。</span><span class="sxs-lookup"><span data-stu-id="f886d-357">The Windows directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-358">下列程式碼將示範如何呼叫 <xref:System.IO.Path.GetTempPath%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-358">The following code shows how to call the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
```vb  
result As String = Path.GetTempPath()  
Console.WriteLine(result)  
```  
  
```csharp  
string result = Path.GetTempPath();  
Console.WriteLine(result);  
```  
  
 <span data-ttu-id="f886d-359">這個範例會產生類似下列的輸出。</span><span class="sxs-lookup"><span data-stu-id="f886d-359">This example produces output similar to the following.</span></span>  
  
```  
C:\Users\UserName\AppData\Local\Temp\  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f886d-360">呼叫端沒有必要的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-360">The caller does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="f886d-361">用於不受限制存取環境變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-361">for unrestricted access to environment variables.</span>
          </span>
          <span data-ttu-id="f886d-362">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-362">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : string -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-363">要在其中搜尋副檔名的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-363">The path to search for an extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-364">判斷路徑是否包括副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-364">Determines whether a path includes a file name extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-365">如果路徑中接在最後一個目錄分隔符號 (\\\ 或 /) 或磁碟區分隔符號 (:) 之後的字元包含句號 (.)，且後面接著一或多個字元，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-365">
              <see langword="true" /> if the characters that follow the last directory separator (\\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-366">從結尾開始`path`，這個方法會搜尋後接至少一個字元的句號 （.）。</span><span class="sxs-lookup"><span data-stu-id="f886d-366">Starting from the end of `path`, this method searches for a period (.) followed by at least one character.</span></span> <span data-ttu-id="f886d-367">如果此模式之前，先找到<xref:System.IO.Path.DirectorySeparatorChar>， <xref:System.IO.Path.AltDirectorySeparatorChar>，或<xref:System.IO.Path.VolumeSeparatorChar>遇到字元時，這個方法會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="f886d-367">If this pattern is found before a <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar> character is encountered, this method returns `true`.</span></span>  
  
 <span data-ttu-id="f886d-368">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-369">下列程式碼範例示範如何使用`HasExtension`方法。</span><span class="sxs-lookup"><span data-stu-id="f886d-369">The following code example demonstrates the use of the `HasExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#11)]
 [!code-csharp[System.IO.Path Members#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#11)]
 [!code-vb[System.IO.Path Members#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-370">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-370">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvalidPathChars">
      <MemberSignature Language="C#" Value="public static readonly char[] InvalidPathChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char[] InvalidPathChars" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.InvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidPathChars As Char() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;char&gt; ^ InvalidPathChars;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPathChars : char[]" Usage="System.IO.Path.InvalidPathChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("see GetInvalidPathChars and GetInvalidFileNameChars methods.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-371">提供字元的平台專屬陣列，這些字元不可以在傳遞給 <see cref="T:System.IO.Path" /> 類別成員的路徑字串引數中指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-371">Provides a platform-specific array of characters that cannot be specified in path string arguments passed to members of the <see cref="T:System.IO.Path" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-372">不保證此方法傳回的陣列包含一組完整的檔案和目錄名稱中無效的字元。</span><span class="sxs-lookup"><span data-stu-id="f886d-372">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f886d-373">一組完整的無效的字元可能會因檔案系統。</span><span class="sxs-lookup"><span data-stu-id="f886d-373">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f886d-374">比方說，在 Windows 架構桌面平台無效路徑字元可能會包括 ASCII/Unicode 字元 1 到 31，以及加上引號 （"）、 小於 (\<)、 大於 (>)、 管道 (&#124;)、 退格鍵 (\b)、 null (\0) 和定位字元 (\t)。</span><span class="sxs-lookup"><span data-stu-id="f886d-374">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f886d-375">請勿使用<xref:System.IO.Path.InvalidPathChars>如果您認為您的程式碼可能不受信任的程式碼的相同應用程式定義域中執行。</span><span class="sxs-lookup"><span data-stu-id="f886d-375">Do not use <xref:System.IO.Path.InvalidPathChars> if you think your code might execute in the same application domain as untrusted code.</span></span> <span data-ttu-id="f886d-376"><xref:System.IO.Path.InvalidPathChars> 是，為陣列，因此可覆寫其項目。</span><span class="sxs-lookup"><span data-stu-id="f886d-376"><xref:System.IO.Path.InvalidPathChars> is an array, so its elements can be overwritten.</span></span> <span data-ttu-id="f886d-377">如果不受信任的程式碼會覆寫的項目<xref:System.IO.Path.InvalidPathChars>，它可能會導致您的程式碼發生問題的方法，就會被利用。</span><span class="sxs-lookup"><span data-stu-id="f886d-377">If untrusted code overwrites elements of <xref:System.IO.Path.InvalidPathChars>, it might cause your code to malfunction in ways that could be exploited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-378">下列程式碼範例示範如何使用`InvalidPathChars`屬性。</span><span class="sxs-lookup"><span data-stu-id="f886d-378">The following code example demonstrates the use of the `InvalidPathChars` property.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : string -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : string -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="f886d-379">要測試的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-379">The path to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f886d-380">取得值，該值指出指定的路徑字串是否包含根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-380">Gets a value indicating whether the specified path string contains a root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f886d-381">如果 <paramref name="path" /> 包含根目錄，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-381">
              <see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-382"><xref:System.IO.Path.IsPathRooted%2A>方法會傳回`true`如果第一個字元是目錄分隔符號字元如"\\"，或如果路徑是以磁碟機代號和冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="f886d-382">The <xref:System.IO.Path.IsPathRooted%2A> method returns `true` if the first character is a directory separator character such as "\\", or if the path starts with a drive letter and colon (:).</span></span> <span data-ttu-id="f886d-383">比方說，它會傳回`true`如`path`字串，例如"\\\MyDir\\\MyFile.txt"，"c:\\\MyDir"，或 「 C:MyDir"。</span><span class="sxs-lookup"><span data-stu-id="f886d-383">For example, it returns `true` for `path` strings such as "\\\MyDir\\\MyFile.txt", "C:\\\MyDir", or "C:MyDir".</span></span> <span data-ttu-id="f886d-384">它會傳回`false`如`path`"MyDir"等字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-384">It returns `false` for `path` strings such as "MyDir".</span></span>  
  
 <span data-ttu-id="f886d-385">這個方法不會確認此路徑或檔案名稱存在。</span><span class="sxs-lookup"><span data-stu-id="f886d-385">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f886d-386">如需的一般 I/O 工作清單，請參閱[一般 I/O 工作](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="f886d-386">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-387">下列程式碼範例示範如何`IsPathRooted`方法可用來測試三個字串。</span><span class="sxs-lookup"><span data-stu-id="f886d-387">The following code example demonstrates how the `IsPathRooted` method can be used to test three strings.</span></span>  
  
 [!code-cpp[System.IO.Path Members#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#12)]
 [!code-csharp[System.IO.Path Members#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#12)]
 [!code-vb[System.IO.Path Members#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f886d-388">
            <paramref name="path" /> 含有定義於 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 中的一或多個無效字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-388">
              <paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static readonly char PathSeparator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char PathSeparator" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathSeparator As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char PathSeparator;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathSeparator : char" Usage="System.IO.Path.PathSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-389">平台特定分隔符號字元，用來分隔環境變數中的路徑字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-389">A platform-specific separator character used to separate path strings in environment variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-390">在 Windows 架構桌面平台上的這個欄位的值是分號 （;） 根據預設，但是在其他平台可能會不同。</span><span class="sxs-lookup"><span data-stu-id="f886d-390">On Windows-based desktop platforms, the value of this field is the semicolon (;) by default, but might vary on other platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-391">下列程式碼範例示範如何使用`PathSeparator`欄位。</span><span class="sxs-lookup"><span data-stu-id="f886d-391">The following code example demonstrates the use of the `PathSeparator` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, path3, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeSeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char VolumeSeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char VolumeSeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.VolumeSeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeSeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char VolumeSeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable VolumeSeparatorChar : char" Usage="System.IO.Path.VolumeSeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f886d-392">提供平台特定磁碟區分隔符號字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f886d-392">Provides a platform-specific volume separator character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f886d-393">這個欄位的值是在 Windows 和 Macintosh，以及 UNIX 作業系統上的斜線 （/） 的冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="f886d-393">The value of this field is a colon (:) on Windows and Macintosh, and a slash (/) on UNIX operating systems.</span></span> <span data-ttu-id="f886d-394">這是最適合用來剖析路徑，例如"c:\windows 」 或 「 MacVolume:System 資料夾 」。</span><span class="sxs-lookup"><span data-stu-id="f886d-394">This is most useful for parsing paths such as "c:\windows" or "MacVolume:System Folder".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f886d-395">下列程式碼範例示範如何使用`VolumeSeparatorChar`欄位。</span><span class="sxs-lookup"><span data-stu-id="f886d-395">The following code example demonstrates the use of the `VolumeSeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>