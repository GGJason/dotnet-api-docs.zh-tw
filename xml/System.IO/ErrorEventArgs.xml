<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ErrorEventArgs.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f2921fa15912959397b39597816d57dfaa68afe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f2921fa15912959397b39597816d57dfaa68afe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.ErrorEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph> event.</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="E:System.IO.FileSystemWatcher.Error" /&gt;</ph> 事件的資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source><ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph> contains the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> that caused the <ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Error?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph> 包含<ph id="ph2">&lt;xref:System.Exception&gt;</ph>造成<ph id="ph3">&lt;xref:System.IO.FileSystemWatcher.Error?displayProperty=nameWithType&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>This class provides the <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph> method to retrieve the exception.</source>
          <target state="translated">這個類別會提供<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph>方法來擷取例外狀況。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>The following example creates a new instance of <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph> and initializes it with an <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated">下列範例會建立的新執行個體<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph>並將它與初始化<ph id="ph2">&lt;xref:System.Exception&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>Then the example calls <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph> to retrieve the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> and display the error message.</source>
          <target state="translated">接著，範例會呼叫<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph>擷取<ph id="ph2">&lt;xref:System.Exception&gt;</ph>並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>There is no form associated with this code.</source>
          <target state="translated">沒有這個程式碼相關聯表單。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive.</source>
          <target state="translated">下列範例示範如何建立來監視檔案變更 FileSystemWatcher （建立、 刪除、 重新命名變更） 發生的磁碟機。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.ErrorEventArgs">
          <source>The example also shows how to properly receive error notifications.</source>
          <target state="translated">此範例也示範如何正確地接收錯誤通知。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the error that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>，表示發生的錯誤。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.ErrorEventArgs" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
          <source>The following example creates a new instance of <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph> and initializes it with an <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated">下列範例會建立的新執行個體<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph>並將它與初始化<ph id="ph2">&lt;xref:System.Exception&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
          <source>Then the example calls <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph> to retrieve the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> and display the error message.</source>
          <target state="translated">接著，範例會呼叫<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph>擷取<ph id="ph2">&lt;xref:System.Exception&gt;</ph>並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
          <source>There is no form associated with this code.</source>
          <target state="translated">沒有這個程式碼相關聯表單。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.ErrorEventArgs.GetException">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the error that occurred.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>，表示發生的錯誤。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.ErrorEventArgs.GetException">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that represents the error that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>，表示發生的錯誤。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.GetException">
          <source>The following example creates a new instance of <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph> and initializes it with an <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated">下列範例會建立的新執行個體<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs&gt;</ph>並將它與初始化<ph id="ph2">&lt;xref:System.Exception&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.GetException">
          <source>Then the example calls <ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph> to retrieve the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> and display the error message.</source>
          <target state="translated">接著，範例會呼叫<ph id="ph1">&lt;xref:System.IO.ErrorEventArgs.GetException%2A&gt;</ph>擷取<ph id="ph2">&lt;xref:System.Exception&gt;</ph>並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.ErrorEventArgs.GetException">
          <source>There is no form associated with this code.</source>
          <target state="translated">沒有這個程式碼相關聯表單。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>