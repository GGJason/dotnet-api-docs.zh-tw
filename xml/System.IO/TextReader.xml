<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f18f6c8a00d2902ebf0a49d540291337b88785a3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52205745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7c105-101">代表可以讀取一連串連續字元的讀取器 (Reader)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c105-101">Represents a reader that can read a sequential series of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-102"><xref:System.IO.TextReader> 是抽象基底類別<xref:System.IO.StreamReader>和<xref:System.IO.StringReader>，其讀取的字元資料流和字串，分別。</span><span class="sxs-lookup"><span data-stu-id="7c105-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="7c105-103">若要開啟文字檔，以便讀取指定的範圍的字元，或建立根據現有的資料流讀取器，請使用這些衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c105-104">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="7c105-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="7c105-105">當您完成使用衍生自此型別的任何型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="7c105-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="7c105-106">若要直接處置型別，呼叫其<xref:System.IO.TextReader.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="7c105-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="7c105-107">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="7c105-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="7c105-108">如需詳細資訊，請參閱 Dispose 和中的 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="7c105-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c105-109"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-110">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-111"><xref:System.IO.StreamReader>類別衍生自<xref:System.IO.TextReader>，並提供從資料流讀取成員的實作。</span><span class="sxs-lookup"><span data-stu-id="7c105-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="7c105-112">下列範例示範如何讀取檔案中的所有字元，使用<xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7c105-113">它會檢查每個字元之前加入的執行個體中的字元是否為字母、 數字或泛空白字元<xref:System.Text.StringBuilder>類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="7c105-114">在衍生的類別都至少必須實作<see cref="M:System.IO.TextReader.Peek" />並<see cref="M:System.IO.TextReader.Read" />方法，以進行實用的執行個體的<see cref="T:System.IO.TextReader" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="7c105-114">A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
    <related type="Article" href="~/docs/standard/io/index.md">
      <span data-ttu-id="7c105-115">檔案和資料流 I/O</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c105-115">File and Stream I/O</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
      <span data-ttu-id="7c105-116">如何：從檔案讀取文字</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c105-116">How to: Read Text from a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
      <span data-ttu-id="7c105-117">如何：將文字寫入檔案</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c105-117">How to: Write Text to a File</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md">
      <span data-ttu-id="7c105-118">如何：讀取和寫入新建立的資料檔案</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c105-118">How to: Read and Write to a Newly Created Data File</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-119">初始化 <see cref="T:System.IO.TextReader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-119">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-120">在衍生類別中使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="7c105-120">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-121">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-121">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-122">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-122">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-123">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-123">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-124">關閉 <see cref="T:System.IO.TextReader" /> 並釋放任何與 <see langword="TextReader" /> 關聯的系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-124">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-125">這個實作`Close`呼叫<xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>方法並將它傳遞`true`值。</span><span class="sxs-lookup"><span data-stu-id="7c105-125">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="7c105-126">排清的文字讀取器不會清除其基礎的編碼器，除非您明確地呼叫`Close`。</span><span class="sxs-lookup"><span data-stu-id="7c105-126">Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="7c105-127">設定<xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType>屬性設`true`表示資料會從排清緩衝區資料流，但並不會清除編碼器的狀態。</span><span class="sxs-lookup"><span data-stu-id="7c105-127">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="7c105-128">這可讓編碼器，讓它可以正確編碼字元的下一個區塊保持其狀態 （部分的字元）。</span><span class="sxs-lookup"><span data-stu-id="7c105-128">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="7c105-129">這個案例會影響 UTF8，UTF7，其中某些字元可以編碼的編碼器接收或多個相鄰的字元時，才。</span><span class="sxs-lookup"><span data-stu-id="7c105-129">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c105-130">在衍生類別中，不會覆寫<xref:System.IO.TextReader.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-130">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="7c105-131">相反地，覆寫<xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType>加入程式碼，以便釋放資源的方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-131">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-132">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-132">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-133">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-133">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-134">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-134">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c105-135">釋放由 <see cref="T:System.IO.TextReader" /> 物件使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-135">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-136">釋放由 <see cref="T:System.IO.TextReader" /> 物件使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-136">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-137"><xref:System.IO.TextReader.Dispose%2A> 使用完畢時，請呼叫 <xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="7c105-137">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="7c105-138"><xref:System.IO.TextReader.Dispose%2A> 方法會將 <xref:System.IO.TextReader> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="7c105-138">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="7c105-139">之後呼叫<xref:System.IO.TextReader.Dispose%2A>，您必須釋放所有的參考<xref:System.IO.TextReader>讓記憶體回收行程可以回收記憶體，<xref:System.IO.TextReader>所佔用。</span><span class="sxs-lookup"><span data-stu-id="7c105-139">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="7c105-140">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="7c105-140">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c105-141">在您釋放最後一個 <xref:System.IO.TextReader.Dispose%2A> 參考之前，請務必呼叫 <xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="7c105-141">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="7c105-142">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.IO.TextReader> 物件的 <xref:System.Object.Finalize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-142">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7c105-143">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-143">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-144">釋放 <see cref="T:System.IO.TextReader" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-144">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-145">這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-145">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7c105-146">根據預設，這個方法會指定`disposing`參數做為`true`。</span><span class="sxs-lookup"><span data-stu-id="7c105-146">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="7c105-147"><xref:System.Object.Finalize%2A> 指定`disposing`參數做為`false`。</span><span class="sxs-lookup"><span data-stu-id="7c105-147"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="7c105-148">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.IO.TextReader> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="7c105-148">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="7c105-149">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-149">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7c105-150">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7c105-150">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="7c105-151">在覆寫這個方法，小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7c105-151">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="7c105-152">如需如何實作這個方法的詳細資訊，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7c105-152">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="7c105-153">如需詳細資訊<see cref="M:System.IDisposable.Dispose" />並<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="7c105-153">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-154">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-154">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-155">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-155">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-156">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-156">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c105-157">提供沒有可從中讀取之資料的 <see langword="TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-157">Provides a <see langword="TextReader" /> with no data to read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-158">從讀取<xref:System.IO.TextReader.Null>文字讀取器讀取類似從資料流結尾：</span><span class="sxs-lookup"><span data-stu-id="7c105-158">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="7c105-159"><xref:System.IO.TextReader.Read%2A>和<xref:System.IO.TextReader.Peek%2A>方法會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="7c105-159">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="7c105-160"><xref:System.IO.TextReader.ReadBlock%2A>方法會傳回零。</span><span class="sxs-lookup"><span data-stu-id="7c105-160">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="7c105-161"><xref:System.IO.TextReader.ReadLine%2A>方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="7c105-161">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="7c105-162"><xref:System.IO.TextReader.ReadToEnd%2A>方法會傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="7c105-162">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-163">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-163">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-164">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-164">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-165">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-165">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-166">讀取下一個字元，而不會變更讀取器或字元來源的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-166">Reads the next character without changing the state of the reader or the character source.</span>
          </span>
          <span data-ttu-id="7c105-167">傳回下一個可用字元，而不會實際從讀取器讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-167">Returns the next available character without actually reading it from the reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-168">整數，表示要讀取的下一個字元，如果沒有更多字元可供使用或讀取器不支援搜尋，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-168">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-169"><xref:System.IO.TextReader.Peek%2A>方法會傳回整數值，以判斷是否發生檔案或另一個錯誤的結尾。</span><span class="sxs-lookup"><span data-stu-id="7c105-169">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="7c105-170">這可讓使用者能夠先檢查 是否傳回的值為-1 的之前先將它轉換<xref:System.Char>型別。</span><span class="sxs-lookup"><span data-stu-id="7c105-170">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="7c105-171">目前的位置<xref:System.IO.TextReader>這項作業不會變更。</span><span class="sxs-lookup"><span data-stu-id="7c105-171">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="7c105-172">傳回的值為-1，如果沒有更多字元可供使用。</span><span class="sxs-lookup"><span data-stu-id="7c105-172">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="7c105-173">預設的實作會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="7c105-173">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="7c105-174"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-174">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-175">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-175">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-176">如需使用的範例<xref:System.IO.TextReader.Peek%2A>方法，請參閱<xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-176">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-177">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-177">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-178">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-178">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-179">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-179">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-180">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-180">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-181">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-181">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7c105-182">從文字讀取器讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-182">Reads data from the text reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-183">自文字讀取器讀取下一個字元，並將字元位置前移一個字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-183">Reads the next character from the text reader and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-184">文字讀取器的下一個字元；如果不再有字元可供使用，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-184">The next character from the text reader, or -1 if no more characters are available.</span>
          </span>
          <span data-ttu-id="7c105-185">預設的實作會傳回 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-185">The default implementation returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-186"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-186">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-187">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-187">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-188">如需使用的範例<xref:System.IO.TextReader.Read%2A>方法，請參閱<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-188">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-189">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-189">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-190">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-190">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-191">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-191">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-192">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-192">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-193">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-193">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7c105-194">當這個方法傳回時，會包含指定的字元陣列，這個陣列具有介於 <paramref name="index" /> 到 (<paramref name="index" /> + <paramref name="count" /> - 1) 之間的值，已由讀取自目前來源的字元所取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-194">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7c105-195">
            <paramref name="buffer" /> 中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-195">The position in <paramref name="buffer" /> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7c105-196">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-196">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="7c105-197">如果指定的字元數讀入緩衝區之前，便到達讀取器末端，則方法會返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-197">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-198">從目前讀取器讀取指定的最大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-198">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-199">已經讀取的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-199">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="7c105-200">數目將小於或等於 <paramref name="count" />，取決於資料是否在讀取器中可供使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-200">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span>
          </span>
          <span data-ttu-id="7c105-201">如果不再有字元可供讀取時呼叫，這個方法傳回 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-201">This method returns 0 (zero) if it is called when no more characters are left to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-202">這個方法傳回之後`count`會讀取的字元，或檔案結尾為止。</span><span class="sxs-lookup"><span data-stu-id="7c105-202">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="7c105-203"><xref:System.IO.TextReader.ReadBlock%2A> 是封鎖的版本，這個方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-203"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="7c105-204"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-204">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-205">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-205">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-206">如需使用的範例<xref:System.IO.TextReader.Read%2A>方法，請參閱<xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-206">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c105-207">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-207">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c105-208">緩衝區長度減去 <paramref name="index" /> 會小於 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-208">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-209">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-209">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-210">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-210">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-211">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-211">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-212">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-212">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-213">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-213">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-214">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-214">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7c105-215">當這個方法傳回時，會包含指定的字元陣列，這個陣列具有介於 <paramref name="index" /> 到 (<paramref name="index" /> + <paramref name="count" /> - 1) 之間的值，已由讀取自目前來源的字元所取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-215">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7c105-216">
            <paramref name="buffer" /> 中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-216">The position in <paramref name="buffer" /> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7c105-217">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-217">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="7c105-218">如果指定的字元數讀入緩衝區之前，便到達文字末端，則目前的方法會傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-218">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-219">從目前的文字讀取器非同步讀取指定的最大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-219">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-220">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-220">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="7c105-221">
            <paramref name="TResult" /> 參數的值會包含讀取至緩衝區的位元組總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-221">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="7c105-222">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達文字末端，則可能為 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-222">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-223">在工作完成之後指定的字元數目`count`讀取參數，或檔案結尾為止。</span><span class="sxs-lookup"><span data-stu-id="7c105-223">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="7c105-224"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-224">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-225">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-225">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-226">如需使用的範例<xref:System.IO.TextReader.ReadAsync%2A>方法，請參閱<xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-226">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c105-227">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-227">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-228">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-228">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c105-229">
            <paramref name="index" /> 和 <paramref name="count" /> 的總和大於緩衝區長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-229">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-230">文字讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-230">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c105-231">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-231">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-232">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-232">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-233">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-233">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-234">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-234">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7c105-235">當這個方法傳回時，這個參數會包含指定的字元陣列，這個陣列具有介於 <paramref name="index" /> 到 (<paramref name="index" /> + <paramref name="count" /> -1) 之間的值，已由讀取自目前來源的字元所取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-235">When this method returns, this parameter contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> -1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7c105-236">
            <paramref name="buffer" /> 中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-236">The position in <paramref name="buffer" /> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7c105-237">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-237">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-238">從目前的文字讀取器讀取指定的最大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-238">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-239">已經讀取的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-239">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="7c105-240">數目將小於或等於 <paramref name="count" />，取決於是否已經讀取所有輸入字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-240">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-241">基礎的文字讀取器的位置進階的字元數目，顯示已讀入至`buffer`。</span><span class="sxs-lookup"><span data-stu-id="7c105-241">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="7c105-242">方法會封鎖直到`count`會讀取的字元，或已經讀取所有字元。</span><span class="sxs-lookup"><span data-stu-id="7c105-242">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="7c105-243">這是封鎖版本<xref:System.IO.TextReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="7c105-243">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c105-244">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-244">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c105-245">緩衝區長度減去 <paramref name="index" /> 會小於 <paramref name="count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-245">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-246">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-246">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-247">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-247">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-248">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-248">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-249">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-249">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-250">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-250">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-251">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-251">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7c105-252">當這個方法傳回時，會包含指定的字元陣列，這個陣列具有介於 <paramref name="index" /> 到 (<paramref name="index" /> + <paramref name="count" /> - 1) 之間的值，已由讀取自目前來源的字元所取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-252">When this method returns, contains the specified character array with the values between <paramref name="index" /> and (<paramref name="index" /> + <paramref name="count" /> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7c105-253">
            <paramref name="buffer" /> 中要開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-253">The position in <paramref name="buffer" /> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7c105-254">要讀取的字元數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="7c105-255">如果指定的字元數讀入緩衝區之前，便到達文字末端，則目前的方法會傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-255">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-256">從目前的文字讀取器非同步讀取指定的最大字元數目，並從指定的索引開始將資料寫入緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-256">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-257">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="7c105-258">
            <paramref name="TResult" /> 參數的值會包含讀取至緩衝區的位元組總數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="7c105-259">如果目前可供使用的位元組數目少於所要求的數目，結果值可能會小於所要求的位元組數目，或者如果已經到達文字末端，則可能為 0（零）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-260">工作未完成之前所指定的字元數`count`會讀取參數，或已經到達文字末端。</span><span class="sxs-lookup"><span data-stu-id="7c105-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c105-261">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-262">
            <paramref name="index" /> 或 <paramref name="count" /> 為負。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c105-263">
            <paramref name="index" /> 和 <paramref name="count" /> 的總和大於緩衝區長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-264">文字讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-264">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c105-265">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-266">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-266">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-267">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-267">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-268">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-268">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-269">自文字讀取器讀取一行字元，並將資料以字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-269">Reads a line of characters from the text reader and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-270">讀取器中的下一行；如果已經讀取所有字元，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-270">The next line from the reader, or <see langword="null" /> if all characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-271">一條線定義為一串字元後面接著歸位字元 (0x000d)、 換行字元 (0x000a)，以歸位字元後面接著換行字元， <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>，或資料流結尾標記。</span><span class="sxs-lookup"><span data-stu-id="7c105-271">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="7c105-272">終止歸位字元或換行字元，並不會包含所傳回的字串。</span><span class="sxs-lookup"><span data-stu-id="7c105-272">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="7c105-273">傳回值是`null`如果已經到達輸入資料流的結尾。</span><span class="sxs-lookup"><span data-stu-id="7c105-273">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="7c105-274">如果方法會擲回<xref:System.OutOfMemoryException>例外狀況，在基礎的讀取器的位置<xref:System.IO.Stream>進階的方法無法讀取的字元，但已讀入內部的字元數<xref:System.IO.TextReader.ReadLine%2A>緩衝區是捨棄。</span><span class="sxs-lookup"><span data-stu-id="7c105-274">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="7c105-275">無法變更資料流中讀取器的位置，因為已經讀取的字元是無法復原，並可重新初始化來只存取<xref:System.IO.TextReader>物件。</span><span class="sxs-lookup"><span data-stu-id="7c105-275">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="7c105-276">如果資料流中的初始位置為未知或資料流不支援搜尋，基礎<xref:System.IO.Stream>也需要重新初始化。</span><span class="sxs-lookup"><span data-stu-id="7c105-276">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="7c105-277">若要避免這種情況，並產生強固的程式碼，您應該使用<xref:System.IO.TextReader.Read%2A>讀取方法，並存放區中預先配置的緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="7c105-277">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="7c105-278"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-278">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-279">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-279">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-280">如需使用的範例<xref:System.IO.TextReader.ReadLine%2A>方法，請參閱<xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-280">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-281">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-281">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="7c105-282">沒有足夠記憶體可為傳回的字串配置緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-282">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-283">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-283">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-284">下一行中的字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-284">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-285">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-285">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-286">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-286">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-287">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-287">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-288">非同步讀取一行字元，並將資料以字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-288">Reads a line of characters asynchronously and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-289">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-289">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="7c105-290">
            <paramref name="TResult" /> 參數的值會包含文字讀取器中的下一行；如果已經讀取所有字元，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-290">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-291"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-291">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-292">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-292">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-293">如需使用的範例<xref:System.IO.TextReader.ReadLineAsync%2A>方法，請參閱<xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-293">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7c105-294">如果目前<xref:System.IO.TextReader>代表所傳回的標準輸入資料流<xref:System.Console.In%2A?displayProperty=nameWithType>屬性，<xref:System.IO.TextReader.ReadLineAsync%2A>方法會以同步方式，而非以非同步方式執行。</span><span class="sxs-lookup"><span data-stu-id="7c105-294">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-295">下一行的字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-295">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-296">文字讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-296">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c105-297">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-297">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-298">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-298">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-299">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-299">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-300">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-300">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-301">讀取從目前位置到文字讀取器末端的所有字元，並將它們以單一字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-301">Reads all characters from the current position to the end of the text reader and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-302">字串，包含從目前位置到文字讀取器結尾的所有字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-302">A string that contains all characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-303">如果方法會擲回<xref:System.OutOfMemoryException>例外狀況，在基礎的讀取器的位置<xref:System.IO.Stream>進階的方法無法讀取的字元，但已讀入內部的字元數<xref:System.IO.TextReader.ReadToEnd%2A>緩衝區是捨棄。</span><span class="sxs-lookup"><span data-stu-id="7c105-303">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="7c105-304">無法變更資料流中讀取器的位置，因為已經讀取的字元是無法復原，並可重新初始化來只存取<xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="7c105-304">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="7c105-305">如果資料流中的初始位置為未知或資料流不支援搜尋，基礎<xref:System.IO.Stream>也需要重新初始化。</span><span class="sxs-lookup"><span data-stu-id="7c105-305">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="7c105-306">若要避免這種情況，並產生強固的程式碼，您應該使用<xref:System.IO.TextReader.Read%2A>讀取方法，並存放區中預先配置的緩衝區的字元。</span><span class="sxs-lookup"><span data-stu-id="7c105-306">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="7c105-307"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-307">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-308">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-308">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-309">如需使用的範例<xref:System.IO.TextReader.ReadToEnd%2A>方法，請參閱<xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-309">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7c105-310">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-310">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-311">
            <see cref="T:System.IO.TextReader" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-311">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="7c105-312">沒有足夠記憶體可為傳回的字串配置緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-312">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-313">下一行中的字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-313">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-314">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-314">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-315">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-315">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-316">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-316">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c105-317">非同步讀取從目前位置到文字讀取器末端的所有字元，並將它們以單一字串傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-317">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-318">表示非同步讀取作業的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-318">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="7c105-319">
            <paramref name="TResult" /> 參數的值會包含字串，該字串含有從目前位置到文字讀取器結尾的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-319">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-320"><xref:System.IO.TextReader> 類別是抽象類別。</span><span class="sxs-lookup"><span data-stu-id="7c105-320">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="7c105-321">因此，您的程式碼中不必將它執行個體化。</span><span class="sxs-lookup"><span data-stu-id="7c105-321">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="7c105-322">如需使用的範例<xref:System.IO.TextReader.ReadToEndAsync%2A>方法，請參閱<xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7c105-322">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c105-323">字元數大於 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-323">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7c105-324">文字讀取器已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-324">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7c105-325">之前的讀取作業目前正在使用讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-325">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-326">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-326">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-327">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-327">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-328">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-328">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="7c105-329">要同步處理的 <see langword="TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-329">The <see langword="TextReader" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c105-330">在指定的 <see langword="TextReader" /> 內建立安全執行緒的包裝函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-330">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c105-331">安全執行緒的 <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-331">A thread-safe <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c105-332">目前的方法會傳回類別包裝指定<xref:System.IO.TextReader>執行個體，並由多個執行緒會限制存取。</span><span class="sxs-lookup"><span data-stu-id="7c105-332">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="7c105-333">傳回包裝函式的所有讀取都將都會具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="7c105-333">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c105-334">
            <paramref name="reader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-334">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/io/index.md">
          <span data-ttu-id="7c105-335">檔案和資料流 I/O</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-335">File and Stream I/O</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">
          <span data-ttu-id="7c105-336">如何：從檔案讀取文字</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-336">How to: Read Text from a File</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md">
          <span data-ttu-id="7c105-337">如何：將文字寫入檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c105-337">How to: Write Text to a File</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>