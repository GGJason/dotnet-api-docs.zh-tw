<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowDesignerLoader.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5abb651dcc1262ec08c4e3c068d1f8918c1e21ad5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abb651dcc1262ec08c4e3c068d1f8918c1e21ad5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>Provides common designer loader functionality that can be used to implement custom workflow designer loaders.</source>
          <target state="translated">提供常用的設計工具載入器功能，可用來實作自訂工作流程的設計工具載入器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>Designer loader classes are used to load the designer and save any changes to the state of the designer when the user so instructs.</source>
          <target state="translated">設計工具載入器類別可用來載入設計工具，並儲存使用者收到指示對設計工具狀態所做的任何變更。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> class can be implemented to support custom loading of a workflow designer and workflow designer components.</source>
          <target state="translated">您可以實作 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 類別來支援工作流程設計工具和工作流程設計工具元件的自訂載入。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>A workflow designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> method is called.</source>
          <target state="translated">在呼叫 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 方法之後載入文件時，工作流程設計工具載入器也會負責將已開啟文件中的變更寫回載入器所用的儲存區。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /&gt;</ph> and <ph id="ph5">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 繼承時，必須覆寫下列成員：<ph id="ph2">&lt;see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" /&gt;</ph>、<ph id="ph4">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /&gt;</ph> 和 <ph id="ph5">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> class.</source>
          <target state="translated">在衍生類別中實作時，初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>The following example demonstrates how to create a new instance of a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> object.</source>
          <target state="translated">下列範例示範如何建立 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 物件的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>In this case, the <ph id="ph1">`WorkflowLoader`</ph> class is derived from <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">在此案例中，<ph id="ph1">`WorkflowLoader`</ph> 類別衍生自 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> is created, a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is also created and associated with the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> using the <ph id="ph4">`BeginLoad`</ph> method.</source>
          <target state="translated">建立 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 時，也會使用 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 方法建立 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 並讓其與 <ph id="ph4">`BeginLoad`</ph> 關聯。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> to add.</source>
          <target state="translated">要加入的 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Adds an activity to the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">將活動加入至父活動集合後，再將活動加入至設計工具主應用程式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates how to add a <ph id="ph1">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> to the designer.</source>
          <target state="translated">下列範例示範如何將 <ph id="ph1">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> 加入至設計工具。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Before the activity is added to the designer using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A&gt;</ph> method, it is first added to the Activities collection of the root activity within the workflow.</source>
          <target state="translated">在使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A&gt;</ph> 方法將活動加入至設計工具之前，會先將這個活動加入至工作流程中根活動的 Activities 集合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> releases all services used by the designer host, but it does not write pending changes to the designer loader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> 可釋放設計工具主應用程式使用的所有服務，但它不會將暫止的變更寫入至設計工具載入器。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>If you want to save any pending changes prior to releasing all resources, call <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> before you call <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph>.</source>
          <target state="translated">如果您想要在釋放所有資源之前儲存任何暫止的變更，請呼叫 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph>，然後再呼叫 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>The following example demonstrates an implementation of the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A&gt;</ph> 方法的實作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>In this implementation, various services that have been added to the LoaderHost object are removed in preparation for closing the application.</source>
          <target state="translated">在此實作中，會移除已加入至 LoaderHost 物件的各種服務，以準備關閉應用程式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>This example is from the Tracking Profile Designer SDK sample.</source>
          <target state="translated">這個範例來自＜追蹤設定檔設計工具 SDK＞範例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Tracking Profile Designer Sample<ept id="p1">](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Tracking Profile Designer 範例<ept id="p1">](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>When overridden in a derived class, gets the file name of the designer to load.</source>
          <target state="translated">在衍生類別中覆寫時，取得要載入之設計工具的檔案名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>A string that contains the file name of the designer to load.</source>
          <target state="translated">字串，其中包含要載入之設計工具的檔案名稱。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A&gt;</ph> property to return the path of the currently loaded workflow file used by the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">下列範例顯示如何覆寫 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A&gt;</ph> 屬性，以傳回由 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 使用之目前已載入工作流程檔案的路徑。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>Writes pending changes to the location that the designer was loaded from.</source>
          <target state="translated">將暫止的變更寫入至載入設計工具的來源位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> method to serialize a workflow using the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 覆寫 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph> 方法，將工作流程序列化。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
          <source>In this example, the overridden <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> delegates to the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> method defined in the <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> derived class.</source>
          <target state="translated">在此範例中，覆寫的 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A&gt;</ph> 會委派 (Delegate) 至 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> 衍生類別中定義的 <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload">
          <source>When overridden in a derived class, causes <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> to reload the designer.</source>
          <target state="translated">在衍生類別中覆寫時，會讓 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 重新載入設計工具。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>A string that contains a path to the file to read from.</source>
          <target state="translated">字串，其中包含要從中讀取的檔案路徑。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>When overridden in a derived class, retrieves an object that <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> uses to read from the specified file.</source>
          <target state="translated">在衍生類別中覆寫時，擷取 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 用來從指定檔案讀取的物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to read the specified file.</source>
          <target state="translated">要讀取指定檔案的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
          <source>The following example shows how to create and return a <ph id="ph1">`TextReader`</ph> object when the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A&gt;</ph> overloaded method is called.</source>
          <target state="translated">下列範例顯示如何在呼叫 <ph id="ph1">`TextReader`</ph> 多載方法時建立並傳回 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>A string that contains the path to the file to write to.</source>
          <target state="translated">字串，其中包含要寫入的檔案路徑。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>When overridden in a derived class, gets an object that the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> uses to write to the specified file.</source>
          <target state="translated">在衍生類別中覆寫時，取得 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> 用來寫入指定檔案的物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to write to the file.</source>
          <target state="translated">要寫入檔案的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
          <source>The following example shows how to create and return a <ph id="ph1">`TextWriter`</ph> object when the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A&gt;</ph> overloaded method is called.</source>
          <target state="translated">下列範例顯示如何在呼叫 <ph id="ph1">`TextWriter`</ph> 多載方法時建立並傳回 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>Gets a value that indicates whether the workflow should be loaded in debug mode.</source>
          <target state="translated">取得值，這個值表示是否應該以偵錯模式載入工作流程。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow should be loaded in debug mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要將工作流程載入為偵錯模式則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
          <source>The following method determines whether the workflow designer is locked by the debugger if the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A&gt;</ph> property of the current <ph id="ph2">`WorkflowDesignerLoader`</ph> returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">下列方法會判斷工作流程設計工具是否要是否偵錯工具鎖定<ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A&gt;</ph>屬性的目前<ph id="ph2">`WorkflowDesignerLoader`</ph>傳回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph> with any services required by the designer loader host.</source>
          <target state="translated">使用設計工具載入器主應用程式所需的任何服務來初始化 <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A&gt;</ph> method in a derived class to add the services needed for the designer.</source>
          <target state="translated">下列範例顯示如何覆寫衍生類別的 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A&gt;</ph> 方法，以加入設計工具所需要的服務。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
          <source>The services can vary based on the level of service support required by your application.</source>
          <target state="translated">服務會依據您應用程式所需的服務支援層級而有所不同。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that is created for the serialized layout.</source>
          <target state="translated">針對序列化配置建立的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>List of errors that occurred during the deserialization.</source>
          <target state="translated">還原序列化 (Deserialization) 期間發生的錯誤清單。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>Applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">將序列化配置套用至目前設計工具主應用程式中的根目錄設計工具。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>This example shows how to load the layout for a specific workflow definition using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">這個範例顯示如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph> 方法載入指定工作流程定義的配置。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object is created using the file name of a designer layout file that was created using <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph>.</source>
          <target state="translated">使用設計工具配置檔案的檔案名稱建立 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 物件，而這個檔案是使用 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> 建立的。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
          <source>When the layout has finished loading, any errors that might have occurred are displayed to the user.</source>
          <target state="translated">當配置完成載入任何可能發生的錯誤時，就會向使用者顯示。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the resource is associated with.</source>
          <target state="translated">資源與其相關聯的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Name of the resource.</source>
          <target state="translated">資源的名稱。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Errors encountered during the call to <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph>.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> 期間遇到的錯誤。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
          <source>Retrieves the specified resource and calls the <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> method that applies the serialized layout to the root designer in the current designer host.</source>
          <target state="translated">擷取指定的資源並呼叫 <ph id="ph1">&lt;see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /&gt;</ph> 方法，將序列化配置套用至目前設計工具主應用程式中的根目錄設計工具。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if load operation is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果載入作業成功則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>Contains the load errors.</source>
          <target state="translated">包含載入錯誤。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>Called when loading of the designer is completed.</source>
          <target state="translated">當完成載入設計工具時呼叫。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A&gt;</ph> method to display errors that might have occurred during the loading of a workflow.</source>
          <target state="translated">下列範例示範如何覆寫 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A&gt;</ph> 方法，以顯示載入工作流程期間可能發生的錯誤。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Class that implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> interface, which manages design-time serialization.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> 介面的類別，可管理設計階段序列化。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">將快取變更寫入至載入設計工具的來源位置。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>The following example demonstrates how to override the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> method to serialize the workflow using the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A&gt;</ph> 覆寫 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer&gt;</ph> 方法，將工作流程序列化。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Class that implements the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> interface, which manages design-time serialization.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> 介面的類別，可管理設計階段序列化。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>Loads the designer from a design document.</source>
          <target state="translated">從設計文件載入設計工具。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
          <source>The following example shows how to override the <ph id="ph1">`PerformLoad`</ph> method to deserialize a workflow and load it in the designer using the <ph id="ph2">`AddObjectGraphToDesignerHost`</ph> helper method.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">`PerformLoad`</ph>方法來還原序列化工作流程，並將其載入在設計工具中使用<ph id="ph2">`AddObjectGraphToDesignerHost`</ph>helper 方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Activity to be removed from the designer.</source>
          <target state="translated">要從設計工具中移除的活動。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Removes an activity from the designer host after it has been added to the parent activities collection.</source>
          <target state="translated">將活動加入至父活動集合後，再將活動從設計工具主應用程式中移除。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>The following example shows how to remove an activity from the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>.</source>
          <target state="translated">下列範例顯示如何從 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 移除活動。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
          <source>Before the last child activity in the workflow is removed from the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph>, it is first removed from the workflow <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A&gt;</ph> collection.</source>
          <target state="translated">在移除工作流程中 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader&gt;</ph> 的最後一個子活動之前，會先從工作流程的 <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A&gt;</ph> 集合中移除該活動。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source><ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph> that is used to serialize the layout into.</source>
          <target state="translated">用來序列化配置的 <ph id="ph1">&lt;see langword="XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Root activity from which you get the layout information.</source>
          <target state="translated">從中取得配置資訊的根活動。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Errors encountered during serialization.</source>
          <target state="translated">序列化期間遇到的錯誤。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>Serializes the designer layout.</source>
          <target state="translated">將設計工具配置序列化。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>The following example demonstrates how to save the design layout information of a workflow using the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何使用 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> 方法儲存工作流程的設計配置資訊。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object is created, the <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ph> for the <ph id="ph3">`RootComponent`</ph> of the workflow is retrieved and passed to the <ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph> method.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>建立物件後，<ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ph>如<ph id="ph3">`RootComponent`</ph>的擷取和傳遞至工作流程<ph id="ph4">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
          <source>To load the layout file that is generated by this method, see <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph>.</source>
          <target state="translated">若要載入由這個方法產生的配置檔案，請參閱 <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> metadata of the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">取得目標 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 的 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中繼資料。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> metadata of the target <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">目標 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeDescriptor" /&gt;</ph> 的 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 中繼資料。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>