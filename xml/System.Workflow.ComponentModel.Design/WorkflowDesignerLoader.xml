<Type Name="WorkflowDesignerLoader" FullName="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87e98d8412a3e87e483a843f72912ba9d45c4380" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48681618" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowDesignerLoader&#xA;Inherits BasicDesignerLoader" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader" />
  <TypeSignature Language="F#" Value="type WorkflowDesignerLoader = class&#xA;    inherit BasicDesignerLoader" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供常用的設計工具載入器功能，可用來實作自訂工作流程的設計工具載入器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 設計工具載入器類別可用來載入設計工具，並儲存使用者收到指示對設計工具狀態所做的任何變更。 您可以實作 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 類別來支援工作流程設計工具和工作流程設計工具元件的自訂載入。 在呼叫 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 方法之後載入文件時，工作流程設計工具載入器也會負責將已開啟文件中的變更寫回載入器所用的儲存區。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>從 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 繼承時，必須覆寫下列成員：<see cref="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />、<see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />、<see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" /> 和 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>在衍生類別中實作時，初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 物件的新執行個體。 在此案例中，`WorkflowLoader` 類別衍生自 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader>。 建立 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 時，也會使用 <xref:System.ComponentModel.Design.DesignSurface> 方法建立 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 並讓其與 `BeginLoad` 關聯。  
  
 [!code-csharp[WF_Samples#47](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#47)]
 [!code-vb[WF_Samples#47](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddActivityToDesigner">
      <MemberSignature Language="C#" Value="public void AddActivityToDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddActivityToDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddActivityToDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.AddActivityToDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.AddActivityToDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">要加入的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
        <summary>將活動加入至父活動集合後，再將活動加入至設計工具主應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何將 <xref:System.Workflow.Activities.CodeActivity> 加入至設計工具。 在使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner%2A> 方法將活動加入至設計工具之前，會先將這個活動加入至工作流程中根活動的 Activities 集合。  
  
 [!code-csharp[WF_Samples#55](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#55)]
 [!code-vb[WF_Samples#55](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#55)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="workflowDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> 可釋放設計工具主應用程式使用的所有服務，但它不會將暫止的變更寫入至設計工具載入器。 如果您想要在釋放所有資源之前儲存任何暫止的變更，請呼叫 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A>，然後再呼叫 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A>。  
  
   
  
## Examples  
 下列範例示範 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose%2A> 方法的實作。 在此實作中，會移除已加入至 LoaderHost 物件的各種服務，以準備關閉應用程式。 這個範例來自＜追蹤設定檔設計工具 SDK＞範例。 如需詳細資訊，請參閱 <<c0> [ 追蹤設定檔設計工具範例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))。  
  
 [!code-csharp[WF_Samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[WF_Samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public abstract string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得要載入之設計工具的檔案名稱。</summary>
        <value>字串，其中包含要載入之設計工具的檔案名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例顯示如何覆寫 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName%2A> 屬性，以傳回由 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 使用之目前已載入工作流程檔案的路徑。  
  
 [!code-csharp[WF_Samples#32](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#32)]
 [!code-vb[WF_Samples#32](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="workflowDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將暫止的變更寫入至載入設計工具的來源位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 方法，將工作流程序列化。 在此範例中，覆寫的 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush%2A> 會委派 (Delegate) 至 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> 衍生類別中定義的 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 方法。  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceReload">
      <MemberSignature Language="C#" Value="public virtual void ForceReload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceReload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceReload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceReload();" />
      <MemberSignature Language="F#" Value="abstract member ForceReload : unit -&gt; unit&#xA;override this.ForceReload : unit -&gt; unit" Usage="workflowDesignerLoader.ForceReload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，會讓 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 重新載入設計工具。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileReader">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextReader GetFileReader (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetFileReader(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileReader (filePath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextReader ^ GetFileReader(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileReader : string -&gt; System.IO.TextReader" Usage="workflowDesignerLoader.GetFileReader filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">字串，其中包含要從中讀取的檔案路徑。</param>
        <summary>在衍生類別中覆寫時，擷取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用來從指定檔案讀取的物件。</summary>
        <returns>要讀取指定檔案的 <see cref="T:System.IO.TextReader" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例顯示如何在呼叫 `TextReader` 多載方法時建立並傳回 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader%2A> 物件。  
  
 [!code-csharp[WF_Samples#33](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#33)]
 [!code-vb[WF_Samples#33](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileWriter">
      <MemberSignature Language="C#" Value="public abstract System.IO.TextWriter GetFileWriter (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextWriter GetFileWriter(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFileWriter (filePath As String) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::TextWriter ^ GetFileWriter(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="abstract member GetFileWriter : string -&gt; System.IO.TextWriter" Usage="workflowDesignerLoader.GetFileWriter filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">字串，其中包含要寫入的檔案路徑。</param>
        <summary>在衍生類別中覆寫時，取得 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用來寫入指定檔案的物件。</summary>
        <returns>要寫入檔案的 <see cref="T:System.IO.TextWriter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列範例顯示如何在呼叫 `TextWriter` 多載方法時建立並傳回 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter%2A> 物件。  
  
 [!code-csharp[WF_Samples#34](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#34)]
 [!code-vb[WF_Samples#34](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDebugMode">
      <MemberSignature Language="C#" Value="public virtual bool InDebugMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDebugMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InDebugMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InDebugMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InDebugMode : bool" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示是否應該以偵錯模式載入工作流程。</summary>
        <value>如果要將工作流程載入為偵錯模式則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列方法會判斷工作流程設計工具是否要是否偵錯工具鎖定<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode%2A>屬性的目前`WorkflowDesignerLoader`傳回`true`。  
  
 [!code-csharp[WF_Samples#54](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#54)]
 [!code-vb[WF_Samples#54](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#54)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="workflowDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用設計工具載入器主應用程式所需的任何服務來初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例顯示如何覆寫衍生類別的 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize%2A> 方法，以加入設計工具所需要的服務。 服務會依據您應用程式所需的服務支援層級而有所不同。  
  
 [!code-csharp[WF_Samples#31](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#31)]
 [!code-vb[WF_Samples#31](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayout">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayout (System.Xml.XmlReader layoutReader, out System.Collections.IList layoutLoadErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayout(class System.Xml.XmlReader layoutReader, [out] class System.Collections.IList&amp; layoutLoadErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadDesignerLayout (layoutReader As XmlReader, ByRef layoutLoadErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayout(System::Xml::XmlReader ^ layoutReader, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutLoadErrors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayout : System.Xml.XmlReader *  -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayout (layoutReader, layoutLoadErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutReader" Type="System.Xml.XmlReader" />
        <Parameter Name="layoutLoadErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutReader">針對序列化配置建立的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="layoutLoadErrors">還原序列化 (Deserialization) 期間發生的錯誤清單。</param>
        <summary>將序列化配置套用至目前設計工具主應用程式中的根目錄設計工具。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例顯示如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A> 方法載入指定工作流程定義的配置。 使用設計工具配置檔案的檔案名稱建立 <xref:System.Xml.XmlReader> 物件，而這個檔案是使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 建立的。 當配置完成載入任何可能發生的錯誤時，就會向使用者顯示。  
  
 [!code-csharp[WF_Samples#39](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#39)]
 [!code-vb[WF_Samples#39](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDesignerLayoutFromResource">
      <MemberSignature Language="C#" Value="protected void LoadDesignerLayoutFromResource (Type type, string manifestResourceName, out System.Collections.IList errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadDesignerLayoutFromResource(class System.Type type, string manifestResourceName, [out] class System.Collections.IList&amp; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadDesignerLayoutFromResource(Type ^ type, System::String ^ manifestResourceName, [Runtime::InteropServices::Out] System::Collections::IList ^ % errors);" />
      <MemberSignature Language="F#" Value="member this.LoadDesignerLayoutFromResource : Type * string *  -&gt; unit" Usage="workflowDesignerLoader.LoadDesignerLayoutFromResource (type, manifestResourceName, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="manifestResourceName" Type="System.String" />
        <Parameter Name="errors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">資源與其相關聯的 <see cref="T:System.Type" />。</param>
        <param name="manifestResourceName">資源的名稱。</param>
        <param name="errors">呼叫 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 期間遇到的錯誤。</param>
        <summary>擷取指定的資源並呼叫 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 方法，將序列化配置套用至目前設計工具主應用程式中的根目錄設計工具。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="workflowDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">如果載入作業成功則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="errors">包含載入錯誤。</param>
        <summary>當完成載入設計工具時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何覆寫 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad%2A> 方法，以顯示載入工作流程期間可能發生的錯誤。  
  
 [!code-csharp[WF_Samples#36](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#36)]
 [!code-vb[WF_Samples#36](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">實作 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 介面的類別，可管理設計階段序列化。</param>
        <summary>將快取變更寫入至載入設計工具的來源位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush%2A> 覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 方法，將工作流程序列化。  
  
 [!code-csharp[WF_Samples#35](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#35)]
 [!code-vb[WF_Samples#35](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="workflowDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">實作 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 介面的類別，可管理設計階段序列化。</param>
        <summary>從設計文件載入設計工具。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何覆寫`PerformLoad`方法來還原序列化工作流程，並將其載入設計工具使用`AddObjectGraphToDesignerHost`helper 方法。  
  
 [!code-csharp[WF_Samples#37](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#37)]
 [!code-vb[WF_Samples#37](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivityFromDesigner">
      <MemberSignature Language="C#" Value="public void RemoveActivityFromDesigner (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveActivityFromDesigner(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveActivityFromDesigner(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.RemoveActivityFromDesigner : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowDesignerLoader.RemoveActivityFromDesigner activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">要從設計工具中移除的活動。</param>
        <summary>將活動加入至父活動集合後，再將活動從設計工具主應用程式中移除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例顯示如何從 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 移除活動。 在移除工作流程中 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> 的最後一個子活動之前，會先從工作流程的 <xref:System.Workflow.ComponentModel.CompositeActivity.Activities%2A> 集合中移除該活動。  
  
 [!code-csharp[WF_Samples#40](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#40)]
 [!code-vb[WF_Samples#40](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#40)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDesignerLayout">
      <MemberSignature Language="C#" Value="protected void SaveDesignerLayout (System.Xml.XmlWriter layoutWriter, System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, out System.Collections.IList layoutSaveErrors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SaveDesignerLayout(class System.Xml.XmlWriter layoutWriter, class System.Workflow.ComponentModel.Design.ActivityDesigner rootDesigner, [out] class System.Collections.IList&amp; layoutSaveErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SaveDesignerLayout (layoutWriter As XmlWriter, rootDesigner As ActivityDesigner, ByRef layoutSaveErrors As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SaveDesignerLayout(System::Xml::XmlWriter ^ layoutWriter, System::Workflow::ComponentModel::Design::ActivityDesigner ^ rootDesigner, [Runtime::InteropServices::Out] System::Collections::IList ^ % layoutSaveErrors);" />
      <MemberSignature Language="F#" Value="member this.SaveDesignerLayout : System.Xml.XmlWriter * System.Workflow.ComponentModel.Design.ActivityDesigner *  -&gt; unit" Usage="workflowDesignerLoader.SaveDesignerLayout (layoutWriter, rootDesigner, layoutSaveErrors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="rootDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="layoutSaveErrors" Type="System.Collections.IList" RefType="out" />
      </Parameters>
      <Docs>
        <param name="layoutWriter">用來序列化配置的 <see langword="XmlWriter" />。</param>
        <param name="rootDesigner">從中取得配置資訊的根活動。</param>
        <param name="layoutSaveErrors">序列化期間遇到的錯誤。</param>
        <summary>將設計工具配置序列化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A> 方法儲存工作流程的設計配置資訊。 之後<xref:System.Xml.XmlWriter>建立物件時， <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> for`RootComponent`的工作流程會擷取和傳遞到<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout%2A>方法。 若要載入由這個方法產生的配置檔案，請參閱 <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout%2A>。  
  
 [!code-csharp[WF_Samples#38](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#38)]
 [!code-vb[WF_Samples#38](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkTypeDescriptionProvider">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeDescriptionProvider TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TargetFrameworkTypeDescriptionProvider As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::TypeDescriptionProvider ^ TargetFrameworkTypeDescriptionProvider { System::ComponentModel::TypeDescriptionProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkTypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider" Usage="System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目標 <see cref="T:System.ComponentModel.TypeDescriptor" /> 的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中繼資料。</summary>
        <value>目標 <see cref="T:System.ComponentModel.TypeDescriptor" /> 的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中繼資料。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>