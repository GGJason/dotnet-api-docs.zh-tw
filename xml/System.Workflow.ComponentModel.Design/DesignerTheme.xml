<Type Name="DesignerTheme" FullName="System.Workflow.ComponentModel.Design.DesignerTheme">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac107a2d6a55520e338d01320451584b71119d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679292" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DesignerTheme : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerTheme extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.DesignerTheme" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerTheme&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerTheme abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.DesignerTheme/ThemeSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.ThemeTypeConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>為工作流程設計階段環境使用的活動設計工具主題類別，提供基底類別 (Base Class) 實作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 所有提供主題屬性設定給 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> 類別的類別，必須繼承自 <xref:System.Workflow.ComponentModel.Design.DesignerTheme> 類別。  設計工具主題提供一組屬性值，這些屬性值可用來顯示工作流程設計介面上設計工具類別的背景/前景的色彩和樣式、字型和其他樣式設定。  
  
 <xref:System.Workflow.ComponentModel.Design.AmbientTheme> 類別也繼承自 <xref:System.Workflow.ComponentModel.Design.DesignerTheme>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerTheme (System.Workflow.ComponentModel.Design.WorkflowTheme theme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Design.WorkflowTheme theme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (theme As WorkflowTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerTheme(System::Workflow::ComponentModel::Design::WorkflowTheme ^ theme);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="theme" Type="System.Workflow.ComponentModel.Design.WorkflowTheme" />
      </Parameters>
      <Docs>
        <param name="theme">與此設計工具主題相關聯的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
        <summary>在衍生類別中實作時，會使用 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 物件初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public virtual string ApplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplyTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定設計工具主題要套用之設計工具類型的不合格名稱。</summary>
        <value>要套用設計工具主題之設計工具類型的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo%2A> 屬性使用設計工具類型的不合格名稱使設計工具主題與設計工具產生關聯，而 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType%2A> 屬性使用設計工具的 <xref:System.Type> 將設計工具主題和設計工具產生關聯。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.ReadOnlyException">當 <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> 屬性設為 <see langword="true" /> 時，使用者嘗試了一個設定作業。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainingTheme">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Design.WorkflowTheme ContainingTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowTheme ContainingTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ContainingTheme As WorkflowTheme" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::ComponentModel::Design::WorkflowTheme ^ ContainingTheme { System::Workflow::ComponentModel::Design::WorkflowTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得封裝設計工具主題的工作流程主題。</summary>
        <value>與 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /><see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" />關聯的  物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme%2A> 屬性傳回 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme><xref:System.Workflow.ComponentModel.Design.DesignerTheme.%23ctor%2A>在初始化時使用的  物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerType">
      <MemberSignature Language="C#" Value="public virtual Type DesignerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesignerType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DesignerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DesignerType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與設計工具主題關聯的設計工具類型。</summary>
        <value>
          <see cref="T:System.Type" />，表示要與目前設計工具主題關聯的設計工具。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType%2A> 屬性使用設計工具的 <xref:System.Type> 使設計工具主題與設計工具類型產生關聯，而 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo%2A> 屬性使用設計工具類型的不合格名稱使設計工具主題與設計工具產生關聯。  
  
 此屬性可能的值包括 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner><xref:System.Workflow.ComponentModel.Design.DesignerTheme>和任何由活動設計工具開發者所建立，繼承自  的所有類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.ReadOnlyException">當 <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> 屬性設為 <see langword="true" /> 時，使用者嘗試了一個設定作業。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DesignerTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DesignerTheme ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在記憶體回收開始前，允許 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 嘗試釋放資源，並執行其他清除作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.Finalize%2A> 僅會在記憶體回收前釋放 Unmanaged 資源。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> 執行初始化後進行進一步的初始化工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerTheme> 類別沒有為此方法提供預設行為。 繼承自 <xref:System.Workflow.ComponentModel.Design.DesignerTheme> 的類別必須為此方法提供自己的邏輯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAmbientPropertyChanged">
      <MemberSignature Language="C#" Value="public virtual void OnAmbientPropertyChanged (System.Workflow.ComponentModel.Design.AmbientProperty ambientProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAmbientPropertyChanged(valuetype System.Workflow.ComponentModel.Design.AmbientProperty ambientProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAmbientPropertyChanged(System::Workflow::ComponentModel::Design::AmbientProperty ambientProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ambientProperty" Type="System.Workflow.ComponentModel.Design.AmbientProperty" />
      </Parameters>
      <Docs>
        <param name="ambientProperty">設計工具主題現在應使用的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 列舉值。</param>
        <summary>通知設計工具主題類別，設計工具的環境屬性設定已變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 <xref:System.Workflow.ComponentModel.Design.DesignerTheme> 列舉值從 <xref:System.Workflow.ComponentModel.Design.AmbientProperty> 變更至 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.DesignerSize> 或從 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.OperatingSystemSetting> 變更至 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.OperatingSystemSetting> 時，繼承自 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.DesignerSize> 的類別會使用此方法來進行必要的變更。  
  
 <xref:System.Workflow.ComponentModel.Design.AmbientProperty> 列舉會決定設計工具主題取得其環境屬性設定的位置。 如果已設定 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.DesignerSize> 值，設計工具主題類別將從 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme%2A> 屬性取得其環境設定。 如果已設定 <xref:System.Workflow.ComponentModel.Design.AmbientProperty.OperatingSystemSetting> 值，設計工具主題類別將從設計工具安裝的作業系統取得其環境設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值會指出設計工具主題是否為唯讀。</summary>
        <value>
          如果 <see langword="true" /> 是唯讀的則為 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 初始化使用的 <xref:System.Workflow.ComponentModel.Design.DesignerTheme> 不是 null 參考 (在 Visual Basic 中為 `Nothing`)，<xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly%2A> 便會從 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly%2A?displayProperty=nameWithType> 屬性取得其值。 如果 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 為 null 參考 (`Nothing`)，<xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly%2A> 為 `false`。  
  
 如果 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme> 指派給 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A?displayProperty=nameWithType>，則 <xref:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly%2A> 屬性便設定為 `true`，而且與此主題關聯之所有設計工具主題上的屬性都無法變更。 如果需要的話，可以在載入主題後以及指派到 <xref:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme%2A> 之前，進行設定屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>執行與釋放 (Free)、釋放 (Release) 或重設 Unmanaged 資源相關聯之應用程式定義的工作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此版本的 `Dispose` 會實作 <xref:System.IDisposable> 介面。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>