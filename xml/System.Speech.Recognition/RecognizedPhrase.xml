<Type Name="RecognizedPhrase" FullName="System.Speech.Recognition.RecognizedPhrase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7b4bcf1096859683fe6b5c969f81cc456020402" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529512" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RecognizedPhrase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedPhrase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedPhrase" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedPhrase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedPhrase" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Text}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含語音辨識器所產生的有關已辨識輸入的詳細資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別包含單字和片語語音辨識作業，包括下列期間處理的詳細的資訊：  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>屬性參考<xref:System.Speech.Recognition.Grammar>辨識器用來識別輸入。  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含片語的正規化的文字。  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>屬性參考包含在結果中語意資訊。 語意資訊是索引鍵名稱和相關聯的語意資料的字典。  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含已排序的集合<xref:System.Speech.Recognition.RecognizedWordUnit>代表每個物件，辨識輸入中的文字。 每個 word 單元包含顯示格式、 語彙格式，並發音資訊相對應的文字。  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>屬性包含特殊的字替代的相關資訊。  
  
-   <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>和<xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>屬性包含相同或類似發音的辨識替代項目相關資訊。  
  
-   值<xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>屬性會指出確定性，語音辨識器指派的已辨識的片語比對輸入的程度。  
  
 語音辨識器傳回辨識導致<xref:System.Speech.Recognition.RecognitionResult>物件，繼承自<xref:System.Speech.Recognition.RecognizedPhrase>。 辨識結果<xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性包含已排序的集合<xref:System.Speech.Recognition.RecognizedPhrase>物件，其中每一個都是辨識器的輸入的可能相符項目。  
  
   
  
## Examples  
 下列範例示範的處理常式<xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>， <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>，或<xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType>事件，以及相關聯的資訊的一些<xref:System.Speech.Recognition.RecognitionResult>物件。 <xref:System.Speech.Recognition.RecognitionResult> 類別衍生自 <xref:System.Speech.Recognition.RecognizedPhrase> 類別。  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
  </Docs>
  <Members>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得辨識器指派的值，這個值表示 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 符合指定之輸入的可能性。</summary>
        <value>正確辨識片語的確定性相對量值。 此值介於 0.0 到 1.0，分別表示低度到高度的信賴值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 信心分數並不表示已正確辨識片語的絕對可能性。 相反地，信心分數會提供機制來比較多個的辨識替代項目為給定的輸入的準確度。 這有助於傳回最精確的辨識結果。 例如，如果已辨識的片語的 0.8 的信心分數，這不表示片語已輸入正確的比對的 80%的機率。  表示片語是較有可能比其他結果，確保輸入正確的符合分數小於 0.8。  
  
 信心分數本身沒有任何意義，除非您有要比較，從相同的辨識作業，或是從先前 recognitions 相同輸入的替代結果。 值用來排名替代候選片語所傳回<xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性<xref:System.Speech.Recognition.RecognitionResult>物件。  
  
 信心值是相對與唯一到每個辨識引擎。 傳回兩個不同辨識引擎的信心值無法有意義地加以比較。  
  
 語音辨識引擎可能會基於各種原因，包括背景干擾、 inarticulate 語音，或非預期的單字或單字順序，以指派給語音輸入低信心分數。 如果您的應用程式使用<xref:System.Speech.Recognition.SpeechRecognitionEngine>執行個體，您可以修改信心層級上的語音，輸入已接受或拒絕使用其中一個<xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>方法。 共用辨識器所管理的信賴閾值<xref:System.Speech.Recognition.SpeechRecognizer>、 相關聯的使用者設定檔和儲存在 Windows 登錄中。 應用程式應該不會寫入登錄的共用辨識器的屬性變更。  
  
 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>屬性<xref:System.Speech.Recognition.RecognitionResult>物件包含的已排序的集合<xref:System.Speech.Recognition.RecognizedPhrase>物件，其中每一個都是辨識器的輸入的可能相符項目。 替代項目為從最高到最低的信心排序。  
  
   
  
## Examples  
 下列範例示範的處理常式<xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>， <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>，或<xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType>事件。 此範例顯示相關聯的資訊<xref:System.Speech.Recognition.RecognitionResult>物件，其中有些衍生自<xref:System.Speech.Recognition.RecognizedPhrase>。 處理常式會顯示為已辨識片語以及辨識替代項目與信心分數。  
  
```csharp  
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Recognition result summary:");  
  Console.WriteLine(  
    "  Recognized phrase: {0}\n" +   
    "  Confidence score {1}\n" +   
    "  Grammar used: {2}\n",   
    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  
  
  // Display the semantic values in the recognition result.  
  Console.WriteLine("  Semantic results:");  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine("    The {0} city is {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  Console.WriteLine("  Word summary: ");  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    Console.WriteLine(  
      "    Lexical form ({1})" +  
      " Pronunciation ({0})" +  
      " Display form ({2})",  
      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  
  }  
  
  // Display information about the audio in the recognition result.  
  Console.WriteLine("  Input audio summary:\n" +  
    "    Candidate Phrase at:       {0} mSec\n" +  
    "    Phrase Length:             {1} mSec\n" +  
    "    Input State Time:          {2}\n" +  
    "    Input Format:              {3}\n",  
    e.Result.Audio.AudioPosition,  
    e.Result.Audio.Duration,  
    e.Result.Audio.StartTime,  
    e.Result.Audio.Format.EncodingFormat);  
  
  // Display information about the alternate recognitions in the recognition result.  
  Console.WriteLine("  Alternate phrase collection:");  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine("    Phrase: " + phrase.Text);  
    Console.WriteLine("    Confidence score: " + phrase.Confidence);  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="ConstructSmlFromSemantics">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      <MemberSignature Language="VB.NET" Value="Public Function ConstructSmlFromSemantics () As IXPathNavigable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XPath::IXPathNavigable ^ ConstructSmlFromSemantics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.IXPathNavigable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 物件中語意資訊的語意標記語言 (SML) 文件。</summary>
        <returns>傳回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 語意的 SML 描述，作為 [XPath](http://msdn.microsoft.com/library/ms256115.aspx) 可巡覽物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語意標記語言 (SML) 的相關資訊，請參閱[語意標記語言參考](http://msdn.microsoft.com/library/f9d83443-2cac-49bc-a447-210feda62f5d)。  
  
   
  
## Examples  
 在下列範例中，方法會傳回包含已辨識片語的語意 SML 的字串。  
  
```  
private string GetSemanticsSML(RecognizedPhrase result)  
{  
  if (result.Semantics.Count > 0)  
  {  
    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  
  }  
  else  
  {  
    return null;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Grammar">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.Grammar Grammar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.Grammar Grammar" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Grammar As Grammar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::Grammar ^ Grammar { System::Speech::Recognition::Grammar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 語音辨識器用來傳回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 的 <see cref="T:System.Speech.Recognition.Grammar" />。</summary>
        <value>語音辨識器用來識別輸入的文法物件。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="HomophoneGroupId">
      <MemberSignature Language="C#" Value="public int HomophoneGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HomophoneGroupId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HomophoneGroupId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HomophoneGroupId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得片語同音字群組的識別項。</summary>
        <value>片語同音字群組的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語音辨識器會將群組識別項指派給所有發音相同的辨識替代項。 對於具有唯一的發音的每個替代，辨識器會建立同音字群組。 語音辨識器產生的識別項的每個辨識作業，新的群組，並識別項不能用來比較從替代項目從不同的辨識作業產生。  
  
 例如，包含替代項目"tale"、"tail"和"則發出警示 」 的辨識結果的前兩個替代項目會屬於一個同音字群組，和最後一個替代將會是第二個同音字群組的單一成員。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      </Docs>
    </Member>
    <Member MemberName="Homophones">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt; Homophones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedPhrase&gt; Homophones" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Homophones As ReadOnlyCollection(Of RecognizedPhrase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ Homophones { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與此辨識片語發音相同的辨識替代項目集合。</summary>
        <value>與此辨識片語發音相同之辨識替代項目的唯讀集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會傳回所有其他辨識替代項目與此辨識片語發音相同。  
  
 例如，包含替代項目、"tale of 」 和 「 結尾 」 的辨識結果，第一個鐨"tale"同音字集合會包含第二個片語 「 結尾 」。 第二個替代，也就是 「 結尾 」 的同音字集合會包含第一個片語"tale"。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementWordUnits">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.ReplacementText&gt; ReplacementWordUnits" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementWordUnits As Collection(Of ReplacementText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ ReplacementWordUnits { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::ReplacementText ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.ReplacementText&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在語音轉文字正規化過程中，語音辨識器變更之文字的相關資訊。</summary>
        <value>
          <see cref="T:System.Speech.Recognition.ReplacementText" /> 物件的集合，這些物件描述語音辨識器在將已辨識的輸入正規化時，所取代的文字區段。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語音辨識程序的一部分，語音辨識器正規化成一個顯示的表單已辨識的輸入。  
  
 語音的輸入，"25 （美元） 」，會產生的辨識結果，例如其中<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含單字、"20"、"5"和"（美元） 」，而<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含"$25.00"片語。 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="T:System.Speech.Recognition.ReplacementText" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Semantics">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SemanticValue Semantics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.SemanticValue Semantics" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Semantics As SemanticValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SemanticValue ^ Semantics { System::Speech::Recognition::SemanticValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SemanticValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與已辨識片語相關聯的語意資訊。</summary>
        <value>與已辨識片語相關聯的語意資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語音辨識文法可以包括語意資訊。 當語音辨識器產生這類文法的辨識結果時，語意的資訊可能會包含在辨識結果中，根據文法和辨識器的輸入規則。 如需有關語意資訊的詳細資訊，請參閱[了解語意結果](http://msdn.microsoft.com/library/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005)和<xref:System.Speech.Recognition.SemanticResultKey>和<xref:System.Speech.Recognition.SemanticResultValue>類別。  
  
   
  
## Examples  
 下列範例會定義方法，以取得特定的語意資訊從已辨識片語。 此方法傳回時，它包含的語意索引鍵或為 null 的值，如果不擷取的值。 這個方法只會檢查最上層機碼。 因為語意資訊包含在樹狀目錄中的值時，較低層級索引鍵必須透過傳回語意的值。  
  
```  
static bool TryGetSemanticValue(  
      RecognizedPhrase phrase, string key, out SemanticValue value)  
{  
  value = null;  
  bool found = phrase.Semantics.ContainsKey(key);  
  if (found)  
  {  
    value = phrase.Semantics[key];  
  }  
  
  return found;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
        <altmember cref="T:System.Speech.Recognition.SemanticValue" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得語音辨識器從已辨識輸入產生的正規化文字。</summary>
        <value>語音辨識器從已辨識輸入產生的正規化文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語音辨識程序的一部分，語音辨識器執行可辨識的輸入顯示表單中的語音轉文字的正規化。  
  
 語音的輸入，"25 （美元） 」，會產生的辨識結果，例如其中<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含單字、"20"、"5"和"（美元） 」，而<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含"$25.00"片語。 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="Words">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt; Words { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedWordUnit&gt; Words" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Words As ReadOnlyCollection(Of RecognizedWordUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ Words { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedWordUnit ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedWordUnit&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得語音辨識器從已辨識輸入產生的單字。</summary>
        <value>語音辨識器針對已辨識輸入所產生之 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 物件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會包含從輸入之前的辨識器語音轉文字正規化結果的語音辨識器所產生的單字。  
  
 語音的輸入，"25 （美元） 」，會產生的辨識結果，例如其中<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性包含單字、"20"、"5"和"（美元） 」，而<xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>屬性包含"$25.00"片語。 如需文字正規化的詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Text" />
      </Docs>
    </Member>
  </Members>
</Type>