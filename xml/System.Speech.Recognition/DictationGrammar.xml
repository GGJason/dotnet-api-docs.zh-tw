<Type Name="DictationGrammar" FullName="System.Speech.Recognition.DictationGrammar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03cbcbf150eedd38688c32681c06070f0170c03d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DictationGrammar : System.Speech.Recognition.Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictationGrammar extends System.Speech.Recognition.Grammar" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DictationGrammar" />
  <TypeSignature Language="VB.NET" Value="Public Class DictationGrammar&#xA;Inherits Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictationGrammar : System::Speech::Recognition::Grammar" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.Grammar</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示語音辨識文法，用來進行自由文字聽寫。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會提供應用程式可以處理文字到語音的使用者輸入的預先定義的語言模型。 這個類別支援預設和自訂<xref:System.Speech.Recognition.DictationGrammar>物件。 如需選取聽寫文法的資訊，請參閱<xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>建構函式。  
  
 根據預設，<xref:System.Speech.Recognition.DictationGrammar>語言模型是可用的內容。 不會使用特定的單字或單字順序，以識別及解譯音訊輸入。 若要加入的聽寫文法中的內容，請使用<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>方法。  
  
> [!NOTE]
>  <xref:System.Speech.Recognition.DictationGrammar> 物件不支援<xref:System.Speech.Recognition.Grammar.Priority%2A>屬性。 <xref:System.Speech.Recognition.DictationGrammar> 擲回<xref:System.NotSupportedException>如果<xref:System.Speech.Recognition.Grammar.Priority%2A>設定。  
  
   
  
## Examples  
 下列範例會建立三個聽寫文法、 將它們加入至新<xref:System.Speech.Recognition.SpeechRecognitionEngine>物件，並傳回新的物件。 第一個文法是預設聽寫文法。 第二個文法是拼字聽寫文法。 第三個文法是預設聽寫文法，其中包含內容片語。 <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>方法用來載入至後內容片語關聯聽寫文法<xref:System.Speech.Recognition.SpeechRecognitionEngine>物件。  
  
```csharp  
  
private SpeechRecognitionEngine LoadDictationGrammars()  
{  
  
  // Create a default dictation grammar.  
  DictationGrammar defaultDictationGrammar = new DictationGrammar();  
  defaultDictationGrammar.Name = "default dictation";  
  defaultDictationGrammar.Enabled = true;  
  
  // Create the spelling dictation grammar.  
  DictationGrammar spellingDictationGrammar =  
    new DictationGrammar("grammar:dictation#spelling");  
  spellingDictationGrammar.Name = "spelling dictation";  
  spellingDictationGrammar.Enabled = true;  
  
  // Create the question dictation grammar.  
  DictationGrammar customDictationGrammar =  
    new DictationGrammar("grammar:dictation");  
  customDictationGrammar.Name = "question dictation";  
  customDictationGrammar.Enabled = true;  
  
  // Create a SpeechRecognitionEngine object and add the grammars to it.  
  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  
  recoEngine.LoadGrammar(defaultDictationGrammar);  
  recoEngine.LoadGrammar(spellingDictationGrammar);  
  recoEngine.LoadGrammar(customDictationGrammar);  
  
  // Add a context to customDictationGrammar.  
  customDictationGrammar.SetDictationContext("How do you", null);  
  
  return recoEngine;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>針對 Windows 桌面語音技術所提供的預設聽寫文法，初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設聽寫文法會模擬標準聽寫做法，包括標點符號。 不支援一個字的拼字。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar (string topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string topic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topic As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar(System::String ^ topic);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topic">符合 XML 的通用資源識別項 (URI)，會指定聽寫文法，可能是 <c>grammar:dictation</c> 或 <c>grammar:dictation#spelling</c>。</param>
        <summary>使用特定的聽寫文法，初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語音平台會使用特定的 URI 語法來定義自訂的聽寫文法。 值`grammar:dictation`表示預設聽寫文法。 值`grammar:dictation#spelling`表示拼字聽寫文法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDictationContext">
      <MemberSignature Language="C#" Value="public void SetDictationContext (string precedingText, string subsequentText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDictationContext(string precedingText, string subsequentText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDictationContext (precedingText As String, subsequentText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDictationContext(System::String ^ precedingText, System::String ^ subsequentText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precedingText" Type="System.String" />
        <Parameter Name="subsequentText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="precedingText">表示聽寫內容開頭的文字。</param>
        <param name="subsequentText">表示聽寫內容結尾的文字。</param>
        <summary>將內容加入至聽寫文法（已由<see cref="T:System.Speech.Recognition.SpeechRecognizer" />或<see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />物件載入）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，聽寫文法不會使用特定的單字或單字順序，以識別及解譯音訊輸入。 當內容加入至聽寫文法時，辨識引擎會使用`precedingText`和`subsequentText`來識別時解譯為聽寫的語音。  
  
> [!NOTE]
>  必須載入聽寫文法<xref:System.Speech.Recognition.SpeechRecognizer>或<xref:System.Speech.Recognition.SpeechRecognitionEngine>物件才能使用<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>新增內容。  
  
 下表說明如何辨識引擎會使用兩個參數來判斷何時要使用聽寫文法。  
  
|`precedingText`|`subsequentText`|描述|  
|---------------------|----------------------|-----------------|  
|非 `null`|非 `null`|辨識引擎會使用的詞彙來括號可能的候選片語。|  
|`null`|非 `null`|辨識引擎會使用`subsequentText`完成聽寫。|  
|非 `null`|`null`|辨識引擎會使用`precedingText`啟動聽寫。|  
|`null`|`null`|辨識引擎使用聽寫文法時，不使用的內容。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
  </Members>
</Type>