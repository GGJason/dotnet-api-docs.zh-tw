<Type Name="RecognizedWordUnit" FullName="System.Speech.Recognition.RecognizedWordUnit">
  <TypeSignature Language="C#" Value="public class RecognizedWordUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedWordUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedWordUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedWordUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedWordUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Text: {Text}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36ab8-101">提供辨識語音的不可部分完成的單位。</span><span class="sxs-lookup"><span data-stu-id="36ab8-101">Provides the atomic unit of recognized speech.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-102">辨識引擎所傳回的所有結果都建構的<xref:System.Speech.Recognition.RecognizedWordUnit>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-102">All results returned by a recognition engine are constructed of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span>  
  
 <span data-ttu-id="36ab8-103">陣列<xref:System.Speech.Recognition.RecognizedWordUnit>物件是透過任何辨識作業存取<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-103">An array of <xref:System.Speech.Recognition.RecognizedWordUnit> objects is accessible for any recognition operation through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
 <span data-ttu-id="36ab8-104">除了提供辨識確定程度的量值 (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>)<xref:System.Speech.Recognition.RecognizedWordUnit>執行個體會提供：</span><span class="sxs-lookup"><span data-stu-id="36ab8-104">In addition to providing a measure of recognition certainty (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>) a <xref:System.Speech.Recognition.RecognizedWordUnit> instance provides:</span></span>  
  
-   <span data-ttu-id="36ab8-105">可辨識的文字正規化和完全符合 （或語彙） 的文字表示。</span><span class="sxs-lookup"><span data-stu-id="36ab8-105">Normalized and exact (or lexical) text representations for a recognized word.</span></span> <span data-ttu-id="36ab8-106">如需詳細資訊，請參閱<xref:System.Speech.Recognition.ReplacementText>、<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>和<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>。</span><span class="sxs-lookup"><span data-stu-id="36ab8-106">For more information, see <xref:System.Speech.Recognition.ReplacementText>, <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>, and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>.</span></span>  
  
-   <span data-ttu-id="36ab8-107">使用支援的注音字母，例如國際音標 (IPA) 或萬用電話設定 (UPS) 中的字元發音資訊。</span><span class="sxs-lookup"><span data-stu-id="36ab8-107">Pronunciation information using characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span></span> <span data-ttu-id="36ab8-108">如需詳細資訊，請參閱<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>。</span><span class="sxs-lookup"><span data-stu-id="36ab8-108">For more information see <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>.</span></span>  
  
-   <span data-ttu-id="36ab8-109">格式進行列印。</span><span class="sxs-lookup"><span data-stu-id="36ab8-109">Formatting for printing.</span></span> <span data-ttu-id="36ab8-110">如需詳細資訊，請參閱<xref:System.Speech.Recognition.DisplayAttributes>類別和其<xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="36ab8-110">For more information see the <xref:System.Speech.Recognition.DisplayAttributes> class and its <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-111">下列範例顯示公用程式常式 (`stringFromWordArray`)，會產生字串。</span><span class="sxs-lookup"><span data-stu-id="36ab8-111">The following example shows a utility routine (`stringFromWordArray`) that generates strings.</span></span> <span data-ttu-id="36ab8-112">字串包含語彙輸出 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>)，正規化的文字 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>)，或從國際音標發音的字元 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-112">The strings contain lexical output (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized text (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetic characters from the International Phonetic Alphabet (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="36ab8-113">使用格式化字串<xref:System.Speech.Recognition.DisplayAttributes>物件取自<xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A>屬性從<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Speech.Recognition.RecognizedWordUnit>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-113">Strings are formatted using <xref:System.Speech.Recognition.DisplayAttributes> objects obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span> <span data-ttu-id="36ab8-114"><xref:System.Speech.Recognition.RecognizedWordUnit>物件取自<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-114">The <xref:System.Speech.Recognition.RecognizedWordUnit> objects are obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(ReadOnlyCollection<RecognizedWordUnit> words, WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecognizedWordUnit (string text, float confidence, string pronunciation, string lexicalForm, System.Speech.Recognition.DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, float32 confidence, string pronunciation, string lexicalForm, valuetype System.Speech.Recognition.DisplayAttributes displayAttributes, valuetype System.TimeSpan audioPosition, valuetype System.TimeSpan audioDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RecognizedWordUnit(System::String ^ text, float confidence, System::String ^ pronunciation, System::String ^ lexicalForm, System::Speech::Recognition::DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="confidence" Type="System.Single" />
        <Parameter Name="pronunciation" Type="System.String" />
        <Parameter Name="lexicalForm" Type="System.String" />
        <Parameter Name="displayAttributes" Type="System.Speech.Recognition.DisplayAttributes" />
        <Parameter Name="audioPosition" Type="System.TimeSpan" />
        <Parameter Name="audioDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="36ab8-115">所辨識之話語的標準文字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-115">The normalized text for a recognized word.</span></span>  
  
 <span data-ttu-id="36ab8-116">這個值可以是 <see langword="null" />、"" 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="36ab8-116">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="confidence"><span data-ttu-id="36ab8-117">範圍為 0.0 到 1.0 的<see langword="float" />值，表示字詞辨識的確定性。</span><span class="sxs-lookup"><span data-stu-id="36ab8-117">A <see langword="float" /> value from 0.0 through 1.0 indicating the certainty of word recognition.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="36ab8-118">已辨識之單字的注音標示拼字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-118">The phonetic spelling of a recognized word.</span></span>  
  
 <span data-ttu-id="36ab8-119">這個值可以是 <see langword="null" />、"" 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="36ab8-119">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="lexicalForm"><span data-ttu-id="36ab8-120">所辨識之單字的未標準化文字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-120">The unnormalized text for a recognized word.</span></span>  
  
 <span data-ttu-id="36ab8-121">這個引數是必要項而且不可以是 <see langword="null" />、"" 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="36ab8-121">This argument is required and may not be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="displayAttributes"><span data-ttu-id="36ab8-122">定義使用空白字元顯示辨識的字的方式。</span><span class="sxs-lookup"><span data-stu-id="36ab8-122">Defines the use of white space to display recognized words.</span></span></param>
        <param name="audioPosition"><span data-ttu-id="36ab8-123">所辨識之字詞在音訊輸入資料流中的位置。</span><span class="sxs-lookup"><span data-stu-id="36ab8-123">The location of the recognized word in the audio input stream.</span></span>  
  
 <span data-ttu-id="36ab8-124">這個值可以是 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="36ab8-124">This value can be <see cref="F:System.TimeSpan.Zero" />.</span></span></param>
        <param name="audioDuration"><span data-ttu-id="36ab8-125">對應至所辨認之字詞的音訊輸入長度。</span><span class="sxs-lookup"><span data-stu-id="36ab8-125">The length of the audio input corresponding to the recognized word.</span></span>  
  
 <span data-ttu-id="36ab8-126">這個值可以是 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="36ab8-126">This value can be <see cref="F:System.TimeSpan.Zero" />.</span></span></param>
        <summary><span data-ttu-id="36ab8-127">初始化 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="36ab8-127">Initializes a new instance of the <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-128">如果`text`或`pronunciation`是`null`，""，或<xref:System.String.Empty>和<xref:System.Speech.Recognition.RecognizedWordUnit>用在辨識作業中，辨識引擎將會產生任何輸出中的適當值<xref:System.Speech.Recognition.RecognizedWordUnit>執行個體。</span><span class="sxs-lookup"><span data-stu-id="36ab8-128">If `text` or `pronunciation` are `null`, "", or <xref:System.String.Empty> and the <xref:System.Speech.Recognition.RecognizedWordUnit> is used in a recognition operation, the recognition engine will generate appropriate values in any output <xref:System.Speech.Recognition.RecognizedWordUnit> instance.</span></span>  
  
 <span data-ttu-id="36ab8-129">直接建構<xref:System.Speech.Recognition.RecognizedWordUnit>執行個體通常只有在模擬使用的辨識作業時，才使用<xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A>或<xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A>方法<xref:System.Speech.Recognition.SpeechRecognitionEngine>類別和<xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A>或<xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A>方法<xref:System.Speech.Recognition.SpeechRecognizer>類別。</span><span class="sxs-lookup"><span data-stu-id="36ab8-129">Direct construction of <xref:System.Speech.Recognition.RecognizedWordUnit> instances is typically used only when emulating recognition operations using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class and the <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognizer> class.</span></span>  
  
 <span data-ttu-id="36ab8-130">實際的應用程式，請不要直接建構<xref:System.Speech.Recognition.RecognizedWordUnit>，而不是取得其傳遞<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-130">For actual applications, do not directly construct <xref:System.Speech.Recognition.RecognizedWordUnit>, rather obtain it through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-131">下列範例是模擬的稍微疏失的測試，讓輸入產生和傳遞至模擬器中，並驗證新文字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-131">The following example is a somewhat contrived test of emulation, where new words are generated from the input and passed to the emulator, and then verified.</span></span>  
  
```csharp  
private void _emulateAndVerify_Click(object sender, EventArgs e)   
{  
  char[] delimiterChars = { ' ', ',', '.', ':', ';', '\t' };  
  string text = _emulateTextBox.Text;  
  string[] words = text.Split(delimiterChars);  
  
  RecognizedWordUnit[] InputWordUnits = new RecognizedWordUnit[words.Length];  
  for (int i = 0; i < words.Length; i++)   
  {  
    InputWordUnits[i] = new RecognizedWordUnit(  
        "",   
        0,   
        "",  
        words[i].ToLower(),   
        DisplayAttributes.OneTrailingSpace,   
        new TimeSpan(),   
        new TimeSpan());  
  }  
  
  RecognitionResult rec = _recognizer.EmulateRecognize(  
        InputWordUnits,   
        System.Globalization.CompareOptions.IgnoreCase);  
  if (rec == null)   
  {  
    MessageBox.Show(String.Format("Recognition emulation for {0} failed.\n", text));  
  }   
  else if (InputWordUnits.Length != rec.Words.Count)   
  {  
    MessageBox.Show(  
       String.Format("Length mismatch: Input was {0} words, Recognition has {1} words.\n}"));  
  }   
  else   
  {  
    for (int i = 0; i < InputWordUnits.Length; i++)   
    {  
  
      if (rec.Words[i].LexicalForm.ToLower() != InputWordUnits[i].LexicalForm.ToLower())   
      {  
        MessageBox.Show(  
          String.Format("Input word {0} \"{1}\" not found. Recognition output is {2}",  
          i, InputWordUnits[i].LexicalForm, rec.Words[i].LexicalForm));  
        continue;  
      }  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ab8-132">取得指派給辨識器的值，這個值表示所辨識的字符合指定之輸入的可能性。</span><span class="sxs-lookup"><span data-stu-id="36ab8-132">Gets a value, assigned by the recognizer, that represents the likelihood that a recognized word matches a given input.</span></span></summary>
        <value><span data-ttu-id="36ab8-133">正確辨識單字的確定性的相對量值。</span><span class="sxs-lookup"><span data-stu-id="36ab8-133">A relative measure of the certainty of correct recognition for a word.</span></span> <span data-ttu-id="36ab8-134">此值介於 0.0 到 1.0，分別表示低度到高度的信賴值。</span><span class="sxs-lookup"><span data-stu-id="36ab8-134">The value is from 0.0 to 1.0, for low to high confidence, respectively.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-135">信心分數並不表示絕對 word 已正確辨識的可能性。</span><span class="sxs-lookup"><span data-stu-id="36ab8-135">Confidence scores do not indicate the absolute likelihood that a word was recognized correctly.</span></span> <span data-ttu-id="36ab8-136">相反地，信心分數會提供機制來比較多個的辨識替代項目為給定的輸入的準確度。</span><span class="sxs-lookup"><span data-stu-id="36ab8-136">Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input.</span></span> <span data-ttu-id="36ab8-137">這有助於傳回最精確的辨識結果。</span><span class="sxs-lookup"><span data-stu-id="36ab8-137">This facilitates returning the most accurate recognition result.</span></span> <span data-ttu-id="36ab8-138">例如，如果辨識的字 0.8 的信心分數，這不表示 word 已輸入正確的比對的 80%的機率。</span><span class="sxs-lookup"><span data-stu-id="36ab8-138">For example, if a recognized word has a confidence score of 0.8, this does not mean that the word has an 80% chance of being the correct match for the input.</span></span>  <span data-ttu-id="36ab8-139">表示這個字是較有可能比其他結果，確保輸入正確的符合分數小於 0.8。</span><span class="sxs-lookup"><span data-stu-id="36ab8-139">It means that the word is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.</span></span>  
  
 <span data-ttu-id="36ab8-140">信心分數本身沒有任何意義，除非您有要比較，從相同的辨識作業，或是從先前 recognitions 相同輸入的替代結果。</span><span class="sxs-lookup"><span data-stu-id="36ab8-140">A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.</span></span>  
  
 <span data-ttu-id="36ab8-141">所傳回的值<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>相對且唯一的每個辨識引擎。</span><span class="sxs-lookup"><span data-stu-id="36ab8-141">The values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> are relative and unique to each recognition engine.</span></span> <span data-ttu-id="36ab8-142">沒有定義如何比較兩個不同辨識引擎之間的信賴值，或如何<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>個別的<xref:System.Speech.Recognition.RecognizedWordUnit>物件定義<xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>的<xref:System.Speech.Recognition.RecognizedPhrase>。</span><span class="sxs-lookup"><span data-stu-id="36ab8-142">There is no definition of how confidence values between two different recognition engines compare, nor how the <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> of individual <xref:System.Speech.Recognition.RecognizedWordUnit> objects define the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> of a <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="36ab8-143">語音辨識引擎可能會基於各種原因，包括背景干擾、 inarticulate 語音，或非預期的單字或單字順序，以指派給語音輸入低信心分數。</span><span class="sxs-lookup"><span data-stu-id="36ab8-143">A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences.</span></span> <span data-ttu-id="36ab8-144">如果您的應用程式使用<xref:System.Speech.Recognition.SpeechRecognitionEngine>執行個體，您可以修改信心層級上的語音，輸入已接受或拒絕使用其中一個<xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="36ab8-144">If your application is using a <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> methods.</span></span> <span data-ttu-id="36ab8-145">共用辨識器所管理的信賴閾值<xref:System.Speech.Recognition.SpeechRecognizer>、 相關聯的使用者設定檔和儲存在 Windows 登錄中。</span><span class="sxs-lookup"><span data-stu-id="36ab8-145">Confidence thresholds for the shared recognizer, managed by <xref:System.Speech.Recognition.SpeechRecognizer>, are associated with a user profile and stored in the Windows registry.</span></span> <span data-ttu-id="36ab8-146">應用程式應該不會寫入登錄的共用辨識器的屬性變更。</span><span class="sxs-lookup"><span data-stu-id="36ab8-146">Applications should not write changes to the registry for the properties of the shared recognizer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAttributes">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.DisplayAttributes DisplayAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.DisplayAttributes DisplayAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayAttributes As DisplayAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::DisplayAttributes DisplayAttributes { System::Speech::Recognition::DisplayAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ab8-147">取得格式化資訊，這項資訊會用來從目前的 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 執行個體建立文字輸出。</span><span class="sxs-lookup"><span data-stu-id="36ab8-147">Gets formatting information used to create the text output from the current <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> instance.</span></span></summary>
        <value><span data-ttu-id="36ab8-148">指定 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 物件內容中要顯示的空白區的用法。</span><span class="sxs-lookup"><span data-stu-id="36ab8-148">Specifies the use of white space to display of the contents of a <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-149"><xref:System.Speech.Recognition.DisplayAttributes>所傳回物件<xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A>屬性會指定用於給定的字詞，開頭和尾端空白，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="36ab8-149">The <xref:System.Speech.Recognition.DisplayAttributes> object returned by the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property specifies the leading and trailing spaces to be used with a given word, if any.</span></span>  
  
 <span data-ttu-id="36ab8-150">如需如何使用這些資訊的詳細資訊，請參閱<xref:System.Speech.Recognition.DisplayAttributes>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="36ab8-150">For more information about how to use this formatting information, see the <xref:System.Speech.Recognition.DisplayAttributes> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-151">下列範例顯示公用程式常式 (`stringFromWordArray`) 中有三種，產生的格式字串： 以語彙方式 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>)、 標準化 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>)，或次序 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-151">The following example shows a utility routine (`stringFromWordArray`) that generates a string that is formatted in one of three ways: lexically (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetically (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="36ab8-152">文字輸出取自<xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A>屬性<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Speech.Recognition.RecognizedWordUnit>物件取自<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-152">The text output is obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property on a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on a <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
        ReadOnlyCollection<RecognizedWordUnit> words,   
        WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }  
    else if (type == WordType.Pronunciation)   
    {  
       wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
         String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="LexicalForm">
      <MemberSignature Language="C#" Value="public string LexicalForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LexicalForm" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LexicalForm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LexicalForm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ab8-153">取得所辨識之單字的未標準化文字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-153">Gets the unnormalized text of a recognized word.</span></span></summary>
        <value><span data-ttu-id="36ab8-154">傳回 <see cref="T:System.String" />，包含所辨識之單字的文字，不含任何正常化。</span><span class="sxs-lookup"><span data-stu-id="36ab8-154">Returns a <see cref="T:System.String" /> containing the text of a recognized word, without any normalization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-155">在大部分情況下所傳回的值<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>和<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>完全相同。</span><span class="sxs-lookup"><span data-stu-id="36ab8-155">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> are identical.</span></span> <span data-ttu-id="36ab8-156">不過，辨識引擎可能會使用語音正規化，以傳回更方便使用或 colloquial 的文字表示法音訊輸入。</span><span class="sxs-lookup"><span data-stu-id="36ab8-156">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="36ab8-157">語音正規化是使用特殊建構或符號來表示語音撰寫。</span><span class="sxs-lookup"><span data-stu-id="36ab8-157">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="36ab8-158">例如，正規化可以取代口語 「 貨幣和 16 個美分 」"$1.16"輸出文字中。</span><span class="sxs-lookup"><span data-stu-id="36ab8-158">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-159">下列範例示範三種格式之一產生文字的公用程式常式： 語彙 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>)、 標準化 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>)，和語音 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-159">The following example shows a utility routine that generates text in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="36ab8-160">文字輸出取自<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Speech.Recognition.RecognizedWordUnit>物件取自<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-160">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
         ReadOnlyCollection<RecognizedWordUnit> words,   
         WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
    wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ab8-161">取得所辨識之單字的語音拼法。</span><span class="sxs-lookup"><span data-stu-id="36ab8-161">Gets the phonetic spelling of a recognized word.</span></span></summary>
        <value><span data-ttu-id="36ab8-162">使用支援的語音字母（例如，國際音標 (IPA) 或通用拼音集 (UPS)）的字元字串。</span><span class="sxs-lookup"><span data-stu-id="36ab8-162">A string of characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-163">內容<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>表示語音辨識引擎用來比對其載入其中一個動作的語音輸入哪些發音<xref:System.Speech.Recognition.Grammar>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-163">The contents of <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A> indicate which pronunciation the speech recognition engine used to match speech input to one of its loaded <xref:System.Speech.Recognition.Grammar> objects.</span></span> <span data-ttu-id="36ab8-164">中的語音辨識引擎內部詞素連結從辨識文法中載入 lexicon 文件中可能會定義發音<xref:System.Speech.Recognition.Grammar>物件，或是內嵌於辨識文法中載入<xref:System.Speech.Recognition.Grammar>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-164">Pronunciations may be defined in the speech recognition engine's internal lexicon, in a lexicon document that is linked from a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object, or inline in a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object.</span></span> <span data-ttu-id="36ab8-165">語音辨識引擎也可能會建立常見字詞詞素或語音辨識引擎目前擁有的存取權的文法中未定義其發音的發音。</span><span class="sxs-lookup"><span data-stu-id="36ab8-165">A speech recognition engine may also create pronunciations for uncommon words whose pronunciations are not defined in a lexicon or grammar to which the speech recognition engine currently has access.</span></span>  
  
 <span data-ttu-id="36ab8-166">許多 windows Unicode 字型，例如： Courier New，支援 IPA 字串的顯示。</span><span class="sxs-lookup"><span data-stu-id="36ab8-166">Many Windows-based Unicode fonts, such as Courier New, support the display of IPA strings.</span></span> <span data-ttu-id="36ab8-167">如需詳細資訊，請參閱[國際音標](http://go.microsoft.com/fwlink/?LinkId=58363)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-167">For more information, see [International Phonetic Alphabet](http://go.microsoft.com/fwlink/?LinkId=58363).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-168">下列範例顯示公用程式常式，會產生具有三個可能的格式的其中一個的字串： 語彙 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>)、 標準化 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>)，和語音 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-168">The following example shows a utility routine that generates a string with one of three possible formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="36ab8-169">文字輸出取自<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Speech.Recognition.RecognizedWordUnit>物件取自<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-169">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36ab8-170">取得所辨識之單字的標準化文字。</span><span class="sxs-lookup"><span data-stu-id="36ab8-170">Gets the normalized text for a recognized word.</span></span></summary>
        <value><span data-ttu-id="36ab8-171">字串，包含指定輸入單字的標準化文字輸出。</span><span class="sxs-lookup"><span data-stu-id="36ab8-171">A string that contains the normalized text output for a given input word.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36ab8-172">在大部分情況下所傳回的值<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>和<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>會完全相同。</span><span class="sxs-lookup"><span data-stu-id="36ab8-172">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> will be identical.</span></span> <span data-ttu-id="36ab8-173">不過，辨識引擎可能會使用語音正規化，以傳回更方便使用或 colloquial 的文字表示法音訊輸入。</span><span class="sxs-lookup"><span data-stu-id="36ab8-173">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="36ab8-174">語音正規化是使用特殊建構或符號來表示語音撰寫。</span><span class="sxs-lookup"><span data-stu-id="36ab8-174">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="36ab8-175">例如，正規化可以取代口語 「 貨幣和 16 個美分 」"$1.16"輸出文字中。</span><span class="sxs-lookup"><span data-stu-id="36ab8-175">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36ab8-176">下列範例顯示公用程式常式，會產生一個字串，其中三種格式： 語彙 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>)、 標準化 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>)，和語音 (使用<xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>)。</span><span class="sxs-lookup"><span data-stu-id="36ab8-176">The following example shows a utility routine that generates a string in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="36ab8-177">文字輸出取自<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>的<xref:System.Speech.Recognition.RecognizedWordUnit>物件取自<xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>物件。</span><span class="sxs-lookup"><span data-stu-id="36ab8-177">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
           String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>