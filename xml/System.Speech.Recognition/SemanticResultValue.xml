<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="797a339d2959f7a21f676aab7fd40fbe56982ddf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530012" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="01a76-101">代表語意值，並選擇性地將值與語音辨識文法的元件相關聯。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01a76-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-102">使用<xref:System.Speech.Recognition.SemanticResultValue>和<xref:System.Speech.Recognition.SemanticResultKey>物件、 搭配<xref:System.Speech.Recognition.GrammarBuilder>和<xref:System.Speech.Recognition.Choices>，是最簡單的方式設計的語意結構<xref:System.Speech.Recognition.Grammar>。</span><span class="sxs-lookup"><span data-stu-id="01a76-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="01a76-103">取得執行個體的存取片語的語意資訊<xref:System.Speech.Recognition.SemanticValue>，到<xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>屬性<xref:System.Speech.Recognition.RecognizedPhrase>。</span><span class="sxs-lookup"><span data-stu-id="01a76-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01a76-104">值由<xref:System.Speech.Recognition.SemanticResultValue>物件會由<xref:System.Object>執行個體會傳遞至其建構函式。</span><span class="sxs-lookup"><span data-stu-id="01a76-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="01a76-105">基礎類型<xref:System.Object>必須`bool`， `int`， `float`，或`string`。</span><span class="sxs-lookup"><span data-stu-id="01a76-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="01a76-106">任何其他型別會造成建構<xref:System.Speech.Recognition.Grammar>執行個體，其<xref:System.Speech.Recognition.SemanticResultValue>。</span><span class="sxs-lookup"><span data-stu-id="01a76-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="01a76-107">一般用法<xref:System.Speech.Recognition.SemanticResultValue>可辨識的元件與執行個體產生關聯的執行個體<xref:System.Speech.Recognition.Grammar>，片語時，規則，例如或<xref:System.Speech.Recognition.Choices>物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="01a76-108">如果相關聯的元件用來當做辨識作業的一部分<xref:System.Speech.Recognition.SemanticResultValue>用來傳回片語的語意中定義的值。</span><span class="sxs-lookup"><span data-stu-id="01a76-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="01a76-109">有兩種基本的方法相關聯<xref:System.Speech.Recognition.SemanticResultValue>文法項目，根據建構函式用來建立執行個體<xref:System.Speech.Recognition.SemanticResultValue>。</span><span class="sxs-lookup"><span data-stu-id="01a76-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="01a76-110">如果只有值 (指定的執行個體<xref:System.Object>) 用來建構<xref:System.Speech.Recognition.SemanticResultValue>物件，<xref:System.Speech.Recognition.SemanticResultValue>前面，除了文法元件相關聯<xref:System.Speech.Recognition.GrammarBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="01a76-111">例如，在 if 下方的程式碼片段<xref:System.Speech.Recognition.Grammar>使用這個建構<xref:System.Speech.Recognition.GrammarBuilder>執行個體可辨識的單字 「 背景 」，值為`true`設定已辨識的片語的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="01a76-112">如需詳細資訊，請參閱 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29> 的說明。</span><span class="sxs-lookup"><span data-stu-id="01a76-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="01a76-113">如果字串值的片語或特定<xref:System.Speech.Recognition.GrammarBuilder>執行個體，是用在搭配<xref:System.Object>指定<xref:System.Speech.Recognition.SemanticResultValue>值，值會自動關聯於字串值的片語或<xref:System.Speech.Recognition.GrammarBuilder>執行個體。</span><span class="sxs-lookup"><span data-stu-id="01a76-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="01a76-114">如果片語或<xref:System.Speech.Recognition.GrammarBuilder>物件辨識時所使用，此值會指派給已辨識片語的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="01a76-115">下列範例將說明這點，和其作用相當於先前的範例中，使用明確呼叫<xref:System.Speech.Recognition.GrammarBuilder.Append%2A>和<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>。</span><span class="sxs-lookup"><span data-stu-id="01a76-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="01a76-116">如果辨識邏輯會使用 「 背景 」，此值 word`true`就會加入至已辨識的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="01a76-117">如需詳細資訊，請參閱描述<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29>和<xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>。</span><span class="sxs-lookup"><span data-stu-id="01a76-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="01a76-118">可供<xref:System.Speech.Recognition.Grammar>中辨識，所有<xref:System.Speech.Recognition.SemanticResultValue>必須與其中一個相關聯的執行個體<xref:System.Speech.Recognition.SemanticValue>，所使用的物件<xref:System.Speech.Recognition.Grammar>。</span><span class="sxs-lookup"><span data-stu-id="01a76-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="01a76-119">這樣做，將相關聯的語意索引鍵<xref:System.Speech.Recognition.SemanticResultValue>。</span><span class="sxs-lookup"><span data-stu-id="01a76-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="01a76-120">語意索引鍵可以明確地附加至<xref:System.Speech.Recognition.SemanticResultValue>，並使用<xref:System.Speech.Recognition.SemanticResultKey>物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="01a76-121"><xref:System.Speech.Recognition.SemanticResultValue> 未明確附加到索引鍵的執行個體連接到預設的根目錄機碼<xref:System.Speech.Recognition.SemanticValue>。</span><span class="sxs-lookup"><span data-stu-id="01a76-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="01a76-122">之後<xref:System.Speech.Recognition.SemanticResultValue>已經用來設定<xref:System.Speech.Recognition.SemanticValue.Value%2A>、 是否使用預設的根目錄機碼或任何特定標記<xref:System.Speech.Recognition.SemanticResultKey>、 不得修改該值，或將辨識作業期間發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="01a76-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="01a76-123">下列範例會導致例外狀況，因為它會設定並再修改根<xref:System.Speech.Recognition.SemanticValue.Value%2A>的<xref:System.Speech.Recognition.Grammar>。</span><span class="sxs-lookup"><span data-stu-id="01a76-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="01a76-124">相反地，允許在下列範例程式碼。</span><span class="sxs-lookup"><span data-stu-id="01a76-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="01a76-125">雖然它會定義多個執行個體<xref:System.Speech.Recognition.SemanticResultValue>，它們會包含在<xref:System.Speech.Recognition.Choices>物件，且曾用來設定索引鍵的值只有一個會`bgOrfgText`。</span><span class="sxs-lookup"><span data-stu-id="01a76-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="01a76-126">如需有關使用<xref:System.Speech.Recognition.SemanticResultValue>和<xref:System.Speech.Recognition.SemanticResultKey>物件，請參閱[了解 SemanticResultValue 和 SemanticResultKey 物件](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)和[使用 SemanticResultKey 來擷取SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa)中[系統語音程式設計指南適用於.NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043)。</span><span class="sxs-lookup"><span data-stu-id="01a76-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a76-127">下列範例會傳回<xref:System.Speech.Recognition.Grammar>，會辨識命令 「 設定/變更/Alter 前景/背景...</span><span class="sxs-lookup"><span data-stu-id="01a76-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="01a76-128">[色彩 清單]"。</span><span class="sxs-lookup"><span data-stu-id="01a76-128">[color list]".</span></span>  <span data-ttu-id="01a76-129"><xref:System.Speech.Recognition.SemanticResultValue> 和<xref:System.Speech.Recognition.SemanticResultKey>執行個體 (搭配<xref:System.Speech.Recognition.Choices>和<xref:System.Speech.Recognition.GrammarBuilder>物件) 用來辨識定義可以剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="01a76-130">要求哪種色彩，以及是否在前景或背景為要修改，將會決定已剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="01a76-131">初始化 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-132">`SemanticResultValue`建構函式支援指定<xref:System.Object>基礎的資料類型的執行個體`bool`， `int`， `float`，或`string`。</span><span class="sxs-lookup"><span data-stu-id="01a76-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="01a76-133">建構函式可以建立`SemanticResultValue`兩種情況下任一執行個體：</span><span class="sxs-lookup"><span data-stu-id="01a76-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="01a76-134">`SemanticResultValue`使用時，執行個體必須是明確相關聯的文法項目<xref:System.Speech.Recognition.GrammarBuilder>建構<xref:System.Speech.Recognition.Grammar>。</span><span class="sxs-lookup"><span data-stu-id="01a76-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="01a76-135">`SemanticResultValue`已經是與字串值片語相關聯或<xref:System.Speech.Recognition.GrammarBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="01a76-136">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 所管理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="01a76-137">必須為型別 <see langword="bool" />、<see langword="int" />、<see langword="float" /> 或 <see langword="string" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a76-138">初始化 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 類別的新執行個體，並指定語意值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-139">A`SemanticResultValue`傳回由此建構函式未與任何特定的文法項目相關聯。</span><span class="sxs-lookup"><span data-stu-id="01a76-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="01a76-140">關聯必須由明確使用的執行個體`SemanticResultValue`搭配<xref:System.Speech.Recognition.GrammarBuilder>。</span><span class="sxs-lookup"><span data-stu-id="01a76-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="01a76-141">例如，在 if 下方的程式碼片段<xref:System.Speech.Recognition.Grammar>使用這個建構<xref:System.Speech.Recognition.GrammarBuilder>執行個體可辨識的單字 「 背景 」，值為`true`設定已辨識的片語的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="01a76-142">下列範例會傳回<xref:System.Speech.Recognition.Grammar>，會辨識命令 「 設定/變更/Alter 前景/背景...</span><span class="sxs-lookup"><span data-stu-id="01a76-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="01a76-143">[色彩 清單]"。</span><span class="sxs-lookup"><span data-stu-id="01a76-143">[color list]".</span></span> <span data-ttu-id="01a76-144"><xref:System.Speech.Recognition.SemanticResultValue> 和<xref:System.Speech.Recognition.SemanticResultKey>執行個體 (搭配<xref:System.Speech.Recognition.Choices>和<xref:System.Speech.Recognition.GrammarBuilder>物件) 用來辨識定義可以剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="01a76-145">要求哪種色彩，以及是否在前景或背景為要修改，將會決定已剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="01a76-146">要用於辨識的文法元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="01a76-147">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 所管理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="01a76-148">必須為型別 <see langword="bool" />、<see langword="int" />、<see langword="float" /> 或 <see langword="string" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a76-149">初始化 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 類別的新執行個體，並且使語意值與 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 物件產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-150">如果所指定的文法項目<xref:System.Speech.Recognition.GrammarBuilder>用於辨識邏輯`value`將可辨識的輸出的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="01a76-151">If 下方的程式碼片段中辨識邏輯建構<xref:System.Speech.Recognition.GrammarBuilder>執行個體 (`myGb`) 會使用<xref:System.Speech.Recognition.Choices>物件 (`myChoice`) 來識別輸入值`true`加入至已辨識的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="01a76-152">做為<xref:System.Speech.Recognition.GrammarBuilder>支援隱含轉換為<xref:System.Speech.Recognition.Choices>， `SemanticResultValue`，和<xref:System.Speech.Recognition.SemanticResultKey>，這個建構函式可以使用這些物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a76-153">下列範例會傳回<xref:System.Speech.Recognition.Grammar>，會辨識命令 「 設定/變更/Alter 前景/背景...</span><span class="sxs-lookup"><span data-stu-id="01a76-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="01a76-154">[色彩 清單]"。</span><span class="sxs-lookup"><span data-stu-id="01a76-154">[color list]".</span></span> <span data-ttu-id="01a76-155"><xref:System.Speech.Recognition.SemanticResultValue> 和<xref:System.Speech.Recognition.SemanticResultKey>執行個體 (搭配<xref:System.Speech.Recognition.Choices>和<xref:System.Speech.Recognition.GrammarBuilder>物件) 用來辨識定義可以剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="01a76-156">要求哪種色彩，以及是否在前景或背景為要修改，將會決定已剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="01a76-157">要用於辨識的片語。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="01a76-158">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 所管理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="01a76-159">必須為型別 <see langword="bool" />、<see langword="int" />、<see langword="float" /> 或 <see langword="string" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01a76-160">初始化 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 類別的新執行個體，並且使語意值與 <see cref="T:System.String" /> 物件產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-161">如果指定的字串`phrase`用於辨識邏輯`value`將可辨識的輸出的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="01a76-162">在下列程式碼片段中，如果辨識邏輯建構與<xref:System.Speech.Recognition.GrammarBuilder>執行個體 (`myGb`) 會使用字串"我抵押貸款 」 來識別輸入值`true`就會加入至已辨識的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="01a76-163">下列範例會傳回<xref:System.Speech.Recognition.Grammar>，會辨識命令 「 設定/變更/Alter 前景/背景...</span><span class="sxs-lookup"><span data-stu-id="01a76-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="01a76-164">[色彩 清單]"。</span><span class="sxs-lookup"><span data-stu-id="01a76-164">[color list]".</span></span> <span data-ttu-id="01a76-165"><xref:System.Speech.Recognition.SemanticResultValue> 和<xref:System.Speech.Recognition.SemanticResultKey>執行個體 (搭配<xref:System.Speech.Recognition.Choices>和<xref:System.Speech.Recognition.GrammarBuilder>物件) 用來辨識定義可以剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="01a76-166">要求哪種色彩，以及是否在前景或背景為要修改，將會決定已剖析的語意。</span><span class="sxs-lookup"><span data-stu-id="01a76-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01a76-167">傳回從目前 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 執行個體建構的 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01a76-168">傳回從目前 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 執行個體建構的 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01a76-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01a76-169">使用<xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A>相當於使用<xref:System.Speech.Recognition.GrammarBuilder>建構函式<xref:System.Speech.Recognition.SemanticResultValue>做為引數 (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>)。</span><span class="sxs-lookup"><span data-stu-id="01a76-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01a76-170">下列範例會建立<xref:System.Speech.Recognition.Grammar>支援命令來變更背景色彩的物件。</span><span class="sxs-lookup"><span data-stu-id="01a76-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="01a76-171">A<xref:System.Speech.Recognition.Choices>物件 (`colorChoice`) 包含的背景色彩選項清單使用填滿<xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29>方法<xref:System.Speech.Recognition.GrammarBuilder>從取得的執行個體<xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder>方法`SemanticResultValue`建立物件從色彩的字串。</span><span class="sxs-lookup"><span data-stu-id="01a76-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="01a76-172">A<xref:System.Speech.Recognition.GrammarBuilder>然後透過呼叫<xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder>上<xref:System.Speech.Recognition.SemanticResultKey>執行個體，將用來索引鍵中的語意選項`colorChoice`執行個體。</span><span class="sxs-lookup"><span data-stu-id="01a76-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>