<Type Name="HandoffBehavior" FullName="System.Windows.Media.Animation.HandoffBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a94ac782737dc23a2647f7512ce99d20541800a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum HandoffBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HandoffBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.HandoffBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum HandoffBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class HandoffBehavior" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="e2688-101">指定新動畫如何與屬性上已套用的任何現有動畫進行互動。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e2688-101">Specifies how new animations interact with any existing ones that are already applied to a property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2688-102">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>至任何使用撰寫，屬性<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統將不會移除時鐘自動的。</span><span class="sxs-lookup"><span data-stu-id="e2688-102">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="e2688-103">若要避免效能問題，當您套用大量使用撰寫的時鐘之後, 應該要移除組成時鐘動畫的屬性從它們完成。</span><span class="sxs-lookup"><span data-stu-id="e2688-103">To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="e2688-104">有數種方式可移除時鐘：</span><span class="sxs-lookup"><span data-stu-id="e2688-104">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="e2688-105">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="e2688-105">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="e2688-106">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="e2688-106">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="e2688-107">這將會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="e2688-107">This will remove all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="e2688-108">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="e2688-108">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="e2688-109">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e2688-109">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="e2688-110">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="e2688-110">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="e2688-111">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="e2688-111">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="e2688-112">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="e2688-112">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="e2688-113">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="e2688-113">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="e2688-114">記憶體回收物件時，也會中斷連接並記憶體回收其時鐘。</span><span class="sxs-lookup"><span data-stu-id="e2688-114">When an object is garbage collected, its clocks will also be disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="e2688-115">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="e2688-115">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compose">
      <MemberSignature Language="C#" Value="Compose" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior Compose = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />
      <MemberSignature Language="VB.NET" Value="Compose" />
      <MemberSignature Language="C++ CLI" Value="Compose" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2688-116">新動畫會附加至撰寫鏈結結尾，以與現有動畫結合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2688-116">New animations are combined with existing animations by appending the new animations to the end of the composition chain.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SnapshotAndReplace">
      <MemberSignature Language="C#" Value="SnapshotAndReplace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.Animation.HandoffBehavior SnapshotAndReplace = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />
      <MemberSignature Language="VB.NET" Value="SnapshotAndReplace" />
      <MemberSignature Language="C++ CLI" Value="SnapshotAndReplace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="e2688-117">新動畫會取代要套用之屬性上的任何現有動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e2688-117">New animations replace any existing animations on the properties to which they are applied.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>