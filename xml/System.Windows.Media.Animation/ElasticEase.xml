<Type Name="ElasticEase" FullName="System.Windows.Media.Animation.ElasticEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9c47a884346fd25ad4d50fb325d2b8353726162" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39761526" /></Metadata><TypeSignature Language="C#" Value="public class ElasticEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElasticEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ElasticEase" />
  <TypeSignature Language="VB.NET" Value="Public Class ElasticEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElasticEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type ElasticEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示緩動函式，這個函式會建立類似於彈簧來回振動直到停止的動畫。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以控制"spring 」 中的行為發生時的動畫藉由指定<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>屬性值。 下圖示範不同的值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>，其中*f*(*t*) 代表動畫進度並*t*代表時間。  
  
 ![不同加/減速模式圖形的 ElasticEase。](~/add/media/elasticease-graph.png "的不同加/減速模式圖形的 ElasticEase。")  
  
 您可以指定動畫 oscillates 使用來回次數<xref:System.Windows.Media.Animation.ElasticEase.Oscillations%2A>屬性，以及如何緊密使用變動的 springiness<xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>屬性。  
  
> [!NOTE]
>  因為這個動畫會造成 oscillate 來回的值，動畫可能會進行插補到負數意外。 建立動畫屬性不允許負數時，這可能會導致錯誤。 比方說，如果您套用至這個動畫<xref:System.Windows.FrameworkElement.Height%2A>的物件 (例如從 0 到 200<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>的<xref:System.Windows.Media.Animation.EasingMode.EaseIn>)，動畫會嘗試進行插補，透過的負數<xref:System.Windows.FrameworkElement.Height%2A>這將會擲回錯誤。  
  
 有數個其他 easing 函式除了<xref:System.Windows.Media.Animation.ElasticEase>。
除了使用包含在執行階段的 easing 函式，您可以建立您自己自訂的 easing 函式，藉由繼承自<xref:System.Windows.Media.Animation.EasingFunctionBase>。  
  
## <a name="xaml-object-element-usage"></a>XAML 物件項目用法  
  
```xaml
<ElasticEase .../>  
```  
  
   
  
## Examples  
 下列範例會套用<xref:System.Windows.Media.Animation.ElasticEase>easing 函式以<xref:System.Windows.Media.Animation.DoubleAnimation>建立類似彈簧來回擺動直到來回的動畫。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElasticEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElasticEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.ElasticEase" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="elasticEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Windows.Freezable" /> 衍生類別的新執行個體。 建立衍生類別時，您必須覆寫這個方法。</summary>
        <returns>新的執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動畫類別間接繼承自<xref:System.Windows.Freezable>。 基於這個原因，您需要覆寫<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>方法來建構自訂動畫物件。  
  
   
  
## Examples  
 下列範例示範的典型實作<xref:System.Windows.Freezable.CreateInstanceCore%2A>。  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="elasticEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">動畫的標準化時間 (進度)。</param>
        <summary>提供 easing 函式的邏輯部分，您可將其覆寫以產生自訂 easing 函式的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> 模式。</summary>
        <returns>表示已轉換進度的雙精度浮點數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法轉換標準化的時間，以控制動畫的步調<xref:System.Windows.Media.Animation.EasingMode.EaseIn>案例<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>。  
  
 您只需要指定 easing 函式<xref:System.Windows.Media.Animation.EasingMode.EaseIn>情況下，因為實作<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法轉換`normalizedTime`如<xref:System.Windows.Media.Animation.EasingMode.EaseOut>和<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>案例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oscillations">
      <MemberSignature Language="C#" Value="public int Oscillations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Oscillations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberSignature Language="VB.NET" Value="Public Property Oscillations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Oscillations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Oscillations : int with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Oscillations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定到達動畫目的期間，目標來回滑動的次數。</summary>
        <value>到達動畫目的期間，目標來回滑動的次數。 這個值必須大於或等於 0。 預設值為 3。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.OscillationsProperty>  
  
<a name="xamlAttributeUsage_Occilations"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<ElasticEase Oscillations="int"/>  
```  
  
   
  
## Examples  
 下列範例會套用<xref:System.Windows.Media.Animation.ElasticEase>easing 函式以<xref:System.Windows.Media.Animation.DoubleAnimation>建立類似彈簧來回擺動直到來回的動畫。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OscillationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OscillationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OscillationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OscillationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OscillationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OscillationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.OscillationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Springiness">
      <MemberSignature Language="C#" Value="public double Springiness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Springiness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberSignature Language="VB.NET" Value="Public Property Springiness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Springiness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Springiness : double with get, set" Usage="System.Windows.Media.Animation.ElasticEase.Springiness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定彈簧的僵硬度。 Springiness 值越小，彈簧就越僵硬，而且每次振動的彈性強度也會更快增加。</summary>
        <value>指定彈簧硬度的正數。 預設值為 3。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 較小<xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>值為，僵硬，而且速度的彈性強度降低透過每個振動。  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.ElasticEase.SpringinessProperty>  
  
 下圖說明的不同值的效果<xref:System.Windows.Media.Animation.ElasticEase.Springiness%2A>。  
  
 ![示範不同的 Springiness 值。](~/add/media/elasticease-springiness.png "示範不同的 Springiness 值。")  
  
<a name="xamlAttributeUsage_Springiness"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<ElasticEase Springiness="double"/>  
```  
  
   
  
## Examples  
 下列範例會套用<xref:System.Windows.Media.Animation.ElasticEase>easing 函式以<xref:System.Windows.Media.Animation.DoubleAnimation>建立類似彈簧來回擺動直到來回的動畫。  
  
 [!code-xaml[ElasticEase#ElasticEase](~/samples/snippets/csharp/VS_Snippets_Wpf/elasticease/CS/window1.xaml#elasticease)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpringinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpringinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpringinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpringinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpringinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpringinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.ElasticEase.SpringinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>