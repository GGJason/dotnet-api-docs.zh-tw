<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e5254feb605b3070ee54e08c4b1dcb9e4e565f9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37557541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fce63-101">容器時間表，提供目標設為其子動畫資訊的物件和屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fce63-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="fce63-102">以互動方式控制分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="fce63-103">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-104">若要讓分鏡腳本控制在標記中，您指定<xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>的屬性<xref:System.Windows.Media.Animation.BeginStoryboard>物件來建立它; 如需範例，請參閱[如何： 使用事件觸發程序來控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="fce63-105">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-106">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="fce63-107">資料繫結和動畫時間軸</span><span class="sxs-lookup"><span data-stu-id="fce63-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="fce63-108">大部分的時間軸屬性可以是資料繫結或以動畫顯示;不過，由於計時系統的運作的方式，資料繫結或動畫時間軸行為不像其他資料繫結或動畫物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="fce63-109">若要了解其行為，它有助於了解啟用時間軸的意義。</span><span class="sxs-lookup"><span data-stu-id="fce63-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="fce63-110">啟動時間軸時，複本是由時間軸和及其子時刻表。</span><span class="sxs-lookup"><span data-stu-id="fce63-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="fce63-111">這些複本會被凍結 （變成唯讀狀態） 和<xref:System.Windows.Media.Animation.Clock>從中建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="fce63-112">這些時鐘會執行以動畫顯示目標屬性的實際工作。</span><span class="sxs-lookup"><span data-stu-id="fce63-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="fce63-113">如果時間表是資料繫結或動畫，快照集及其目前值的項目時建立其時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="fce63-114">即使原始時間軸可能會持續變更，其時鐘則否。</span><span class="sxs-lookup"><span data-stu-id="fce63-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="fce63-115">以反映資料繫結或動畫變更時刻表，其時鐘必須重新建立。</span><span class="sxs-lookup"><span data-stu-id="fce63-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="fce63-116">時鐘會不重新為您自動建立。</span><span class="sxs-lookup"><span data-stu-id="fce63-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="fce63-117">以下是幾種可套用時間軸變更的方式︰</span><span class="sxs-lookup"><span data-stu-id="fce63-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="fce63-118">如果時間軸是或屬於<xref:System.Windows.Media.Animation.Storyboard>，您可以將它重新套用其分鏡腳本的使用，以反映變更<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="fce63-119">這也會一併重新啟動動畫。</span><span class="sxs-lookup"><span data-stu-id="fce63-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="fce63-120">在程式碼中，您可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法將分鏡腳本回它先前的位置。</span><span class="sxs-lookup"><span data-stu-id="fce63-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="fce63-121">如果您直接將屬性套用動畫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，呼叫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法一次，並將它傳遞已修改的動畫。</span><span class="sxs-lookup"><span data-stu-id="fce63-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="fce63-122">如果您正在直接在時鐘層級，建立和套用一組新的時鐘，並使用它們來取代前一組建立的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="fce63-123">如需資料的範例繫結動畫，請參閱 <<c0> [ 主要曲線動畫範例](http://go.microsoft.com/fwlink/?LinkID=160011)。</span><span class="sxs-lookup"><span data-stu-id="fce63-123">For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-124">初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-125">啟始與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的一組動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-126">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-127">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-128">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-129">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-130">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-131">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-132">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-133">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-134">無法暫停、 繼續，或其他互動方式控制其啟動之後開始使用這個方法的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="fce63-135">若要控制分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="fce63-136">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-137">下列範例會使用分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-138"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-139">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-140">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-141">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-142">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-143">無法暫停、 繼續，或其他互動方式控制其啟動之後開始使用這個方法的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="fce63-144">若要控制分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29>或<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="fce63-145">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-146">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-147">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-148">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-149">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-150">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-151">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-152">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-153">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-154">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-155">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-156"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-157">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-158">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-159">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-160">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-161">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統並不會自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="fce63-162">若要避免發生效能問題，當您套用大量時鐘使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="fce63-163">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="fce63-164">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="fce63-165">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="fce63-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="fce63-166">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="fce63-167">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="fce63-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="fce63-168">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="fce63-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="fce63-169">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="fce63-170">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="fce63-171">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="fce63-172">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="fce63-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="fce63-173">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="fce63-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="fce63-174">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-175">下列範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>來以動畫顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="fce63-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-176">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-177">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-178">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-179">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-180">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-181">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`參數時呼叫您用來開始分鏡腳本的互動方法</span><span class="sxs-lookup"><span data-stu-id="fce63-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-182">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-183">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-184">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-185">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-185">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="fce63-186">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="fce63-187">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-188">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-189">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-190">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-191">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-192">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-193">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-194">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-195">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-196">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fce63-197">下列範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>來以動畫顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="fce63-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-198">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-199">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-200">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-201">宣告在動畫啟動後，是否可以控制 (暫停) 該動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-202">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-203">如果目標的屬性都已顯示動畫時，它們會取代使用指定的遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-204">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-205">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-206">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-207">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="fce63-208">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="fce63-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="fce63-209">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統並不會自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="fce63-210">若要避免發生效能問題，當您套用大量時鐘使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="fce63-211">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="fce63-212">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="fce63-213">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="fce63-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="fce63-214">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="fce63-215">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="fce63-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="fce63-216">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="fce63-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="fce63-217">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="fce63-218">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="fce63-219">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="fce63-220">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="fce63-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="fce63-221">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="fce63-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="fce63-222">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-223">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-224"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="fce63-225">下一個範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>來以動畫顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="fce63-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-226">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-226">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="fce63-227">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="fce63-228">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-229">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-230">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-231">如果目標的屬性都已顯示動畫時，它們會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="fce63-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="fce63-232">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-233">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-234">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-235">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-236">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-236">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="fce63-237">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="fce63-238">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-239">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-240">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-241">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-242">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-243">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="fce63-244">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="fce63-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="fce63-245">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統並不會自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="fce63-246">若要避免發生效能問題，當您套用大量時鐘使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="fce63-247">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="fce63-248">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="fce63-249">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="fce63-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="fce63-250">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="fce63-251">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="fce63-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="fce63-252">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="fce63-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="fce63-253">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="fce63-254">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="fce63-255">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="fce63-256">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="fce63-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="fce63-257">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="fce63-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="fce63-258">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-259">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="fce63-260">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-261">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-262">宣告在動畫啟動後，是否可以控制 (暫停) 該動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-263">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-264">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`參數時呼叫您用來開始分鏡腳本的互動方法</span><span class="sxs-lookup"><span data-stu-id="fce63-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-265">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-266">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-267">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="fce63-268">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="fce63-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="fce63-269">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統並不會自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="fce63-270">若要避免發生效能問題，當您套用大量時鐘使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="fce63-271">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="fce63-272">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="fce63-273">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="fce63-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="fce63-274">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="fce63-275">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="fce63-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="fce63-276">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="fce63-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="fce63-277">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="fce63-278">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="fce63-279">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="fce63-280">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="fce63-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="fce63-281">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="fce63-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="fce63-282">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-283">下列範例示範如何建立可控制的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="fce63-284">下一個範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>來以動畫顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="fce63-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-285">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-285">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="fce63-286">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="fce63-287">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="fce63-288">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="fce63-289">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-290">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-291">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="fce63-292">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸建立物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="fce63-293">這些時鐘會與儲存`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="fce63-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="fce63-294">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="fce63-295">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="fce63-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="fce63-296">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統並不會自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="fce63-297">若要避免發生效能問題，當您套用大量時鐘使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="fce63-298">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="fce63-299">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="fce63-300">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="fce63-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="fce63-301">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="fce63-302">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="fce63-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="fce63-303">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="fce63-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="fce63-304">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="fce63-305">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="fce63-306">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="fce63-307">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="fce63-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="fce63-308">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="fce63-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="fce63-309">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-310">建立這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的可修改複製品，深層複製這個物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="fce63-311">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-312">目前物件的可修改複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="fce63-313">即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-314">這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</span><span class="sxs-lookup"><span data-stu-id="fce63-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fce63-315">為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。</span><span class="sxs-lookup"><span data-stu-id="fce63-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fce63-316">如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fce63-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-317">建立 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-318">新的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-319">在內部呼叫這個方法<xref:System.Windows.Freezable.CreateInstance%2A>建立的新執行個體時<xref:System.Windows.Media.Animation.Storyboard>類別的各種不同的複製方法 (例如<xref:System.Windows.Freezable.Clone%2A>和<xref:System.Windows.Freezable.CloneCurrentValue%2A>)。</span><span class="sxs-lookup"><span data-stu-id="fce63-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-320">下列範例示範的典型實作<xref:System.Windows.Freezable.CreateInstanceCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fce63-321">
            <para>每個<see cref="T:System.Windows.Media.Animation.Storyboard" />子類別必須實作這個方法。一般實作會直接呼叫類別預設建構函式，並傳回結果。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-321">
              <para>Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method. Typical implementation is to simply call the class default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-322">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-322">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-323">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在目前行進時間，與實際時間相比較的速率。</span><span class="sxs-lookup"><span data-stu-id="fce63-323">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="fce63-324">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-324">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-325">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-325">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-326">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-326">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-327">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-327">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-328">目前的整體速度，如果時鐘停止，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-328">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-329">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-329">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-330">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-330">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-331">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-331">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-332">目前的整體速度，如果時鐘停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-332">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-333">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在目前行進時間，與實際時間相比較的速率。</span><span class="sxs-lookup"><span data-stu-id="fce63-333">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="fce63-334">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-334">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-335">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-335">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-336">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-336">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-337">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-337">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-338">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-338">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-339">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-339">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-340">目前的整體速度，如果時鐘停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-340">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-341">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在目前行進時間，與實際時間相比較的速率。</span><span class="sxs-lookup"><span data-stu-id="fce63-341">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="fce63-342">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-342">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-343">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-343">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-344">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-344">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-345">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-345">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-346">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-347">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-347">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-348">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="fce63-348">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="fce63-349">如果這個分鏡腳本<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目都包含一個轉寄反向組，不只是其中一個區段。</span><span class="sxs-lookup"><span data-stu-id="fce63-349">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="fce63-350">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-350">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-351">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-351">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-352">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-352">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-353">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-353">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-354">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-354">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-355">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-355">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-356">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-356">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-357">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="fce63-357">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="fce63-358">如果這個分鏡腳本<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目都包含一個轉寄反向組，不只是其中一個區段。</span><span class="sxs-lookup"><span data-stu-id="fce63-358">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="fce63-359">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-359">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-360">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-360">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-361">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-361">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-362">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-362">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-363">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-363">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-364">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-364">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-365">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-365">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-366">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="fce63-366">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="fce63-367">如果這個時鐘的時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目都包含一個轉寄反向組，不只是其中一個區段。</span><span class="sxs-lookup"><span data-stu-id="fce63-367">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="fce63-368">其目前反覆項目，不論搜尋時鐘會傳回其目前的反覆項目為 1。</span><span class="sxs-lookup"><span data-stu-id="fce63-368">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="fce63-369">重新啟動時鐘也會傳回其目前的反覆項目為 1。</span><span class="sxs-lookup"><span data-stu-id="fce63-369">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="fce63-370">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-370">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-371">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-371">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-372">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-372">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-373">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-373">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-374">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-375">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-375">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="fce63-376">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-376">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-377">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-377">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-378">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-378">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-379">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-379">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-380">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-380">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-381">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-381">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-382">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-382">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-383">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-383">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="fce63-384">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-384">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-385">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-385">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-386">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-386">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-387">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-387">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-388">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-388">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-389">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-389">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-390">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-390">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-391">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-391">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="fce63-392">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-392">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-393">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-393">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-394">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-394">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-395">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-395">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-396">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-396">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-397">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-398">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-398">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-399">這個方法不會告訴您是否暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-399">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="fce63-400">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-400">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="fce63-401">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-401">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-402">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-402">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-403">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-403">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-404">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-404">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-405">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-405">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-406">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-406">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-407">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-407">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-408">這個方法不會告訴您是否暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-408">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="fce63-409">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-409">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="fce63-410">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-410">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-411">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-411">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-412">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-412">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-413">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-413">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-414">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-414">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-415">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-415">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-416">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-416">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-417">這個方法不會告訴您是否暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-417">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="fce63-418">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-418">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="fce63-419">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-419">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-420">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-420">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-421">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-421">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-422">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-422">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-423">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-424">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-424">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-425">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-425">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-426">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-426">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-427">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-427">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-428">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-428">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-429">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-429">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-430">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-430">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-431">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-431">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-432">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-432">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-433">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-433">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-434">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-434">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-435">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-435">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-436">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-436">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-437">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-437">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-438">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-438">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-439">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-439">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-440">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-440">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-441">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-441">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-442">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-442">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-443">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-444">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-444">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-445">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-445">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-446">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-446">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-447">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-447">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-448">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-448">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-449">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-449">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-450">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-450">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-451">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-451">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-452">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-452">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-453">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-453">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-454">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-454">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-455">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-455">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-456">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-456">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-457">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-457">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-458">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-458">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-459">若要使用此方法來擷取分鏡腳本時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="fce63-459">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="fce63-460">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-460">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-461">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-461">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-462">要從其中擷取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的時刻表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-462">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-463">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-463">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-464">由 <paramref name="element" /> 設為目標的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-464">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-465">使用<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加使用動畫時間軸，以指出其目標物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-465">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="fce63-466">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-466">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="fce63-467">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-467">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-468">要從其中擷取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的時刻表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-468">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-469">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-469">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-470">
            <paramref name="element" /> 設為目標的相依性物件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-470">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-471">這個方法會取得<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-471">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="fce63-472">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-472">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="fce63-473">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-473">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-474">要從中取得 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-474">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-475">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-475">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fce63-476">
            <paramref name="element" /> 設為目標的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-476">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-477">這個方法會取得<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-477">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="fce63-478">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-478">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="fce63-479">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-479">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="fce63-480">請注意，如果<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>已設定在標記中，此方法會傳回空<xref:System.Windows.PropertyPath>因為屬性參考已解決，而儲存在內部進行剖析時。</span><span class="sxs-lookup"><span data-stu-id="fce63-480">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-481">暫停為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-481">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-482">暫停為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-483">這個方法會暫停分鏡腳本，但有任何顯著的影響，如果它不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="fce63-483">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="fce63-484">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="fce63-484">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="fce63-485">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-485">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-486">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-486">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-487">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-487">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="fce63-488">從 已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-488">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="fce63-489">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停分鏡腳本，它看起來像是繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="fce63-489">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="fce63-490">不過，這是不實際發生什麼事。</span><span class="sxs-lookup"><span data-stu-id="fce63-490">However, that is not what actually happens.</span></span> <span data-ttu-id="fce63-491"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會取代已暫停<xref:System.Windows.Media.Animation.Storyboard>以新的未暫停版本。</span><span class="sxs-lookup"><span data-stu-id="fce63-491">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="fce63-492">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法，當建立分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-492">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="fce63-493">這些時鐘會分散到它們要建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-493">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="fce63-494">因此，當<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫同樣地，它不會重新啟動其時鐘; 會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-494">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-495">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-495">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-496">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-496">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-497">暫停與這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 關聯之指定的 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-497">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-498">這個方法會暫停分鏡腳本，但有任何顯著的影響，如果它不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="fce63-498">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="fce63-499">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="fce63-499">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="fce63-500">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="fce63-500">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="fce63-501">若要繼續暫停的分鏡腳本的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-501">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="fce63-502">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法一次會暫停的分鏡腳本取代為新的連線，已繼續它的外觀。</span><span class="sxs-lookup"><span data-stu-id="fce63-502">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="fce63-503">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-503">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-504">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-504">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-505">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-505">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-506">從範例中，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-506">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-507">暫停分鏡腳本時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-507">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="fce63-508">從 已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-508">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="fce63-509">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停分鏡腳本，它看起來像是繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="fce63-509">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="fce63-510">不過，這是不實際發生什麼事。</span><span class="sxs-lookup"><span data-stu-id="fce63-510">However, that is not what actually happens.</span></span> <span data-ttu-id="fce63-511"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會取代本身未暫停的版本。</span><span class="sxs-lookup"><span data-stu-id="fce63-511">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="fce63-512">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法，當建立分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-512">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="fce63-513">這些時鐘會分散到它們要建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-513">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="fce63-514">因此，當<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫同樣地，它不會重新啟動其時鐘; 會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-514">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-515">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-515">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-516"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-516">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-517">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-517">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-518">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-518">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-519">暫停與這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 關聯之指定的 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-519">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-520">這個方法會暫停分鏡腳本，但有任何顯著的影響，如果它不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="fce63-520">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="fce63-521">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="fce63-521">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="fce63-522">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="fce63-522">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="fce63-523">若要繼續暫停的分鏡腳本的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-523">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="fce63-524">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法一次會暫停的分鏡腳本取代為新的連線，已繼續它的外觀。</span><span class="sxs-lookup"><span data-stu-id="fce63-524">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="fce63-525">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-525">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-526">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-526">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-527">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-527">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-528">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-528">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-529">暫停分鏡腳本時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-529">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="fce63-530">從 已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="fce63-530">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="fce63-531">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停分鏡腳本，它看起來像是繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="fce63-531">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="fce63-532">不過，這是不實際發生什麼事。</span><span class="sxs-lookup"><span data-stu-id="fce63-532">However, that is not what actually happens.</span></span> <span data-ttu-id="fce63-533"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會取代本身未暫停的版本。</span><span class="sxs-lookup"><span data-stu-id="fce63-533">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="fce63-534">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法，當建立分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="fce63-534">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="fce63-535">這些時鐘會分散到它們要建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-535">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="fce63-536">因此，當<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫同樣地，它不會重新啟動其時鐘; 會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="fce63-536">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-537">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-537">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="fce63-538">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-538">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-539">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-539">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="fce63-540">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-540">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-541">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-541">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-542">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-542">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-543">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-543">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-544">所執行的所有互動式動作<xref:System.Windows.Media.Animation.Clock>，因此也在<xref:System.Windows.Media.Animation.Storyboard>，計時引擎下, 一次轉譯前短暫發生這種情況下一個刻度上發生。</span><span class="sxs-lookup"><span data-stu-id="fce63-544">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="fce63-545">這表示<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法仍會影響的動畫的屬性到這個階段。</span><span class="sxs-lookup"><span data-stu-id="fce63-545">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="fce63-546">換句話說下, 一次顯示的畫面格時，將分鏡腳本會移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-546">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="fce63-547">如果您要取消關聯從屬性的動畫，此時間之前，請使用<xref:System.Windows.UIElement.BeginAnimation%2A>方法`animation`參數值的`null`。</span><span class="sxs-lookup"><span data-stu-id="fce63-547">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-548">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-548">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-549">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-549">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-550">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-550">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="fce63-551">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-551">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-552">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-552">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-553">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-553">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-554">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-554">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-555">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-555">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-556">移除分鏡腳本時鐘觸發<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-556">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-557">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-557">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-558">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-558">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-559">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-559">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="fce63-560">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-560">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-561">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-561">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-562">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-562">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-563">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-563">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-564">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-564">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-565">移除分鏡腳本時鐘觸發<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-565">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-566">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-566">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-567">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-568">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-568">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-569">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-569">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-570">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-570">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-571">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-571">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-572">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-572">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-573">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-573">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-574">繼續未暫停分鏡腳本，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-574">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="fce63-575">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-575">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-576">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-576">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-577">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-577">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-578">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-578">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-579">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="fce63-579">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="fce63-580">若要繼續暫停的分鏡腳本的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-580">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="fce63-581">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>分鏡腳本開始後的方法會取代舊的分鏡腳本可繼續它的外觀。</span><span class="sxs-lookup"><span data-stu-id="fce63-581">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="fce63-582">繼續已暫停的分鏡腳本時鐘就會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-582">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-583">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-583">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-584"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-584">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-585">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-585">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-586">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-586">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-587">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-587">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-588">繼續未暫停分鏡腳本，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-588">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="fce63-589">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-589">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-590">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-590">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-591">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-591">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-592">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-592">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-593">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="fce63-593">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="fce63-594">若要繼續暫停的分鏡腳本的唯一方法是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-594">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="fce63-595">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>分鏡腳本開始後的方法會取代舊的分鏡腳本可繼續它的外觀。</span><span class="sxs-lookup"><span data-stu-id="fce63-595">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="fce63-596">繼續已暫停的分鏡腳本時鐘就會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-596">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-597">在到達下個時鐘刻度時，搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 直到新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-597">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fce63-598">正值或負值，這個值描述時刻表應該向前移動或向後移動的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-598">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-599">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-599">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="fce63-600">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-600">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-601">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-601">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-602">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-602">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-603">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-603">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-604">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-604">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-605">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-605">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-606">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-606">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fce63-607">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-607">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-608">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-608">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-609">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-609">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="fce63-610">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-610">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-611">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-611">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-612">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-612">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-613">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-613">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-614">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-614">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-615">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-615">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-616">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-616">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-617">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-617">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-618">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-618">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fce63-619">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-619">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-620">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-620">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-621">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-621">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="fce63-622">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-622">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-623">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-623">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-624">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-624">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-625">這個方法會變更分鏡腳本時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="fce63-625">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="fce63-626">這個方法會有不會影響計時樹狀結構處理刻度的下一次。</span><span class="sxs-lookup"><span data-stu-id="fce63-626">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="fce63-627">副作用，引發適當的事件會也不在那之前。</span><span class="sxs-lookup"><span data-stu-id="fce63-627">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="fce63-628">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-628">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-629">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-629">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-630">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-630">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-631">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-631">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-632">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-632">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-633">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-633">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-634">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-634">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-635">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-635">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fce63-636">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-636">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-637">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-637">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-638">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-638">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="fce63-639">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-639">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-640">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-640">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-641">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-641">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-642">這個方法會變更分鏡腳本時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="fce63-642">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="fce63-643">這個方法會有不會影響計時樹狀結構處理刻度的下一次。</span><span class="sxs-lookup"><span data-stu-id="fce63-643">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="fce63-644">副作用，引發適當的事件會也不在那之前。</span><span class="sxs-lookup"><span data-stu-id="fce63-644">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="fce63-645">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-645">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-646">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止，而且如果它由控制移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-646">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="fce63-647">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-647">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-648">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-648">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-649">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-649">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-650">下列範例示範如何搜尋分鏡腳本開始後的一秒 （略過）。</span><span class="sxs-lookup"><span data-stu-id="fce63-650">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="fce63-651">下一個範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-651">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-652">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-652">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fce63-653">正值或負值，這個值描述時刻表應該向前移動或向後移動的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-653">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-654">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-654">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個的時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="fce63-655"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="fce63-656">值會立即更新以反映所做的變更原因<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使螢幕不會反映這些變更，直到畫面更新。</span><span class="sxs-lookup"><span data-stu-id="fce63-656">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="fce63-657">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-657">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-658">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-658">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-659">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-659">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-660">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-660">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="fce63-661">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-661">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-662">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-662">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-663">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-663">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個的時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="fce63-664"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="fce63-665">值會立即更新以反映所做的變更原因<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使螢幕不會反映這些變更，直到畫面更新。</span><span class="sxs-lookup"><span data-stu-id="fce63-665">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="fce63-666">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-666">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-667">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-667">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-668">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-668">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-669">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-669">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-670">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-670">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-671">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-671">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fce63-672">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-672">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-673">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-673">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-674">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-674">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個的時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="fce63-675"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="fce63-676">值會立即更新以反映所做的變更原因<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使螢幕不會反映這些變更，直到畫面更新。</span><span class="sxs-lookup"><span data-stu-id="fce63-676">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="fce63-677">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-677">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-678">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-678">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-679">這個方法會變更分鏡腳本時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至</span><span class="sxs-lookup"><span data-stu-id="fce63-679">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="fce63-680"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="fce63-680"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="fce63-681">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-681">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="fce63-682">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-682">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-683">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-683">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-684">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-684">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-685">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-685">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-686">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-686">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-687">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-687">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-688">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-688">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="fce63-689">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-689">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="fce63-690">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-690">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-691">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-691">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個的時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="fce63-692"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="fce63-693">值會立即更新以反映所做的變更原因<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使螢幕不會反映這些變更，直到畫面更新。</span><span class="sxs-lookup"><span data-stu-id="fce63-693">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="fce63-694">請注意，搜尋作業不會將分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="fce63-694">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="fce63-695">分鏡腳本會被當成其<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>為 1 且沒有<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-695">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="fce63-696">這個方法會變更分鏡腳本時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至</span><span class="sxs-lookup"><span data-stu-id="fce63-696">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="fce63-697"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="fce63-697"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="fce63-698">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-698">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="fce63-699">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-699">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-700">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-700">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-701">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-701">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-702">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-702">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-703">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fce63-703">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-704">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-704">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="fce63-705">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-705">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="fce63-706">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-706">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="fce63-707">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-707">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="fce63-708">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-708">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-709">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-709">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-710">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-710">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-711">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-711">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-712">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-712">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-713">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-713">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-714">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-714">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="fce63-715">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-715">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="fce63-716">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-716">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="fce63-717">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-717">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="fce63-718">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-718">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-719">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-719">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-720">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-720">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-721">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-721">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-722">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-722">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-723">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-723">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-724">呼叫這個方法會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-724">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-725">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-725">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-726"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-726">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-727">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-727">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-728">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-728">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="fce63-729">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-729">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="fce63-730">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-730">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="fce63-731">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-731">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="fce63-732">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-732">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-733">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-733">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-734">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-734">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-735">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-735">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-736">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-736">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-737">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-737">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="fce63-738">呼叫這個方法會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-738">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-739">
            <see cref="T:System.Windows.Media.Animation.Timeline" />，應該將所指定的相依性物件設為目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-739">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fce63-740">要設為目標的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-740">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-741">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-741">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-742">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-742">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="fce63-743">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-743">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="fce63-744">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-744">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fce63-745"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>屬性不是可序列化，因為它可以設定任何<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="fce63-745">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="fce63-746">不保證此物件可以正確地參考從 XAML。</span><span class="sxs-lookup"><span data-stu-id="fce63-746">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-747">
            <see cref="T:System.Windows.Media.Animation.Timeline" />，應該將所指定的相依性物件設為目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-747">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fce63-748">要設為目標之相依性物件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-748">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-749">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為具有所指定名稱的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-749">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-750">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-750">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="fce63-751">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-751">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="fce63-752">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-752">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="fce63-753">用來與指定的相依性屬性產生關聯的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-753">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="fce63-754">路徑，描述要繪製的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-754">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-755">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為所指定的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-755">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-756">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="fce63-756">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="fce63-757">如需有關分鏡腳本目標的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="fce63-757">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="fce63-758">如需有關如何附加的屬性工作的詳細資訊，請參閱 <<c0> [ 附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-758">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-759">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-759">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-760">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-761">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-761">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-762">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-762">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-763">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-763">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-764">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-764">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-765">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-765">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-766">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-766">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-767">這個方法會將前移分鏡腳本的結尾作用期; 目前的時間分鏡腳本的行為現在由其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="fce63-767">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="fce63-768">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定為<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，將分鏡腳本填滿; 屬性設定為如果<xref:System.Windows.Media.Animation.FillBehavior.Stop>，分鏡腳本停止。</span><span class="sxs-lookup"><span data-stu-id="fce63-768">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="fce63-769">無限期使用分鏡腳本上呼叫這個方法，不限數目的重複項目沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-769">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="fce63-770">非使用中的分鏡腳本上呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-770">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="fce63-771">前進到其填滿週期觸發程序的時鐘<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-771">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="fce63-772">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-772">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-773">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-773">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-774">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-774">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-775">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-775">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-776">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-776">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-777"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-777">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-778">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-778">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-779">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-779">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-780">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-780">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-781">這個方法會將前移分鏡腳本的結尾作用期; 目前的時間分鏡腳本的行為現在由其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="fce63-781">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="fce63-782">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定為<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，將分鏡腳本填滿; 屬性設定為如果<xref:System.Windows.Media.Animation.FillBehavior.Stop>，分鏡腳本停止。</span><span class="sxs-lookup"><span data-stu-id="fce63-782">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="fce63-783">無限期使用分鏡腳本上呼叫這個方法，不限數目的重複項目沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-783">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="fce63-784">非使用中的分鏡腳本上呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="fce63-784">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="fce63-785">前進到其填滿週期觸發程序的時鐘<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-785">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="fce63-786">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-786">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-787">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-787">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-788">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-788">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-789">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-789">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-790">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-790">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fce63-791">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-792">請注意，停止分鏡腳本不會引發<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-792">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-793">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-793">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-794">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-794">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-795">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-795">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-796">A<xref:System.Windows.Media.Animation.ClockState.Stopped>分鏡腳本不會再影響其目標屬性： 已顯示動畫的屬性會還原成其先前的值。</span><span class="sxs-lookup"><span data-stu-id="fce63-796">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="fce63-797">停止時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>並<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，而非<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-797">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="fce63-798">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-798">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-799">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-799">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-800">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-800">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-801">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-801">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fce63-802">下列範例會使用可控制的分鏡腳本以動畫顯示<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="fce63-802">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="fce63-803"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="fce63-803">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="fce63-804">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-804">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="fce63-805">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-805">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fce63-806">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-806">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fce63-807">A<xref:System.Windows.Media.Animation.ClockState.Stopped>分鏡腳本不會再影響其目標屬性： 已顯示動畫的屬性會還原成其先前的值。</span><span class="sxs-lookup"><span data-stu-id="fce63-807">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="fce63-808">停止時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>並<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，而非<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="fce63-808">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="fce63-809">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動方法的參數。</span><span class="sxs-lookup"><span data-stu-id="fce63-809">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="fce63-810">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="fce63-810">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="fce63-811">若要讓分鏡腳本控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`進行控制。</span><span class="sxs-lookup"><span data-stu-id="fce63-811">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="fce63-812">如需範例，請參閱[如何： 控制分鏡腳本開始後](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="fce63-812">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-813">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-813">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-814">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-814">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fce63-815">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fce63-815">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>