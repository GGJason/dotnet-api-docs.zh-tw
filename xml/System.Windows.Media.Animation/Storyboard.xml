<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40aaa35f3a1b40896d02850b6d8ad6be43644bf5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33f6a-101">容器時間表，提供目標設為其子動畫資訊的物件和屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="33f6a-101">A container timeline that provides object and property targeting information for its child animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a><span data-ttu-id="33f6a-102">以互動方式控制的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-102">Interactively Controlling Storyboards</span></span>  
 <span data-ttu-id="33f6a-103">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-103">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-104">若要讓分鏡腳本可控制在標記中，您指定<xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>屬性<xref:System.Windows.Media.Animation.BeginStoryboard>物件，會建立; 如需範例，請參閱[How to： 使用事件觸發程序來控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-104">To make a storyboard controllable in markup, you specify the <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> property of the <xref:System.Windows.Media.Animation.BeginStoryboard> object that creates it; for an example, see [How to: Use Event Triggers to Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md).</span></span> <span data-ttu-id="33f6a-105">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-105">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-106">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-106">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="33f6a-107">資料繫結和動畫時間軸</span><span class="sxs-lookup"><span data-stu-id="33f6a-107">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="33f6a-108">大部分的時間軸屬性可以是資料繫結或以動畫顯示。不過，由於計時系統的運作的方式，繫結或動畫時間軸行為不像其他資料的資料繫結，或建立動畫的物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-108">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="33f6a-109">若要了解其行為，它有助於了解啟用時間軸的意義。</span><span class="sxs-lookup"><span data-stu-id="33f6a-109">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="33f6a-110">啟動的時間軸時，會在時間軸和子時刻表製作複本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-110">When a timeline is activated, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="33f6a-111">這些複本會凍結 （對唯讀） 和<xref:System.Windows.Media.Animation.Clock>從中建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-111">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="33f6a-112">這些時鐘會執行以動畫顯示目標屬性的實際工作。</span><span class="sxs-lookup"><span data-stu-id="33f6a-112">These clocks do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="33f6a-113">如果資料繫結或動畫效果，其目前值的快照集建立時做時鐘時間表。</span><span class="sxs-lookup"><span data-stu-id="33f6a-113">If a timeline is data bound or animated, a snapshot of its current values is made when its clock is created.</span></span> <span data-ttu-id="33f6a-114">即使原始時間軸可能繼續變更，其時鐘卻不符合。</span><span class="sxs-lookup"><span data-stu-id="33f6a-114">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="33f6a-115">時間表反映資料繫結或動畫變更其時鐘必須重新建立。</span><span class="sxs-lookup"><span data-stu-id="33f6a-115">For a timeline to reflect data binding or animation changes, its clock must be re-created.</span></span> <span data-ttu-id="33f6a-116">時鐘不會重新建立為您自動。</span><span class="sxs-lookup"><span data-stu-id="33f6a-116">Clocks are not re-created for you automatically.</span></span> <span data-ttu-id="33f6a-117">以下是幾種可套用時間軸變更的方式︰</span><span class="sxs-lookup"><span data-stu-id="33f6a-117">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="33f6a-118">如果時間表是或屬於<xref:System.Windows.Media.Animation.Storyboard>，您可以將它重新套用其分鏡腳本使用反映變更<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-118">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="33f6a-119">這也會一併重新啟動動畫。</span><span class="sxs-lookup"><span data-stu-id="33f6a-119">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="33f6a-120">在程式碼中，您可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>前進分鏡腳本方法回它先前的位置。</span><span class="sxs-lookup"><span data-stu-id="33f6a-120">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="33f6a-121">如果您動畫直接套用到屬性，使用<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法，請呼叫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法一次，並將它傳遞已修改的動畫。</span><span class="sxs-lookup"><span data-stu-id="33f6a-121">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that has been modified.</span></span>  
  
-   <span data-ttu-id="33f6a-122">如果您正在直接在時鐘層級，建立和套用一組新的時鐘和使用它們來取代先前組建立的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-122">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of created clocks.</span></span>  
  
 <span data-ttu-id="33f6a-123">如範例的資料繫結動畫，請參閱 <<c0> [ 金鑰曲線動畫範例](http://go.microsoft.com/fwlink/?LinkID=160011)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-123">For an example of a data bound animation, see [Key Spline Animation Sample](http://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-124">初始化 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-124">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-125">啟始與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的一組動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-125">Initiates the set of animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-126">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-126">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-127">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-127">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-128">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-128">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-129">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-129">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-130">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-130">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-131">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-131">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-132">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-132">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-133">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-133">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-134">無法暫停、 繼續，或其他互動方式控制會在啟動之後開始使用這個方法的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-134">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="33f6a-135">若要從此分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-135">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> or <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span>  
  
 <span data-ttu-id="33f6a-136">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-136">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-137">下列範例會使用分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-137">The following example uses a storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-138"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-138">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-139">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-139">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-140">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-140">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-141">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-141">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-142">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-142">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-143">無法暫停、 繼續，或其他互動方式控制會在啟動之後開始使用這個方法的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-143">Storyboards started with this method cannot be paused, resumed, or otherwise interactively controlled after they are started.</span></span> <span data-ttu-id="33f6a-144">若要從此分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29>或<xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-144">To make a storyboard controllable, use the <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> or <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="33f6a-145">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-145">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-146">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-146">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-147">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-147">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-148">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-148">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-149">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-149">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-150">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-150">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-151">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-151">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-152">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-152">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-153">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-153">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-154">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-154">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-155">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-155">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-156"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-156">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-157">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-157">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-158">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-158">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-159">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-159">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-160">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-160">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-161">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，任何<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源，而計時系統則否自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-161">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="33f6a-162">若要避免發生效能問題，當您套用大量使用時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-162">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="33f6a-163">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-163">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="33f6a-164">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-164">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="33f6a-165">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="33f6a-165">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="33f6a-166">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-166">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="33f6a-167">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-167">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="33f6a-168">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33f6a-168">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="33f6a-169">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-169">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="33f6a-170">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-170">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="33f6a-171">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-171">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-172">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="33f6a-172">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="33f6a-173">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="33f6a-173">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="33f6a-174">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-174">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-175">下列範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>以動畫方式顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="33f6a-175">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-176">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-176">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-177">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-177">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-178">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-178">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-179">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-179">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-180">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-180">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-181">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數</span><span class="sxs-lookup"><span data-stu-id="33f6a-181">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-182">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-182">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-183">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-183">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-184">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-184">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-185">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-185">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="33f6a-186">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-186">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="33f6a-187">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-187">The template to animate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-188">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-188">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-189">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-189">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-190">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-190">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-191">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-191">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-192">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-192">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-193">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-193">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-194">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-194">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-195">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-195">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-196">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-196">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33f6a-197">下列範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>以動畫方式顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="33f6a-197">The following example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-198">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-198">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-199">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-199">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-200">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-200">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-201">宣告在動畫啟動後，是否可以控制 (暫停) 該動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-201">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-202">使用指定的 <see cref="T:System.Windows.Media.Animation.Storyboard" />，將與這個 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 相關聯的動畫套用至目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-202">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-203">如果目標的屬性已有動畫效果，它們就會取代使用指定的遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-203">If the targeted properties are already animated, they are replaced using the specified handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-204">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-204">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-205">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-205">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-206">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-206">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-207">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-207">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="33f6a-208">使用撰寫 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="33f6a-208">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="33f6a-209">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，任何<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源，而計時系統則否自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-209">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="33f6a-210">若要避免發生效能問題，當您套用大量使用時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-210">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="33f6a-211">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-211">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="33f6a-212">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-212">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="33f6a-213">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="33f6a-213">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="33f6a-214">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-214">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="33f6a-215">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-215">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="33f6a-216">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33f6a-216">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="33f6a-217">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-217">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="33f6a-218">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-218">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="33f6a-219">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-219">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-220">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="33f6a-220">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="33f6a-221">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="33f6a-221">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="33f6a-222">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-222">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-223">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-223">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-224"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-224">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 <span data-ttu-id="33f6a-225">下一個範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>以動畫方式顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="33f6a-225">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-226">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-226">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="33f6a-227">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-227">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="33f6a-228">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-228">The template to animate.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-229">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-229">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-230">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-230">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-231">如果目標的屬性已有動畫效果，它們就會取代使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace>遞移式行為。</span><span class="sxs-lookup"><span data-stu-id="33f6a-231">If the targeted properties are already animated, they are replaced using the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> handoff behavior.</span></span>  
  
 <span data-ttu-id="33f6a-232">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-232">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-233">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-233">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-234">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-234">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-235">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-235">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-236">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-236">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="33f6a-237">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-237">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="33f6a-238">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-238">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-239">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-239">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-240">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-240">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-241">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-241">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-242">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-242">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-243">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-243">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="33f6a-244">使用撰寫 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="33f6a-244">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="33f6a-245">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，任何<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源，而計時系統則否自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-245">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="33f6a-246">若要避免發生效能問題，當您套用大量使用時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-246">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="33f6a-247">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-247">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="33f6a-248">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-248">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="33f6a-249">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="33f6a-249">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="33f6a-250">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-250">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="33f6a-251">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-251">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="33f6a-252">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33f6a-252">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="33f6a-253">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-253">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="33f6a-254">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-254">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="33f6a-255">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-255">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-256">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="33f6a-256">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="33f6a-257">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="33f6a-257">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="33f6a-258">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-258">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-259">物件，包含在與這個分鏡腳本動畫目標相同的名稱範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-259">An object contained within the same name scope as the targets of this storyboard's animations.</span>
          </span>
          <span data-ttu-id="33f6a-260">不具有所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-260">Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-261">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-261">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-262">宣告在動畫啟動後，是否可以控制 (暫停) 該動畫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-262">Declares whether the animation is controllable (can be paused) once started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-263">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至其目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-263">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-264">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數</span><span class="sxs-lookup"><span data-stu-id="33f6a-264">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-265">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-265">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-266">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-266">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-267">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-267">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="33f6a-268">使用撰寫 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="33f6a-268">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="33f6a-269">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，任何<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源，而計時系統則否自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-269">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="33f6a-270">若要避免發生效能問題，當您套用大量使用時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-270">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="33f6a-271">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-271">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="33f6a-272">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-272">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="33f6a-273">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="33f6a-273">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="33f6a-274">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-274">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="33f6a-275">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-275">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="33f6a-276">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33f6a-276">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="33f6a-277">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-277">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="33f6a-278">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-278">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="33f6a-279">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-279">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-280">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="33f6a-280">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="33f6a-281">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="33f6a-281">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="33f6a-282">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-282">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-283">下列範例會示範如何建立可控制的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-283">The following example shows how to create a controllable storyboard.</span></span>  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 <span data-ttu-id="33f6a-284">下一個範例會使用<xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace><xref:System.Windows.Media.Animation.HandoffBehavior>以動畫方式顯示，當使用者 left-clicks，而<xref:System.Windows.Media.Animation.HandoffBehavior.Compose><xref:System.Windows.Media.Animation.HandoffBehavior>當使用者按一下滑鼠右鍵。</span><span class="sxs-lookup"><span data-stu-id="33f6a-284">The next example uses the <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> to animate when the user left-clicks, and the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> when the user right-clicks.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-285">已套用所指定 <c>frameworkTemplate</c> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-285">The object to which the specified <c>frameworkTemplate</c> has been applied.</span>
          </span>
          <span data-ttu-id="33f6a-286">不具有 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的動畫才會套用至 <c>containingObject</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-286">Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> are applied to <c>containingObject</c>.</span>
          </span>
        </param>
        <param name="frameworkTemplate">
          <span data-ttu-id="33f6a-287">要顯示動畫的範本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-287">The template to animate.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="33f6a-288">新動畫的行為應用來與任何目前的動畫進行互動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-288">The behavior the new animation should use to interact with any current animations.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="33f6a-289">如果腳本應該要以互動方式控制，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-289">
              <see langword="true" /> if the storyboard should be interactively controllable; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-290">將與這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 相關聯的動畫套用至指定範本內的目標並加以初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-290">Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to their targets within the specified template and initiates them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-291">若要以互動方式控制這個分鏡腳本，您必須指定相同`containingObject`互動的方法呼叫時，您用來開始分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-291">To interactively control this storyboard, you must specify the same `containingObject` when calling the interactive methods that you used to begin the storyboard</span></span>  
  
 <span data-ttu-id="33f6a-292">呼叫這個方法時，<xref:System.Windows.Media.Animation.Clock>分鏡腳本和它所包含的任何時間軸會建立物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-292">When this method is called, <xref:System.Windows.Media.Animation.Clock> objects are created for the storyboard and any timelines it contains.</span></span> <span data-ttu-id="33f6a-293">會與儲存在這些時鐘`containingObject`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-293">These clocks are stored with `containingObject`.</span></span>  
  
 <span data-ttu-id="33f6a-294">從 分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-294">Beginning a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="33f6a-295">使用撰寫 HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="33f6a-295">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="33f6a-296">當您將套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>，任何<xref:System.Windows.Media.Animation.Clock>之前與該屬性相關聯的物件會繼續耗用系統資源，而計時系統則否自動移除這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-296">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove these clocks automatically.</span></span>  
  
 <span data-ttu-id="33f6a-297">若要避免發生效能問題，當您套用大量使用時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-297">To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="33f6a-298">有幾個方式可移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-298">There are several ways to remove a clock.</span></span>  
  
-   <span data-ttu-id="33f6a-299">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-299">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="33f6a-300">指定的第一個參數，要繪製之屬性和`null`做為第二個。</span><span class="sxs-lookup"><span data-stu-id="33f6a-300">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="33f6a-301">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-301">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="33f6a-302">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>時鐘的清單，從使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-302">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="33f6a-303">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="33f6a-303">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="33f6a-304">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>子時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-304">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="33f6a-305">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會呼叫事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-305">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not called if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="33f6a-306">在此情況下，使用者必須決定何時呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-306">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-307">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="33f6a-307">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="33f6a-308">記憶體回收物件時，也會中斷其時鐘和記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="33f6a-308">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="33f6a-309">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-309">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-310">建立這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的可修改複製品，深層複製這個物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-310">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="33f6a-311">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-311">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-312">目前物件的可修改複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-312">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="33f6a-313">即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-313">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-314">這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-314">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="33f6a-315">為了方便起見，這個方法會遮蔽強型別實作繼承的版本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-315">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="33f6a-316">如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-316">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-317">建立 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-317">Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-318">新的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-318">A new <see cref="T:System.Windows.Media.Animation.Storyboard" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-319">這個方法在內部呼叫<xref:System.Windows.Freezable.CreateInstance%2A>時建立的新執行個體<xref:System.Windows.Media.Animation.Storyboard>複製的各種方法的類別 (例如<xref:System.Windows.Freezable.Clone%2A>和<xref:System.Windows.Freezable.CloneCurrentValue%2A>)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-319">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A> when creating new instances of the <xref:System.Windows.Media.Animation.Storyboard> class for the various cloning methods (such as <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-320">下列範例示範典型實作<xref:System.Windows.Freezable.CreateInstanceCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-320">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="33f6a-321">每個<see cref="T:System.Windows.Media.Animation.Storyboard" />子類別必須實作這個方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="33f6a-321">Every <see cref="T:System.Windows.Media.Animation.Storyboard" /> subclass must implement this method.</span>
            </span>
            <span data-ttu-id="33f6a-322">一般的實作會直接呼叫類別預設建構函式，並傳回結果。</span>
            <span class="sxs-lookup">
              <span data-stu-id="33f6a-322">Typical implementation is to simply call the class default constructor and return the result.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-323">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-323">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-324">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在其目前行進的速率，與實際時間相比較。</span><span class="sxs-lookup"><span data-stu-id="33f6a-324">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="33f6a-325">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-325">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-326">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-326">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-327">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-327">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-328">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-328">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-329">目前的整體速度，如果時鐘停止，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-329">The current global speed, or 0 if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-330">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-330">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-331">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-331">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-332">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-332">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-333">目前的整體速度，如果時鐘停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-333">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-334">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在其目前行進的速率，與實際時間相比較。</span><span class="sxs-lookup"><span data-stu-id="33f6a-334">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="33f6a-335">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-335">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-336">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-336">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-337">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-337">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-338">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-338">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-339">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-339">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-340">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-340">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-341">目前的整體速度，如果時鐘停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-341">The current global speed, or <see langword="null" /> if the clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-342">時鐘的<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>速度是在其目前行進的速率，與實際時間相比較。</span><span class="sxs-lookup"><span data-stu-id="33f6a-342">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> speed is the rate at which its time is currently progressing, compared to real-world time.</span></span>  
  
 <span data-ttu-id="33f6a-343">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-343">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-344">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-344">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-345">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-345">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-346">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-346">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-347">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-347">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-348">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-348">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-349">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="33f6a-349">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="33f6a-350">如果這個分鏡腳本<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目是由正向反向組所組成，不只是下列其中一種區段。</span><span class="sxs-lookup"><span data-stu-id="33f6a-350">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="33f6a-351">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-351">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-352">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-352">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-353">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-353">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-354">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-354">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-355">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-355">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-356">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-356">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-357">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-357">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-358">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="33f6a-358">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="33f6a-359">如果這個分鏡腳本<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目是由正向反向組所組成，不只是下列其中一種區段。</span><span class="sxs-lookup"><span data-stu-id="33f6a-359">If this storyboard has a <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="33f6a-360">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-360">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-361">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-361">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-362">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-362">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-363">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-363">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-364">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-364">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-365">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-365">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-366">這個時鐘在其目前使用中週期內的目前反覆運算，如果時鐘已停止，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-366">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-367">時鐘的第一個反覆項目有值為 1。</span><span class="sxs-lookup"><span data-stu-id="33f6a-367">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="33f6a-368">如果這個時鐘時間表具有<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`，完整的反覆項目是由正向反向組所組成，不只是下列其中一種區段。</span><span class="sxs-lookup"><span data-stu-id="33f6a-368">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="33f6a-369">其目前的反覆項目，不論搜尋時鐘傳回其目前的反覆項目設為 1。</span><span class="sxs-lookup"><span data-stu-id="33f6a-369">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="33f6a-370">重新啟動時鐘也會傳回其目前的反覆項目設為 1。</span><span class="sxs-lookup"><span data-stu-id="33f6a-370">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 <span data-ttu-id="33f6a-371">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-371">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-372">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-372">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-373">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-373">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-374">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-374">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-375">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-375">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-376">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-376">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="33f6a-377">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-377">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-378">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-378">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-379">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-379">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-380">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-380">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-381">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-381">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-382">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-382">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-383">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-383">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-384">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-384">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="33f6a-385">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-385">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-386">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-386">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-387">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-387">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-388">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-388">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-389">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-389">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-390">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-390">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-391">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-391">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-392">如果這個時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />，則為 <see langword="null" />。如果這個時鐘在使用中且其 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> 的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 是 <see cref="P:System.Windows.Duration.Forever" />，則為 0.0，否則為介於 0.0 與 1.0 之間的值，這個值表示這個時鐘在其目前反覆運算內的目前進度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-392">
              <see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this clock within its current iteration.</span>
          </span>
          <span data-ttu-id="33f6a-393">值 0.0 表示沒有進度，而值 1.0 表示時鐘已到目前反覆運算的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-393">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-394">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-394">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-395">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-395">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-396">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-396">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-397">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-397">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-398">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-398">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-399">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-399">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-400">這個方法不會告訴您是否已暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-400">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="33f6a-401">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-401">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="33f6a-402">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-402">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-403">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-403">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-404">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-404">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-405">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-405">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-406">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-406">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-407">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-407">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-408">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-408">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-409">這個方法不會告訴您是否已暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-409">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="33f6a-410">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-410">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="33f6a-411">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-411">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-412">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-412">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-413">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-413">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-414">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-414">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-415">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-415">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-416">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-416">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-417">為這個腳本建立之時鐘的目前狀態：<see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-417">The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-418">這個方法不會告訴您是否已暫停分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-418">This method does not tell you whether a storyboard is paused.</span></span> <span data-ttu-id="33f6a-419">若要判斷是否要暫停分鏡腳本，請使用<xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-419">To determine whether a storyboard is paused, use the <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> method.</span></span>  
  
 <span data-ttu-id="33f6a-420">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-420">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-421">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-421">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-422">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-422">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-423">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-423">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-424">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-424">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-425">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-425">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-426">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-426">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-427">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-427">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-428">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-428">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-429">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-429">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-430">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-430">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-431">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-431">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-432">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-432">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-433">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-433">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-434">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-434">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-435">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-435">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-436">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-436">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-437">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-437">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-438">擷取之前為這個 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 建立之 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-438">Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-439">如果腳本時鐘是 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> 則為 <see langword="null" />，否則為腳本時鐘的目前時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-439">
              <see langword="null" /> if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of the storyboard's clock.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-440">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-440">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-441">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-441">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-442">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-442">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-443">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-443">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-444">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-444">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-445">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-445">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-446">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-446">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-447">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-447">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-448">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-448">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-449">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-449">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-450">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-450">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-451">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-451">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-452">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-452">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-453">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-453">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-454">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-454">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-455">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-455">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-456">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-456">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-457">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-457">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-458">擷取值，這個值指出為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 是否已暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-458">Retrieves a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-459">如果暫停之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-459">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> created for this <see cref="T:System.Windows.Media.Animation.Storyboard" /> is paused; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-460">若要使用此方法來擷取分鏡腳本的時鐘的相關資訊，必須可控制分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="33f6a-460">To use this method to retrieve information about a storyboard's clock, the storyboard must be controllable.</span></span> <span data-ttu-id="33f6a-461">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-461">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-462">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-462">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-463">要從其中擷取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的時刻表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-463">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-464">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-464">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-465">由 <paramref name="element" /> 設為目標的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-465">The dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-466">使用<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加屬性的動畫時間軸，以表示其為目標的物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-466">Use the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property with animation timelines to indicate the object that they target.</span></span> <span data-ttu-id="33f6a-467">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-467">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="33f6a-468">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-468">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-469">要從其中擷取 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的時刻表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-469">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-470">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-470">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-471">
            <paramref name="element" /> 設為目標的相依性物件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-471">The name of the dependency object targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-472">這個方法會取得<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-472">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="33f6a-473">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-473">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="33f6a-474">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-474">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-475">要從中取得 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-475">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-476">擷取所指定 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-476">Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33f6a-477">
            <paramref name="element" /> 設為目標的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-477">The property targeted by <paramref name="element" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-478">這個方法會取得<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-478">This method gets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="33f6a-479">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-479">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property.</span></span> <span data-ttu-id="33f6a-480">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-480">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 <span data-ttu-id="33f6a-481">請注意，如果<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>已設定在標記中，這個方法會傳回空<xref:System.Windows.PropertyPath>因為屬性參考會解析並儲存在內部進行剖析時。</span><span class="sxs-lookup"><span data-stu-id="33f6a-481">Note that if the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> was set in markup, this method returns an empty <xref:System.Windows.PropertyPath> because the property reference is resolved and stored internally when it is parsed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-482">暫停為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-482">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-483">暫停為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-483">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-484">這個方法會暫停分鏡腳本，但沒有任何差別作用，如果不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="33f6a-484">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="33f6a-485">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="33f6a-485">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="33f6a-486">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-486">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-487">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-487">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-488">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-488">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="33f6a-489">從已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-489">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="33f6a-490">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停的分鏡腳本，出現繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="33f6a-490">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="33f6a-491">不過，這是不實際發生的狀況。</span><span class="sxs-lookup"><span data-stu-id="33f6a-491">However, that is not what actually happens.</span></span> <span data-ttu-id="33f6a-492"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會取代已暫停<xref:System.Windows.Media.Animation.Storyboard>新版未暫停。</span><span class="sxs-lookup"><span data-stu-id="33f6a-492">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces the paused <xref:System.Windows.Media.Animation.Storyboard> with a new unpaused version.</span></span> <span data-ttu-id="33f6a-493">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法時，會建立的分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-493">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="33f6a-494">這些時鐘發佈至所建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-494">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="33f6a-495">因此，<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫一次，不會重新啟動其時鐘，則會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-495">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-496">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-496">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-497">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-497">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-498">暫停與這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 關聯之指定的 <see cref="T:System.Windows.FrameworkContentElement" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-498">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkContentElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-499">這個方法會暫停分鏡腳本，但沒有任何差別作用，如果不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="33f6a-499">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="33f6a-500">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="33f6a-500">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="33f6a-501">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="33f6a-501">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="33f6a-502">若要繼續暫停的分鏡腳本的唯一方式是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-502">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="33f6a-503">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法一次會暫停的分鏡腳本，取代為新的、 具有回復它的外觀。</span><span class="sxs-lookup"><span data-stu-id="33f6a-503">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="33f6a-504">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-504">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-505">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-505">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-506">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-506">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-507">從範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-507">Fro an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-508">暫停的分鏡腳本的時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-508">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="33f6a-509">從已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-509">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="33f6a-510">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停的分鏡腳本，出現繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="33f6a-510">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="33f6a-511">不過，這是不實際發生的狀況。</span><span class="sxs-lookup"><span data-stu-id="33f6a-511">However, that is not what actually happens.</span></span> <span data-ttu-id="33f6a-512"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會本身未暫停的版本取代。</span><span class="sxs-lookup"><span data-stu-id="33f6a-512">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="33f6a-513">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法時，會建立的分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-513">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="33f6a-514">這些時鐘發佈至所建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-514">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="33f6a-515">因此，<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫一次，不會重新啟動其時鐘，則會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-515">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-516">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-516">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-517"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-517">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-518">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-518">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-519">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-519">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-520">暫停與這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 關聯之指定的 <see cref="T:System.Windows.FrameworkElement" /> 的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-520">Pauses the <see cref="T:System.Windows.Media.Animation.Clock" /> of the specified <see cref="T:System.Windows.FrameworkElement" /> associated with this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-521">這個方法會暫停分鏡腳本，但沒有任何差別作用，如果不是作用中或目前已暫停。</span><span class="sxs-lookup"><span data-stu-id="33f6a-521">This method pauses the storyboard, but has no discernible effect if it is not active or currently paused.</span></span> <span data-ttu-id="33f6a-522">副作用，也會暫停所有相關聯的子系。</span><span class="sxs-lookup"><span data-stu-id="33f6a-522">As a side effect, all associated children are also paused.</span></span>  
  
 <span data-ttu-id="33f6a-523">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="33f6a-523">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="33f6a-524">若要繼續暫停的分鏡腳本的唯一方式是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-524">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="33f6a-525">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法一次會暫停的分鏡腳本，取代為新的、 具有回復它的外觀。</span><span class="sxs-lookup"><span data-stu-id="33f6a-525">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method again replaces the paused storyboard with a new one, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="33f6a-526">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-526">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-527">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-527">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-528">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-528">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-529">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-529">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-530">暫停的分鏡腳本的時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-530">Pausing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
## <a name="beginning-a-paused-storyboard"></a><span data-ttu-id="33f6a-531">從已暫停的分鏡腳本</span><span class="sxs-lookup"><span data-stu-id="33f6a-531">Beginning a Paused Storyboard</span></span>  
 <span data-ttu-id="33f6a-532">當您<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>已暫停的分鏡腳本，出現繼續並重新啟動。</span><span class="sxs-lookup"><span data-stu-id="33f6a-532">When you <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> a storyboard that was paused, it appears to resume and restart.</span></span> <span data-ttu-id="33f6a-533">不過，這是不實際發生的狀況。</span><span class="sxs-lookup"><span data-stu-id="33f6a-533">However, that is not what actually happens.</span></span> <span data-ttu-id="33f6a-534"><xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法實際上會本身未暫停的版本取代。</span><span class="sxs-lookup"><span data-stu-id="33f6a-534">The <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method actually replaces itself with an unpaused version.</span></span> <span data-ttu-id="33f6a-535">每次<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>呼叫方法時，會建立的分鏡腳本的時鐘物件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-535">Each time the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called, clock objects are created for the storyboard.</span></span> <span data-ttu-id="33f6a-536">這些時鐘發佈至所建立動畫的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-536">These clocks are distributed to the properties they animate.</span></span> <span data-ttu-id="33f6a-537">因此，<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法會呼叫一次，不會重新啟動其時鐘，則會取代新時鐘。</span><span class="sxs-lookup"><span data-stu-id="33f6a-537">So, when the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method is called again, it does not restart its clocks; it replaces them with new clocks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-538">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-538">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="33f6a-539">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-539">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-540">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-540">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="33f6a-541">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-541">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-542">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-542">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-543">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-543">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-544">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-544">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-545">所執行的所有互動動作<xref:System.Windows.Media.Animation.Clock>，因此同時在<xref:System.Windows.Media.Animation.Storyboard>，會發生在下一個刻度的計時引擎下, 一個呈現之前，即會發生。</span><span class="sxs-lookup"><span data-stu-id="33f6a-545">All interactive actions taken on a <xref:System.Windows.Media.Animation.Clock>, and therefore also on a <xref:System.Windows.Media.Animation.Storyboard>, occur on the next tick of the timing engine, which happens shortly before the next render.</span></span> <span data-ttu-id="33f6a-546">這表示<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法仍會動畫的屬性影響此時間之前。</span><span class="sxs-lookup"><span data-stu-id="33f6a-546">This means that the <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method still affects the animated properties until this time.</span></span> <span data-ttu-id="33f6a-547">換句話說，會顯示在框架，在下一次分鏡腳本已移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-547">In other words, the next time the frame is displayed, the storyboard is removed.</span></span> <span data-ttu-id="33f6a-548">如果您要取消關聯屬性的動畫，此時間之前，請使用<xref:System.Windows.UIElement.BeginAnimation%2A>方法`animation`參數值的`null`。</span><span class="sxs-lookup"><span data-stu-id="33f6a-548">If you need to disassociate an animation from a property before this time, use the <xref:System.Windows.UIElement.BeginAnimation%2A> method with an `animation` parameter value of `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-549">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-549">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-550">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-550">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-551">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-551">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="33f6a-552">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-552">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-553">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-553">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-554">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-554">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-555">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-555">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-556">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-556">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-557">移除分鏡腳本的時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-557">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-558">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-558">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-559">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-559">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-560">移除為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-560">Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
          <span data-ttu-id="33f6a-561">屬於這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的動畫一旦播放，就無法再對屬性產生作用，無論其 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 的設定為何。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-561">Animations that belong to this <see cref="T:System.Windows.Media.Animation.Storyboard" /> no longer affect the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-562">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-562">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-563">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-563">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-564">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-564">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-565">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-565">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-566">移除分鏡腳本的時鐘觸發程序<xref:System.Windows.Media.Animation.Timeline.RemoveRequested>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-566">Removing a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-567">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-567">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-568">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-568">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-569">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-569">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-570">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-570">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-571">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-571">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-572">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-572">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-573">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-573">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-574">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-574">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-575">恢復未暫停分鏡腳本沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-575">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="33f6a-576">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-576">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-577">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-577">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-578">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-578">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-579">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-579">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-580">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="33f6a-580">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="33f6a-581">若要繼續暫停的分鏡腳本的唯一方式是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-581">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="33f6a-582">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法啟動分鏡腳本之後會取代舊的分鏡腳本具有回復它的外觀。</span><span class="sxs-lookup"><span data-stu-id="33f6a-582">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="33f6a-583">繼續暫停的分鏡腳本的時鐘會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-583">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-584">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-584">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-585"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-585">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-586">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-586">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-587">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-587">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-588">繼續為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-588">Resumes the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-589">恢復未暫停分鏡腳本沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-589">Resuming a storyboard that is not paused has no effect.</span></span>  
  
 <span data-ttu-id="33f6a-590">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-590">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-591">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-591">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-592">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-592">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-593">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-593">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-594">搜尋已暫停的分鏡腳本才會繼續它。</span><span class="sxs-lookup"><span data-stu-id="33f6a-594">Seeking a paused storyboard does not resume it.</span></span> <span data-ttu-id="33f6a-595">若要繼續暫停的分鏡腳本的唯一方式是使用<xref:System.Windows.Media.Animation.Storyboard.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-595">The only way to resume a paused storyboard is to use the <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> method.</span></span> <span data-ttu-id="33f6a-596">呼叫<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法啟動分鏡腳本之後會取代舊的分鏡腳本具有回復它的外觀。</span><span class="sxs-lookup"><span data-stu-id="33f6a-596">Calling the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method after the storyboard has started replaces the old storyboard, which has the appearance of resuming it.</span></span>  
  
 <span data-ttu-id="33f6a-597">繼續暫停的分鏡腳本的時鐘會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-597">Resuming a paused a storyboard's clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-598">在到達下個時鐘刻度時，搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 直到新位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-598">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position when the next clock tick occurs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="33f6a-599">正值或負值，這個值描述時刻表應該向前移動或向後移動的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-599">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-600">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-600">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="33f6a-601">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-601">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-602">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-602">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-603">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-603">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-604">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-604">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-605">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-605">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-606">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-606">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-607">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-607">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="33f6a-608">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-608">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-609">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-609">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-610">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-610">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="33f6a-611">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-611">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-612">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-612">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-613">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-613">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-614">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-614">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-615">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-615">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-616">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-616">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-617">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-617">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-618">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-618">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-619">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-619">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33f6a-620">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-620">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-621">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-621">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-622">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-622">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="33f6a-623">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-623">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-624">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-624">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-625">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-625">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-626">這個方法會變更分鏡腳本的時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-626">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="33f6a-627">這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。</span><span class="sxs-lookup"><span data-stu-id="33f6a-627">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="33f6a-628">副作用，引發適當的事件會也不在那之前。</span><span class="sxs-lookup"><span data-stu-id="33f6a-628">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="33f6a-629">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-629">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-630">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-630">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-631">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-631">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-632">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-632">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-633">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-633">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-634">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-634">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-635">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-635">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-636">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-636">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33f6a-637">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-637">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-638">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-638">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-639">搜尋這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />，直到指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-639">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to the specified position.</span>
          </span>
          <span data-ttu-id="33f6a-640">
            <see cref="T:System.Windows.Media.Animation.Storyboard" /> 會在到達下個時鐘刻度時執行要求的搜尋。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-640">The <see cref="T:System.Windows.Media.Animation.Storyboard" /> performs the requested seek when the next clock tick occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-641">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-641">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-642">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-642">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-643">這個方法會變更分鏡腳本的時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至<xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-643">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState.Active>.</span></span> <span data-ttu-id="33f6a-644">這個方法沒有不會影響時間樹狀結構，直到下一次處理一個刻度時。</span><span class="sxs-lookup"><span data-stu-id="33f6a-644">This method has no effect on the timing tree until the next time a tick is processed.</span></span> <span data-ttu-id="33f6a-645">副作用，引發適當的事件會也不在那之前。</span><span class="sxs-lookup"><span data-stu-id="33f6a-645">As a side-effect, the appropriate events are also not raised until then.</span></span>  
  
 <span data-ttu-id="33f6a-646">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-646">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-647">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止，而且如果它由可控制移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-647">A controllable storyboard can pause, resume, seek, stop, and be removed if it is made controllable.</span></span> <span data-ttu-id="33f6a-648">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-648">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-649">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-649">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-650">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-650">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-651">下列範例會示範如何為一秒分鏡腳本開始之後搜尋 （略過）。</span><span class="sxs-lookup"><span data-stu-id="33f6a-651">The following example shows how to seek (skip) to one second after a Storyboard begins.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 <span data-ttu-id="33f6a-652">下一個範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-652">The next example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-653">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-653">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="33f6a-654">正值或負值，這個值描述時刻表應該向前移動或向後移動的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-654">A positive or negative value that describes the amount by which the timeline should move forward or backward.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-655">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-655">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="33f6a-656"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="33f6a-657">值會立即更新以反映的變更，因為<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使畫面並不會反映這些變更，直到更新螢幕。</span><span class="sxs-lookup"><span data-stu-id="33f6a-657">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="33f6a-658">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-658">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-659">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-659">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-660">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-660">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-661">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-661">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="33f6a-662">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-662">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-663">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-663">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-664">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-664">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="33f6a-665"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="33f6a-666">值會立即更新以反映的變更，因為<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使畫面並不會反映這些變更，直到更新螢幕。</span><span class="sxs-lookup"><span data-stu-id="33f6a-666">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="33f6a-667">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-667">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-668">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-668">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-669">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-669">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-670">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-670">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-671">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-671">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-672">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-672">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33f6a-673">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-673">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-674">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-674">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-675">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-675">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="33f6a-676"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="33f6a-677">值會立即更新以反映的變更，因為<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使畫面並不會反映這些變更，直到更新螢幕。</span><span class="sxs-lookup"><span data-stu-id="33f6a-677">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="33f6a-678">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-678">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-679">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-679">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-680">這個方法會變更分鏡腳本的時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至</span><span class="sxs-lookup"><span data-stu-id="33f6a-680">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="33f6a-681"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-681"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="33f6a-682">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-682">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="33f6a-683">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-683">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-684">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-684">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-685">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-685">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-686">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-686">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-687">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-687">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-688">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-688">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-689">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-689">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="33f6a-690">描述時間表應該從指定的 <c>origin</c> 前進或後退的數量正數或負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-690">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="33f6a-691">套用了 <c>offset</c> 的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-691">The position from which <c>offset</c> is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-692">立即 (同步) 搜尋新位置的這個 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-692">Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard" /> to a new position immediately (synchronously).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 對齊的 seeked 時間<xref:System.Windows.Media.Animation.Storyboard>與最後一個時鐘刻度。</span><span class="sxs-lookup"><span data-stu-id="33f6a-693"><xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> aligns the seeked time of the <xref:System.Windows.Media.Animation.Storyboard> with the last clock tick.</span></span> <span data-ttu-id="33f6a-694">值會立即更新以反映的變更，因為<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>，即使畫面並不會反映這些變更，直到更新螢幕。</span><span class="sxs-lookup"><span data-stu-id="33f6a-694">Values are immediately updated to reflect the changes due to <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, even though the screen does not reflect these changes until the screen updates.</span></span>  
  
 <span data-ttu-id="33f6a-695">請注意，搜尋作業不會分鏡腳本<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>或<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>設定納入考量。</span><span class="sxs-lookup"><span data-stu-id="33f6a-695">Note that seek operations do not take the storyboard's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings into account.</span></span> <span data-ttu-id="33f6a-696">分鏡腳本被視為有<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 和否<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-696">The storyboard is treated as though it has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.</span></span>  
  
 <span data-ttu-id="33f6a-697">這個方法會變更分鏡腳本的時鐘<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>至</span><span class="sxs-lookup"><span data-stu-id="33f6a-697">This method changes the storyboard clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to</span></span>  
  
 <span data-ttu-id="33f6a-698"><xref:System.Windows.Media.Animation.ClockState.Active>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-698"><xref:System.Windows.Media.Animation.ClockState.Active>.</span></span>  
  
 <span data-ttu-id="33f6a-699">搜尋分鏡腳本的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-699">Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="33f6a-700">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-700">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-701">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-701">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-702">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-702">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-703">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-703">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-704">下列範例會顯示<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>和<xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="33f6a-704">The following example shows both the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> and <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> methods.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-705">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-705">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">
          <span data-ttu-id="33f6a-706">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-706">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="33f6a-707">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-707">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="33f6a-708">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-708">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="33f6a-709">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-709">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-710">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-710">Sets the interactive speed ratio for the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-711">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-711">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-712">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-712">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-713">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-713">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-714">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-714">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-715">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-715">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="33f6a-716">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-716">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="33f6a-717">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-717">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="33f6a-718">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-718">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="33f6a-719">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-719">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-720">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-720">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-721">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-721">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-722">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-722">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-723">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-723">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-724">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-724">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-725">呼叫這個方法會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-725">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-726">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-726">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-727"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-727">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-728">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-728">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-729">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-729">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <param name="speedRatio">
          <span data-ttu-id="33f6a-730">大於零的有限值，其為腳本的新互動速度比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-730">A finite value greater than zero that is the new interactive speed ratio of the storyboard.</span>
          </span>
          <span data-ttu-id="33f6a-731">這個值會乘上腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 值，用以判斷腳本的有效速度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-731">This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> value to determine the storyboard's effective speed.</span>
          </span>
          <span data-ttu-id="33f6a-732">這個值並不會覆寫腳本的 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-732">This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> property.</span>
          </span>
          <span data-ttu-id="33f6a-733">例如，呼叫這個方法並在 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 為 0.5 的腳本上指定互動速率 3，可提供腳本有效速度 1.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-733">For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of 0.5 gives the storyboard an effective speed of 1.5.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-734">設定之前為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立之 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 的互動速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-734">Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-735">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-735">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-736">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-736">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-737">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-737">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-738">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-738">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 <span data-ttu-id="33f6a-739">呼叫這個方法會觸發<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-739">Calling this method triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-740">
            <see cref="T:System.Windows.Media.Animation.Timeline" />，應該將所指定的相依性物件設為目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-740">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="33f6a-741">要設為目標的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-741">The dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-742">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-742">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-743">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.Target%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-743">This method sets the <xref:System.Windows.Media.Animation.Storyboard.Target%2A> attached property on the specified object.</span></span> <span data-ttu-id="33f6a-744">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-744">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="33f6a-745">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-745">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33f6a-746"><xref:System.Windows.Media.Animation.Storyboard.Target%2A>屬性不是可序列化，因為它可以設定為任何<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-746">The <xref:System.Windows.Media.Animation.Storyboard.Target%2A> property is not serializable, because it can be set to any <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="33f6a-747">不保證這個物件可以正確參考從 XAML。</span><span class="sxs-lookup"><span data-stu-id="33f6a-747">It is not guaranteed that this object can be correctly referenced from XAML.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-748">
            <see cref="T:System.Windows.Media.Animation.Timeline" />，應該將所指定的相依性物件設為目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-748">The <see cref="T:System.Windows.Media.Animation.Timeline" /> that should target the specified dependency object.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="33f6a-749">要設為目標之相依性物件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-749">The name of the dependency object to target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-750">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為具有所指定名稱的相依性物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-750">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the dependency object with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-751">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-751">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> attached property on the specified object.</span></span> <span data-ttu-id="33f6a-752">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-752">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>.</span></span> <span data-ttu-id="33f6a-753">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-753">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="33f6a-754">用來與指定的相依性屬性產生關聯的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-754">The <see cref="T:System.Windows.Media.Animation.Timeline" /> with which to associate the specified dependency property.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="33f6a-755">路徑，描述要繪製的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-755">A path that describe the dependency property to be animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-756">將指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 目標設為所指定的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-756">Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> target the specified dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-757">這個方法會設定<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>附加指定的物件上的屬性。</span><span class="sxs-lookup"><span data-stu-id="33f6a-757">This method sets the <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> attached property on the specified object.</span></span> <span data-ttu-id="33f6a-758">如需目標分鏡腳本的運作方式的詳細資訊，請參閱<xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-758">For more information about how storyboard targeting works, see <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>.</span></span> <span data-ttu-id="33f6a-759">如需有關如何附加的屬性工作的詳細資訊，請參閱[附加屬性概觀](~/docs/framework/wpf/advanced/attached-properties-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-759">For more information about how attached properties work, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-760">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-760">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-761">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-761">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-762">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-762">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-763">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-763">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-764">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-764">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-765">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-765">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-766">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-766">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-767">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-767">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-768">這個方法將分鏡腳本往前推至結尾作用期; 目前時間分鏡腳本的行為現在由指定其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="33f6a-768">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="33f6a-769">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，分鏡腳本填滿; 如果屬性設定為<xref:System.Windows.Media.Animation.FillBehavior.Stop>，分鏡腳本時，會停止。</span><span class="sxs-lookup"><span data-stu-id="33f6a-769">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="33f6a-770">無限重複次數呼叫這個方法，腳本之無限期，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-770">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="33f6a-771">非使用中的分鏡腳本上呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-771">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="33f6a-772">跳至其填滿期間觸發程序的時鐘<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-772">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="33f6a-773">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-773">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-774">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-774">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-775">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-775">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-776">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-776">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-777">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-777">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-778"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-778">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-779">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-779">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-780">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-780">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-781">將這個腳本 <see cref="T:System.Windows.Media.Animation.Clock" /> 的目前時間前移到其使用中週期結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-781">Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-782">這個方法將分鏡腳本往前推至結尾作用期; 目前時間分鏡腳本的行為現在由指定其<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="33f6a-782">This method advances the storyboard's current time to the end of its active period; the storyboard's behavior at this point is specified by its <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting.</span></span> <span data-ttu-id="33f6a-783">如果<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>，分鏡腳本填滿; 如果屬性設定為<xref:System.Windows.Media.Animation.FillBehavior.Stop>，分鏡腳本時，會停止。</span><span class="sxs-lookup"><span data-stu-id="33f6a-783">If <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> is set to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, the storyboard fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior.Stop>, the storyboard stops.</span></span>  
  
 <span data-ttu-id="33f6a-784">無限重複次數呼叫這個方法，腳本之無限期，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-784">Calling this method on a storyboard with an infinite duration, an infinite number of repetitions has no effect.</span></span> <span data-ttu-id="33f6a-785">非使用中的分鏡腳本上呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="33f6a-785">Calling this method on an inactive storyboard has no effect.</span></span>  
  
 <span data-ttu-id="33f6a-786">跳至其填滿期間觸發程序的時鐘<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-786">Advancing a clock to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events.</span></span>  
  
 <span data-ttu-id="33f6a-787">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-787">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-788">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-788">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-789">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-789">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-790">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-790">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-791">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-791">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-792">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-792">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-793">請注意，停止將分鏡腳本不會引發<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-793">Note that stopping a storyboard does not fire the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-794">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-794">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-795">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-795">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-796">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-796">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-797">A<xref:System.Windows.Media.Animation.ClockState.Stopped>分鏡腳本不會再影響目標屬性： 已建立動畫的屬性還原成其先前的值。</span><span class="sxs-lookup"><span data-stu-id="33f6a-797">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="33f6a-798">停止時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，但不是<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-798">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="33f6a-799">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-799">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-800">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-800">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-801">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-801">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-802">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-802">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33f6a-803">下列範例會使用可控制的分鏡腳本動畫<xref:System.Windows.Media.TextEffect>。</span><span class="sxs-lookup"><span data-stu-id="33f6a-803">The following example uses a controllable storyboard to animate a <xref:System.Windows.Media.TextEffect>.</span></span> <span data-ttu-id="33f6a-804"><xref:System.Windows.Media.TextEffect>內含<xref:System.Windows.FrameworkContentElement>的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="33f6a-804">The <xref:System.Windows.Media.TextEffect> is contained within a <xref:System.Windows.FrameworkContentElement>'s name scope.</span></span>  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">
          <span data-ttu-id="33f6a-805">呼叫 <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 方法時指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-805">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> method was called.</span>
          </span>
          <span data-ttu-id="33f6a-806">這個物件包含針對這個腳本及其子系所建立的 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-806">This object contains the <see cref="T:System.Windows.Media.Animation.Clock" /> objects that were created for this storyboard and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33f6a-807">停止為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 所建立的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-807">Stops the <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33f6a-808">A<xref:System.Windows.Media.Animation.ClockState.Stopped>分鏡腳本不會再影響目標屬性： 已建立動畫的屬性還原成其先前的值。</span><span class="sxs-lookup"><span data-stu-id="33f6a-808">A <xref:System.Windows.Media.Animation.ClockState.Stopped> storyboard no longer affects its target properties: properties that were animated revert to their previous values.</span></span>  
  
 <span data-ttu-id="33f6a-809">停止時鐘的觸發程序<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>和<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>事件，但不是<xref:System.Windows.Media.Animation.Timeline.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="33f6a-809">Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Timeline.Completed> event.</span></span>  
  
 <span data-ttu-id="33f6a-810">若要以互動方式控制這個分鏡腳本，您必須使用相同`containingObject`時呼叫您用來開始分鏡腳本的互動式方法的參數。</span><span class="sxs-lookup"><span data-stu-id="33f6a-810">To interactively control this storyboard, you must use the same `containingObject` parameter when calling the interactive methods that you used to begin the storyboard.</span></span> <span data-ttu-id="33f6a-811">可控制的分鏡腳本可以暫停、 繼續、 搜尋、 停止和移除。</span><span class="sxs-lookup"><span data-stu-id="33f6a-811">A controllable storyboard can pause, resume, seek, stop, and be removed.</span></span> <span data-ttu-id="33f6a-812">若要讓分鏡腳本可控制在程式碼中，您必須使用分鏡腳本的適當多載<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法並指定`true`使其可控制。</span><span class="sxs-lookup"><span data-stu-id="33f6a-812">To make a storyboard controllable in code, you must use the appropriate overload of the storyboard's <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method and specify `true` to make it controllable.</span></span> <span data-ttu-id="33f6a-813">如需範例，請參閱[如何： 控制分鏡腳本之後啟動](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)。</span><span class="sxs-lookup"><span data-stu-id="33f6a-813">For an example, see [How to: Control a Storyboard After It Starts](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-814">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-814">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-815">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-815">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33f6a-816">識別 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33f6a-816">Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>