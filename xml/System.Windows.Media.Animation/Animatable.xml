<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Animatable.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ea9713148e10c8f9a95421b6bcd7b78a6cb4d56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea9713148e10c8f9a95421b6bcd7b78a6cb4d56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">提供動畫支援的抽象類別 (Abstract Class)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Animates the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>，建立指定的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 動畫。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">建立指定屬性動畫效果的時鐘。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，即移除指定之屬性的所有動畫效果 (但不是停止)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 套用至指定的 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If the property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">如果已建立屬性的動畫，則會使用 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> Handoff Behavior。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">請注意，使用此方法，從屬性移除時鐘時，不會停止這些時鐘。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">建立指定屬性動畫效果的時鐘。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>，且 <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，即移除指定之屬性的所有動畫效果 (但不是停止)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> and clock is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method has no effect.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> 且 clock 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，這個方法將不起任何作用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">一個值，這個值指定新的動畫應該如何與已經影響屬性值的任何目前動畫互動。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 套用至指定的 <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">如果已建立屬性的動畫，則會使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">請注意，使用此方法來從屬性移除時鐘時，不會停止這些時鐘。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">使用撰寫 HandoffBehavior</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">當您將套用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>屬性使用<ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>，任何<ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統將不會自動移除這些時鐘。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您套用大量使用時鐘<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">有幾個方式可移除時鐘。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">若要從屬性移除所有時鐘，請使用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph>動畫物件的方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">這將會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">若要移除特定<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>時鐘的清單，從使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>擷取<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>，然後呼叫<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>方法<ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">這通常是<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>時鐘的事件處理常式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>;<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>子時鐘的屬性會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>是否有效的持續時間的時鐘永遠不會呼叫事件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這主要是在存留期較長的物件才會發生的動畫問題。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，也會中斷連接並記憶體回收其時鐘。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animation clocks using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">下列範例示範如何套用使用不同的動畫時鐘<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>設定。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">將動畫套用至指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用來建立指定屬性動畫效果的動畫。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">如果動畫的 <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，則會移除任何目前動畫，並保留屬性的目前值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會從屬性中移除所有動畫，並將屬性值還原為其基底值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">將動畫套用至指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">呈現下一個畫面格後，就會啟動動畫。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the specified property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">如果已建立指定之屬性的動畫，則會使用 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> Handoff Behavior。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果動畫的<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>小於或等於零，動畫開始後從下一個畫面格呈現時間經過的時間量。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">要製作動畫的屬性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">用來建立指定屬性動畫效果的動畫。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and the animation's <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> 且動畫的 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="null" /&gt;</ph>，則會移除任何目前動畫，並保留屬性的目前值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> 且 <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> 是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 參考，則會從屬性移除所有動畫，並將屬性值還原成其基底值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, this method will have no effect if the animation or its <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>，則當 animation 或其 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 時，這個方法將不起任何作用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">一個值，這個值指定新的動畫應該如何與已經影響屬性值的任何目前動畫互動。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">將動畫套用至指定的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">呈現下一個畫面格後，就會啟動動畫。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the specified property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">如果已建立指定之屬性的動畫，則會使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">如果動畫的<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph>小於或等於零，動畫開始後從下一個畫面格呈現時間經過的時間量。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">使用撰寫 HandoffBehavior</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">當您將套用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>，或<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>屬性使用<ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>，任何<ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph>之前與該屬性相關聯的物件會繼續耗用系統資源; 計時系統將不會自動移除這些時鐘。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">若要避免發生效能問題，當您套用大量使用時鐘<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>，在它們完成之後，您應該從動畫屬性移除組成的時鐘。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">有幾個方式可移除時鐘。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">若要從屬性移除所有時鐘，請使用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph>動畫物件的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">指定的第一個參數，要繪製之屬性和<ph id="ph1">`null`</ph>做為第二個。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">這將會從屬性移除所有動畫時鐘。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">若要移除特定<ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>時鐘的清單，從使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph>擷取<ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>，然後呼叫<ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>方法<ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">這通常是<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>時鐘的事件處理常式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">請注意，只有根時鐘可以控制<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>;<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph>子時鐘的屬性會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">也請注意，<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph>是否有效的持續時間的時鐘永遠不會呼叫事件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">在此情況下，使用者必須決定何時呼叫<ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">這主要是在存留期較長的物件才會發生的動畫問題。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">記憶體回收物件時，也會中斷連接並記憶體回收其時鐘。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">如需時鐘物件的詳細資訊，請參閱<bpt id="p1">[</bpt>動畫和計時系統概觀<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animations using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">下列範例示範如何將使用不同的動畫套用<ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>設定。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">建立這個 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 的可修改複製品，深層複製這個物件的值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">當複製這個物件的相依性屬性時，這個方法會複製資源參考和資料繫結 (Data Binding) (但可能已不再解析)，但不會複製動畫或其目前值。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">這個執行個體的可修改複製品。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">傳回的複製品實際上是目前物件的深層複本。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The clone's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated">複製品的 <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 屬性是 <bpt id="p1">**</bpt>false<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph>方法可以用來產生的可修改複本凍結<ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>For convenience, this method shadows the inherited <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.</source>
          <target state="translated">為了方便起見，這個方法會遮蔽繼承<ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph>方法以提供強類型的實作。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated">如果這個方法只應判斷這個執行個體是否可凍結，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated">如果在呼叫這個方法時，這個執行個體應該實際凍結自身，則為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Makes this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">將這個 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 物件設定為不可修改，或決定是否可以將它設定為不可修改。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> can be made unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable.</source>
          <target state="translated">當 <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 時，如果可以將這個 <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 設定為不可修改，則這個方法會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，如果無法設定為不可修改，則會傳回 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> is now unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> 是 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，則當這個 <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> 現在已經是不可修改時，這個方法會傳回 <ph id="ph3">&lt;see langword="true" /&gt;</ph>，如果它不可以成為不可修改，則會傳回 <ph id="ph5">&lt;see langword="false" /&gt;</ph>，而副作用是會開始變更這個物件的凍結狀態。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">這個方法會傳回<bpt id="p1">**</bpt>false<ept id="p1">**</ept>時<ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph>是<bpt id="p2">**</bpt>true<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">請勿呼叫這個方法，直接 （只是呼叫基底實作中）。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method is called internally by <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id="ph2">`isChecking`</ph> equal to <ph id="ph3">`true`</ph>) and  <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id="ph5">`isChecking`</ph> equal to <ph id="ph6">`false`</ph>).</source>
          <target state="translated">這個方法在內部呼叫<ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph>(與<ph id="ph2">`isChecking`</ph>等於<ph id="ph3">`true`</ph>) 和<ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph>(與<ph id="ph5">`isChecking`</ph>等於<ph id="ph6">`false`</ph>)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> must override this method when the class contains data that is not stored using dependency properties.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>類別包含不會儲存使用相依性屬性的資料時，必須覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>A typical implementation would call the base implementation, then call the static <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> method on all <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> typed properties that the class contains, returning <ph id="ph3">&lt;see langword="true" /&gt;</ph> only if all properties were frozen (or could have been frozen, in the case of passing through a <ph id="ph4">&lt;see langword="false" /&gt;</ph> value for <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</source>
          <target state="translated">一般的實作會呼叫基底實作，然後可以呼叫靜態<ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph>上所有的方法<ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>型別的屬性，其中包含類別，傳回<ph id="ph3">&lt;see langword="true" /&gt;</ph>才凍結所有屬性 (或可能已都凍結，請在案例通過<ph id="ph4">&lt;see langword="false" /&gt;</ph>值<ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">識別應該擷取其基底 (非動畫) 實值的屬性。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Returns the non-animated value of the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 的非動畫實值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">指定的屬性沒有建立動畫時要傳回的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>If the specified property is not animated, this method returns the same result as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</source>
          <target state="translated">如果指定的屬性不會顯示動畫，這個方法會傳回相同結果<ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>In the following example, the non-animated values of animated properties are retrieved and displayed.</source>
          <target state="translated">下列範例中，會擷取和顯示動畫屬性的非動畫值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>Gets a value that indicates whether one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">取得值，這個值表示是否有一個或多個 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> 物件與這個物件的任何一個相依性屬性相關聯。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true<ept id="p1">**</ept>如果一或多個<ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>物件已有此物件的相依性屬性的任何相關聯，否則， <bpt id="p2">**</bpt>false<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">這個屬性不會指出這個物件是否包含動畫子物件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">代表參與相依性屬性系統的物件。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">指定相依性物件是否應該序列化。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要序列化 <ph id="ph2">&lt;paramref name="target" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> method to determine if a property should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>類別會使用<ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph>方法，以判斷是否應該序列化屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>